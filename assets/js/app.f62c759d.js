(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(e){function n(n){for(var a,t,d=n[0],s=n[1],m=n[2],o=0,k=[];o<d.length;o++)t=d[o],Object.prototype.hasOwnProperty.call(r,t)&&r[t]&&k.push(r[t][0]),r[t]=0;for(a in s)Object.prototype.hasOwnProperty.call(s,a)&&(e[a]=s[a]);for(u&&u(n);k.length;)k.shift()();return l.push.apply(l,m||[]),i()}function i(){for(var e,n=0;n<l.length;n++){for(var i=l[n],a=!0,d=1;d<i.length;d++){var s=i[d];0!==r[s]&&(a=!1)}a&&(l.splice(n--,1),e=t(t.s=i[0]))}return e}var a={},r={13:0},l=[];function t(n){if(a[n])return a[n].exports;var i=a[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.e=function(e){var n=[],i=r[e];if(0!==i)if(i)n.push(i[2]);else{var a=new Promise((function(n,a){i=r[e]=[n,a]}));n.push(i[2]=a);var l,d=document.createElement("script");d.charset="utf-8",d.timeout=120,t.nc&&d.setAttribute("nonce",t.nc),d.src=function(e){return t.p+"assets/js/"+({14:"vendors~docsearch"}[e]||e)+"."+{1:"c184566d",2:"007277b4",3:"ca3909eb",4:"a690be66",5:"1ef0a740",6:"c9362155",7:"77883bf3",8:"7ce7a419",9:"8e5b1ca1",10:"1e861c38",11:"1d55704f",12:"6c836647",14:"734c37af",15:"ea144a42",16:"bb813df5",17:"f38892a4",18:"b41b2388",19:"f036a27b",20:"1d6f5442",21:"d9cf78a1",22:"f184cd89",23:"1c73c4cf",24:"21aff2d4",25:"3d747126",26:"c33b4662",27:"109f8ad0",28:"34d0e633",29:"6bfd1d0f",30:"911d9c61",31:"7a877f00",32:"1672cedc",33:"a81f9e9f",34:"12f2d582",35:"c774c4a4",36:"67a1b718",37:"37324dc0",38:"794ced91",39:"a6911450",40:"5abe5aec",41:"760d3635",42:"57591f68",43:"7df43e3e",44:"937527be",45:"f2dad7db",46:"4f2244ca",47:"e1649045",48:"5b1b05be",49:"eb3887ae",50:"859c3a72",51:"144eda96",52:"ad53034b",53:"430ee154",54:"997bcb5a",55:"5c6be633",56:"449a74af",57:"6e9e023e",58:"bf4bf2c3",59:"59a9cf1e",60:"2cb38911",61:"a21a5356",62:"06c7878f",63:"295b8846",64:"b3f92aa2",65:"dcd38f3a",66:"e2552400",67:"0b7cfb0d",68:"ebaef44c",69:"536c7a2f",70:"d36c7614",71:"448c9984",72:"65b2ccff",73:"db3788c9",74:"f2c7213d",75:"ae60cba8",76:"5119a2fd",77:"b7402ba1",78:"b032dc61",79:"5548b726",80:"5704831a",81:"fda1634c",82:"14f97ae7",83:"efa83321",84:"91672a4f",85:"76cd9cce",86:"a3892b73",87:"301b74ce",88:"d6535715",89:"eb0f3873",90:"674d160d",91:"31df9d17",92:"2cec5b06",93:"701c253c",94:"0b8dcaf5",95:"a58f55ba",96:"a057aaad",97:"da195273",98:"6440e930",99:"8900df42",100:"5a5c52e2",101:"7b781cdd",102:"75cc0a36",103:"2b2431c0",104:"dcc53751",105:"16d3a28e",106:"dfda5b5a",107:"8fe87a27",108:"8cd92d92",109:"3b5001ae",110:"ddb8571c",111:"5244cd48"}[e]+".js"}(e);var s=new Error;l=function(n){d.onerror=d.onload=null,clearTimeout(m);var i=r[e];if(0!==i){if(i){var a=n&&("load"===n.type?"missing":n.type),l=n&&n.target&&n.target.src;s.message="Loading chunk "+e+" failed.\n("+a+": "+l+")",s.name="ChunkLoadError",s.type=a,s.request=l,i[1](s)}r[e]=void 0}};var m=setTimeout((function(){l({type:"timeout",target:d})}),12e4);d.onerror=d.onload=l,document.head.appendChild(d)}return Promise.all(n)},t.m=e,t.c=a,t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:i})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var a in e)t.d(i,a,function(n){return e[n]}.bind(null,a));return i},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="/",t.oe=function(e){throw console.error(e),e};var d=window.webpackJsonp=window.webpackJsonp||[],s=d.push.bind(d);d.push=n,d=d.slice();for(var m=0;m<d.length;m++)n(d[m]);var u=s;l.push([141,0]),i()}([function(e,n,i){"use strict";i.r(n),i.d(n,"EffectScope",(function(){return Sn})),i.d(n,"computed",(function(){return sn})),i.d(n,"customRef",(function(){return en})),i.d(n,"default",(function(){return qa})),i.d(n,"defineAsyncComponent",(function(){return Pi})),i.d(n,"defineComponent",(function(){return wi})),i.d(n,"del",(function(){return Ee})),i.d(n,"effectScope",(function(){return hn})),i.d(n,"getCurrentInstance",(function(){return ke})),i.d(n,"getCurrentScope",(function(){return zn})),i.d(n,"h",(function(){return yi})),i.d(n,"inject",(function(){return An})),i.d(n,"isProxy",(function(){return xe})),i.d(n,"isReactive",(function(){return Me})),i.d(n,"isReadonly",(function(){return Fe})),i.d(n,"isRef",(function(){return we})),i.d(n,"isShallow",(function(){return _e})),i.d(n,"markRaw",(function(){return je})),i.d(n,"mergeDefaults",(function(){return si})),i.d(n,"nextTick",(function(){return Bi})),i.d(n,"onActivated",(function(){return Ci})),i.d(n,"onBeforeMount",(function(){return Oi})),i.d(n,"onBeforeUnmount",(function(){return Zi})),i.d(n,"onBeforeUpdate",(function(){return Ii})),i.d(n,"onDeactivated",(function(){return Vi})),i.d(n,"onErrorCaptured",(function(){return Li})),i.d(n,"onMounted",(function(){return Di})),i.d(n,"onRenderTracked",(function(){return _i})),i.d(n,"onRenderTriggered",(function(){return Fi})),i.d(n,"onScopeDispose",(function(){return vn})),i.d(n,"onServerPrefetch",(function(){return Mi})),i.d(n,"onUnmounted",(function(){return Gi})),i.d(n,"onUpdated",(function(){return Ei})),i.d(n,"provide",(function(){return Kn})),i.d(n,"proxyRefs",(function(){return qe})),i.d(n,"reactive",(function(){return Ge})),i.d(n,"readonly",(function(){return rn})),i.d(n,"ref",(function(){return Ue})),i.d(n,"set",(function(){return Ie})),i.d(n,"shallowReactive",(function(){return Ce})),i.d(n,"shallowReadonly",(function(){return dn})),i.d(n,"shallowRef",(function(){return $e})),i.d(n,"toRaw",(function(){return Le})),i.d(n,"toRef",(function(){return an})),i.d(n,"toRefs",(function(){return nn})),i.d(n,"triggerRef",(function(){return We})),i.d(n,"unref",(function(){return Xe})),i.d(n,"useAttrs",(function(){return li})),i.d(n,"useCssModule",(function(){return Ri})),i.d(n,"useCssVars",(function(){return Yi})),i.d(n,"useListeners",(function(){return ti})),i.d(n,"useSlots",(function(){return ri})),i.d(n,"version",(function(){return ji})),i.d(n,"watch",(function(){return pn})),i.d(n,"watchEffect",(function(){return kn})),i.d(n,"watchPostEffect",(function(){return yn})),i.d(n,"watchSyncEffect",(function(){return bn}));
/*!
 * Vue.js v2.7.16
 * (c) 2014-2023 Evan You
 * Released under the MIT License.
 */
var a=Object.freeze({}),r=Array.isArray;function l(e){return null==e}function t(e){return null!=e}function d(e){return!0===e}function s(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function m(e){return"function"==typeof e}function u(e){return null!==e&&"object"==typeof e}var o=Object.prototype.toString;function k(e){return"[object Object]"===o.call(e)}function y(e){return"[object RegExp]"===o.call(e)}function b(e){var n=parseFloat(String(e));return n>=0&&Math.floor(n)===n&&isFinite(e)}function c(e){return t(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function g(e){return null==e?"":Array.isArray(e)||k(e)&&e.toString===o?JSON.stringify(e,p,2):String(e)}function p(e,n){return n&&n.__v_isRef?n.value:n}function H(e){var n=parseFloat(e);return isNaN(n)?e:n}function S(e,n){for(var i=Object.create(null),a=e.split(","),r=0;r<a.length;r++)i[a[r]]=!0;return n?function(e){return i[e.toLowerCase()]}:function(e){return i[e]}}S("slot,component",!0);var h=S("key,ref,slot,slot-scope,is");function z(e,n){var i=e.length;if(i){if(n===e[i-1])return void(e.length=i-1);var a=e.indexOf(n);if(a>-1)return e.splice(a,1)}}var v=Object.prototype.hasOwnProperty;function K(e,n){return v.call(e,n)}function f(e){var n=Object.create(null);return function(i){return n[i]||(n[i]=e(i))}}var A=/-(\w)/g,T=f((function(e){return e.replace(A,(function(e,n){return n?n.toUpperCase():""}))})),B=f((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),R=/\B([A-Z])/g,Y=f((function(e){return e.replace(R,"-$1").toLowerCase()}));var P=Function.prototype.bind?function(e,n){return e.bind(n)}:function(e,n){function i(i){var a=arguments.length;return a?a>1?e.apply(n,arguments):e.call(n,i):e.call(n)}return i._length=e.length,i};function N(e,n){n=n||0;for(var i=e.length-n,a=new Array(i);i--;)a[i]=e[i+n];return a}function O(e,n){for(var i in n)e[i]=n[i];return e}function D(e){for(var n={},i=0;i<e.length;i++)e[i]&&O(n,e[i]);return n}function I(e,n,i){}var E=function(e,n,i){return!1},Z=function(e){return e};function G(e,n){if(e===n)return!0;var i=u(e),a=u(n);if(!i||!a)return!i&&!a&&String(e)===String(n);try{var r=Array.isArray(e),l=Array.isArray(n);if(r&&l)return e.length===n.length&&e.every((function(e,i){return G(e,n[i])}));if(e instanceof Date&&n instanceof Date)return e.getTime()===n.getTime();if(r||l)return!1;var t=Object.keys(e),d=Object.keys(n);return t.length===d.length&&t.every((function(i){return G(e[i],n[i])}))}catch(e){return!1}}function C(e,n){for(var i=0;i<e.length;i++)if(G(e[i],n))return i;return-1}function V(e){var n=!1;return function(){n||(n=!0,e.apply(this,arguments))}}function M(e,n){return e===n?0===e&&1/e!=1/n:e==e||n==n}var _=["component","directive","filter"],F=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],x={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:E,isReservedAttr:E,isUnknownElement:E,getTagNamespace:I,parsePlatformTagName:Z,mustUseProp:E,async:!0,_lifecycleHooks:F},L=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function j(e){var n=(e+"").charCodeAt(0);return 36===n||95===n}function w(e,n,i,a){Object.defineProperty(e,n,{value:i,enumerable:!!a,writable:!0,configurable:!0})}var U=new RegExp("[^".concat(L.source,".$_\\d]"));var $="__proto__"in{},J="undefined"!=typeof window,W=J&&window.navigator.userAgent.toLowerCase(),X=W&&/msie|trident/.test(W),q=W&&W.indexOf("msie 9.0")>0,Q=W&&W.indexOf("edge/")>0;W&&W.indexOf("android");var ee=W&&/iphone|ipad|ipod|ios/.test(W);W&&/chrome\/\d+/.test(W),W&&/phantomjs/.test(W);var ne,ie=W&&W.match(/firefox\/(\d+)/),ae={}.watch,re=!1;if(J)try{var le={};Object.defineProperty(le,"passive",{get:function(){re=!0}}),window.addEventListener("test-passive",null,le)}catch(e){}var te=function(){return void 0===ne&&(ne=!J&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),ne},de=J&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function se(e){return"function"==typeof e&&/native code/.test(e.toString())}var me,ue="undefined"!=typeof Symbol&&se(Symbol)&&"undefined"!=typeof Reflect&&se(Reflect.ownKeys);me="undefined"!=typeof Set&&se(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var oe=null;function ke(){return oe&&{proxy:oe}}function ye(e){void 0===e&&(e=null),e||oe&&oe._scope.off(),oe=e,e&&e._scope.on()}var be=function(){function e(e,n,i,a,r,l,t,d){this.tag=e,this.data=n,this.children=i,this.text=a,this.elm=r,this.ns=void 0,this.context=l,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=n&&n.key,this.componentOptions=t,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=d,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(e.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),e}(),ce=function(e){void 0===e&&(e="");var n=new be;return n.text=e,n.isComment=!0,n};function ge(e){return new be(void 0,void 0,void 0,String(e))}function pe(e){var n=new be(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return n.ns=e.ns,n.isStatic=e.isStatic,n.key=e.key,n.isComment=e.isComment,n.fnContext=e.fnContext,n.fnOptions=e.fnOptions,n.fnScopeId=e.fnScopeId,n.asyncMeta=e.asyncMeta,n.isCloned=!0,n}"function"==typeof SuppressedError&&SuppressedError;var He=0,Se=[],he=function(){function e(){this._pending=!1,this.id=He++,this.subs=[]}return e.prototype.addSub=function(e){this.subs.push(e)},e.prototype.removeSub=function(e){this.subs[this.subs.indexOf(e)]=null,this._pending||(this._pending=!0,Se.push(this))},e.prototype.depend=function(n){e.target&&e.target.addDep(this)},e.prototype.notify=function(e){var n=this.subs.filter((function(e){return e}));for(var i=0,a=n.length;i<a;i++){0,n[i].update()}},e}();he.target=null;var ze=[];function ve(e){ze.push(e),he.target=e}function Ke(){ze.pop(),he.target=ze[ze.length-1]}var fe=Array.prototype,Ae=Object.create(fe);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var n=fe[e];w(Ae,e,(function(){for(var i=[],a=0;a<arguments.length;a++)i[a]=arguments[a];var r,l=n.apply(this,i),t=this.__ob__;switch(e){case"push":case"unshift":r=i;break;case"splice":r=i.slice(2)}return r&&t.observeArray(r),t.dep.notify(),l}))}));var Te=Object.getOwnPropertyNames(Ae),Be={},Re=!0;function Ye(e){Re=e}var Pe={notify:I,depend:I,addSub:I,removeSub:I},Ne=function(){function e(e,n,i){if(void 0===n&&(n=!1),void 0===i&&(i=!1),this.value=e,this.shallow=n,this.mock=i,this.dep=i?Pe:new he,this.vmCount=0,w(e,"__ob__",this),r(e)){if(!i)if($)e.__proto__=Ae;else for(var a=0,l=Te.length;a<l;a++){w(e,d=Te[a],Ae[d])}n||this.observeArray(e)}else{var t=Object.keys(e);for(a=0;a<t.length;a++){var d;De(e,d=t[a],Be,void 0,n,i)}}}return e.prototype.observeArray=function(e){for(var n=0,i=e.length;n<i;n++)Oe(e[n],!1,this.mock)},e}();function Oe(e,n,i){return e&&K(e,"__ob__")&&e.__ob__ instanceof Ne?e.__ob__:!Re||!i&&te()||!r(e)&&!k(e)||!Object.isExtensible(e)||e.__v_skip||we(e)||e instanceof be?void 0:new Ne(e,n,i)}function De(e,n,i,a,l,t,d){void 0===d&&(d=!1);var s=new he,m=Object.getOwnPropertyDescriptor(e,n);if(!m||!1!==m.configurable){var u=m&&m.get,o=m&&m.set;u&&!o||i!==Be&&2!==arguments.length||(i=e[n]);var k=l?i&&i.__ob__:Oe(i,!1,t);return Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:function(){var n=u?u.call(e):i;return he.target&&(s.depend(),k&&(k.dep.depend(),r(n)&&Ze(n))),we(n)&&!l?n.value:n},set:function(n){var a=u?u.call(e):i;if(M(a,n)){if(o)o.call(e,n);else{if(u)return;if(!l&&we(a)&&!we(n))return void(a.value=n);i=n}k=l?n&&n.__ob__:Oe(n,!1,t),s.notify()}}}),s}}function Ie(e,n,i){if(!Fe(e)){var a=e.__ob__;return r(e)&&b(n)?(e.length=Math.max(e.length,n),e.splice(n,1,i),a&&!a.shallow&&a.mock&&Oe(i,!1,!0),i):n in e&&!(n in Object.prototype)?(e[n]=i,i):e._isVue||a&&a.vmCount?i:a?(De(a.value,n,i,void 0,a.shallow,a.mock),a.dep.notify(),i):(e[n]=i,i)}}function Ee(e,n){if(r(e)&&b(n))e.splice(n,1);else{var i=e.__ob__;e._isVue||i&&i.vmCount||Fe(e)||K(e,n)&&(delete e[n],i&&i.dep.notify())}}function Ze(e){for(var n=void 0,i=0,a=e.length;i<a;i++)(n=e[i])&&n.__ob__&&n.__ob__.dep.depend(),r(n)&&Ze(n)}function Ge(e){return Ve(e,!1),e}function Ce(e){return Ve(e,!0),w(e,"__v_isShallow",!0),e}function Ve(e,n){if(!Fe(e)){Oe(e,n,te());0}}function Me(e){return Fe(e)?Me(e.__v_raw):!(!e||!e.__ob__)}function _e(e){return!(!e||!e.__v_isShallow)}function Fe(e){return!(!e||!e.__v_isReadonly)}function xe(e){return Me(e)||Fe(e)}function Le(e){var n=e&&e.__v_raw;return n?Le(n):e}function je(e){return Object.isExtensible(e)&&w(e,"__v_skip",!0),e}function we(e){return!(!e||!0!==e.__v_isRef)}function Ue(e){return Je(e,!1)}function $e(e){return Je(e,!0)}function Je(e,n){if(we(e))return e;var i={};return w(i,"__v_isRef",!0),w(i,"__v_isShallow",n),w(i,"dep",De(i,"value",e,null,n,te())),i}function We(e){e.dep&&e.dep.notify()}function Xe(e){return we(e)?e.value:e}function qe(e){if(Me(e))return e;for(var n={},i=Object.keys(e),a=0;a<i.length;a++)Qe(n,e,i[a]);return n}function Qe(e,n,i){Object.defineProperty(e,i,{enumerable:!0,configurable:!0,get:function(){var e=n[i];if(we(e))return e.value;var a=e&&e.__ob__;return a&&a.dep.depend(),e},set:function(e){var a=n[i];we(a)&&!we(e)?a.value=e:n[i]=e}})}function en(e){var n=new he,i=e((function(){n.depend()}),(function(){n.notify()})),a=i.get,r=i.set,l={get value(){return a()},set value(e){r(e)}};return w(l,"__v_isRef",!0),l}function nn(e){var n=r(e)?new Array(e.length):{};for(var i in e)n[i]=an(e,i);return n}function an(e,n,i){var a=e[n];if(we(a))return a;var r={get value(){var a=e[n];return void 0===a?i:a},set value(i){e[n]=i}};return w(r,"__v_isRef",!0),r}function rn(e){return ln(e,!1)}function ln(e,n){if(!k(e))return e;if(Fe(e))return e;var i=n?"__v_rawToShallowReadonly":"__v_rawToReadonly",a=e[i];if(a)return a;var r=Object.create(Object.getPrototypeOf(e));w(e,i,r),w(r,"__v_isReadonly",!0),w(r,"__v_raw",e),we(e)&&w(r,"__v_isRef",!0),(n||_e(e))&&w(r,"__v_isShallow",!0);for(var l=Object.keys(e),t=0;t<l.length;t++)tn(r,e,l[t],n);return r}function tn(e,n,i,a){Object.defineProperty(e,i,{enumerable:!0,configurable:!0,get:function(){var e=n[i];return a||!k(e)?e:rn(e)},set:function(){}})}function dn(e){return ln(e,!0)}function sn(e,n){var i,a,r=m(e);r?(i=e,a=I):(i=e.get,a=e.set);var l=te()?null:new Xi(oe,i,I,{lazy:!0});var t={effect:l,get value(){return l?(l.dirty&&l.evaluate(),he.target&&l.depend(),l.value):i()},set value(e){a(e)}};return w(t,"__v_isRef",!0),w(t,"__v_isReadonly",r),t}var mn="".concat("watcher"," callback"),un="".concat("watcher"," getter"),on="".concat("watcher"," cleanup");function kn(e,n){return Hn(e,null,n)}function yn(e,n){return Hn(e,null,{flush:"post"})}function bn(e,n){return Hn(e,null,{flush:"sync"})}var cn,gn={};function pn(e,n,i){return Hn(e,n,i)}function Hn(e,n,i){var l=void 0===i?a:i,t=l.immediate,d=l.deep,s=l.flush,u=void 0===s?"pre":s;l.onTrack,l.onTrigger;var o,k,y=oe,b=function(e,n,i){void 0===i&&(i=null);var a=ci(e,null,i,y,n);return d&&a&&a.__ob__&&a.__ob__.dep.depend(),a},c=!1,g=!1;if(we(e)?(o=function(){return e.value},c=_e(e)):Me(e)?(o=function(){return e.__ob__.dep.depend(),e},d=!0):r(e)?(g=!0,c=e.some((function(e){return Me(e)||_e(e)})),o=function(){return e.map((function(e){return we(e)?e.value:Me(e)?(e.__ob__.dep.depend(),$i(e)):m(e)?b(e,un):void 0}))}):o=m(e)?n?function(){return b(e,un)}:function(){if(!y||!y._isDestroyed)return k&&k(),b(e,"watcher",[H])}:I,n&&d){var p=o;o=function(){return $i(p())}}var H=function(e){k=S.onStop=function(){b(e,on)}};if(te())return H=I,n?t&&b(n,mn,[o(),g?[]:void 0,H]):o(),I;var S=new Xi(oe,o,I,{lazy:!0});S.noRecurse=!n;var h=g?[]:gn;return S.run=function(){if(S.active)if(n){var e=S.get();(d||c||(g?e.some((function(e,n){return M(e,h[n])})):M(e,h)))&&(k&&k(),b(n,mn,[e,h===gn?void 0:h,H]),h=e)}else S.get()},"sync"===u?S.update=S.run:"post"===u?(S.post=!0,S.update=function(){return Ha(S)}):S.update=function(){if(y&&y===oe&&!y._isMounted){var e=y._preWatchers||(y._preWatchers=[]);e.indexOf(S)<0&&e.push(S)}else Ha(S)},n?t?S.run():h=S.get():"post"===u&&y?y.$once("hook:mounted",(function(){return S.get()})):S.get(),function(){S.teardown()}}var Sn=function(){function e(e){void 0===e&&(e=!1),this.detached=e,this.active=!0,this.effects=[],this.cleanups=[],this.parent=cn,!e&&cn&&(this.index=(cn.scopes||(cn.scopes=[])).push(this)-1)}return e.prototype.run=function(e){if(this.active){var n=cn;try{return cn=this,e()}finally{cn=n}}else 0},e.prototype.on=function(){cn=this},e.prototype.off=function(){cn=this.parent},e.prototype.stop=function(e){if(this.active){var n=void 0,i=void 0;for(n=0,i=this.effects.length;n<i;n++)this.effects[n].teardown();for(n=0,i=this.cleanups.length;n<i;n++)this.cleanups[n]();if(this.scopes)for(n=0,i=this.scopes.length;n<i;n++)this.scopes[n].stop(!0);if(!this.detached&&this.parent&&!e){var a=this.parent.scopes.pop();a&&a!==this&&(this.parent.scopes[this.index]=a,a.index=this.index)}this.parent=void 0,this.active=!1}},e}();function hn(e){return new Sn(e)}function zn(){return cn}function vn(e){cn&&cn.cleanups.push(e)}function Kn(e,n){oe&&(fn(oe)[e]=n)}function fn(e){var n=e._provided,i=e.$parent&&e.$parent._provided;return i===n?e._provided=Object.create(i):n}function An(e,n,i){void 0===i&&(i=!1);var a=oe;if(a){var r=a.$parent&&a.$parent._provided;if(r&&e in r)return r[e];if(arguments.length>1)return i&&m(n)?n.call(a):n}else 0}var Tn=f((function(e){var n="&"===e.charAt(0),i="~"===(e=n?e.slice(1):e).charAt(0),a="!"===(e=i?e.slice(1):e).charAt(0);return{name:e=a?e.slice(1):e,once:i,capture:a,passive:n}}));function Bn(e,n){function i(){var e=i.fns;if(!r(e))return ci(e,null,arguments,n,"v-on handler");for(var a=e.slice(),l=0;l<a.length;l++)ci(a[l],null,arguments,n,"v-on handler")}return i.fns=e,i}function Rn(e,n,i,a,r,t){var s,m,u,o;for(s in e)m=e[s],u=n[s],o=Tn(s),l(m)||(l(u)?(l(m.fns)&&(m=e[s]=Bn(m,t)),d(o.once)&&(m=e[s]=r(o.name,m,o.capture)),i(o.name,m,o.capture,o.passive,o.params)):m!==u&&(u.fns=m,e[s]=u));for(s in n)l(e[s])&&a((o=Tn(s)).name,n[s],o.capture)}function Yn(e,n,i){var a;e instanceof be&&(e=e.data.hook||(e.data.hook={}));var r=e[n];function s(){i.apply(this,arguments),z(a.fns,s)}l(r)?a=Bn([s]):t(r.fns)&&d(r.merged)?(a=r).fns.push(s):a=Bn([r,s]),a.merged=!0,e[n]=a}function Pn(e,n,i,a,r){if(t(n)){if(K(n,i))return e[i]=n[i],r||delete n[i],!0;if(K(n,a))return e[i]=n[a],r||delete n[a],!0}return!1}function Nn(e){return s(e)?[ge(e)]:r(e)?function e(n,i){var a,m,u,o,k=[];for(a=0;a<n.length;a++)l(m=n[a])||"boolean"==typeof m||(u=k.length-1,o=k[u],r(m)?m.length>0&&(On((m=e(m,"".concat(i||"","_").concat(a)))[0])&&On(o)&&(k[u]=ge(o.text+m[0].text),m.shift()),k.push.apply(k,m)):s(m)?On(o)?k[u]=ge(o.text+m):""!==m&&k.push(ge(m)):On(m)&&On(o)?k[u]=ge(o.text+m.text):(d(n._isVList)&&t(m.tag)&&l(m.key)&&t(i)&&(m.key="__vlist".concat(i,"_").concat(a,"__")),k.push(m)));return k}(e):void 0}function On(e){return t(e)&&t(e.text)&&!1===e.isComment}function Dn(e,n){var i,a,l,d,s=null;if(r(e)||"string"==typeof e)for(s=new Array(e.length),i=0,a=e.length;i<a;i++)s[i]=n(e[i],i);else if("number"==typeof e)for(s=new Array(e),i=0;i<e;i++)s[i]=n(i+1,i);else if(u(e))if(ue&&e[Symbol.iterator]){s=[];for(var m=e[Symbol.iterator](),o=m.next();!o.done;)s.push(n(o.value,s.length)),o=m.next()}else for(l=Object.keys(e),s=new Array(l.length),i=0,a=l.length;i<a;i++)d=l[i],s[i]=n(e[d],d,i);return t(s)||(s=[]),s._isVList=!0,s}function In(e,n,i,a){var r,l=this.$scopedSlots[e];l?(i=i||{},a&&(i=O(O({},a),i)),r=l(i)||(m(n)?n():n)):r=this.$slots[e]||(m(n)?n():n);var t=i&&i.slot;return t?this.$createElement("template",{slot:t},r):r}function En(e){return Za(this.$options,"filters",e,!0)||Z}function Zn(e,n){return r(e)?-1===e.indexOf(n):e!==n}function Gn(e,n,i,a,r){var l=x.keyCodes[n]||i;return r&&a&&!x.keyCodes[n]?Zn(r,a):l?Zn(l,e):a?Y(a)!==n:void 0===e}function Cn(e,n,i,a,l){if(i)if(u(i)){r(i)&&(i=D(i));var t=void 0,d=function(r){if("class"===r||"style"===r||h(r))t=e;else{var d=e.attrs&&e.attrs.type;t=a||x.mustUseProp(n,d,r)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var s=T(r),m=Y(r);s in t||m in t||(t[r]=i[r],l&&((e.on||(e.on={}))["update:".concat(r)]=function(e){i[r]=e}))};for(var s in i)d(s)}else;return e}function Vn(e,n){var i=this._staticTrees||(this._staticTrees=[]),a=i[e];return a&&!n||_n(a=i[e]=this.$options.staticRenderFns[e].call(this._renderProxy,this._c,this),"__static__".concat(e),!1),a}function Mn(e,n,i){return _n(e,"__once__".concat(n).concat(i?"_".concat(i):""),!0),e}function _n(e,n,i){if(r(e))for(var a=0;a<e.length;a++)e[a]&&"string"!=typeof e[a]&&Fn(e[a],"".concat(n,"_").concat(a),i);else Fn(e,n,i)}function Fn(e,n,i){e.isStatic=!0,e.key=n,e.isOnce=i}function xn(e,n){if(n)if(k(n)){var i=e.on=e.on?O({},e.on):{};for(var a in n){var r=i[a],l=n[a];i[a]=r?[].concat(r,l):l}}else;return e}function Ln(e,n,i,a){n=n||{$stable:!i};for(var l=0;l<e.length;l++){var t=e[l];r(t)?Ln(t,n,i):t&&(t.proxy&&(t.fn.proxy=!0),n[t.key]=t.fn)}return a&&(n.$key=a),n}function jn(e,n){for(var i=0;i<n.length;i+=2){var a=n[i];"string"==typeof a&&a&&(e[n[i]]=n[i+1])}return e}function wn(e,n){return"string"==typeof e?n+e:e}function Un(e){e._o=Mn,e._n=H,e._s=g,e._l=Dn,e._t=In,e._q=G,e._i=C,e._m=Vn,e._f=En,e._k=Gn,e._b=Cn,e._v=ge,e._e=ce,e._u=Ln,e._g=xn,e._d=jn,e._p=wn}function $n(e,n){if(!e||!e.length)return{};for(var i={},a=0,r=e.length;a<r;a++){var l=e[a],t=l.data;if(t&&t.attrs&&t.attrs.slot&&delete t.attrs.slot,l.context!==n&&l.fnContext!==n||!t||null==t.slot)(i.default||(i.default=[])).push(l);else{var d=t.slot,s=i[d]||(i[d]=[]);"template"===l.tag?s.push.apply(s,l.children||[]):s.push(l)}}for(var m in i)i[m].every(Jn)&&delete i[m];return i}function Jn(e){return e.isComment&&!e.asyncFactory||" "===e.text}function Wn(e){return e.isComment&&e.asyncFactory}function Xn(e,n,i,r){var l,t=Object.keys(i).length>0,d=n?!!n.$stable:!t,s=n&&n.$key;if(n){if(n._normalized)return n._normalized;if(d&&r&&r!==a&&s===r.$key&&!t&&!r.$hasNormal)return r;for(var m in l={},n)n[m]&&"$"!==m[0]&&(l[m]=qn(e,i,m,n[m]))}else l={};for(var u in i)u in l||(l[u]=Qn(i,u));return n&&Object.isExtensible(n)&&(n._normalized=l),w(l,"$stable",d),w(l,"$key",s),w(l,"$hasNormal",t),l}function qn(e,n,i,a){var l=function(){var n=oe;ye(e);var i=arguments.length?a.apply(null,arguments):a({}),l=(i=i&&"object"==typeof i&&!r(i)?[i]:Nn(i))&&i[0];return ye(n),i&&(!l||1===i.length&&l.isComment&&!Wn(l))?void 0:i};return a.proxy&&Object.defineProperty(n,i,{get:l,enumerable:!0,configurable:!0}),l}function Qn(e,n){return function(){return e[n]}}function ei(e){return{get attrs(){if(!e._attrsProxy){var n=e._attrsProxy={};w(n,"_v_attr_proxy",!0),ni(n,e.$attrs,a,e,"$attrs")}return e._attrsProxy},get listeners(){e._listenersProxy||ni(e._listenersProxy={},e.$listeners,a,e,"$listeners");return e._listenersProxy},get slots(){return function(e){e._slotsProxy||ai(e._slotsProxy={},e.$scopedSlots);return e._slotsProxy}(e)},emit:P(e.$emit,e),expose:function(n){n&&Object.keys(n).forEach((function(i){return Qe(e,n,i)}))}}}function ni(e,n,i,a,r){var l=!1;for(var t in n)t in e?n[t]!==i[t]&&(l=!0):(l=!0,ii(e,t,a,r));for(var t in e)t in n||(l=!0,delete e[t]);return l}function ii(e,n,i,a){Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:function(){return i[a][n]}})}function ai(e,n){for(var i in n)e[i]=n[i];for(var i in e)i in n||delete e[i]}function ri(){return di().slots}function li(){return di().attrs}function ti(){return di().listeners}function di(){var e=oe;return e._setupContext||(e._setupContext=ei(e))}function si(e,n){var i=r(e)?e.reduce((function(e,n){return e[n]={},e}),{}):e;for(var a in n){var l=i[a];l?r(l)||m(l)?i[a]={type:l,default:n[a]}:l.default=n[a]:null===l&&(i[a]={default:n[a]})}return i}var mi=null;function ui(e,n){return(e.__esModule||ue&&"Module"===e[Symbol.toStringTag])&&(e=e.default),u(e)?n.extend(e):e}function oi(e){if(r(e))for(var n=0;n<e.length;n++){var i=e[n];if(t(i)&&(t(i.componentOptions)||Wn(i)))return i}}function ki(e,n,i,a,o,k){return(r(i)||s(i))&&(o=a,a=i,i=void 0),d(k)&&(o=2),function(e,n,i,a,s){if(t(i)&&t(i.__ob__))return ce();t(i)&&t(i.is)&&(n=i.is);if(!n)return ce();0;r(a)&&m(a[0])&&((i=i||{}).scopedSlots={default:a[0]},a.length=0);2===s?a=Nn(a):1===s&&(a=function(e){for(var n=0;n<e.length;n++)if(r(e[n]))return Array.prototype.concat.apply([],e);return e}(a));var o,k;if("string"==typeof n){var y=void 0;k=e.$vnode&&e.$vnode.ns||x.getTagNamespace(n),o=x.isReservedTag(n)?new be(x.parsePlatformTagName(n),i,a,void 0,void 0,e):i&&i.pre||!t(y=Za(e.$options,"components",n))?new be(n,i,a,void 0,void 0,e):Ta(y,i,e,a,n)}else o=Ta(n,i,e,a);return r(o)?o:t(o)?(t(k)&&function e(n,i,a){n.ns=i,"foreignObject"===n.tag&&(i=void 0,a=!0);if(t(n.children))for(var r=0,s=n.children.length;r<s;r++){var m=n.children[r];t(m.tag)&&(l(m.ns)||d(a)&&"svg"!==m.tag)&&e(m,i,a)}}(o,k),t(i)&&function(e){u(e.style)&&$i(e.style);u(e.class)&&$i(e.class)}(i),o):ce()}(e,n,i,a,o)}function yi(e,n,i){return ki(oe,e,n,i,2,!0)}function bi(e,n,i){ve();try{if(n)for(var a=n;a=a.$parent;){var r=a.$options.errorCaptured;if(r)for(var l=0;l<r.length;l++)try{if(!1===r[l].call(a,e,n,i))return}catch(e){gi(e,a,"errorCaptured hook")}}gi(e,n,i)}finally{Ke()}}function ci(e,n,i,a,r){var l;try{(l=i?e.apply(n,i):e.call(n))&&!l._isVue&&c(l)&&!l._handled&&(l.catch((function(e){return bi(e,a,r+" (Promise/async)")})),l._handled=!0)}catch(e){bi(e,a,r)}return l}function gi(e,n,i){if(x.errorHandler)try{return x.errorHandler.call(null,e,n,i)}catch(n){n!==e&&pi(n,null,"config.errorHandler")}pi(e,n,i)}function pi(e,n,i){if(!J||"undefined"==typeof console)throw e;console.error(e)}var Hi,Si=!1,hi=[],zi=!1;function vi(){zi=!1;var e=hi.slice(0);hi.length=0;for(var n=0;n<e.length;n++)e[n]()}if("undefined"!=typeof Promise&&se(Promise)){var Ki=Promise.resolve();Hi=function(){Ki.then(vi),ee&&setTimeout(I)},Si=!0}else if(X||"undefined"==typeof MutationObserver||!se(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Hi="undefined"!=typeof setImmediate&&se(setImmediate)?function(){setImmediate(vi)}:function(){setTimeout(vi,0)};else{var fi=1,Ai=new MutationObserver(vi),Ti=document.createTextNode(String(fi));Ai.observe(Ti,{characterData:!0}),Hi=function(){fi=(fi+1)%2,Ti.data=String(fi)},Si=!0}function Bi(e,n){var i;if(hi.push((function(){if(e)try{e.call(n)}catch(e){bi(e,n,"nextTick")}else i&&i(n)})),zi||(zi=!0,Hi()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){i=e}))}function Ri(e){if(void 0===e&&(e="$style"),!oe)return a;var n=oe[e];return n||a}function Yi(e){if(J){var n=oe;n&&yn((function(){var i=n.$el,a=e(n,n._setupProxy);if(i&&1===i.nodeType){var r=i.style;for(var l in a)r.setProperty("--".concat(l),a[l])}}))}}function Pi(e){m(e)&&(e={loader:e});var n=e.loader,i=e.loadingComponent,a=e.errorComponent,r=e.delay,l=void 0===r?200:r,t=e.timeout,d=(e.suspensible,e.onError);var s=null,u=0,o=function(){var e;return s||(e=s=n().catch((function(e){if(e=e instanceof Error?e:new Error(String(e)),d)return new Promise((function(n,i){d(e,(function(){return n((u++,s=null,o()))}),(function(){return i(e)}),u+1)}));throw e})).then((function(n){return e!==s&&s?s:(n&&(n.__esModule||"Module"===n[Symbol.toStringTag])&&(n=n.default),n)})))};return function(){return{component:o(),delay:l,timeout:t,error:a,loading:i}}}function Ni(e){return function(n,i){if(void 0===i&&(i=oe),i)return function(e,n,i){var a=e.$options;a[n]=Oa(a[n],i)}(i,e,n)}}var Oi=Ni("beforeMount"),Di=Ni("mounted"),Ii=Ni("beforeUpdate"),Ei=Ni("updated"),Zi=Ni("beforeDestroy"),Gi=Ni("destroyed"),Ci=Ni("activated"),Vi=Ni("deactivated"),Mi=Ni("serverPrefetch"),_i=Ni("renderTracked"),Fi=Ni("renderTriggered"),xi=Ni("errorCaptured");function Li(e,n){void 0===n&&(n=oe),xi(e,n)}var ji="2.7.16";function wi(e){return e}var Ui=new me;function $i(e){return function e(n,i){var a,l,t=r(n);if(!t&&!u(n)||n.__v_skip||Object.isFrozen(n)||n instanceof be)return;if(n.__ob__){var d=n.__ob__.dep.id;if(i.has(d))return;i.add(d)}if(t)for(a=n.length;a--;)e(n[a],i);else if(we(n))e(n.value,i);else for(l=Object.keys(n),a=l.length;a--;)e(n[l[a]],i)}(e,Ui),Ui.clear(),e}var Ji,Wi=0,Xi=function(){function e(e,n,i,a,r){var l,t;l=this,void 0===(t=cn&&!cn._vm?cn:e?e._scope:void 0)&&(t=cn),t&&t.active&&t.effects.push(l),(this.vm=e)&&r&&(e._watcher=this),a?(this.deep=!!a.deep,this.user=!!a.user,this.lazy=!!a.lazy,this.sync=!!a.sync,this.before=a.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=i,this.id=++Wi,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new me,this.newDepIds=new me,this.expression="",m(n)?this.getter=n:(this.getter=function(e){if(!U.test(e)){var n=e.split(".");return function(e){for(var i=0;i<n.length;i++){if(!e)return;e=e[n[i]]}return e}}}(n),this.getter||(this.getter=I)),this.value=this.lazy?void 0:this.get()}return e.prototype.get=function(){var e;ve(this);var n=this.vm;try{e=this.getter.call(n,n)}catch(e){if(!this.user)throw e;bi(e,n,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&$i(e),Ke(),this.cleanupDeps()}return e},e.prototype.addDep=function(e){var n=e.id;this.newDepIds.has(n)||(this.newDepIds.add(n),this.newDeps.push(e),this.depIds.has(n)||e.addSub(this))},e.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var n=this.deps[e];this.newDepIds.has(n.id)||n.removeSub(this)}var i=this.depIds;this.depIds=this.newDepIds,this.newDepIds=i,this.newDepIds.clear(),i=this.deps,this.deps=this.newDeps,this.newDeps=i,this.newDeps.length=0},e.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():Ha(this)},e.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||u(e)||this.deep){var n=this.value;if(this.value=e,this.user){var i='callback for watcher "'.concat(this.expression,'"');ci(this.cb,this.vm,[e,n],this.vm,i)}else this.cb.call(this.vm,e,n)}}},e.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},e.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},e.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&z(this.vm._scope.effects,this),this.active){for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},e}();function qi(e,n){Ji.$on(e,n)}function Qi(e,n){Ji.$off(e,n)}function ea(e,n){var i=Ji;return function a(){var r=n.apply(null,arguments);null!==r&&i.$off(e,a)}}function na(e,n,i){Ji=e,Rn(n,i||{},qi,Qi,ea,e),Ji=void 0}var ia=null;function aa(e){var n=ia;return ia=e,function(){ia=n}}function ra(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function la(e,n){if(n){if(e._directInactive=!1,ra(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var i=0;i<e.$children.length;i++)la(e.$children[i]);ta(e,"activated")}}function ta(e,n,i,a){void 0===a&&(a=!0),ve();var r=oe,l=zn();a&&ye(e);var t=e.$options[n],d="".concat(n," hook");if(t)for(var s=0,m=t.length;s<m;s++)ci(t[s],e,i||null,e,d);e._hasHookEvent&&e.$emit("hook:"+n),a&&(ye(r),l&&l.on()),Ke()}var da=[],sa=[],ma={},ua=!1,oa=!1,ka=0;var ya=0,ba=Date.now;if(J&&!X){var ca=window.performance;ca&&"function"==typeof ca.now&&ba()>document.createEvent("Event").timeStamp&&(ba=function(){return ca.now()})}var ga=function(e,n){if(e.post){if(!n.post)return 1}else if(n.post)return-1;return e.id-n.id};function pa(){var e,n;for(ya=ba(),oa=!0,da.sort(ga),ka=0;ka<da.length;ka++)(e=da[ka]).before&&e.before(),n=e.id,ma[n]=null,e.run();var i=sa.slice(),a=da.slice();ka=da.length=sa.length=0,ma={},ua=oa=!1,function(e){for(var n=0;n<e.length;n++)e[n]._inactive=!0,la(e[n],!0)}(i),function(e){var n=e.length;for(;n--;){var i=e[n],a=i.vm;a&&a._watcher===i&&a._isMounted&&!a._isDestroyed&&ta(a,"updated")}}(a),function(){for(var e=0;e<Se.length;e++){var n=Se[e];n.subs=n.subs.filter((function(e){return e})),n._pending=!1}Se.length=0}(),de&&x.devtools&&de.emit("flush")}function Ha(e){var n=e.id;if(null==ma[n]&&(e!==he.target||!e.noRecurse)){if(ma[n]=!0,oa){for(var i=da.length-1;i>ka&&da[i].id>e.id;)i--;da.splice(i+1,0,e)}else da.push(e);ua||(ua=!0,Bi(pa))}}function Sa(e,n){if(e){for(var i=Object.create(null),a=ue?Reflect.ownKeys(e):Object.keys(e),r=0;r<a.length;r++){var l=a[r];if("__ob__"!==l){var t=e[l].from;if(t in n._provided)i[l]=n._provided[t];else if("default"in e[l]){var d=e[l].default;i[l]=m(d)?d.call(n):d}else 0}}return i}}function ha(e,n,i,l,t){var s,m=this,u=t.options;K(l,"_uid")?(s=Object.create(l))._original=l:(s=l,l=l._original);var o=d(u._compiled),k=!o;this.data=e,this.props=n,this.children=i,this.parent=l,this.listeners=e.on||a,this.injections=Sa(u.inject,l),this.slots=function(){return m.$slots||Xn(l,e.scopedSlots,m.$slots=$n(i,l)),m.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return Xn(l,e.scopedSlots,this.slots())}}),o&&(this.$options=u,this.$slots=this.slots(),this.$scopedSlots=Xn(l,e.scopedSlots,this.$slots)),u._scopeId?this._c=function(e,n,i,a){var t=ki(s,e,n,i,a,k);return t&&!r(t)&&(t.fnScopeId=u._scopeId,t.fnContext=l),t}:this._c=function(e,n,i,a){return ki(s,e,n,i,a,k)}}function za(e,n,i,a,r){var l=pe(e);return l.fnContext=i,l.fnOptions=a,n.slot&&((l.data||(l.data={})).slot=n.slot),l}function va(e,n){for(var i in n)e[T(i)]=n[i]}function Ka(e){return e.name||e.__name||e._componentTag}Un(ha.prototype);var fa={init:function(e,n){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var i=e;fa.prepatch(i,i)}else{(e.componentInstance=function(e,n){var i={_isComponent:!0,_parentVnode:e,parent:n},a=e.data.inlineTemplate;t(a)&&(i.render=a.render,i.staticRenderFns=a.staticRenderFns);return new e.componentOptions.Ctor(i)}(e,ia)).$mount(n?e.elm:void 0,n)}},prepatch:function(e,n){var i=n.componentOptions;!function(e,n,i,r,l){var t=r.data.scopedSlots,d=e.$scopedSlots,s=!!(t&&!t.$stable||d!==a&&!d.$stable||t&&e.$scopedSlots.$key!==t.$key||!t&&e.$scopedSlots.$key),m=!!(l||e.$options._renderChildren||s),u=e.$vnode;e.$options._parentVnode=r,e.$vnode=r,e._vnode&&(e._vnode.parent=r),e.$options._renderChildren=l;var o=r.data.attrs||a;e._attrsProxy&&ni(e._attrsProxy,o,u.data&&u.data.attrs||a,e,"$attrs")&&(m=!0),e.$attrs=o,i=i||a;var k=e.$options._parentListeners;if(e._listenersProxy&&ni(e._listenersProxy,i,k||a,e,"$listeners"),e.$listeners=e.$options._parentListeners=i,na(e,i,k),n&&e.$options.props){Ye(!1);for(var y=e._props,b=e.$options._propKeys||[],c=0;c<b.length;c++){var g=b[c],p=e.$options.props;y[g]=Ga(g,p,n,e)}Ye(!0),e.$options.propsData=n}m&&(e.$slots=$n(l,r.context),e.$forceUpdate())}(n.componentInstance=e.componentInstance,i.propsData,i.listeners,n,i.children)},insert:function(e){var n,i=e.context,a=e.componentInstance;a._isMounted||(a._isMounted=!0,ta(a,"mounted")),e.data.keepAlive&&(i._isMounted?((n=a)._inactive=!1,sa.push(n)):la(a,!0))},destroy:function(e){var n=e.componentInstance;n._isDestroyed||(e.data.keepAlive?function e(n,i){if(!(i&&(n._directInactive=!0,ra(n))||n._inactive)){n._inactive=!0;for(var a=0;a<n.$children.length;a++)e(n.$children[a]);ta(n,"deactivated")}}(n,!0):n.$destroy())}},Aa=Object.keys(fa);function Ta(e,n,i,s,m){if(!l(e)){var o=i.$options._base;if(u(e)&&(e=o.extend(e)),"function"==typeof e){var k;if(l(e.cid)&&void 0===(e=function(e,n){if(d(e.error)&&t(e.errorComp))return e.errorComp;if(t(e.resolved))return e.resolved;var i=mi;if(i&&t(e.owners)&&-1===e.owners.indexOf(i)&&e.owners.push(i),d(e.loading)&&t(e.loadingComp))return e.loadingComp;if(i&&!t(e.owners)){var a=e.owners=[i],r=!0,s=null,m=null;i.$on("hook:destroyed",(function(){return z(a,i)}));var o=function(e){for(var n=0,i=a.length;n<i;n++)a[n].$forceUpdate();e&&(a.length=0,null!==s&&(clearTimeout(s),s=null),null!==m&&(clearTimeout(m),m=null))},k=V((function(i){e.resolved=ui(i,n),r?a.length=0:o(!0)})),y=V((function(n){t(e.errorComp)&&(e.error=!0,o(!0))})),b=e(k,y);return u(b)&&(c(b)?l(e.resolved)&&b.then(k,y):c(b.component)&&(b.component.then(k,y),t(b.error)&&(e.errorComp=ui(b.error,n)),t(b.loading)&&(e.loadingComp=ui(b.loading,n),0===b.delay?e.loading=!0:s=setTimeout((function(){s=null,l(e.resolved)&&l(e.error)&&(e.loading=!0,o(!1))}),b.delay||200)),t(b.timeout)&&(m=setTimeout((function(){m=null,l(e.resolved)&&y(null)}),b.timeout)))),r=!1,e.loading?e.loadingComp:e.resolved}}(k=e,o)))return function(e,n,i,a,r){var l=ce();return l.asyncFactory=e,l.asyncMeta={data:n,context:i,children:a,tag:r},l}(k,n,i,s,m);n=n||{},Xa(e),t(n.model)&&function(e,n){var i=e.model&&e.model.prop||"value",a=e.model&&e.model.event||"input";(n.attrs||(n.attrs={}))[i]=n.model.value;var l=n.on||(n.on={}),d=l[a],s=n.model.callback;t(d)?(r(d)?-1===d.indexOf(s):d!==s)&&(l[a]=[s].concat(d)):l[a]=s}(e.options,n);var y=function(e,n,i){var a=n.options.props;if(!l(a)){var r={},d=e.attrs,s=e.props;if(t(d)||t(s))for(var m in a){var u=Y(m);Pn(r,s,m,u,!0)||Pn(r,d,m,u,!1)}return r}}(n,e);if(d(e.options.functional))return function(e,n,i,l,d){var s=e.options,m={},u=s.props;if(t(u))for(var o in u)m[o]=Ga(o,u,n||a);else t(i.attrs)&&va(m,i.attrs),t(i.props)&&va(m,i.props);var k=new ha(i,m,d,l,e),y=s.render.call(null,k._c,k);if(y instanceof be)return za(y,i,k.parent,s,k);if(r(y)){for(var b=Nn(y)||[],c=new Array(b.length),g=0;g<b.length;g++)c[g]=za(b[g],i,k.parent,s,k);return c}}(e,y,n,i,s);var b=n.on;if(n.on=n.nativeOn,d(e.options.abstract)){var g=n.slot;n={},g&&(n.slot=g)}!function(e){for(var n=e.hook||(e.hook={}),i=0;i<Aa.length;i++){var a=Aa[i],r=n[a],l=fa[a];r===l||r&&r._merged||(n[a]=r?Ba(l,r):l)}}(n);var p=Ka(e.options)||m;return new be("vue-component-".concat(e.cid).concat(p?"-".concat(p):""),n,void 0,void 0,void 0,i,{Ctor:e,propsData:y,listeners:b,tag:m,children:s},k)}}}function Ba(e,n){var i=function(i,a){e(i,a),n(i,a)};return i._merged=!0,i}var Ra=I,Ya=x.optionMergeStrategies;function Pa(e,n,i){if(void 0===i&&(i=!0),!n)return e;for(var a,r,l,t=ue?Reflect.ownKeys(n):Object.keys(n),d=0;d<t.length;d++)"__ob__"!==(a=t[d])&&(r=e[a],l=n[a],i&&K(e,a)?r!==l&&k(r)&&k(l)&&Pa(r,l):Ie(e,a,l));return e}function Na(e,n,i){return i?function(){var a=m(n)?n.call(i,i):n,r=m(e)?e.call(i,i):e;return a?Pa(a,r):r}:n?e?function(){return Pa(m(n)?n.call(this,this):n,m(e)?e.call(this,this):e)}:n:e}function Oa(e,n){var i=n?e?e.concat(n):r(n)?n:[n]:e;return i?function(e){for(var n=[],i=0;i<e.length;i++)-1===n.indexOf(e[i])&&n.push(e[i]);return n}(i):i}function Da(e,n,i,a){var r=Object.create(e||null);return n?O(r,n):r}Ya.data=function(e,n,i){return i?Na(e,n,i):n&&"function"!=typeof n?e:Na(e,n)},F.forEach((function(e){Ya[e]=Oa})),_.forEach((function(e){Ya[e+"s"]=Da})),Ya.watch=function(e,n,i,a){if(e===ae&&(e=void 0),n===ae&&(n=void 0),!n)return Object.create(e||null);if(!e)return n;var l={};for(var t in O(l,e),n){var d=l[t],s=n[t];d&&!r(d)&&(d=[d]),l[t]=d?d.concat(s):r(s)?s:[s]}return l},Ya.props=Ya.methods=Ya.inject=Ya.computed=function(e,n,i,a){if(!e)return n;var r=Object.create(null);return O(r,e),n&&O(r,n),r},Ya.provide=function(e,n){return e?function(){var i=Object.create(null);return Pa(i,m(e)?e.call(this):e),n&&Pa(i,m(n)?n.call(this):n,!1),i}:n};var Ia=function(e,n){return void 0===n?e:n};function Ea(e,n,i){if(m(n)&&(n=n.options),function(e,n){var i=e.props;if(i){var a,l,t={};if(r(i))for(a=i.length;a--;)"string"==typeof(l=i[a])&&(t[T(l)]={type:null});else if(k(i))for(var d in i)l=i[d],t[T(d)]=k(l)?l:{type:l};else 0;e.props=t}}(n),function(e,n){var i=e.inject;if(i){var a=e.inject={};if(r(i))for(var l=0;l<i.length;l++)a[i[l]]={from:i[l]};else if(k(i))for(var t in i){var d=i[t];a[t]=k(d)?O({from:t},d):{from:d}}else 0}}(n),function(e){var n=e.directives;if(n)for(var i in n){var a=n[i];m(a)&&(n[i]={bind:a,update:a})}}(n),!n._base&&(n.extends&&(e=Ea(e,n.extends,i)),n.mixins))for(var a=0,l=n.mixins.length;a<l;a++)e=Ea(e,n.mixins[a],i);var t,d={};for(t in e)s(t);for(t in n)K(e,t)||s(t);function s(a){var r=Ya[a]||Ia;d[a]=r(e[a],n[a],i,a)}return d}function Za(e,n,i,a){if("string"==typeof i){var r=e[n];if(K(r,i))return r[i];var l=T(i);if(K(r,l))return r[l];var t=B(l);return K(r,t)?r[t]:r[i]||r[l]||r[t]}}function Ga(e,n,i,a){var r=n[e],l=!K(i,e),t=i[e],d=_a(Boolean,r.type);if(d>-1)if(l&&!K(r,"default"))t=!1;else if(""===t||t===Y(e)){var s=_a(String,r.type);(s<0||d<s)&&(t=!0)}if(void 0===t){t=function(e,n,i){if(!K(n,"default"))return;var a=n.default;0;if(e&&e.$options.propsData&&void 0===e.$options.propsData[i]&&void 0!==e._props[i])return e._props[i];return m(a)&&"Function"!==Va(n.type)?a.call(e):a}(a,r,e);var u=Re;Ye(!0),Oe(t),Ye(u)}return t}var Ca=/^\s*function (\w+)/;function Va(e){var n=e&&e.toString().match(Ca);return n?n[1]:""}function Ma(e,n){return Va(e)===Va(n)}function _a(e,n){if(!r(n))return Ma(n,e)?0:-1;for(var i=0,a=n.length;i<a;i++)if(Ma(n[i],e))return i;return-1}var Fa={enumerable:!0,configurable:!0,get:I,set:I};function xa(e,n,i){Fa.get=function(){return this[n][i]},Fa.set=function(e){this[n][i]=e},Object.defineProperty(e,i,Fa)}function La(e){var n=e.$options;if(n.props&&function(e,n){var i=e.$options.propsData||{},a=e._props=Ce({}),r=e.$options._propKeys=[];e.$parent&&Ye(!1);var l=function(l){r.push(l);var t=Ga(l,n,i,e);De(a,l,t,void 0,!0),l in e||xa(e,"_props",l)};for(var t in n)l(t);Ye(!0)}(e,n.props),function(e){var n=e.$options,i=n.setup;if(i){var a=e._setupContext=ei(e);ye(e),ve();var r=ci(i,null,[e._props||Ce({}),a],e,"setup");if(Ke(),ye(),m(r))n.render=r;else if(u(r))if(e._setupState=r,r.__sfc){var l=e._setupProxy={};for(var t in r)"__sfc"!==t&&Qe(l,r,t)}else for(var t in r)j(t)||Qe(e,r,t);else 0}}(e),n.methods&&function(e,n){e.$options.props;for(var i in n)e[i]="function"!=typeof n[i]?I:P(n[i],e)}(e,n.methods),n.data)!function(e){var n=e.$options.data;k(n=e._data=m(n)?function(e,n){ve();try{return e.call(n,n)}catch(e){return bi(e,n,"data()"),{}}finally{Ke()}}(n,e):n||{})||(n={});var i=Object.keys(n),a=e.$options.props,r=(e.$options.methods,i.length);for(;r--;){var l=i[r];0,a&&K(a,l)||j(l)||xa(e,"_data",l)}var t=Oe(n);t&&t.vmCount++}(e);else{var i=Oe(e._data={});i&&i.vmCount++}n.computed&&function(e,n){var i=e._computedWatchers=Object.create(null),a=te();for(var r in n){var l=n[r],t=m(l)?l:l.get;0,a||(i[r]=new Xi(e,t||I,I,ja)),r in e||wa(e,r,l)}}(e,n.computed),n.watch&&n.watch!==ae&&function(e,n){for(var i in n){var a=n[i];if(r(a))for(var l=0;l<a.length;l++)Ja(e,i,a[l]);else Ja(e,i,a)}}(e,n.watch)}var ja={lazy:!0};function wa(e,n,i){var a=!te();m(i)?(Fa.get=a?Ua(n):$a(i),Fa.set=I):(Fa.get=i.get?a&&!1!==i.cache?Ua(n):$a(i.get):I,Fa.set=i.set||I),Object.defineProperty(e,n,Fa)}function Ua(e){return function(){var n=this._computedWatchers&&this._computedWatchers[e];if(n)return n.dirty&&n.evaluate(),he.target&&n.depend(),n.value}}function $a(e){return function(){return e.call(this,this)}}function Ja(e,n,i,a){return k(i)&&(a=i,i=i.handler),"string"==typeof i&&(i=e[i]),e.$watch(n,i,a)}var Wa=0;function Xa(e){var n=e.options;if(e.super){var i=Xa(e.super);if(i!==e.superOptions){e.superOptions=i;var a=function(e){var n,i=e.options,a=e.sealedOptions;for(var r in i)i[r]!==a[r]&&(n||(n={}),n[r]=i[r]);return n}(e);a&&O(e.extendOptions,a),(n=e.options=Ea(i,e.extendOptions)).name&&(n.components[n.name]=e)}}return n}function qa(e){this._init(e)}function Qa(e){e.cid=0;var n=1;e.extend=function(e){e=e||{};var i=this,a=i.cid,r=e._Ctor||(e._Ctor={});if(r[a])return r[a];var l=Ka(e)||Ka(i.options);var t=function(e){this._init(e)};return(t.prototype=Object.create(i.prototype)).constructor=t,t.cid=n++,t.options=Ea(i.options,e),t.super=i,t.options.props&&function(e){var n=e.options.props;for(var i in n)xa(e.prototype,"_props",i)}(t),t.options.computed&&function(e){var n=e.options.computed;for(var i in n)wa(e.prototype,i,n[i])}(t),t.extend=i.extend,t.mixin=i.mixin,t.use=i.use,_.forEach((function(e){t[e]=i[e]})),l&&(t.options.components[l]=t),t.superOptions=i.options,t.extendOptions=e,t.sealedOptions=O({},t.options),r[a]=t,t}}function er(e){return e&&(Ka(e.Ctor.options)||e.tag)}function nr(e,n){return r(e)?e.indexOf(n)>-1:"string"==typeof e?e.split(",").indexOf(n)>-1:!!y(e)&&e.test(n)}function ir(e,n){var i=e.cache,a=e.keys,r=e._vnode,l=e.$vnode;for(var t in i){var d=i[t];if(d){var s=d.name;s&&!n(s)&&ar(i,t,a,r)}}l.componentOptions.children=void 0}function ar(e,n,i,a){var r=e[n];!r||a&&r.tag===a.tag||r.componentInstance.$destroy(),e[n]=null,z(i,n)}!function(e){e.prototype._init=function(e){var n=this;n._uid=Wa++,n._isVue=!0,n.__v_skip=!0,n._scope=new Sn(!0),n._scope.parent=void 0,n._scope._vm=!0,e&&e._isComponent?function(e,n){var i=e.$options=Object.create(e.constructor.options),a=n._parentVnode;i.parent=n.parent,i._parentVnode=a;var r=a.componentOptions;i.propsData=r.propsData,i._parentListeners=r.listeners,i._renderChildren=r.children,i._componentTag=r.tag,n.render&&(i.render=n.render,i.staticRenderFns=n.staticRenderFns)}(n,e):n.$options=Ea(Xa(n.constructor),e||{},n),n._renderProxy=n,n._self=n,function(e){var n=e.$options,i=n.parent;if(i&&!n.abstract){for(;i.$options.abstract&&i.$parent;)i=i.$parent;i.$children.push(e)}e.$parent=i,e.$root=i?i.$root:e,e.$children=[],e.$refs={},e._provided=i?i._provided:Object.create(null),e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(n),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var n=e.$options._parentListeners;n&&na(e,n)}(n),function(e){e._vnode=null,e._staticTrees=null;var n=e.$options,i=e.$vnode=n._parentVnode,r=i&&i.context;e.$slots=$n(n._renderChildren,r),e.$scopedSlots=i?Xn(e.$parent,i.data.scopedSlots,e.$slots):a,e._c=function(n,i,a,r){return ki(e,n,i,a,r,!1)},e.$createElement=function(n,i,a,r){return ki(e,n,i,a,r,!0)};var l=i&&i.data;De(e,"$attrs",l&&l.attrs||a,null,!0),De(e,"$listeners",n._parentListeners||a,null,!0)}(n),ta(n,"beforeCreate",void 0,!1),function(e){var n=Sa(e.$options.inject,e);n&&(Ye(!1),Object.keys(n).forEach((function(i){De(e,i,n[i])})),Ye(!0))}(n),La(n),function(e){var n=e.$options.provide;if(n){var i=m(n)?n.call(e):n;if(!u(i))return;for(var a=fn(e),r=ue?Reflect.ownKeys(i):Object.keys(i),l=0;l<r.length;l++){var t=r[l];Object.defineProperty(a,t,Object.getOwnPropertyDescriptor(i,t))}}}(n),ta(n,"created"),n.$options.el&&n.$mount(n.$options.el)}}(qa),function(e){var n={get:function(){return this._data}},i={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",n),Object.defineProperty(e.prototype,"$props",i),e.prototype.$set=Ie,e.prototype.$delete=Ee,e.prototype.$watch=function(e,n,i){if(k(n))return Ja(this,e,n,i);(i=i||{}).user=!0;var a=new Xi(this,e,n,i);if(i.immediate){var r='callback for immediate watcher "'.concat(a.expression,'"');ve(),ci(n,this,[a.value],this,r),Ke()}return function(){a.teardown()}}}(qa),function(e){var n=/^hook:/;e.prototype.$on=function(e,i){var a=this;if(r(e))for(var l=0,t=e.length;l<t;l++)a.$on(e[l],i);else(a._events[e]||(a._events[e]=[])).push(i),n.test(e)&&(a._hasHookEvent=!0);return a},e.prototype.$once=function(e,n){var i=this;function a(){i.$off(e,a),n.apply(i,arguments)}return a.fn=n,i.$on(e,a),i},e.prototype.$off=function(e,n){var i=this;if(!arguments.length)return i._events=Object.create(null),i;if(r(e)){for(var a=0,l=e.length;a<l;a++)i.$off(e[a],n);return i}var t,d=i._events[e];if(!d)return i;if(!n)return i._events[e]=null,i;for(var s=d.length;s--;)if((t=d[s])===n||t.fn===n){d.splice(s,1);break}return i},e.prototype.$emit=function(e){var n=this,i=n._events[e];if(i){i=i.length>1?N(i):i;for(var a=N(arguments,1),r='event handler for "'.concat(e,'"'),l=0,t=i.length;l<t;l++)ci(i[l],n,a,n,r)}return n}}(qa),function(e){e.prototype._update=function(e,n){var i=this,a=i.$el,r=i._vnode,l=aa(i);i._vnode=e,i.$el=r?i.__patch__(r,e):i.__patch__(i.$el,e,n,!1),l(),a&&(a.__vue__=null),i.$el&&(i.$el.__vue__=i);for(var t=i;t&&t.$vnode&&t.$parent&&t.$vnode===t.$parent._vnode;)t.$parent.$el=t.$el,t=t.$parent},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){ta(e,"beforeDestroy"),e._isBeingDestroyed=!0;var n=e.$parent;!n||n._isBeingDestroyed||e.$options.abstract||z(n.$children,e),e._scope.stop(),e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),ta(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(qa),function(e){Un(e.prototype),e.prototype.$nextTick=function(e){return Bi(e,this)},e.prototype._render=function(){var e=this,n=e.$options,i=n.render,a=n._parentVnode;a&&e._isMounted&&(e.$scopedSlots=Xn(e.$parent,a.data.scopedSlots,e.$slots,e.$scopedSlots),e._slotsProxy&&ai(e._slotsProxy,e.$scopedSlots)),e.$vnode=a;var l,t=oe,d=mi;try{ye(e),mi=e,l=i.call(e._renderProxy,e.$createElement)}catch(n){bi(n,e,"render"),l=e._vnode}finally{mi=d,ye(t)}return r(l)&&1===l.length&&(l=l[0]),l instanceof be||(l=ce()),l.parent=a,l}}(qa);var rr=[String,RegExp,Array],lr={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:rr,exclude:rr,max:[String,Number]},methods:{cacheVNode:function(){var e=this.cache,n=this.keys,i=this.vnodeToCache,a=this.keyToCache;if(i){var r=i.tag,l=i.componentInstance,t=i.componentOptions;e[a]={name:er(t),tag:r,componentInstance:l},n.push(a),this.max&&n.length>parseInt(this.max)&&ar(e,n[0],n,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)ar(this.cache,e,this.keys)},mounted:function(){var e=this;this.cacheVNode(),this.$watch("include",(function(n){ir(e,(function(e){return nr(n,e)}))})),this.$watch("exclude",(function(n){ir(e,(function(e){return!nr(n,e)}))}))},updated:function(){this.cacheVNode()},render:function(){var e=this.$slots.default,n=oi(e),i=n&&n.componentOptions;if(i){var a=er(i),r=this.include,l=this.exclude;if(r&&(!a||!nr(r,a))||l&&a&&nr(l,a))return n;var t=this.cache,d=this.keys,s=null==n.key?i.Ctor.cid+(i.tag?"::".concat(i.tag):""):n.key;t[s]?(n.componentInstance=t[s].componentInstance,z(d,s),d.push(s)):(this.vnodeToCache=n,this.keyToCache=s),n.data.keepAlive=!0}return n||e&&e[0]}}};!function(e){var n={get:function(){return x}};Object.defineProperty(e,"config",n),e.util={warn:Ra,extend:O,mergeOptions:Ea,defineReactive:De},e.set=Ie,e.delete=Ee,e.nextTick=Bi,e.observable=function(e){return Oe(e),e},e.options=Object.create(null),_.forEach((function(n){e.options[n+"s"]=Object.create(null)})),e.options._base=e,O(e.options.components,lr),function(e){e.use=function(e){var n=this._installedPlugins||(this._installedPlugins=[]);if(n.indexOf(e)>-1)return this;var i=N(arguments,1);return i.unshift(this),m(e.install)?e.install.apply(e,i):m(e)&&e.apply(null,i),n.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=Ea(this.options,e),this}}(e),Qa(e),function(e){_.forEach((function(n){e[n]=function(e,i){return i?("component"===n&&k(i)&&(i.name=i.name||e,i=this.options._base.extend(i)),"directive"===n&&m(i)&&(i={bind:i,update:i}),this.options[n+"s"][e]=i,i):this.options[n+"s"][e]}}))}(e)}(qa),Object.defineProperty(qa.prototype,"$isServer",{get:te}),Object.defineProperty(qa.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(qa,"FunctionalRenderContext",{value:ha}),qa.version=ji;var tr=S("style,class"),dr=S("input,textarea,option,select,progress"),sr=S("contenteditable,draggable,spellcheck"),mr=S("events,caret,typing,plaintext-only"),ur=S("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),or="http://www.w3.org/1999/xlink",kr=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},yr=function(e){return kr(e)?e.slice(6,e.length):""},br=function(e){return null==e||!1===e};function cr(e){for(var n=e.data,i=e,a=e;t(a.componentInstance);)(a=a.componentInstance._vnode)&&a.data&&(n=gr(a.data,n));for(;t(i=i.parent);)i&&i.data&&(n=gr(n,i.data));return function(e,n){if(t(e)||t(n))return pr(e,Hr(n));return""}(n.staticClass,n.class)}function gr(e,n){return{staticClass:pr(e.staticClass,n.staticClass),class:t(e.class)?[e.class,n.class]:n.class}}function pr(e,n){return e?n?e+" "+n:e:n||""}function Hr(e){return Array.isArray(e)?function(e){for(var n,i="",a=0,r=e.length;a<r;a++)t(n=Hr(e[a]))&&""!==n&&(i&&(i+=" "),i+=n);return i}(e):u(e)?function(e){var n="";for(var i in e)e[i]&&(n&&(n+=" "),n+=i);return n}(e):"string"==typeof e?e:""}var Sr={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},hr=S("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),zr=S("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),vr=function(e){return hr(e)||zr(e)};var Kr=Object.create(null);var fr=S("text,number,password,search,email,tel,url");var Ar=Object.freeze({__proto__:null,createElement:function(e,n){var i=document.createElement(e);return"select"!==e||n.data&&n.data.attrs&&void 0!==n.data.attrs.multiple&&i.setAttribute("multiple","multiple"),i},createElementNS:function(e,n){return document.createElementNS(Sr[e],n)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,n,i){e.insertBefore(n,i)},removeChild:function(e,n){e.removeChild(n)},appendChild:function(e,n){e.appendChild(n)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,n){e.textContent=n},setStyleScope:function(e,n){e.setAttribute(n,"")}}),Tr={create:function(e,n){Br(n)},update:function(e,n){e.data.ref!==n.data.ref&&(Br(e,!0),Br(n))},destroy:function(e){Br(e,!0)}};function Br(e,n){var i=e.data.ref;if(t(i)){var a=e.context,l=e.componentInstance||e.elm,d=n?null:l,s=n?void 0:l;if(m(i))ci(i,a,[d],a,"template ref function");else{var u=e.data.refInFor,o="string"==typeof i||"number"==typeof i,k=we(i),y=a.$refs;if(o||k)if(u){var b=o?y[i]:i.value;n?r(b)&&z(b,l):r(b)?b.includes(l)||b.push(l):o?(y[i]=[l],Rr(a,i,y[i])):i.value=[l]}else if(o){if(n&&y[i]!==l)return;y[i]=s,Rr(a,i,d)}else if(k){if(n&&i.value!==l)return;i.value=d}else 0}}}function Rr(e,n,i){var a=e._setupState;a&&K(a,n)&&(we(a[n])?a[n].value=i:a[n]=i)}var Yr=new be("",{},[]),Pr=["create","activate","update","remove","destroy"];function Nr(e,n){return e.key===n.key&&e.asyncFactory===n.asyncFactory&&(e.tag===n.tag&&e.isComment===n.isComment&&t(e.data)===t(n.data)&&function(e,n){if("input"!==e.tag)return!0;var i,a=t(i=e.data)&&t(i=i.attrs)&&i.type,r=t(i=n.data)&&t(i=i.attrs)&&i.type;return a===r||fr(a)&&fr(r)}(e,n)||d(e.isAsyncPlaceholder)&&l(n.asyncFactory.error))}function Or(e,n,i){var a,r,l={};for(a=n;a<=i;++a)t(r=e[a].key)&&(l[r]=a);return l}var Dr={create:Ir,update:Ir,destroy:function(e){Ir(e,Yr)}};function Ir(e,n){(e.data.directives||n.data.directives)&&function(e,n){var i,a,r,l=e===Yr,t=n===Yr,d=Zr(e.data.directives,e.context),s=Zr(n.data.directives,n.context),m=[],u=[];for(i in s)a=d[i],r=s[i],a?(r.oldValue=a.value,r.oldArg=a.arg,Cr(r,"update",n,e),r.def&&r.def.componentUpdated&&u.push(r)):(Cr(r,"bind",n,e),r.def&&r.def.inserted&&m.push(r));if(m.length){var o=function(){for(var i=0;i<m.length;i++)Cr(m[i],"inserted",n,e)};l?Yn(n,"insert",o):o()}u.length&&Yn(n,"postpatch",(function(){for(var i=0;i<u.length;i++)Cr(u[i],"componentUpdated",n,e)}));if(!l)for(i in d)s[i]||Cr(d[i],"unbind",e,e,t)}(e,n)}var Er=Object.create(null);function Zr(e,n){var i,a,r=Object.create(null);if(!e)return r;for(i=0;i<e.length;i++){if((a=e[i]).modifiers||(a.modifiers=Er),r[Gr(a)]=a,n._setupState&&n._setupState.__sfc){var l=a.def||Za(n,"_setupState","v-"+a.name);a.def="function"==typeof l?{bind:l,update:l}:l}a.def=a.def||Za(n.$options,"directives",a.name)}return r}function Gr(e){return e.rawName||"".concat(e.name,".").concat(Object.keys(e.modifiers||{}).join("."))}function Cr(e,n,i,a,r){var l=e.def&&e.def[n];if(l)try{l(i.elm,e,i,a,r)}catch(a){bi(a,i.context,"directive ".concat(e.name," ").concat(n," hook"))}}var Vr=[Tr,Dr];function Mr(e,n){var i=n.componentOptions;if(!(t(i)&&!1===i.Ctor.options.inheritAttrs||l(e.data.attrs)&&l(n.data.attrs))){var a,r,s=n.elm,m=e.data.attrs||{},u=n.data.attrs||{};for(a in(t(u.__ob__)||d(u._v_attr_proxy))&&(u=n.data.attrs=O({},u)),u)r=u[a],m[a]!==r&&_r(s,a,r,n.data.pre);for(a in(X||Q)&&u.value!==m.value&&_r(s,"value",u.value),m)l(u[a])&&(kr(a)?s.removeAttributeNS(or,yr(a)):sr(a)||s.removeAttribute(a))}}function _r(e,n,i,a){a||e.tagName.indexOf("-")>-1?Fr(e,n,i):ur(n)?br(i)?e.removeAttribute(n):(i="allowfullscreen"===n&&"EMBED"===e.tagName?"true":n,e.setAttribute(n,i)):sr(n)?e.setAttribute(n,function(e,n){return br(n)||"false"===n?"false":"contenteditable"===e&&mr(n)?n:"true"}(n,i)):kr(n)?br(i)?e.removeAttributeNS(or,yr(n)):e.setAttributeNS(or,n,i):Fr(e,n,i)}function Fr(e,n,i){if(br(i))e.removeAttribute(n);else{if(X&&!q&&"TEXTAREA"===e.tagName&&"placeholder"===n&&""!==i&&!e.__ieph){var a=function(n){n.stopImmediatePropagation(),e.removeEventListener("input",a)};e.addEventListener("input",a),e.__ieph=!0}e.setAttribute(n,i)}}var xr={create:Mr,update:Mr};function Lr(e,n){var i=n.elm,a=n.data,r=e.data;if(!(l(a.staticClass)&&l(a.class)&&(l(r)||l(r.staticClass)&&l(r.class)))){var d=cr(n),s=i._transitionClasses;t(s)&&(d=pr(d,Hr(s))),d!==i._prevClass&&(i.setAttribute("class",d),i._prevClass=d)}}var jr,wr={create:Lr,update:Lr};function Ur(e,n,i){var a=jr;return function r(){var l=n.apply(null,arguments);null!==l&&Wr(e,r,i,a)}}var $r=Si&&!(ie&&Number(ie[1])<=53);function Jr(e,n,i,a){if($r){var r=ya,l=n;n=l._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=r||e.timeStamp<=0||e.target.ownerDocument!==document)return l.apply(this,arguments)}}jr.addEventListener(e,n,re?{capture:i,passive:a}:i)}function Wr(e,n,i,a){(a||jr).removeEventListener(e,n._wrapper||n,i)}function Xr(e,n){if(!l(e.data.on)||!l(n.data.on)){var i=n.data.on||{},a=e.data.on||{};jr=n.elm||e.elm,function(e){if(t(e.__r)){var n=X?"change":"input";e[n]=[].concat(e.__r,e[n]||[]),delete e.__r}t(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(i),Rn(i,a,Jr,Wr,Ur,n.context),jr=void 0}}var qr,Qr={create:Xr,update:Xr,destroy:function(e){return Xr(e,Yr)}};function el(e,n){if(!l(e.data.domProps)||!l(n.data.domProps)){var i,a,r=n.elm,s=e.data.domProps||{},m=n.data.domProps||{};for(i in(t(m.__ob__)||d(m._v_attr_proxy))&&(m=n.data.domProps=O({},m)),s)i in m||(r[i]="");for(i in m){if(a=m[i],"textContent"===i||"innerHTML"===i){if(n.children&&(n.children.length=0),a===s[i])continue;1===r.childNodes.length&&r.removeChild(r.childNodes[0])}if("value"===i&&"PROGRESS"!==r.tagName){r._value=a;var u=l(a)?"":String(a);nl(r,u)&&(r.value=u)}else if("innerHTML"===i&&zr(r.tagName)&&l(r.innerHTML)){(qr=qr||document.createElement("div")).innerHTML="<svg>".concat(a,"</svg>");for(var o=qr.firstChild;r.firstChild;)r.removeChild(r.firstChild);for(;o.firstChild;)r.appendChild(o.firstChild)}else if(a!==s[i])try{r[i]=a}catch(e){}}}}function nl(e,n){return!e.composing&&("OPTION"===e.tagName||function(e,n){var i=!0;try{i=document.activeElement!==e}catch(e){}return i&&e.value!==n}(e,n)||function(e,n){var i=e.value,a=e._vModifiers;if(t(a)){if(a.number)return H(i)!==H(n);if(a.trim)return i.trim()!==n.trim()}return i!==n}(e,n))}var il={create:el,update:el},al=f((function(e){var n={},i=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var a=e.split(i);a.length>1&&(n[a[0].trim()]=a[1].trim())}})),n}));function rl(e){var n=ll(e.style);return e.staticStyle?O(e.staticStyle,n):n}function ll(e){return Array.isArray(e)?D(e):"string"==typeof e?al(e):e}var tl,dl=/^--/,sl=/\s*!important$/,ml=function(e,n,i){if(dl.test(n))e.style.setProperty(n,i);else if(sl.test(i))e.style.setProperty(Y(n),i.replace(sl,""),"important");else{var a=ol(n);if(Array.isArray(i))for(var r=0,l=i.length;r<l;r++)e.style[a]=i[r];else e.style[a]=i}},ul=["Webkit","Moz","ms"],ol=f((function(e){if(tl=tl||document.createElement("div").style,"filter"!==(e=T(e))&&e in tl)return e;for(var n=e.charAt(0).toUpperCase()+e.slice(1),i=0;i<ul.length;i++){var a=ul[i]+n;if(a in tl)return a}}));function kl(e,n){var i=n.data,a=e.data;if(!(l(i.staticStyle)&&l(i.style)&&l(a.staticStyle)&&l(a.style))){var r,d,s=n.elm,m=a.staticStyle,u=a.normalizedStyle||a.style||{},o=m||u,k=ll(n.data.style)||{};n.data.normalizedStyle=t(k.__ob__)?O({},k):k;var y=function(e,n){var i,a={};if(n)for(var r=e;r.componentInstance;)(r=r.componentInstance._vnode)&&r.data&&(i=rl(r.data))&&O(a,i);(i=rl(e.data))&&O(a,i);for(var l=e;l=l.parent;)l.data&&(i=rl(l.data))&&O(a,i);return a}(n,!0);for(d in o)l(y[d])&&ml(s,d,"");for(d in y)r=y[d],ml(s,d,null==r?"":r)}}var yl={create:kl,update:kl},bl=/\s+/;function cl(e,n){if(n&&(n=n.trim()))if(e.classList)n.indexOf(" ")>-1?n.split(bl).forEach((function(n){return e.classList.add(n)})):e.classList.add(n);else{var i=" ".concat(e.getAttribute("class")||""," ");i.indexOf(" "+n+" ")<0&&e.setAttribute("class",(i+n).trim())}}function gl(e,n){if(n&&(n=n.trim()))if(e.classList)n.indexOf(" ")>-1?n.split(bl).forEach((function(n){return e.classList.remove(n)})):e.classList.remove(n),e.classList.length||e.removeAttribute("class");else{for(var i=" ".concat(e.getAttribute("class")||""," "),a=" "+n+" ";i.indexOf(a)>=0;)i=i.replace(a," ");(i=i.trim())?e.setAttribute("class",i):e.removeAttribute("class")}}function pl(e){if(e){if("object"==typeof e){var n={};return!1!==e.css&&O(n,Hl(e.name||"v")),O(n,e),n}return"string"==typeof e?Hl(e):void 0}}var Hl=f((function(e){return{enterClass:"".concat(e,"-enter"),enterToClass:"".concat(e,"-enter-to"),enterActiveClass:"".concat(e,"-enter-active"),leaveClass:"".concat(e,"-leave"),leaveToClass:"".concat(e,"-leave-to"),leaveActiveClass:"".concat(e,"-leave-active")}})),Sl=J&&!q,hl="transition",zl="transitionend",vl="animation",Kl="animationend";Sl&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(hl="WebkitTransition",zl="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(vl="WebkitAnimation",Kl="webkitAnimationEnd"));var fl=J?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function Al(e){fl((function(){fl(e)}))}function Tl(e,n){var i=e._transitionClasses||(e._transitionClasses=[]);i.indexOf(n)<0&&(i.push(n),cl(e,n))}function Bl(e,n){e._transitionClasses&&z(e._transitionClasses,n),gl(e,n)}function Rl(e,n,i){var a=Pl(e,n),r=a.type,l=a.timeout,t=a.propCount;if(!r)return i();var d="transition"===r?zl:Kl,s=0,m=function(){e.removeEventListener(d,u),i()},u=function(n){n.target===e&&++s>=t&&m()};setTimeout((function(){s<t&&m()}),l+1),e.addEventListener(d,u)}var Yl=/\b(transform|all)(,|$)/;function Pl(e,n){var i,a=window.getComputedStyle(e),r=(a[hl+"Delay"]||"").split(", "),l=(a[hl+"Duration"]||"").split(", "),t=Nl(r,l),d=(a[vl+"Delay"]||"").split(", "),s=(a[vl+"Duration"]||"").split(", "),m=Nl(d,s),u=0,o=0;return"transition"===n?t>0&&(i="transition",u=t,o=l.length):"animation"===n?m>0&&(i="animation",u=m,o=s.length):o=(i=(u=Math.max(t,m))>0?t>m?"transition":"animation":null)?"transition"===i?l.length:s.length:0,{type:i,timeout:u,propCount:o,hasTransform:"transition"===i&&Yl.test(a[hl+"Property"])}}function Nl(e,n){for(;e.length<n.length;)e=e.concat(e);return Math.max.apply(null,n.map((function(n,i){return Ol(n)+Ol(e[i])})))}function Ol(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function Dl(e,n){var i=e.elm;t(i._leaveCb)&&(i._leaveCb.cancelled=!0,i._leaveCb());var a=pl(e.data.transition);if(!l(a)&&!t(i._enterCb)&&1===i.nodeType){for(var r=a.css,d=a.type,s=a.enterClass,o=a.enterToClass,k=a.enterActiveClass,y=a.appearClass,b=a.appearToClass,c=a.appearActiveClass,g=a.beforeEnter,p=a.enter,S=a.afterEnter,h=a.enterCancelled,z=a.beforeAppear,v=a.appear,K=a.afterAppear,f=a.appearCancelled,A=a.duration,T=ia,B=ia.$vnode;B&&B.parent;)T=B.context,B=B.parent;var R=!T._isMounted||!e.isRootInsert;if(!R||v||""===v){var Y=R&&y?y:s,P=R&&c?c:k,N=R&&b?b:o,O=R&&z||g,D=R&&m(v)?v:p,I=R&&K||S,E=R&&f||h,Z=H(u(A)?A.enter:A);0;var G=!1!==r&&!q,C=Zl(D),M=i._enterCb=V((function(){G&&(Bl(i,N),Bl(i,P)),M.cancelled?(G&&Bl(i,Y),E&&E(i)):I&&I(i),i._enterCb=null}));e.data.show||Yn(e,"insert",(function(){var n=i.parentNode,a=n&&n._pending&&n._pending[e.key];a&&a.tag===e.tag&&a.elm._leaveCb&&a.elm._leaveCb(),D&&D(i,M)})),O&&O(i),G&&(Tl(i,Y),Tl(i,P),Al((function(){Bl(i,Y),M.cancelled||(Tl(i,N),C||(El(Z)?setTimeout(M,Z):Rl(i,d,M)))}))),e.data.show&&(n&&n(),D&&D(i,M)),G||C||M()}}}function Il(e,n){var i=e.elm;t(i._enterCb)&&(i._enterCb.cancelled=!0,i._enterCb());var a=pl(e.data.transition);if(l(a)||1!==i.nodeType)return n();if(!t(i._leaveCb)){var r=a.css,d=a.type,s=a.leaveClass,m=a.leaveToClass,o=a.leaveActiveClass,k=a.beforeLeave,y=a.leave,b=a.afterLeave,c=a.leaveCancelled,g=a.delayLeave,p=a.duration,S=!1!==r&&!q,h=Zl(y),z=H(u(p)?p.leave:p);0;var v=i._leaveCb=V((function(){i.parentNode&&i.parentNode._pending&&(i.parentNode._pending[e.key]=null),S&&(Bl(i,m),Bl(i,o)),v.cancelled?(S&&Bl(i,s),c&&c(i)):(n(),b&&b(i)),i._leaveCb=null}));g?g(K):K()}function K(){v.cancelled||(!e.data.show&&i.parentNode&&((i.parentNode._pending||(i.parentNode._pending={}))[e.key]=e),k&&k(i),S&&(Tl(i,s),Tl(i,o),Al((function(){Bl(i,s),v.cancelled||(Tl(i,m),h||(El(z)?setTimeout(v,z):Rl(i,d,v)))}))),y&&y(i,v),S||h||v())}}function El(e){return"number"==typeof e&&!isNaN(e)}function Zl(e){if(l(e))return!1;var n=e.fns;return t(n)?Zl(Array.isArray(n)?n[0]:n):(e._length||e.length)>1}function Gl(e,n){!0!==n.data.show&&Dl(n)}var Cl=function(e){var n,i,a={},m=e.modules,u=e.nodeOps;for(n=0;n<Pr.length;++n)for(a[Pr[n]]=[],i=0;i<m.length;++i)t(m[i][Pr[n]])&&a[Pr[n]].push(m[i][Pr[n]]);function o(e){var n=u.parentNode(e);t(n)&&u.removeChild(n,e)}function k(e,n,i,r,l,s,m){if(t(e.elm)&&t(s)&&(e=s[m]=pe(e)),e.isRootInsert=!l,!function(e,n,i,r){var l=e.data;if(t(l)){var s=t(e.componentInstance)&&l.keepAlive;if(t(l=l.hook)&&t(l=l.init)&&l(e,!1),t(e.componentInstance))return y(e,n),b(i,e.elm,r),d(s)&&function(e,n,i,r){var l,d=e;for(;d.componentInstance;)if(d=d.componentInstance._vnode,t(l=d.data)&&t(l=l.transition)){for(l=0;l<a.activate.length;++l)a.activate[l](Yr,d);n.push(d);break}b(i,e.elm,r)}(e,n,i,r),!0}}(e,n,i,r)){var o=e.data,k=e.children,g=e.tag;t(g)?(e.elm=e.ns?u.createElementNS(e.ns,g):u.createElement(g,e),H(e),c(e,k,n),t(o)&&p(e,n),b(i,e.elm,r)):d(e.isComment)?(e.elm=u.createComment(e.text),b(i,e.elm,r)):(e.elm=u.createTextNode(e.text),b(i,e.elm,r))}}function y(e,n){t(e.data.pendingInsert)&&(n.push.apply(n,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,g(e)?(p(e,n),H(e)):(Br(e),n.push(e))}function b(e,n,i){t(e)&&(t(i)?u.parentNode(i)===e&&u.insertBefore(e,n,i):u.appendChild(e,n))}function c(e,n,i){if(r(n)){0;for(var a=0;a<n.length;++a)k(n[a],i,e.elm,null,!0,n,a)}else s(e.text)&&u.appendChild(e.elm,u.createTextNode(String(e.text)))}function g(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return t(e.tag)}function p(e,i){for(var r=0;r<a.create.length;++r)a.create[r](Yr,e);t(n=e.data.hook)&&(t(n.create)&&n.create(Yr,e),t(n.insert)&&i.push(e))}function H(e){var n;if(t(n=e.fnScopeId))u.setStyleScope(e.elm,n);else for(var i=e;i;)t(n=i.context)&&t(n=n.$options._scopeId)&&u.setStyleScope(e.elm,n),i=i.parent;t(n=ia)&&n!==e.context&&n!==e.fnContext&&t(n=n.$options._scopeId)&&u.setStyleScope(e.elm,n)}function h(e,n,i,a,r,l){for(;a<=r;++a)k(i[a],l,e,n,!1,i,a)}function z(e){var n,i,r=e.data;if(t(r))for(t(n=r.hook)&&t(n=n.destroy)&&n(e),n=0;n<a.destroy.length;++n)a.destroy[n](e);if(t(n=e.children))for(i=0;i<e.children.length;++i)z(e.children[i])}function v(e,n,i){for(;n<=i;++n){var a=e[n];t(a)&&(t(a.tag)?(K(a),z(a)):o(a.elm))}}function K(e,n){if(t(n)||t(e.data)){var i,r=a.remove.length+1;for(t(n)?n.listeners+=r:n=function(e,n){function i(){0==--i.listeners&&o(e)}return i.listeners=n,i}(e.elm,r),t(i=e.componentInstance)&&t(i=i._vnode)&&t(i.data)&&K(i,n),i=0;i<a.remove.length;++i)a.remove[i](e,n);t(i=e.data.hook)&&t(i=i.remove)?i(e,n):n()}else o(e.elm)}function f(e,n,i,a){for(var r=i;r<a;r++){var l=n[r];if(t(l)&&Nr(e,l))return r}}function A(e,n,i,r,s,m){if(e!==n){t(n.elm)&&t(r)&&(n=r[s]=pe(n));var o=n.elm=e.elm;if(d(e.isAsyncPlaceholder))t(n.asyncFactory.resolved)?R(e.elm,n,i):n.isAsyncPlaceholder=!0;else if(d(n.isStatic)&&d(e.isStatic)&&n.key===e.key&&(d(n.isCloned)||d(n.isOnce)))n.componentInstance=e.componentInstance;else{var y,b=n.data;t(b)&&t(y=b.hook)&&t(y=y.prepatch)&&y(e,n);var c=e.children,p=n.children;if(t(b)&&g(n)){for(y=0;y<a.update.length;++y)a.update[y](e,n);t(y=b.hook)&&t(y=y.update)&&y(e,n)}l(n.text)?t(c)&&t(p)?c!==p&&function(e,n,i,a,r){var d,s,m,o=0,y=0,b=n.length-1,c=n[0],g=n[b],p=i.length-1,H=i[0],S=i[p],z=!r;for(0;o<=b&&y<=p;)l(c)?c=n[++o]:l(g)?g=n[--b]:Nr(c,H)?(A(c,H,a,i,y),c=n[++o],H=i[++y]):Nr(g,S)?(A(g,S,a,i,p),g=n[--b],S=i[--p]):Nr(c,S)?(A(c,S,a,i,p),z&&u.insertBefore(e,c.elm,u.nextSibling(g.elm)),c=n[++o],S=i[--p]):Nr(g,H)?(A(g,H,a,i,y),z&&u.insertBefore(e,g.elm,c.elm),g=n[--b],H=i[++y]):(l(d)&&(d=Or(n,o,b)),l(s=t(H.key)?d[H.key]:f(H,n,o,b))?k(H,a,e,c.elm,!1,i,y):Nr(m=n[s],H)?(A(m,H,a,i,y),n[s]=void 0,z&&u.insertBefore(e,m.elm,c.elm)):k(H,a,e,c.elm,!1,i,y),H=i[++y]);o>b?h(e,l(i[p+1])?null:i[p+1].elm,i,y,p,a):y>p&&v(n,o,b)}(o,c,p,i,m):t(p)?(t(e.text)&&u.setTextContent(o,""),h(o,null,p,0,p.length-1,i)):t(c)?v(c,0,c.length-1):t(e.text)&&u.setTextContent(o,""):e.text!==n.text&&u.setTextContent(o,n.text),t(b)&&t(y=b.hook)&&t(y=y.postpatch)&&y(e,n)}}}function T(e,n,i){if(d(i)&&t(e.parent))e.parent.data.pendingInsert=n;else for(var a=0;a<n.length;++a)n[a].data.hook.insert(n[a])}var B=S("attrs,class,staticClass,staticStyle,key");function R(e,n,i,a){var r,l=n.tag,s=n.data,m=n.children;if(a=a||s&&s.pre,n.elm=e,d(n.isComment)&&t(n.asyncFactory))return n.isAsyncPlaceholder=!0,!0;if(t(s)&&(t(r=s.hook)&&t(r=r.init)&&r(n,!0),t(r=n.componentInstance)))return y(n,i),!0;if(t(l)){if(t(m))if(e.hasChildNodes())if(t(r=s)&&t(r=r.domProps)&&t(r=r.innerHTML)){if(r!==e.innerHTML)return!1}else{for(var u=!0,o=e.firstChild,k=0;k<m.length;k++){if(!o||!R(o,m[k],i,a)){u=!1;break}o=o.nextSibling}if(!u||o)return!1}else c(n,m,i);if(t(s)){var b=!1;for(var g in s)if(!B(g)){b=!0,p(n,i);break}!b&&s.class&&$i(s.class)}}else e.data!==n.text&&(e.data=n.text);return!0}return function(e,n,i,r){if(!l(n)){var s,m=!1,o=[];if(l(e))m=!0,k(n,o);else{var y=t(e.nodeType);if(!y&&Nr(e,n))A(e,n,o,null,null,r);else{if(y){if(1===e.nodeType&&e.hasAttribute("data-server-rendered")&&(e.removeAttribute("data-server-rendered"),i=!0),d(i)&&R(e,n,o))return T(n,o,!0),e;s=e,e=new be(u.tagName(s).toLowerCase(),{},[],void 0,s)}var b=e.elm,c=u.parentNode(b);if(k(n,o,b._leaveCb?null:c,u.nextSibling(b)),t(n.parent))for(var p=n.parent,H=g(n);p;){for(var S=0;S<a.destroy.length;++S)a.destroy[S](p);if(p.elm=n.elm,H){for(var h=0;h<a.create.length;++h)a.create[h](Yr,p);var K=p.data.hook.insert;if(K.merged)for(var f=K.fns.slice(1),B=0;B<f.length;B++)f[B]()}else Br(p);p=p.parent}t(c)?v([e],0,0):t(e.tag)&&z(e)}}return T(n,o,m),n.elm}t(e)&&z(e)}}({nodeOps:Ar,modules:[xr,wr,Qr,il,yl,J?{create:Gl,activate:Gl,remove:function(e,n){!0!==e.data.show?Il(e,n):n()}}:{}].concat(Vr)});q&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&wl(e,"input")}));var Vl={inserted:function(e,n,i,a){"select"===i.tag?(a.elm&&!a.elm._vOptions?Yn(i,"postpatch",(function(){Vl.componentUpdated(e,n,i)})):Ml(e,n,i.context),e._vOptions=[].map.call(e.options,xl)):("textarea"===i.tag||fr(e.type))&&(e._vModifiers=n.modifiers,n.modifiers.lazy||(e.addEventListener("compositionstart",Ll),e.addEventListener("compositionend",jl),e.addEventListener("change",jl),q&&(e.vmodel=!0)))},componentUpdated:function(e,n,i){if("select"===i.tag){Ml(e,n,i.context);var a=e._vOptions,r=e._vOptions=[].map.call(e.options,xl);if(r.some((function(e,n){return!G(e,a[n])})))(e.multiple?n.value.some((function(e){return Fl(e,r)})):n.value!==n.oldValue&&Fl(n.value,r))&&wl(e,"change")}}};function Ml(e,n,i){_l(e,n,i),(X||Q)&&setTimeout((function(){_l(e,n,i)}),0)}function _l(e,n,i){var a=n.value,r=e.multiple;if(!r||Array.isArray(a)){for(var l,t,d=0,s=e.options.length;d<s;d++)if(t=e.options[d],r)l=C(a,xl(t))>-1,t.selected!==l&&(t.selected=l);else if(G(xl(t),a))return void(e.selectedIndex!==d&&(e.selectedIndex=d));r||(e.selectedIndex=-1)}}function Fl(e,n){return n.every((function(n){return!G(n,e)}))}function xl(e){return"_value"in e?e._value:e.value}function Ll(e){e.target.composing=!0}function jl(e){e.target.composing&&(e.target.composing=!1,wl(e.target,"input"))}function wl(e,n){var i=document.createEvent("HTMLEvents");i.initEvent(n,!0,!0),e.dispatchEvent(i)}function Ul(e){return!e.componentInstance||e.data&&e.data.transition?e:Ul(e.componentInstance._vnode)}var $l={model:Vl,show:{bind:function(e,n,i){var a=n.value,r=(i=Ul(i)).data&&i.data.transition,l=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;a&&r?(i.data.show=!0,Dl(i,(function(){e.style.display=l}))):e.style.display=a?l:"none"},update:function(e,n,i){var a=n.value;!a!=!n.oldValue&&((i=Ul(i)).data&&i.data.transition?(i.data.show=!0,a?Dl(i,(function(){e.style.display=e.__vOriginalDisplay})):Il(i,(function(){e.style.display="none"}))):e.style.display=a?e.__vOriginalDisplay:"none")},unbind:function(e,n,i,a,r){r||(e.style.display=e.__vOriginalDisplay)}}},Jl={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function Wl(e){var n=e&&e.componentOptions;return n&&n.Ctor.options.abstract?Wl(oi(n.children)):e}function Xl(e){var n={},i=e.$options;for(var a in i.propsData)n[a]=e[a];var r=i._parentListeners;for(var a in r)n[T(a)]=r[a];return n}function ql(e,n){if(/\d-keep-alive$/.test(n.tag))return e("keep-alive",{props:n.componentOptions.propsData})}var Ql=function(e){return e.tag||Wn(e)},et=function(e){return"show"===e.name},nt={name:"transition",props:Jl,abstract:!0,render:function(e){var n=this,i=this.$slots.default;if(i&&(i=i.filter(Ql)).length){0;var a=this.mode;0;var r=i[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return r;var l=Wl(r);if(!l)return r;if(this._leaving)return ql(e,r);var t="__transition-".concat(this._uid,"-");l.key=null==l.key?l.isComment?t+"comment":t+l.tag:s(l.key)?0===String(l.key).indexOf(t)?l.key:t+l.key:l.key;var d=(l.data||(l.data={})).transition=Xl(this),m=this._vnode,u=Wl(m);if(l.data.directives&&l.data.directives.some(et)&&(l.data.show=!0),u&&u.data&&!function(e,n){return n.key===e.key&&n.tag===e.tag}(l,u)&&!Wn(u)&&(!u.componentInstance||!u.componentInstance._vnode.isComment)){var o=u.data.transition=O({},d);if("out-in"===a)return this._leaving=!0,Yn(o,"afterLeave",(function(){n._leaving=!1,n.$forceUpdate()})),ql(e,r);if("in-out"===a){if(Wn(l))return m;var k,y=function(){k()};Yn(d,"afterEnter",y),Yn(d,"enterCancelled",y),Yn(o,"delayLeave",(function(e){k=e}))}}return r}}},it=O({tag:String,moveClass:String},Jl);function at(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function rt(e){e.data.newPos=e.elm.getBoundingClientRect()}function lt(e){var n=e.data.pos,i=e.data.newPos,a=n.left-i.left,r=n.top-i.top;if(a||r){e.data.moved=!0;var l=e.elm.style;l.transform=l.WebkitTransform="translate(".concat(a,"px,").concat(r,"px)"),l.transitionDuration="0s"}}delete it.mode;var tt={Transition:nt,TransitionGroup:{props:it,beforeMount:function(){var e=this,n=this._update;this._update=function(i,a){var r=aa(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,r(),n.call(e,i,a)}},render:function(e){for(var n=this.tag||this.$vnode.data.tag||"span",i=Object.create(null),a=this.prevChildren=this.children,r=this.$slots.default||[],l=this.children=[],t=Xl(this),d=0;d<r.length;d++){if((u=r[d]).tag)if(null!=u.key&&0!==String(u.key).indexOf("__vlist"))l.push(u),i[u.key]=u,(u.data||(u.data={})).transition=t;else;}if(a){var s=[],m=[];for(d=0;d<a.length;d++){var u;(u=a[d]).data.transition=t,u.data.pos=u.elm.getBoundingClientRect(),i[u.key]?s.push(u):m.push(u)}this.kept=e(n,null,s),this.removed=m}return e(n,null,l)},updated:function(){var e=this.prevChildren,n=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,n)&&(e.forEach(at),e.forEach(rt),e.forEach(lt),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var i=e.elm,a=i.style;Tl(i,n),a.transform=a.WebkitTransform=a.transitionDuration="",i.addEventListener(zl,i._moveCb=function e(a){a&&a.target!==i||a&&!/transform$/.test(a.propertyName)||(i.removeEventListener(zl,e),i._moveCb=null,Bl(i,n))})}})))},methods:{hasMove:function(e,n){if(!Sl)return!1;if(this._hasMove)return this._hasMove;var i=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){gl(i,e)})),cl(i,n),i.style.display="none",this.$el.appendChild(i);var a=Pl(i);return this.$el.removeChild(i),this._hasMove=a.hasTransform}}}};qa.config.mustUseProp=function(e,n,i){return"value"===i&&dr(e)&&"button"!==n||"selected"===i&&"option"===e||"checked"===i&&"input"===e||"muted"===i&&"video"===e},qa.config.isReservedTag=vr,qa.config.isReservedAttr=tr,qa.config.getTagNamespace=function(e){return zr(e)?"svg":"math"===e?"math":void 0},qa.config.isUnknownElement=function(e){if(!J)return!0;if(vr(e))return!1;if(e=e.toLowerCase(),null!=Kr[e])return Kr[e];var n=document.createElement(e);return e.indexOf("-")>-1?Kr[e]=n.constructor===window.HTMLUnknownElement||n.constructor===window.HTMLElement:Kr[e]=/HTMLUnknownElement/.test(n.toString())},O(qa.options.directives,$l),O(qa.options.components,tt),qa.prototype.__patch__=J?Cl:I,qa.prototype.$mount=function(e,n){return function(e,n,i){var a;e.$el=n,e.$options.render||(e.$options.render=ce),ta(e,"beforeMount"),a=function(){e._update(e._render(),i)},new Xi(e,a,I,{before:function(){e._isMounted&&!e._isDestroyed&&ta(e,"beforeUpdate")}},!0),i=!1;var r=e._preWatchers;if(r)for(var l=0;l<r.length;l++)r[l].run();return null==e.$vnode&&(e._isMounted=!0,ta(e,"mounted")),e}(this,e=e&&J?function(e){if("string"==typeof e){var n=document.querySelector(e);return n||document.createElement("div")}return e}(e):void 0,n)},J&&setTimeout((function(){x.devtools&&de&&de.emit("init",qa)}),0)},function(e,n,i){"use strict";var a=function(e){return e&&e.Math===Math&&e};e.exports=a("object"==typeof globalThis&&globalThis)||a("object"==typeof window&&window)||a("object"==typeof self&&self)||a("object"==typeof global&&global)||a("object"==typeof this&&this)||function(){return this}()||Function("return this")()},function(e,n,i){"use strict";e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,n,i){"use strict";var a="object"==typeof document&&document.all;e.exports=void 0===a&&void 0!==a?function(e){return"function"==typeof e||e===a}:function(e){return"function"==typeof e}},function(e,n,i){"use strict";var a=i(10),r=String,l=TypeError;e.exports=function(e){if(a(e))return e;throw new l(r(e)+" is not an object")}},function(e,n,i){"use strict";var a=i(36),r=Function.prototype,l=r.call,t=a&&r.bind.bind(l,l);e.exports=a?t:function(e){return function(){return l.apply(e,arguments)}}},function(e,n,i){"use strict";var a=i(2);e.exports=!a((function(){return 7!==Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(e,n,i){"use strict";var a=i(36),r=Function.prototype.call;e.exports=a?r.bind(r):function(){return r.apply(r,arguments)}},function(e,n,i){"use strict";var a=i(5),r=i(32),l=a({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,n){return l(r(e),n)}},function(e,n,i){"use strict";var a=i(3),r=i(47),l=TypeError;e.exports=function(e){if(a(e))return e;throw new l(r(e)+" is not a function")}},function(e,n,i){"use strict";var a=i(3);e.exports=function(e){return"object"==typeof e?null!==e:a(e)}},function(e,n,i){"use strict";var a=i(1),r=i(80).f,l=i(20),t=i(45),d=i(50),s=i(70),m=i(153);e.exports=function(e,n){var i,u,o,k,y,b=e.target,c=e.global,g=e.stat;if(i=c?a:g?a[b]||d(b,{}):a[b]&&a[b].prototype)for(u in n){if(k=n[u],o=e.dontCallGetSet?(y=r(i,u))&&y.value:i[u],!m(c?u:b+(g?".":"#")+u,e.forced)&&void 0!==o){if(typeof k==typeof o)continue;s(k,o)}(e.sham||o&&o.sham)&&l(k,"sham",!0),t(i,u,k,e)}}},function(e,n,i){"use strict";var a=i(7),r=i(4),l=i(35);e.exports=function(e,n,i){var t,d;r(e);try{if(!(t=l(e,"return"))){if("throw"===n)throw i;return i}t=a(t,e)}catch(e){d=!0,t=e}if("throw"===n)throw i;if(d)throw t;return r(t),i}},function(e,n){var i=Array.isArray;e.exports=i},function(e,n,i){var a=i(96),r="object"==typeof self&&self&&self.Object===Object&&self,l=a||r||Function("return this")();e.exports=l},function(e,n,i){"use strict";var a=i(1),r=i(86),l=i(8),t=i(74),d=i(84),s=i(83),m=a.Symbol,u=r("wks"),o=s?m.for||m:m&&m.withoutSetter||t;e.exports=function(e){return l(u,e)||(u[e]=d&&l(m,e)?m[e]:o("Symbol."+e)),u[e]}},function(e,n,i){"use strict";var a=i(11),r=i(1),l=i(131),t=i(4),d=i(3),s=i(66),m=i(120),u=i(155),o=i(2),k=i(8),y=i(15),b=i(92).IteratorPrototype,c=i(6),g=i(19),p=y("toStringTag"),H=TypeError,S=r.Iterator,h=g||!d(S)||S.prototype!==b||!o((function(){S({})})),z=function(){if(l(this,b),s(this)===b)throw new H("Abstract class Iterator not directly constructable")},v=function(e,n){c?m(b,e,{configurable:!0,get:function(){return n},set:function(n){if(t(this),this===b)throw new H("You can't redefine this property");k(this,e)?this[e]=n:u(this,e,n)}}):b[e]=n};k(b,p)||v(p,"Iterator"),!h&&k(b,"constructor")&&b.constructor!==Object||v("constructor",z),z.prototype=b,a({global:!0,constructor:!0,forced:h},{Iterator:z})},function(e,n,i){"use strict";var a=i(6),r=i(87),l=i(89),t=i(4),d=i(81),s=TypeError,m=Object.defineProperty,u=Object.getOwnPropertyDescriptor;n.f=a?l?function(e,n,i){if(t(e),n=d(n),t(i),"function"==typeof e&&"prototype"===n&&"value"in i&&"writable"in i&&!i.writable){var a=u(e,n);a&&a.writable&&(e[n]=i.value,i={configurable:"configurable"in i?i.configurable:a.configurable,enumerable:"enumerable"in i?i.enumerable:a.enumerable,writable:!1})}return m(e,n,i)}:m:function(e,n,i){if(t(e),n=d(n),t(i),r)try{return m(e,n,i)}catch(e){}if("get"in i||"set"in i)throw new s("Accessors not supported");return"value"in i&&(e[n]=i.value),e}},function(e,n,i){var a=i(193),r=i(196);e.exports=function(e,n){var i=r(e,n);return a(i)?i:void 0}},function(e,n,i){"use strict";e.exports=!1},function(e,n,i){"use strict";var a=i(6),r=i(17),l=i(33);e.exports=a?function(e,n,i){return r.f(e,n,l(1,i))}:function(e,n,i){return e[n]=i,e}},function(e,n){e.exports=function(e){return null!=e&&"object"==typeof e}},function(e,n,i){"use strict";e.exports=function(e){return{iterator:e,next:e.next,done:!1}}},function(e,n,i){"use strict";var a=i(11),r=i(7),l=i(9),t=i(4),d=i(22),s=i(71),m=i(93),u=i(19),o=i(12),k=i(76),y=i(24),b=!u&&!k("filter",(function(){})),c=!u&&!b&&y("filter",TypeError),g=u||b||c,p=s((function(){for(var e,n,i=this.iterator,a=this.predicate,l=this.next;;){if(e=t(r(l,i)),this.done=!!e.done)return;if(n=e.value,m(i,a,[n,this.counter++],!0))return n}}));a({target:"Iterator",proto:!0,real:!0,forced:g},{filter:function(e){t(this);try{l(e)}catch(e){o(this,"throw",e)}return c?r(c,this,e):new p(d(this),{predicate:e})}})},function(e,n,i){"use strict";var a=i(1);e.exports=function(e,n){var i=a.Iterator,r=i&&i.prototype,l=r&&r[e],t=!1;if(l)try{l.call({next:function(){return{done:!0}},return:function(){t=!0}},-1)}catch(e){e instanceof n||(t=!1)}if(!t)return l}},function(e,n,i){"use strict";var a=i(5),r=a({}.toString),l=a("".slice);e.exports=function(e){return l(r(e),8,-1)}},function(e,n,i){var a=i(27),r=i(178),l=i(179),t=a?a.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":t&&t in Object(e)?r(e):l(e)}},function(e,n,i){var a=i(14).Symbol;e.exports=a},function(e,n,i){"use strict";function a(e,n,i,a,r,l,t,d){var s,m="function"==typeof e?e.options:e;if(n&&(m.render=n,m.staticRenderFns=i,m._compiled=!0),a&&(m.functional=!0),l&&(m._scopeId="data-v-"+l),t?(s=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),r&&r.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(t)},m._ssrRegister=s):r&&(s=d?function(){r.call(this,(m.functional?this.parent:this).$root.$options.shadowRoot)}:r),s)if(m.functional){m._injectStyles=s;var u=m.render;m.render=function(e,n){return s.call(n),u(e,n)}}else{var o=m.beforeCreate;m.beforeCreate=o?[].concat(o,s):[s]}return{exports:e,options:m}}i.d(n,"a",(function(){return a}))},function(e,n,i){"use strict";var a=i(130);e.exports=function(e){return a(e.length)}},function(e,n,i){"use strict";var a=i(11),r=i(7),l=i(9),t=i(4),d=i(22),s=i(71),m=i(93),u=i(12),o=i(76),k=i(24),y=i(19),b=!y&&!o("map",(function(){})),c=!y&&!b&&k("map",TypeError),g=y||b||c,p=s((function(){var e=this.iterator,n=t(r(this.next,e));if(!(this.done=!!n.done))return m(e,this.mapper,[n.value,this.counter++],!0)}));a({target:"Iterator",proto:!0,real:!0,forced:g},{map:function(e){t(this);try{l(e)}catch(e){u(this,"throw",e)}return c?r(c,this,e):new p(d(this),{mapper:e})}})},function(e,n,i){"use strict";var a=i(5);e.exports=a({}.isPrototypeOf)},function(e,n,i){"use strict";var a=i(46),r=Object;e.exports=function(e){return r(a(e))}},function(e,n,i){"use strict";e.exports=function(e,n){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:n}}},function(e,n,i){"use strict";var a=i(1),r=i(3),l=function(e){return r(e)?e:void 0};e.exports=function(e,n){return arguments.length<2?l(a[e]):a[e]&&a[e][n]}},function(e,n,i){"use strict";var a=i(9),r=i(48);e.exports=function(e,n){var i=e[n];return r(i)?void 0:a(i)}},function(e,n,i){"use strict";var a=i(2);e.exports=!a((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")}))},function(e,n,i){"use strict";var a=i(72),r=i(46);e.exports=function(e){return a(r(e))}},function(e,n,i){var a=i(183),r=i(184),l=i(185),t=i(186),d=i(187);function s(e){var n=-1,i=null==e?0:e.length;for(this.clear();++n<i;){var a=e[n];this.set(a[0],a[1])}}s.prototype.clear=a,s.prototype.delete=r,s.prototype.get=l,s.prototype.has=t,s.prototype.set=d,e.exports=s},function(e,n,i){var a=i(98);e.exports=function(e,n){for(var i=e.length;i--;)if(a(e[i][0],n))return i;return-1}},function(e,n,i){var a=i(18)(Object,"create");e.exports=a},function(e,n,i){var a=i(205);e.exports=function(e,n){var i=e.__data__;return a(n)?i["string"==typeof n?"string":"hash"]:i.map}},function(e,n,i){var a=i(61);e.exports=function(e){if("string"==typeof e||a(e))return e;var n=e+"";return"0"==n&&1/e==-1/0?"-0":n}},function(e,n,i){var a,r;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(r="function"==typeof(a=function(){var e,n,i={version:"0.2.0"},a=i.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function r(e,n,i){return e<n?n:e>i?i:e}function l(e){return 100*(-1+e)}i.configure=function(e){var n,i;for(n in e)void 0!==(i=e[n])&&e.hasOwnProperty(n)&&(a[n]=i);return this},i.status=null,i.set=function(e){var n=i.isStarted();e=r(e,a.minimum,1),i.status=1===e?null:e;var s=i.render(!n),m=s.querySelector(a.barSelector),u=a.speed,o=a.easing;return s.offsetWidth,t((function(n){""===a.positionUsing&&(a.positionUsing=i.getPositioningCSS()),d(m,function(e,n,i){var r;return(r="translate3d"===a.positionUsing?{transform:"translate3d("+l(e)+"%,0,0)"}:"translate"===a.positionUsing?{transform:"translate("+l(e)+"%,0)"}:{"margin-left":l(e)+"%"}).transition="all "+n+"ms "+i,r}(e,u,o)),1===e?(d(s,{transition:"none",opacity:1}),s.offsetWidth,setTimeout((function(){d(s,{transition:"all "+u+"ms linear",opacity:0}),setTimeout((function(){i.remove(),n()}),u)}),u)):setTimeout(n,u)})),this},i.isStarted=function(){return"number"==typeof i.status},i.start=function(){i.status||i.set(0);var e=function(){setTimeout((function(){i.status&&(i.trickle(),e())}),a.trickleSpeed)};return a.trickle&&e(),this},i.done=function(e){return e||i.status?i.inc(.3+.5*Math.random()).set(1):this},i.inc=function(e){var n=i.status;return n?("number"!=typeof e&&(e=(1-n)*r(Math.random()*n,.1,.95)),n=r(n+e,0,.994),i.set(n)):i.start()},i.trickle=function(){return i.inc(Math.random()*a.trickleRate)},e=0,n=0,i.promise=function(a){return a&&"resolved"!==a.state()?(0===n&&i.start(),e++,n++,a.always((function(){0==--n?(e=0,i.done()):i.set((e-n)/e)})),this):this},i.render=function(e){if(i.isRendered())return document.getElementById("nprogress");m(document.documentElement,"nprogress-busy");var n=document.createElement("div");n.id="nprogress",n.innerHTML=a.template;var r,t=n.querySelector(a.barSelector),s=e?"-100":l(i.status||0),u=document.querySelector(a.parent);return d(t,{transition:"all 0 linear",transform:"translate3d("+s+"%,0,0)"}),a.showSpinner||(r=n.querySelector(a.spinnerSelector))&&k(r),u!=document.body&&m(u,"nprogress-custom-parent"),u.appendChild(n),n},i.remove=function(){u(document.documentElement,"nprogress-busy"),u(document.querySelector(a.parent),"nprogress-custom-parent");var e=document.getElementById("nprogress");e&&k(e)},i.isRendered=function(){return!!document.getElementById("nprogress")},i.getPositioningCSS=function(){var e=document.body.style,n="WebkitTransform"in e?"Webkit":"MozTransform"in e?"Moz":"msTransform"in e?"ms":"OTransform"in e?"O":"";return n+"Perspective"in e?"translate3d":n+"Transform"in e?"translate":"margin"};var t=function(){var e=[];function n(){var i=e.shift();i&&i(n)}return function(i){e.push(i),1==e.length&&n()}}(),d=function(){var e=["Webkit","O","Moz","ms"],n={};function i(i){return i=i.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(e,n){return n.toUpperCase()})),n[i]||(n[i]=function(n){var i=document.body.style;if(n in i)return n;for(var a,r=e.length,l=n.charAt(0).toUpperCase()+n.slice(1);r--;)if((a=e[r]+l)in i)return a;return n}(i))}function a(e,n,a){n=i(n),e.style[n]=a}return function(e,n){var i,r,l=arguments;if(2==l.length)for(i in n)void 0!==(r=n[i])&&n.hasOwnProperty(i)&&a(e,i,r);else a(e,l[1],l[2])}}();function s(e,n){return("string"==typeof e?e:o(e)).indexOf(" "+n+" ")>=0}function m(e,n){var i=o(e),a=i+n;s(i,n)||(e.className=a.substring(1))}function u(e,n){var i,a=o(e);s(e,n)&&(i=a.replace(" "+n+" "," "),e.className=i.substring(1,i.length-1))}function o(e){return(" "+(e.className||"")+" ").replace(/\s+/gi," ")}function k(e){e&&e.parentNode&&e.parentNode.removeChild(e)}return i})?a.call(n,i,n,e):a)||(e.exports=r)},function(e,n,i){"use strict";var a=i(134),r=i(7),l=i(4),t=i(47),d=i(165),s=i(29),m=i(31),u=i(166),o=i(77),k=i(12),y=TypeError,b=function(e,n){this.stopped=e,this.result=n},c=b.prototype;e.exports=function(e,n,i){var g,p,H,S,h,z,v,K=i&&i.that,f=!(!i||!i.AS_ENTRIES),A=!(!i||!i.IS_RECORD),T=!(!i||!i.IS_ITERATOR),B=!(!i||!i.INTERRUPTED),R=a(n,K),Y=function(e){return g&&k(g,"normal"),new b(!0,e)},P=function(e){return f?(l(e),B?R(e[0],e[1],Y):R(e[0],e[1])):B?R(e,Y):R(e)};if(A)g=e.iterator;else if(T)g=e;else{if(!(p=o(e)))throw new y(t(e)+" is not iterable");if(d(p)){for(H=0,S=s(e);S>H;H++)if((h=P(e[H]))&&m(c,h))return h;return new b(!1)}g=u(e,p)}for(z=A?e.next:g.next;!(v=r(z,g)).done;){try{h=P(v.value)}catch(e){k(g,"throw",e)}if("object"==typeof h&&h&&m(c,h))return h}return new b(!1)}},function(e,n,i){"use strict";var a=i(3),r=i(17),l=i(90),t=i(50);e.exports=function(e,n,i,d){d||(d={});var s=d.enumerable,m=void 0!==d.name?d.name:n;if(a(i)&&l(i,m,d),d.global)s?e[n]=i:t(n,i);else{try{d.unsafe?e[n]&&(s=!0):delete e[n]}catch(e){}s?e[n]=i:r.f(e,n,{value:i,enumerable:!1,configurable:!d.nonConfigurable,writable:!d.nonWritable})}return e}},function(e,n,i){"use strict";var a=i(48),r=TypeError;e.exports=function(e){if(a(e))throw new r("Can't call method on "+e);return e}},function(e,n,i){"use strict";var a=String;e.exports=function(e){try{return a(e)}catch(e){return"Object"}}},function(e,n,i){"use strict";e.exports=function(e){return null==e}},function(e,n,i){"use strict";var a=i(19),r=i(1),l=i(50),t=e.exports=r["__core-js_shared__"]||l("__core-js_shared__",{});(t.versions||(t.versions=[])).push({version:"3.45.1",mode:a?"pure":"global",copyright:"© 2014-2025 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.45.1/LICENSE",source:"https://github.com/zloirock/core-js"})},function(e,n,i){"use strict";var a=i(1),r=Object.defineProperty;e.exports=function(e,n){try{r(a,e,{value:n,configurable:!0,writable:!0})}catch(i){a[e]=n}return n}},function(e,n,i){"use strict";var a=i(86),r=i(74),l=a("keys");e.exports=function(e){return l[e]||(l[e]=r(e))}},function(e,n,i){"use strict";e.exports={}},function(e,n,i){"use strict";e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,n,i){var a=i(177),r=i(21),l=Object.prototype,t=l.hasOwnProperty,d=l.propertyIsEnumerable,s=a(function(){return arguments}())?a:function(e){return r(e)&&t.call(e,"callee")&&!d.call(e,"callee")};e.exports=s},function(e,n,i){var a=i(18)(i(14),"Map");e.exports=a},function(e,n){e.exports=function(e){var n=typeof e;return null!=e&&("object"==n||"function"==n)}},function(e,n,i){var a=i(197),r=i(204),l=i(206),t=i(207),d=i(208);function s(e){var n=-1,i=null==e?0:e.length;for(this.clear();++n<i;){var a=e[n];this.set(a[0],a[1])}}s.prototype.clear=a,s.prototype.delete=r,s.prototype.get=l,s.prototype.has=t,s.prototype.set=d,e.exports=s},function(e,n){e.exports=function(e){var n=-1,i=Array(e.size);return e.forEach((function(e){i[++n]=e})),i}},function(e,n){e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},function(e,n,i){var a=i(13),r=i(61),l=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,t=/^\w*$/;e.exports=function(e,n){if(a(e))return!1;var i=typeof e;return!("number"!=i&&"symbol"!=i&&"boolean"!=i&&null!=e&&!r(e))||(t.test(e)||!l.test(e)||null!=n&&e in Object(n))}},function(e,n,i){var a=i(26),r=i(21);e.exports=function(e){return"symbol"==typeof e||r(e)&&"[object Symbol]"==a(e)}},function(e,n){e.exports=function(e){return e}},function(e,n,i){"use strict";var a=i(151);e.exports=function(e){var n=+e;return n!=n||0===n?0:a(n)}},function(e,n,i){"use strict";var a=i(11),r=i(7),l=i(44),t=i(9),d=i(4),s=i(22),m=i(12),u=i(24)("some",TypeError);a({target:"Iterator",proto:!0,real:!0,forced:u},{some:function(e){d(this);try{t(e)}catch(e){m(this,"throw",e)}if(u)return r(u,this,e);var n=s(this),i=0;return l(n,(function(n,a){if(e(n,i++))return a()}),{IS_RECORD:!0,INTERRUPTED:!0}).stopped}})},function(e,n,i){"use strict";var a=i(11),r=i(7),l=i(44),t=i(9),d=i(4),s=i(22),m=i(12),u=i(24)("forEach",TypeError);a({target:"Iterator",proto:!0,real:!0,forced:u},{forEach:function(e){d(this);try{t(e)}catch(e){m(this,"throw",e)}if(u)return r(u,this,e);var n=s(this),i=0;l(n,(function(n){e(n,i++)}),{IS_RECORD:!0})}})},function(e,n,i){"use strict";var a=i(8),r=i(3),l=i(32),t=i(51),d=i(154),s=t("IE_PROTO"),m=Object,u=m.prototype;e.exports=d?m.getPrototypeOf:function(e){var n=l(e);if(a(n,s))return n[s];var i=n.constructor;return r(i)&&n instanceof i?i.prototype:n instanceof m?u:null}},function(e,n,i){"use strict";var a,r=i(4),l=i(156),t=i(53),d=i(52),s=i(158),m=i(88),u=i(51),o=u("IE_PROTO"),k=function(){},y=function(e){return"<script>"+e+"<\/script>"},b=function(e){e.write(y("")),e.close();var n=e.parentWindow.Object;return e=null,n},c=function(){try{a=new ActiveXObject("htmlfile")}catch(e){}var e,n;c="undefined"!=typeof document?document.domain&&a?b(a):((n=m("iframe")).style.display="none",s.appendChild(n),n.src=String("javascript:"),(e=n.contentWindow.document).open(),e.write(y("document.F=Object")),e.close(),e.F):b(a);for(var i=t.length;i--;)delete c.prototype[t[i]];return c()};d[o]=!0,e.exports=Object.create||function(e,n){var i;return null!==e?(k.prototype=r(e),i=new k,k.prototype=null,i[o]=e):i=c(),void 0===n?i:l.f(i,n)}},function(e,n,i){"use strict";var a=i(167),r=i(3),l=i(25),t=i(15)("toStringTag"),d=Object,s="Arguments"===l(function(){return arguments}());e.exports=a?l:function(e){var n,i,a;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(i=function(e,n){try{return e[n]}catch(e){}}(n=d(e),t))?i:s?l(n):"Object"===(a=l(n))&&r(n.callee)?"Arguments":a}},function(e,n,i){"use strict";var a=i(123),r=i(10),l=i(46),t=i(168);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,n=!1,i={};try{(e=a(Object.prototype,"__proto__","set"))(i,[]),n=i instanceof Array}catch(e){}return function(i,a){return l(i),t(a),r(i)?(n?e(i,a):i.__proto__=a,i):i}}():void 0)},function(e,n,i){"use strict";var a=i(8),r=i(147),l=i(80),t=i(17);e.exports=function(e,n,i){for(var d=r(n),s=t.f,m=l.f,u=0;u<d.length;u++){var o=d[u];a(e,o)||i&&a(i,o)||s(e,o,m(n,o))}}},function(e,n,i){"use strict";var a=i(7),r=i(67),l=i(20),t=i(159),d=i(15),s=i(75),m=i(35),u=i(92).IteratorPrototype,o=i(160),k=i(12),y=i(161),b=d("toStringTag"),c=s.set,g=function(e){var n=s.getterFor(e?"WrapForValidIterator":"IteratorHelper");return t(r(u),{next:function(){var i=n(this);if(e)return i.nextHandler();if(i.done)return o(void 0,!0);try{var a=i.nextHandler();return i.returnHandlerResult?a:o(a,i.done)}catch(e){throw i.done=!0,e}},return:function(){var i=n(this),r=i.iterator;if(i.done=!0,e){var l=m(r,"return");return l?a(l,r):o(void 0,!0)}if(i.inner)try{k(i.inner.iterator,"normal")}catch(e){return k(r,"throw",e)}if(i.openIters)try{y(i.openIters,"normal")}catch(e){return k(r,"throw",e)}return r&&k(r,"normal"),o(void 0,!0)}})},p=g(!0),H=g(!1);l(H,b,"Iterator Helper"),e.exports=function(e,n,i){var a=function(a,r){r?(r.iterator=a.iterator,r.next=a.next):r=a,r.type=n?"WrapForValidIterator":"IteratorHelper",r.returnHandlerResult=!!i,r.nextHandler=e,r.counter=0,r.done=!1,c(this,r)};return a.prototype=n?p:H,a}},function(e,n,i){"use strict";var a=i(5),r=i(2),l=i(25),t=Object,d=a("".split);e.exports=r((function(){return!t("z").propertyIsEnumerable(0)}))?function(e){return"String"===l(e)?d(e,""):t(e)}:t},function(e,n,i){"use strict";var a,r,l=i(1),t=i(85),d=l.process,s=l.Deno,m=d&&d.versions||s&&s.version,u=m&&m.v8;u&&(r=(a=u.split("."))[0]>0&&a[0]<4?1:+(a[0]+a[1])),!r&&t&&(!(a=t.match(/Edge\/(\d+)/))||a[1]>=74)&&(a=t.match(/Chrome\/(\d+)/))&&(r=+a[1]),e.exports=r},function(e,n,i){"use strict";var a=i(5),r=0,l=Math.random(),t=a(1.1.toString);e.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+t(++r+l,36)}},function(e,n,i){"use strict";var a,r,l,t=i(146),d=i(1),s=i(10),m=i(20),u=i(8),o=i(49),k=i(51),y=i(52),b=d.TypeError,c=d.WeakMap;if(t||o.state){var g=o.state||(o.state=new c);g.get=g.get,g.has=g.has,g.set=g.set,a=function(e,n){if(g.has(e))throw new b("Object already initialized");return n.facade=e,g.set(e,n),n},r=function(e){return g.get(e)||{}},l=function(e){return g.has(e)}}else{var p=k("state");y[p]=!0,a=function(e,n){if(u(e,p))throw new b("Object already initialized");return n.facade=e,m(e,p,n),n},r=function(e){return u(e,p)?e[p]:{}},l=function(e){return u(e,p)}}e.exports={set:a,get:r,has:l,enforce:function(e){return l(e)?r(e):a(e,{})},getterFor:function(e){return function(n){var i;if(!s(n)||(i=r(n)).type!==e)throw new b("Incompatible receiver, "+e+" required");return i}}}},function(e,n,i){"use strict";e.exports=function(e,n){var i="function"==typeof Iterator&&Iterator.prototype[e];if(i)try{i.call({next:null},n).next()}catch(e){return!0}}},function(e,n,i){"use strict";var a=i(68),r=i(35),l=i(48),t=i(94),d=i(15)("iterator");e.exports=function(e){if(!l(e))return r(e,d)||r(e,"@@iterator")||t[a(e)]}},function(e,n,i){"use strict";var a=i(36),r=Function.prototype,l=r.apply,t=r.call;e.exports="object"==typeof Reflect&&Reflect.apply||(a?t.bind(l):function(){return t.apply(l,arguments)})},function(e,n){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,n,i){"use strict";var a=i(6),r=i(7),l=i(142),t=i(33),d=i(37),s=i(81),m=i(8),u=i(87),o=Object.getOwnPropertyDescriptor;n.f=a?o:function(e,n){if(e=d(e),n=s(n),u)try{return o(e,n)}catch(e){}if(m(e,n))return t(!r(l.f,e,n),e[n])}},function(e,n,i){"use strict";var a=i(129),r=i(82);e.exports=function(e){var n=a(e,"string");return r(n)?n:n+""}},function(e,n,i){"use strict";var a=i(34),r=i(3),l=i(31),t=i(83),d=Object;e.exports=t?function(e){return"symbol"==typeof e}:function(e){var n=a("Symbol");return r(n)&&l(n.prototype,d(e))}},function(e,n,i){"use strict";var a=i(84);e.exports=a&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(e,n,i){"use strict";var a=i(73),r=i(2),l=i(1).String;e.exports=!!Object.getOwnPropertySymbols&&!r((function(){var e=Symbol("symbol detection");return!l(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&a&&a<41}))},function(e,n,i){"use strict";var a=i(1).navigator,r=a&&a.userAgent;e.exports=r?String(r):""},function(e,n,i){"use strict";var a=i(49);e.exports=function(e,n){return a[e]||(a[e]=n||{})}},function(e,n,i){"use strict";var a=i(6),r=i(2),l=i(88);e.exports=!a&&!r((function(){return 7!==Object.defineProperty(l("div"),"a",{get:function(){return 7}}).a}))},function(e,n,i){"use strict";var a=i(1),r=i(10),l=a.document,t=r(l)&&r(l.createElement);e.exports=function(e){return t?l.createElement(e):{}}},function(e,n,i){"use strict";var a=i(6),r=i(2);e.exports=a&&r((function(){return 42!==Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(e,n,i){"use strict";var a=i(5),r=i(2),l=i(3),t=i(8),d=i(6),s=i(144).CONFIGURABLE,m=i(145),u=i(75),o=u.enforce,k=u.get,y=String,b=Object.defineProperty,c=a("".slice),g=a("".replace),p=a([].join),H=d&&!r((function(){return 8!==b((function(){}),"length",{value:8}).length})),S=String(String).split("String"),h=e.exports=function(e,n,i){"Symbol("===c(y(n),0,7)&&(n="["+g(y(n),/^Symbol\(([^)]*)\).*$/,"$1")+"]"),i&&i.getter&&(n="get "+n),i&&i.setter&&(n="set "+n),(!t(e,"name")||s&&e.name!==n)&&(d?b(e,"name",{value:n,configurable:!0}):e.name=n),H&&i&&t(i,"arity")&&e.length!==i.arity&&b(e,"length",{value:i.arity});try{i&&t(i,"constructor")&&i.constructor?d&&b(e,"prototype",{writable:!1}):e.prototype&&(e.prototype=void 0)}catch(e){}var a=o(e);return t(a,"source")||(a.source=p(S,"string"==typeof n?n:"")),e};Function.prototype.toString=h((function(){return l(this)&&k(this).source||m(this)}),"toString")},function(e,n,i){"use strict";var a=i(5),r=i(8),l=i(37),t=i(149).indexOf,d=i(52),s=a([].push);e.exports=function(e,n){var i,a=l(e),m=0,u=[];for(i in a)!r(d,i)&&r(a,i)&&s(u,i);for(;n.length>m;)r(a,i=n[m++])&&(~t(u,i)||s(u,i));return u}},function(e,n,i){"use strict";var a,r,l,t=i(2),d=i(3),s=i(10),m=i(67),u=i(66),o=i(45),k=i(15),y=i(19),b=k("iterator"),c=!1;[].keys&&("next"in(l=[].keys())?(r=u(u(l)))!==Object.prototype&&(a=r):c=!0),!s(a)||t((function(){var e={};return a[b].call(e)!==e}))?a={}:y&&(a=m(a)),d(a[b])||o(a,b,(function(){return this})),e.exports={IteratorPrototype:a,BUGGY_SAFARI_ITERATORS:c}},function(e,n,i){"use strict";var a=i(4),r=i(12);e.exports=function(e,n,i,l){try{return l?n(a(i)[0],i[1]):n(i)}catch(n){r(e,"throw",n)}}},function(e,n,i){"use strict";e.exports={}},function(e,n){e.exports=function(e,n){for(var i=-1,a=n.length,r=e.length;++i<a;)e[r+i]=n[i];return e}},function(e,n){var i="object"==typeof global&&global&&global.Object===Object&&global;e.exports=i},function(e,n,i){var a=i(38),r=i(188),l=i(189),t=i(190),d=i(191),s=i(192);function m(e){var n=this.__data__=new a(e);this.size=n.size}m.prototype.clear=r,m.prototype.delete=l,m.prototype.get=t,m.prototype.has=d,m.prototype.set=s,e.exports=m},function(e,n){e.exports=function(e,n){return e===n||e!=e&&n!=n}},function(e,n,i){var a=i(26),r=i(56);e.exports=function(e){if(!r(e))return!1;var n=a(e);return"[object Function]"==n||"[object GeneratorFunction]"==n||"[object AsyncFunction]"==n||"[object Proxy]"==n}},function(e,n){var i=Function.prototype.toString;e.exports=function(e){if(null!=e){try{return i.call(e)}catch(e){}try{return e+""}catch(e){}}return""}},function(e,n,i){var a=i(209),r=i(21);e.exports=function e(n,i,l,t,d){return n===i||(null==n||null==i||!r(n)&&!r(i)?n!=n&&i!=i:a(n,i,l,t,e,d))}},function(e,n,i){var a=i(103),r=i(212),l=i(104);e.exports=function(e,n,i,t,d,s){var m=1&i,u=e.length,o=n.length;if(u!=o&&!(m&&o>u))return!1;var k=s.get(e),y=s.get(n);if(k&&y)return k==n&&y==e;var b=-1,c=!0,g=2&i?new a:void 0;for(s.set(e,n),s.set(n,e);++b<u;){var p=e[b],H=n[b];if(t)var S=m?t(H,p,b,n,e,s):t(p,H,b,e,n,s);if(void 0!==S){if(S)continue;c=!1;break}if(g){if(!r(n,(function(e,n){if(!l(g,n)&&(p===e||d(p,e,i,t,s)))return g.push(n)}))){c=!1;break}}else if(p!==H&&!d(p,H,i,t,s)){c=!1;break}}return s.delete(e),s.delete(n),c}},function(e,n,i){var a=i(57),r=i(210),l=i(211);function t(e){var n=-1,i=null==e?0:e.length;for(this.__data__=new a;++n<i;)this.add(e[n])}t.prototype.add=t.prototype.push=r,t.prototype.has=l,e.exports=t},function(e,n){e.exports=function(e,n){return e.has(n)}},function(e,n,i){var a=i(222),r=i(228),l=i(109);e.exports=function(e){return l(e)?a(e):r(e)}},function(e,n,i){(function(e){var a=i(14),r=i(224),l=n&&!n.nodeType&&n,t=l&&"object"==typeof e&&e&&!e.nodeType&&e,d=t&&t.exports===l?a.Buffer:void 0,s=(d?d.isBuffer:void 0)||r;e.exports=s}).call(this,i(79)(e))},function(e,n){var i=/^(?:0|[1-9]\d*)$/;e.exports=function(e,n){var a=typeof e;return!!(n=null==n?9007199254740991:n)&&("number"==a||"symbol"!=a&&i.test(e))&&e>-1&&e%1==0&&e<n}},function(e,n,i){var a=i(225),r=i(226),l=i(227),t=l&&l.isTypedArray,d=t?r(t):a;e.exports=d},function(e,n,i){var a=i(99),r=i(59);e.exports=function(e){return null!=e&&r(e.length)&&!a(e)}},function(e,n,i){var a=i(18)(i(14),"Set");e.exports=a},function(e,n,i){var a=i(56);e.exports=function(e){return e==e&&!a(e)}},function(e,n){e.exports=function(e,n){return function(i){return null!=i&&(i[e]===n&&(void 0!==n||e in Object(i)))}}},function(e,n,i){var a=i(114),r=i(42);e.exports=function(e,n){for(var i=0,l=(n=a(n,e)).length;null!=e&&i<l;)e=e[r(n[i++])];return i&&i==l?e:void 0}},function(e,n,i){var a=i(13),r=i(60),l=i(238),t=i(241);e.exports=function(e,n){return a(e)?e:r(e,n)?[e]:l(t(e))}},function(e,n,i){},function(e,n,i){},function(e,n,i){var a=i(175),r=i(180),l=i(250),t=i(258),d=i(267),s=i(139),m=l((function(e){var n=s(e);return d(n)&&(n=void 0),t(a(e,1,d,!0),r(n,2))}));e.exports=m},function(e,n,i){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var a=/["'&<>]/;e.exports=function(e){var n,i=""+e,r=a.exec(i);if(!r)return i;var l="",t=0,d=0;for(t=r.index;t<i.length;t++){switch(i.charCodeAt(t)){case 34:n="&quot;";break;case 38:n="&amp;";break;case 39:n="&#39;";break;case 60:n="&lt;";break;case 62:n="&gt;";break;default:continue}d!==t&&(l+=i.substring(d,t)),d=t+1,l+=n}return d!==t?l+i.substring(d,t):l}},function(e,n){var i=/^\s+|\s+$/g,a=/^[-+]0x[0-9a-f]+$/i,r=/^0b[01]+$/i,l=/^0o[0-7]+$/i,t=parseInt,d="object"==typeof global&&global&&global.Object===Object&&global,s="object"==typeof self&&self&&self.Object===Object&&self,m=d||s||Function("return this")(),u=Object.prototype.toString,o=Math.max,k=Math.min,y=function(){return m.Date.now()};function b(e){var n=typeof e;return!!e&&("object"==n||"function"==n)}function c(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==u.call(e)}(e))return NaN;if(b(e)){var n="function"==typeof e.valueOf?e.valueOf():e;e=b(n)?n+"":n}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(i,"");var d=r.test(e);return d||l.test(e)?t(e.slice(2),d?2:8):a.test(e)?NaN:+e}e.exports=function(e,n,i){var a,r,l,t,d,s,m=0,u=!1,g=!1,p=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function H(n){var i=a,l=r;return a=r=void 0,m=n,t=e.apply(l,i)}function S(e){return m=e,d=setTimeout(z,n),u?H(e):t}function h(e){var i=e-s;return void 0===s||i>=n||i<0||g&&e-m>=l}function z(){var e=y();if(h(e))return v(e);d=setTimeout(z,function(e){var i=n-(e-s);return g?k(i,l-(e-m)):i}(e))}function v(e){return d=void 0,p&&a?H(e):(a=r=void 0,t)}function K(){var e=y(),i=h(e);if(a=arguments,r=this,s=e,i){if(void 0===d)return S(s);if(g)return d=setTimeout(z,n),H(s)}return void 0===d&&(d=setTimeout(z,n)),t}return n=c(n)||0,b(i)&&(u=!!i.leading,l=(g="maxWait"in i)?o(c(i.maxWait)||0,n):l,p="trailing"in i?!!i.trailing:p),K.cancel=function(){void 0!==d&&clearTimeout(d),m=0,a=s=r=d=void 0},K.flush=function(){return void 0===d?t:v(y())},K}},function(e,n,i){"use strict";var a=i(90),r=i(17);e.exports=function(e,n,i){return i.get&&a(i.get,n,{getter:!0}),i.set&&a(i.set,n,{setter:!0}),r.f(e,n,i)}},function(e,n,i){"use strict";var a=i(11),r=i(32),l=i(29),t=i(172),d=i(174);a({target:"Array",proto:!0,arity:1,forced:i(2)((function(){return 4294967297!==[].push.call({length:4294967296},1)}))||!function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(e){return e instanceof TypeError}}()},{push:function(e){var n=r(this),i=l(n),a=arguments.length;d(i+a);for(var s=0;s<a;s++)n[i]=arguments[s],i++;return t(n,i),i}})},function(e,n,i){"use strict";var a=i(68),r=String;e.exports=function(e){if("Symbol"===a(e))throw new TypeError("Cannot convert a Symbol value to a string");return r(e)}},function(e,n,i){"use strict";var a=i(5),r=i(9);e.exports=function(e,n,i){try{return a(r(Object.getOwnPropertyDescriptor(e,n)[i]))}catch(e){}}},function(e,n,i){"use strict";var a=i(122);e.exports=function(e,n){return void 0===e?arguments.length<2?"":n:a(e)}},function(e,n,i){"use strict";var a=i(11),r=i(162).left,l=i(163),t=i(73);a({target:"Array",proto:!0,forced:!i(132)&&t>79&&t<83||!l("reduce")},{reduce:function(e){var n=arguments.length;return r(this,e,n,n>1?arguments[1]:void 0)}})},function(e,n,i){"use strict";var a=i(11),r=i(44),l=i(9),t=i(4),d=i(22),s=i(12),m=i(24),u=i(78),o=i(2),k=TypeError,y=o((function(){[].keys().reduce((function(){}),void 0)})),b=!y&&m("reduce",k);a({target:"Iterator",proto:!0,real:!0,forced:y||b},{reduce:function(e){t(this);try{l(e)}catch(e){s(this,"throw",e)}var n=arguments.length<2,i=n?void 0:arguments[1];if(b)return u(b,this,n?[e]:[e,i]);var a=d(this),m=0;if(r(a,(function(a){n?(n=!1,i=a):i=e(i,a,m),m++}),{IS_RECORD:!0}),n)throw new k("Reduce of empty iterator with no initial value");return i}})},function(e,n,i){"use strict";var a=i(11),r=i(1),l=i(78),t=i(135),d=r.WebAssembly,s=7!==new Error("e",{cause:7}).cause,m=function(e,n){var i={};i[e]=t(e,n,s),a({global:!0,constructor:!0,arity:1,forced:s},i)},u=function(e,n){if(d&&d[e]){var i={};i[e]=t("WebAssembly."+e,n,s),a({target:"WebAssembly",stat:!0,constructor:!0,arity:1,forced:s},i)}};m("Error",(function(e){return function(n){return l(e,this,arguments)}})),m("EvalError",(function(e){return function(n){return l(e,this,arguments)}})),m("RangeError",(function(e){return function(n){return l(e,this,arguments)}})),m("ReferenceError",(function(e){return function(n){return l(e,this,arguments)}})),m("SyntaxError",(function(e){return function(n){return l(e,this,arguments)}})),m("TypeError",(function(e){return function(n){return l(e,this,arguments)}})),m("URIError",(function(e){return function(n){return l(e,this,arguments)}})),u("CompileError",(function(e){return function(n){return l(e,this,arguments)}})),u("LinkError",(function(e){return function(n){return l(e,this,arguments)}})),u("RuntimeError",(function(e){return function(n){return l(e,this,arguments)}}))},function(e,n,i){"use strict";var a=i(20),r=i(138),l=i(171),t=Error.captureStackTrace;e.exports=function(e,n,i,d){l&&(t?t(e,n):a(e,"stack",r(i,d)))}},function(e,n,i){"use strict";var a=i(7),r=i(10),l=i(82),t=i(35),d=i(143),s=i(15),m=TypeError,u=s("toPrimitive");e.exports=function(e,n){if(!r(e)||l(e))return e;var i,s=t(e,u);if(s){if(void 0===n&&(n="default"),i=a(s,e,n),!r(i)||l(i))return i;throw new m("Can't convert object to primitive value")}return void 0===n&&(n="number"),d(e,n)}},function(e,n,i){"use strict";var a=i(63),r=Math.min;e.exports=function(e){var n=a(e);return n>0?r(n,9007199254740991):0}},function(e,n,i){"use strict";var a=i(31),r=TypeError;e.exports=function(e,n){if(a(n,e))return e;throw new r("Incorrect invocation")}},function(e,n,i){"use strict";var a=i(133);e.exports="NODE"===a},function(e,n,i){"use strict";var a=i(1),r=i(85),l=i(25),t=function(e){return r.slice(0,e.length)===e};e.exports=t("Bun/")?"BUN":t("Cloudflare-Workers")?"CLOUDFLARE":t("Deno/")?"DENO":t("Node.js/")?"NODE":a.Bun&&"string"==typeof Bun.version?"BUN":a.Deno&&"object"==typeof Deno.version?"DENO":"process"===l(a.process)?"NODE":a.window&&a.document?"BROWSER":"REST"},function(e,n,i){"use strict";var a=i(164),r=i(9),l=i(36),t=a(a.bind);e.exports=function(e,n){return r(e),void 0===n?e:l?t(e,n):function(){return e.apply(n,arguments)}}},function(e,n,i){"use strict";var a=i(34),r=i(8),l=i(20),t=i(31),d=i(69),s=i(70),m=i(170),u=i(136),o=i(124),k=i(137),y=i(128),b=i(6),c=i(19);e.exports=function(e,n,i,g){var p=g?2:1,H=e.split("."),S=H[H.length-1],h=a.apply(null,H);if(h){var z=h.prototype;if(!c&&r(z,"cause")&&delete z.cause,!i)return h;var v=a("Error"),K=n((function(e,n){var i=o(g?n:e,void 0),a=g?new h(e):new h;return void 0!==i&&l(a,"message",i),y(a,K,a.stack,2),this&&t(z,this)&&u(a,this,K),arguments.length>p&&k(a,arguments[p]),a}));if(K.prototype=z,"Error"!==S?d?d(K,v):s(K,v,{name:!0}):b&&"stackTraceLimit"in h&&(m(K,h,"stackTraceLimit"),m(K,h,"prepareStackTrace")),s(K,h),!c)try{z.name!==S&&l(z,"name",S),z.constructor=K}catch(e){}return K}}},function(e,n,i){"use strict";var a=i(3),r=i(10),l=i(69);e.exports=function(e,n,i){var t,d;return l&&a(t=n.constructor)&&t!==i&&r(d=t.prototype)&&d!==i.prototype&&l(e,d),e}},function(e,n,i){"use strict";var a=i(10),r=i(20);e.exports=function(e,n){a(n)&&"cause"in n&&r(e,"cause",n.cause)}},function(e,n,i){"use strict";var a=i(5),r=Error,l=a("".replace),t=String(new r("zxcasd").stack),d=/\n\s*at [^:]*:[^\n]*/,s=d.test(t);e.exports=function(e,n){if(s&&"string"==typeof e&&!r.prepareStackTrace)for(;n--;)e=l(e,d,"");return e}},function(e,n){e.exports=function(e){var n=null==e?0:e.length;return n?e[n-1]:void 0}},function(e,n,i){var a=i(113);e.exports=function(e,n,i){var r=null==e?void 0:a(e,n);return void 0===r?i:r}},function(e,n,i){e.exports=i(272)},function(e,n,i){"use strict";var a={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,l=r&&!a.call({1:2},1);n.f=l?function(e){var n=r(this,e);return!!n&&n.enumerable}:a},function(e,n,i){"use strict";var a=i(7),r=i(3),l=i(10),t=TypeError;e.exports=function(e,n){var i,d;if("string"===n&&r(i=e.toString)&&!l(d=a(i,e)))return d;if(r(i=e.valueOf)&&!l(d=a(i,e)))return d;if("string"!==n&&r(i=e.toString)&&!l(d=a(i,e)))return d;throw new t("Can't convert object to primitive value")}},function(e,n,i){"use strict";var a=i(6),r=i(8),l=Function.prototype,t=a&&Object.getOwnPropertyDescriptor,d=r(l,"name"),s=d&&"something"===function(){}.name,m=d&&(!a||a&&t(l,"name").configurable);e.exports={EXISTS:d,PROPER:s,CONFIGURABLE:m}},function(e,n,i){"use strict";var a=i(5),r=i(3),l=i(49),t=a(Function.toString);r(l.inspectSource)||(l.inspectSource=function(e){return t(e)}),e.exports=l.inspectSource},function(e,n,i){"use strict";var a=i(1),r=i(3),l=a.WeakMap;e.exports=r(l)&&/native code/.test(String(l))},function(e,n,i){"use strict";var a=i(34),r=i(5),l=i(148),t=i(152),d=i(4),s=r([].concat);e.exports=a("Reflect","ownKeys")||function(e){var n=l.f(d(e)),i=t.f;return i?s(n,i(e)):n}},function(e,n,i){"use strict";var a=i(91),r=i(53).concat("length","prototype");n.f=Object.getOwnPropertyNames||function(e){return a(e,r)}},function(e,n,i){"use strict";var a=i(37),r=i(150),l=i(29),t=function(e){return function(n,i,t){var d=a(n),s=l(d);if(0===s)return!e&&-1;var m,u=r(t,s);if(e&&i!=i){for(;s>u;)if((m=d[u++])!=m)return!0}else for(;s>u;u++)if((e||u in d)&&d[u]===i)return e||u||0;return!e&&-1}};e.exports={includes:t(!0),indexOf:t(!1)}},function(e,n,i){"use strict";var a=i(63),r=Math.max,l=Math.min;e.exports=function(e,n){var i=a(e);return i<0?r(i+n,0):l(i,n)}},function(e,n,i){"use strict";var a=Math.ceil,r=Math.floor;e.exports=Math.trunc||function(e){var n=+e;return(n>0?r:a)(n)}},function(e,n,i){"use strict";n.f=Object.getOwnPropertySymbols},function(e,n,i){"use strict";var a=i(2),r=i(3),l=/#|\.prototype\./,t=function(e,n){var i=s[d(e)];return i===u||i!==m&&(r(n)?a(n):!!n)},d=t.normalize=function(e){return String(e).replace(l,".").toLowerCase()},s=t.data={},m=t.NATIVE="N",u=t.POLYFILL="P";e.exports=t},function(e,n,i){"use strict";var a=i(2);e.exports=!a((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},function(e,n,i){"use strict";var a=i(6),r=i(17),l=i(33);e.exports=function(e,n,i){a?r.f(e,n,l(0,i)):e[n]=i}},function(e,n,i){"use strict";var a=i(6),r=i(89),l=i(17),t=i(4),d=i(37),s=i(157);n.f=a&&!r?Object.defineProperties:function(e,n){t(e);for(var i,a=d(n),r=s(n),m=r.length,u=0;m>u;)l.f(e,i=r[u++],a[i]);return e}},function(e,n,i){"use strict";var a=i(91),r=i(53);e.exports=Object.keys||function(e){return a(e,r)}},function(e,n,i){"use strict";var a=i(34);e.exports=a("document","documentElement")},function(e,n,i){"use strict";var a=i(45);e.exports=function(e,n,i){for(var r in n)a(e,r,n[r],i);return e}},function(e,n,i){"use strict";e.exports=function(e,n){return{value:e,done:n}}},function(e,n,i){"use strict";var a=i(12);e.exports=function(e,n,i){for(var r=e.length-1;r>=0;r--)if(void 0!==e[r])try{i=a(e[r].iterator,n,i)}catch(e){n="throw",i=e}if("throw"===n)throw i;return i}},function(e,n,i){"use strict";var a=i(9),r=i(32),l=i(72),t=i(29),d=TypeError,s="Reduce of empty array with no initial value",m=function(e){return function(n,i,m,u){var o=r(n),k=l(o),y=t(o);if(a(i),0===y&&m<2)throw new d(s);var b=e?y-1:0,c=e?-1:1;if(m<2)for(;;){if(b in k){u=k[b],b+=c;break}if(b+=c,e?b<0:y<=b)throw new d(s)}for(;e?b>=0:y>b;b+=c)b in k&&(u=i(u,k[b],b,o));return u}};e.exports={left:m(!1),right:m(!0)}},function(e,n,i){"use strict";var a=i(2);e.exports=function(e,n){var i=[][e];return!!i&&a((function(){i.call(null,n||function(){return 1},1)}))}},function(e,n,i){"use strict";var a=i(25),r=i(5);e.exports=function(e){if("Function"===a(e))return r(e)}},function(e,n,i){"use strict";var a=i(15),r=i(94),l=a("iterator"),t=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||t[l]===e)}},function(e,n,i){"use strict";var a=i(7),r=i(9),l=i(4),t=i(47),d=i(77),s=TypeError;e.exports=function(e,n){var i=arguments.length<2?d(e):n;if(r(i))return l(a(i,e));throw new s(t(e)+" is not iterable")}},function(e,n,i){"use strict";var a={};a[i(15)("toStringTag")]="z",e.exports="[object z]"===String(a)},function(e,n,i){"use strict";var a=i(169),r=String,l=TypeError;e.exports=function(e){if(a(e))return e;throw new l("Can't set "+r(e)+" as a prototype")}},function(e,n,i){"use strict";var a=i(10);e.exports=function(e){return a(e)||null===e}},function(e,n,i){"use strict";var a=i(17).f;e.exports=function(e,n,i){i in e||a(e,i,{configurable:!0,get:function(){return n[i]},set:function(e){n[i]=e}})}},function(e,n,i){"use strict";var a=i(2),r=i(33);e.exports=!a((function(){var e=new Error("a");return!("stack"in e)||(Object.defineProperty(e,"stack",r(1,7)),7!==e.stack)}))},function(e,n,i){"use strict";var a=i(6),r=i(173),l=TypeError,t=Object.getOwnPropertyDescriptor,d=a&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(e){return e instanceof TypeError}}();e.exports=d?function(e,n){if(r(e)&&!t(e,"length").writable)throw new l("Cannot set read only .length");return e.length=n}:function(e,n){return e.length=n}},function(e,n,i){"use strict";var a=i(25);e.exports=Array.isArray||function(e){return"Array"===a(e)}},function(e,n,i){"use strict";var a=TypeError;e.exports=function(e){if(e>9007199254740991)throw a("Maximum allowed index exceeded");return e}},function(e,n,i){var a=i(95),r=i(176);e.exports=function e(n,i,l,t,d){var s=-1,m=n.length;for(l||(l=r),d||(d=[]);++s<m;){var u=n[s];i>0&&l(u)?i>1?e(u,i-1,l,t,d):a(d,u):t||(d[d.length]=u)}return d}},function(e,n,i){var a=i(27),r=i(54),l=i(13),t=a?a.isConcatSpreadable:void 0;e.exports=function(e){return l(e)||r(e)||!!(t&&e&&e[t])}},function(e,n,i){var a=i(26),r=i(21);e.exports=function(e){return r(e)&&"[object Arguments]"==a(e)}},function(e,n,i){var a=i(27),r=Object.prototype,l=r.hasOwnProperty,t=r.toString,d=a?a.toStringTag:void 0;e.exports=function(e){var n=l.call(e,d),i=e[d];try{e[d]=void 0;var a=!0}catch(e){}var r=t.call(e);return a&&(n?e[d]=i:delete e[d]),r}},function(e,n){var i=Object.prototype.toString;e.exports=function(e){return i.call(e)}},function(e,n,i){var a=i(181),r=i(237),l=i(62),t=i(13),d=i(247);e.exports=function(e){return"function"==typeof e?e:null==e?l:"object"==typeof e?t(e)?r(e[0],e[1]):a(e):d(e)}},function(e,n,i){var a=i(182),r=i(236),l=i(112);e.exports=function(e){var n=r(e);return 1==n.length&&n[0][2]?l(n[0][0],n[0][1]):function(i){return i===e||a(i,e,n)}}},function(e,n,i){var a=i(97),r=i(101);e.exports=function(e,n,i,l){var t=i.length,d=t,s=!l;if(null==e)return!d;for(e=Object(e);t--;){var m=i[t];if(s&&m[2]?m[1]!==e[m[0]]:!(m[0]in e))return!1}for(;++t<d;){var u=(m=i[t])[0],o=e[u],k=m[1];if(s&&m[2]){if(void 0===o&&!(u in e))return!1}else{var y=new a;if(l)var b=l(o,k,u,e,n,y);if(!(void 0===b?r(k,o,3,l,y):b))return!1}}return!0}},function(e,n){e.exports=function(){this.__data__=[],this.size=0}},function(e,n,i){var a=i(39),r=Array.prototype.splice;e.exports=function(e){var n=this.__data__,i=a(n,e);return!(i<0)&&(i==n.length-1?n.pop():r.call(n,i,1),--this.size,!0)}},function(e,n,i){var a=i(39);e.exports=function(e){var n=this.__data__,i=a(n,e);return i<0?void 0:n[i][1]}},function(e,n,i){var a=i(39);e.exports=function(e){return a(this.__data__,e)>-1}},function(e,n,i){var a=i(39);e.exports=function(e,n){var i=this.__data__,r=a(i,e);return r<0?(++this.size,i.push([e,n])):i[r][1]=n,this}},function(e,n,i){var a=i(38);e.exports=function(){this.__data__=new a,this.size=0}},function(e,n){e.exports=function(e){var n=this.__data__,i=n.delete(e);return this.size=n.size,i}},function(e,n){e.exports=function(e){return this.__data__.get(e)}},function(e,n){e.exports=function(e){return this.__data__.has(e)}},function(e,n,i){var a=i(38),r=i(55),l=i(57);e.exports=function(e,n){var i=this.__data__;if(i instanceof a){var t=i.__data__;if(!r||t.length<199)return t.push([e,n]),this.size=++i.size,this;i=this.__data__=new l(t)}return i.set(e,n),this.size=i.size,this}},function(e,n,i){var a=i(99),r=i(194),l=i(56),t=i(100),d=/^\[object .+?Constructor\]$/,s=Function.prototype,m=Object.prototype,u=s.toString,o=m.hasOwnProperty,k=RegExp("^"+u.call(o).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e){return!(!l(e)||r(e))&&(a(e)?k:d).test(t(e))}},function(e,n,i){var a,r=i(195),l=(a=/[^.]+$/.exec(r&&r.keys&&r.keys.IE_PROTO||""))?"Symbol(src)_1."+a:"";e.exports=function(e){return!!l&&l in e}},function(e,n,i){var a=i(14)["__core-js_shared__"];e.exports=a},function(e,n){e.exports=function(e,n){return null==e?void 0:e[n]}},function(e,n,i){var a=i(198),r=i(38),l=i(55);e.exports=function(){this.size=0,this.__data__={hash:new a,map:new(l||r),string:new a}}},function(e,n,i){var a=i(199),r=i(200),l=i(201),t=i(202),d=i(203);function s(e){var n=-1,i=null==e?0:e.length;for(this.clear();++n<i;){var a=e[n];this.set(a[0],a[1])}}s.prototype.clear=a,s.prototype.delete=r,s.prototype.get=l,s.prototype.has=t,s.prototype.set=d,e.exports=s},function(e,n,i){var a=i(40);e.exports=function(){this.__data__=a?a(null):{},this.size=0}},function(e,n){e.exports=function(e){var n=this.has(e)&&delete this.__data__[e];return this.size-=n?1:0,n}},function(e,n,i){var a=i(40),r=Object.prototype.hasOwnProperty;e.exports=function(e){var n=this.__data__;if(a){var i=n[e];return"__lodash_hash_undefined__"===i?void 0:i}return r.call(n,e)?n[e]:void 0}},function(e,n,i){var a=i(40),r=Object.prototype.hasOwnProperty;e.exports=function(e){var n=this.__data__;return a?void 0!==n[e]:r.call(n,e)}},function(e,n,i){var a=i(40);e.exports=function(e,n){var i=this.__data__;return this.size+=this.has(e)?0:1,i[e]=a&&void 0===n?"__lodash_hash_undefined__":n,this}},function(e,n,i){var a=i(41);e.exports=function(e){var n=a(this,e).delete(e);return this.size-=n?1:0,n}},function(e,n){e.exports=function(e){var n=typeof e;return"string"==n||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==e:null===e}},function(e,n,i){var a=i(41);e.exports=function(e){return a(this,e).get(e)}},function(e,n,i){var a=i(41);e.exports=function(e){return a(this,e).has(e)}},function(e,n,i){var a=i(41);e.exports=function(e,n){var i=a(this,e),r=i.size;return i.set(e,n),this.size+=i.size==r?0:1,this}},function(e,n,i){var a=i(97),r=i(102),l=i(213),t=i(216),d=i(232),s=i(13),m=i(106),u=i(108),o="[object Object]",k=Object.prototype.hasOwnProperty;e.exports=function(e,n,i,y,b,c){var g=s(e),p=s(n),H=g?"[object Array]":d(e),S=p?"[object Array]":d(n),h=(H="[object Arguments]"==H?o:H)==o,z=(S="[object Arguments]"==S?o:S)==o,v=H==S;if(v&&m(e)){if(!m(n))return!1;g=!0,h=!1}if(v&&!h)return c||(c=new a),g||u(e)?r(e,n,i,y,b,c):l(e,n,H,i,y,b,c);if(!(1&i)){var K=h&&k.call(e,"__wrapped__"),f=z&&k.call(n,"__wrapped__");if(K||f){var A=K?e.value():e,T=f?n.value():n;return c||(c=new a),b(A,T,i,y,c)}}return!!v&&(c||(c=new a),t(e,n,i,y,b,c))}},function(e,n){e.exports=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this}},function(e,n){e.exports=function(e){return this.__data__.has(e)}},function(e,n){e.exports=function(e,n){for(var i=-1,a=null==e?0:e.length;++i<a;)if(n(e[i],i,e))return!0;return!1}},function(e,n,i){var a=i(27),r=i(214),l=i(98),t=i(102),d=i(215),s=i(58),m=a?a.prototype:void 0,u=m?m.valueOf:void 0;e.exports=function(e,n,i,a,m,o,k){switch(i){case"[object DataView]":if(e.byteLength!=n.byteLength||e.byteOffset!=n.byteOffset)return!1;e=e.buffer,n=n.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=n.byteLength||!o(new r(e),new r(n)));case"[object Boolean]":case"[object Date]":case"[object Number]":return l(+e,+n);case"[object Error]":return e.name==n.name&&e.message==n.message;case"[object RegExp]":case"[object String]":return e==n+"";case"[object Map]":var y=d;case"[object Set]":var b=1&a;if(y||(y=s),e.size!=n.size&&!b)return!1;var c=k.get(e);if(c)return c==n;a|=2,k.set(e,n);var g=t(y(e),y(n),a,m,o,k);return k.delete(e),g;case"[object Symbol]":if(u)return u.call(e)==u.call(n)}return!1}},function(e,n,i){var a=i(14).Uint8Array;e.exports=a},function(e,n){e.exports=function(e){var n=-1,i=Array(e.size);return e.forEach((function(e,a){i[++n]=[a,e]})),i}},function(e,n,i){var a=i(217),r=Object.prototype.hasOwnProperty;e.exports=function(e,n,i,l,t,d){var s=1&i,m=a(e),u=m.length;if(u!=a(n).length&&!s)return!1;for(var o=u;o--;){var k=m[o];if(!(s?k in n:r.call(n,k)))return!1}var y=d.get(e),b=d.get(n);if(y&&b)return y==n&&b==e;var c=!0;d.set(e,n),d.set(n,e);for(var g=s;++o<u;){var p=e[k=m[o]],H=n[k];if(l)var S=s?l(H,p,k,n,e,d):l(p,H,k,e,n,d);if(!(void 0===S?p===H||t(p,H,i,l,d):S)){c=!1;break}g||(g="constructor"==k)}if(c&&!g){var h=e.constructor,z=n.constructor;h==z||!("constructor"in e)||!("constructor"in n)||"function"==typeof h&&h instanceof h&&"function"==typeof z&&z instanceof z||(c=!1)}return d.delete(e),d.delete(n),c}},function(e,n,i){var a=i(218),r=i(219),l=i(105);e.exports=function(e){return a(e,l,r)}},function(e,n,i){var a=i(95),r=i(13);e.exports=function(e,n,i){var l=n(e);return r(e)?l:a(l,i(e))}},function(e,n,i){var a=i(220),r=i(221),l=Object.prototype.propertyIsEnumerable,t=Object.getOwnPropertySymbols,d=t?function(e){return null==e?[]:(e=Object(e),a(t(e),(function(n){return l.call(e,n)})))}:r;e.exports=d},function(e,n){e.exports=function(e,n){for(var i=-1,a=null==e?0:e.length,r=0,l=[];++i<a;){var t=e[i];n(t,i,e)&&(l[r++]=t)}return l}},function(e,n){e.exports=function(){return[]}},function(e,n,i){var a=i(223),r=i(54),l=i(13),t=i(106),d=i(107),s=i(108),m=Object.prototype.hasOwnProperty;e.exports=function(e,n){var i=l(e),u=!i&&r(e),o=!i&&!u&&t(e),k=!i&&!u&&!o&&s(e),y=i||u||o||k,b=y?a(e.length,String):[],c=b.length;for(var g in e)!n&&!m.call(e,g)||y&&("length"==g||o&&("offset"==g||"parent"==g)||k&&("buffer"==g||"byteLength"==g||"byteOffset"==g)||d(g,c))||b.push(g);return b}},function(e,n){e.exports=function(e,n){for(var i=-1,a=Array(e);++i<e;)a[i]=n(i);return a}},function(e,n){e.exports=function(){return!1}},function(e,n,i){var a=i(26),r=i(59),l=i(21),t={};t["[object Float32Array]"]=t["[object Float64Array]"]=t["[object Int8Array]"]=t["[object Int16Array]"]=t["[object Int32Array]"]=t["[object Uint8Array]"]=t["[object Uint8ClampedArray]"]=t["[object Uint16Array]"]=t["[object Uint32Array]"]=!0,t["[object Arguments]"]=t["[object Array]"]=t["[object ArrayBuffer]"]=t["[object Boolean]"]=t["[object DataView]"]=t["[object Date]"]=t["[object Error]"]=t["[object Function]"]=t["[object Map]"]=t["[object Number]"]=t["[object Object]"]=t["[object RegExp]"]=t["[object Set]"]=t["[object String]"]=t["[object WeakMap]"]=!1,e.exports=function(e){return l(e)&&r(e.length)&&!!t[a(e)]}},function(e,n){e.exports=function(e){return function(n){return e(n)}}},function(e,n,i){(function(e){var a=i(96),r=n&&!n.nodeType&&n,l=r&&"object"==typeof e&&e&&!e.nodeType&&e,t=l&&l.exports===r&&a.process,d=function(){try{var e=l&&l.require&&l.require("util").types;return e||t&&t.binding&&t.binding("util")}catch(e){}}();e.exports=d}).call(this,i(79)(e))},function(e,n,i){var a=i(229),r=i(230),l=Object.prototype.hasOwnProperty;e.exports=function(e){if(!a(e))return r(e);var n=[];for(var i in Object(e))l.call(e,i)&&"constructor"!=i&&n.push(i);return n}},function(e,n){var i=Object.prototype;e.exports=function(e){var n=e&&e.constructor;return e===("function"==typeof n&&n.prototype||i)}},function(e,n,i){var a=i(231)(Object.keys,Object);e.exports=a},function(e,n){e.exports=function(e,n){return function(i){return e(n(i))}}},function(e,n,i){var a=i(233),r=i(55),l=i(234),t=i(110),d=i(235),s=i(26),m=i(100),u=m(a),o=m(r),k=m(l),y=m(t),b=m(d),c=s;(a&&"[object DataView]"!=c(new a(new ArrayBuffer(1)))||r&&"[object Map]"!=c(new r)||l&&"[object Promise]"!=c(l.resolve())||t&&"[object Set]"!=c(new t)||d&&"[object WeakMap]"!=c(new d))&&(c=function(e){var n=s(e),i="[object Object]"==n?e.constructor:void 0,a=i?m(i):"";if(a)switch(a){case u:return"[object DataView]";case o:return"[object Map]";case k:return"[object Promise]";case y:return"[object Set]";case b:return"[object WeakMap]"}return n}),e.exports=c},function(e,n,i){var a=i(18)(i(14),"DataView");e.exports=a},function(e,n,i){var a=i(18)(i(14),"Promise");e.exports=a},function(e,n,i){var a=i(18)(i(14),"WeakMap");e.exports=a},function(e,n,i){var a=i(111),r=i(105);e.exports=function(e){for(var n=r(e),i=n.length;i--;){var l=n[i],t=e[l];n[i]=[l,t,a(t)]}return n}},function(e,n,i){var a=i(101),r=i(140),l=i(244),t=i(60),d=i(111),s=i(112),m=i(42);e.exports=function(e,n){return t(e)&&d(n)?s(m(e),n):function(i){var t=r(i,e);return void 0===t&&t===n?l(i,e):a(n,t,3)}}},function(e,n,i){var a=i(239),r=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,l=/\\(\\)?/g,t=a((function(e){var n=[];return 46===e.charCodeAt(0)&&n.push(""),e.replace(r,(function(e,i,a,r){n.push(a?r.replace(l,"$1"):i||e)})),n}));e.exports=t},function(e,n,i){var a=i(240);e.exports=function(e){var n=a(e,(function(e){return 500===i.size&&i.clear(),e})),i=n.cache;return n}},function(e,n,i){var a=i(57);function r(e,n){if("function"!=typeof e||null!=n&&"function"!=typeof n)throw new TypeError("Expected a function");var i=function(){var a=arguments,r=n?n.apply(this,a):a[0],l=i.cache;if(l.has(r))return l.get(r);var t=e.apply(this,a);return i.cache=l.set(r,t)||l,t};return i.cache=new(r.Cache||a),i}r.Cache=a,e.exports=r},function(e,n,i){var a=i(242);e.exports=function(e){return null==e?"":a(e)}},function(e,n,i){var a=i(27),r=i(243),l=i(13),t=i(61),d=a?a.prototype:void 0,s=d?d.toString:void 0;e.exports=function e(n){if("string"==typeof n)return n;if(l(n))return r(n,e)+"";if(t(n))return s?s.call(n):"";var i=n+"";return"0"==i&&1/n==-1/0?"-0":i}},function(e,n){e.exports=function(e,n){for(var i=-1,a=null==e?0:e.length,r=Array(a);++i<a;)r[i]=n(e[i],i,e);return r}},function(e,n,i){var a=i(245),r=i(246);e.exports=function(e,n){return null!=e&&r(e,n,a)}},function(e,n){e.exports=function(e,n){return null!=e&&n in Object(e)}},function(e,n,i){var a=i(114),r=i(54),l=i(13),t=i(107),d=i(59),s=i(42);e.exports=function(e,n,i){for(var m=-1,u=(n=a(n,e)).length,o=!1;++m<u;){var k=s(n[m]);if(!(o=null!=e&&i(e,k)))break;e=e[k]}return o||++m!=u?o:!!(u=null==e?0:e.length)&&d(u)&&t(k,u)&&(l(e)||r(e))}},function(e,n,i){var a=i(248),r=i(249),l=i(60),t=i(42);e.exports=function(e){return l(e)?a(t(e)):r(e)}},function(e,n){e.exports=function(e){return function(n){return null==n?void 0:n[e]}}},function(e,n,i){var a=i(113);e.exports=function(e){return function(n){return a(n,e)}}},function(e,n,i){var a=i(62),r=i(251),l=i(253);e.exports=function(e,n){return l(r(e,n,a),e+"")}},function(e,n,i){var a=i(252),r=Math.max;e.exports=function(e,n,i){return n=r(void 0===n?e.length-1:n,0),function(){for(var l=arguments,t=-1,d=r(l.length-n,0),s=Array(d);++t<d;)s[t]=l[n+t];t=-1;for(var m=Array(n+1);++t<n;)m[t]=l[t];return m[n]=i(s),a(e,this,m)}}},function(e,n){e.exports=function(e,n,i){switch(i.length){case 0:return e.call(n);case 1:return e.call(n,i[0]);case 2:return e.call(n,i[0],i[1]);case 3:return e.call(n,i[0],i[1],i[2])}return e.apply(n,i)}},function(e,n,i){var a=i(254),r=i(257)(a);e.exports=r},function(e,n,i){var a=i(255),r=i(256),l=i(62),t=r?function(e,n){return r(e,"toString",{configurable:!0,enumerable:!1,value:a(n),writable:!0})}:l;e.exports=t},function(e,n){e.exports=function(e){return function(){return e}}},function(e,n,i){var a=i(18),r=function(){try{var e=a(Object,"defineProperty");return e({},"",{}),e}catch(e){}}();e.exports=r},function(e,n){var i=Date.now;e.exports=function(e){var n=0,a=0;return function(){var r=i(),l=16-(r-a);if(a=r,l>0){if(++n>=800)return arguments[0]}else n=0;return e.apply(void 0,arguments)}}},function(e,n,i){var a=i(103),r=i(259),l=i(264),t=i(104),d=i(265),s=i(58);e.exports=function(e,n,i){var m=-1,u=r,o=e.length,k=!0,y=[],b=y;if(i)k=!1,u=l;else if(o>=200){var c=n?null:d(e);if(c)return s(c);k=!1,u=t,b=new a}else b=n?[]:y;e:for(;++m<o;){var g=e[m],p=n?n(g):g;if(g=i||0!==g?g:0,k&&p==p){for(var H=b.length;H--;)if(b[H]===p)continue e;n&&b.push(p),y.push(g)}else u(b,p,i)||(b!==y&&b.push(p),y.push(g))}return y}},function(e,n,i){var a=i(260);e.exports=function(e,n){return!!(null==e?0:e.length)&&a(e,n,0)>-1}},function(e,n,i){var a=i(261),r=i(262),l=i(263);e.exports=function(e,n,i){return n==n?l(e,n,i):a(e,r,i)}},function(e,n){e.exports=function(e,n,i,a){for(var r=e.length,l=i+(a?1:-1);a?l--:++l<r;)if(n(e[l],l,e))return l;return-1}},function(e,n){e.exports=function(e){return e!=e}},function(e,n){e.exports=function(e,n,i){for(var a=i-1,r=e.length;++a<r;)if(e[a]===n)return a;return-1}},function(e,n){e.exports=function(e,n,i){for(var a=-1,r=null==e?0:e.length;++a<r;)if(i(n,e[a]))return!0;return!1}},function(e,n,i){var a=i(110),r=i(266),l=i(58),t=a&&1/l(new a([,-0]))[1]==1/0?function(e){return new a(e)}:r;e.exports=t},function(e,n){e.exports=function(){}},function(e,n,i){var a=i(109),r=i(21);e.exports=function(e){return r(e)&&a(e)}},function(e,n,i){},function(e,n,i){},function(e,n,i){"use strict";i(115)},function(e,n,i){"use strict";i(116)},function(e,n,i){"use strict";i.r(n);i(16),i(23),i(30);var a=i(0);function r(e,n){for(var i in n)e[i]=n[i];return e}var l=/[!'()*]/g,t=function(e){return"%"+e.charCodeAt(0).toString(16)},d=/%2C/g,s=function(e){return encodeURIComponent(e).replace(l,t).replace(d,",")};function m(e){try{return decodeURIComponent(e)}catch(e){0}return e}var u=function(e){return null==e||"object"==typeof e?e:String(e)};function o(e){var n={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var i=e.replace(/\+/g," ").split("="),a=m(i.shift()),r=i.length>0?m(i.join("=")):null;void 0===n[a]?n[a]=r:Array.isArray(n[a])?n[a].push(r):n[a]=[n[a],r]})),n):n}function k(e){var n=e?Object.keys(e).map((function(n){var i=e[n];if(void 0===i)return"";if(null===i)return s(n);if(Array.isArray(i)){var a=[];return i.forEach((function(e){void 0!==e&&(null===e?a.push(s(n)):a.push(s(n)+"="+s(e)))})),a.join("&")}return s(n)+"="+s(i)})).filter((function(e){return e.length>0})).join("&"):null;return n?"?"+n:""}var y=/\/?$/;function b(e,n,i,a){var r=a&&a.options.stringifyQuery,l=n.query||{};try{l=c(l)}catch(e){}var t={name:n.name||e&&e.name,meta:e&&e.meta||{},path:n.path||"/",hash:n.hash||"",query:l,params:n.params||{},fullPath:H(n,r),matched:e?p(e):[]};return i&&(t.redirectedFrom=H(i,r)),Object.freeze(t)}function c(e){if(Array.isArray(e))return e.map(c);if(e&&"object"==typeof e){var n={};for(var i in e)n[i]=c(e[i]);return n}return e}var g=b(null,{path:"/"});function p(e){for(var n=[];e;)n.unshift(e),e=e.parent;return n}function H(e,n){var i=e.path,a=e.query;void 0===a&&(a={});var r=e.hash;return void 0===r&&(r=""),(i||"/")+(n||k)(a)+r}function S(e,n,i){return n===g?e===n:!!n&&(e.path&&n.path?e.path.replace(y,"")===n.path.replace(y,"")&&(i||e.hash===n.hash&&h(e.query,n.query)):!(!e.name||!n.name)&&(e.name===n.name&&(i||e.hash===n.hash&&h(e.query,n.query)&&h(e.params,n.params))))}function h(e,n){if(void 0===e&&(e={}),void 0===n&&(n={}),!e||!n)return e===n;var i=Object.keys(e).sort(),a=Object.keys(n).sort();return i.length===a.length&&i.every((function(i,r){var l=e[i];if(a[r]!==i)return!1;var t=n[i];return null==l||null==t?l===t:"object"==typeof l&&"object"==typeof t?h(l,t):String(l)===String(t)}))}function z(e){for(var n=0;n<e.matched.length;n++){var i=e.matched[n];for(var a in i.instances){var r=i.instances[a],l=i.enteredCbs[a];if(r&&l){delete i.enteredCbs[a];for(var t=0;t<l.length;t++)r._isBeingDestroyed||l[t](r)}}}}var v={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,n){var i=n.props,a=n.children,l=n.parent,t=n.data;t.routerView=!0;for(var d=l.$createElement,s=i.name,m=l.$route,u=l._routerViewCache||(l._routerViewCache={}),o=0,k=!1;l&&l._routerRoot!==l;){var y=l.$vnode?l.$vnode.data:{};y.routerView&&o++,y.keepAlive&&l._directInactive&&l._inactive&&(k=!0),l=l.$parent}if(t.routerViewDepth=o,k){var b=u[s],c=b&&b.component;return c?(b.configProps&&K(c,t,b.route,b.configProps),d(c,t,a)):d()}var g=m.matched[o],p=g&&g.components[s];if(!g||!p)return u[s]=null,d();u[s]={component:p},t.registerRouteInstance=function(e,n){var i=g.instances[s];(n&&i!==e||!n&&i===e)&&(g.instances[s]=n)},(t.hook||(t.hook={})).prepatch=function(e,n){g.instances[s]=n.componentInstance},t.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==g.instances[s]&&(g.instances[s]=e.componentInstance),z(m)};var H=g.props&&g.props[s];return H&&(r(u[s],{route:m,configProps:H}),K(p,t,m,H)),d(p,t,a)}};function K(e,n,i,a){var l=n.props=function(e,n){switch(typeof n){case"undefined":return;case"object":return n;case"function":return n(e);case"boolean":return n?e.params:void 0;default:0}}(i,a);if(l){l=n.props=r({},l);var t=n.attrs=n.attrs||{};for(var d in l)e.props&&d in e.props||(t[d]=l[d],delete l[d])}}function f(e,n,i){var a=e.charAt(0);if("/"===a)return e;if("?"===a||"#"===a)return n+e;var r=n.split("/");i&&r[r.length-1]||r.pop();for(var l=e.replace(/^\//,"").split("/"),t=0;t<l.length;t++){var d=l[t];".."===d?r.pop():"."!==d&&r.push(d)}return""!==r[0]&&r.unshift(""),r.join("/")}function A(e){return e.replace(/\/(?:\s*\/)+/g,"/")}var T=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},B=_,R=D,Y=function(e,n){return E(D(e,n),n)},P=E,N=M,O=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function D(e,n){for(var i,a=[],r=0,l=0,t="",d=n&&n.delimiter||"/";null!=(i=O.exec(e));){var s=i[0],m=i[1],u=i.index;if(t+=e.slice(l,u),l=u+s.length,m)t+=m[1];else{var o=e[l],k=i[2],y=i[3],b=i[4],c=i[5],g=i[6],p=i[7];t&&(a.push(t),t="");var H=null!=k&&null!=o&&o!==k,S="+"===g||"*"===g,h="?"===g||"*"===g,z=i[2]||d,v=b||c;a.push({name:y||r++,prefix:k||"",delimiter:z,optional:h,repeat:S,partial:H,asterisk:!!p,pattern:v?G(v):p?".*":"[^"+Z(z)+"]+?"})}}return l<e.length&&(t+=e.substr(l)),t&&a.push(t),a}function I(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function E(e,n){for(var i=new Array(e.length),a=0;a<e.length;a++)"object"==typeof e[a]&&(i[a]=new RegExp("^(?:"+e[a].pattern+")$",V(n)));return function(n,a){for(var r="",l=n||{},t=(a||{}).pretty?I:encodeURIComponent,d=0;d<e.length;d++){var s=e[d];if("string"!=typeof s){var m,u=l[s.name];if(null==u){if(s.optional){s.partial&&(r+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(T(u)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(u)+"`");if(0===u.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var o=0;o<u.length;o++){if(m=t(u[o]),!i[d].test(m))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(m)+"`");r+=(0===o?s.prefix:s.delimiter)+m}}else{if(m=s.asterisk?encodeURI(u).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):t(u),!i[d].test(m))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+m+'"');r+=s.prefix+m}}else r+=s}return r}}function Z(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function G(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function C(e,n){return e.keys=n,e}function V(e){return e&&e.sensitive?"":"i"}function M(e,n,i){T(n)||(i=n||i,n=[]);for(var a=(i=i||{}).strict,r=!1!==i.end,l="",t=0;t<e.length;t++){var d=e[t];if("string"==typeof d)l+=Z(d);else{var s=Z(d.prefix),m="(?:"+d.pattern+")";n.push(d),d.repeat&&(m+="(?:"+s+m+")*"),l+=m=d.optional?d.partial?s+"("+m+")?":"(?:"+s+"("+m+"))?":s+"("+m+")"}}var u=Z(i.delimiter||"/"),o=l.slice(-u.length)===u;return a||(l=(o?l.slice(0,-u.length):l)+"(?:"+u+"(?=$))?"),l+=r?"$":a&&o?"":"(?="+u+"|$)",C(new RegExp("^"+l,V(i)),n)}function _(e,n,i){return T(n)||(i=n||i,n=[]),i=i||{},e instanceof RegExp?function(e,n){var i=e.source.match(/\((?!\?)/g);if(i)for(var a=0;a<i.length;a++)n.push({name:a,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return C(e,n)}(e,n):T(e)?function(e,n,i){for(var a=[],r=0;r<e.length;r++)a.push(_(e[r],n,i).source);return C(new RegExp("(?:"+a.join("|")+")",V(i)),n)}(e,n,i):function(e,n,i){return M(D(e,i),n,i)}(e,n,i)}B.parse=R,B.compile=Y,B.tokensToFunction=P,B.tokensToRegExp=N;var F=Object.create(null);function x(e,n,i){n=n||{};try{var a=F[e]||(F[e]=B.compile(e));return"string"==typeof n.pathMatch&&(n[0]=n.pathMatch),a(n,{pretty:!0})}catch(e){return""}finally{delete n[0]}}function L(e,n,i,a){var l="string"==typeof e?{path:e}:e;if(l._normalized)return l;if(l.name){var t=(l=r({},e)).params;return t&&"object"==typeof t&&(l.params=r({},t)),l}if(!l.path&&l.params&&n){(l=r({},l))._normalized=!0;var d=r(r({},n.params),l.params);if(n.name)l.name=n.name,l.params=d;else if(n.matched.length){var s=n.matched[n.matched.length-1].path;l.path=x(s,d,n.path)}else 0;return l}var m=function(e){var n="",i="",a=e.indexOf("#");a>=0&&(n=e.slice(a),e=e.slice(0,a));var r=e.indexOf("?");return r>=0&&(i=e.slice(r+1),e=e.slice(0,r)),{path:e,query:i,hash:n}}(l.path||""),k=n&&n.path||"/",y=m.path?f(m.path,k,i||l.append):k,b=function(e,n,i){void 0===n&&(n={});var a,r=i||o;try{a=r(e||"")}catch(e){a={}}for(var l in n){var t=n[l];a[l]=Array.isArray(t)?t.map(u):u(t)}return a}(m.query,l.query,a&&a.options.parseQuery),c=l.hash||m.hash;return c&&"#"!==c.charAt(0)&&(c="#"+c),{_normalized:!0,path:y,query:b,hash:c}}var j,w=function(){},U={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var n=this,i=this.$router,a=this.$route,l=i.resolve(this.to,a,this.append),t=l.location,d=l.route,s=l.href,m={},u=i.options.linkActiveClass,o=i.options.linkExactActiveClass,k=null==u?"router-link-active":u,c=null==o?"router-link-exact-active":o,g=null==this.activeClass?k:this.activeClass,p=null==this.exactActiveClass?c:this.exactActiveClass,H=d.redirectedFrom?b(null,L(d.redirectedFrom),null,i):d;m[p]=S(a,H,this.exactPath),m[g]=this.exact||this.exactPath?m[p]:function(e,n){return 0===e.path.replace(y,"/").indexOf(n.path.replace(y,"/"))&&(!n.hash||e.hash===n.hash)&&function(e,n){for(var i in n)if(!(i in e))return!1;return!0}(e.query,n.query)}(a,H);var h=m[p]?this.ariaCurrentValue:null,z=function(e){$(e)&&(n.replace?i.replace(t,w):i.push(t,w))},v={click:$};Array.isArray(this.event)?this.event.forEach((function(e){v[e]=z})):v[this.event]=z;var K={class:m},f=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:s,route:d,navigate:z,isActive:m[g],isExactActive:m[p]});if(f){if(1===f.length)return f[0];if(f.length>1||!f.length)return 0===f.length?e():e("span",{},f)}if("a"===this.tag)K.on=v,K.attrs={href:s,"aria-current":h};else{var A=function e(n){var i;if(n)for(var a=0;a<n.length;a++){if("a"===(i=n[a]).tag)return i;if(i.children&&(i=e(i.children)))return i}}(this.$slots.default);if(A){A.isStatic=!1;var T=A.data=r({},A.data);for(var B in T.on=T.on||{},T.on){var R=T.on[B];B in v&&(T.on[B]=Array.isArray(R)?R:[R])}for(var Y in v)Y in T.on?T.on[Y].push(v[Y]):T.on[Y]=z;var P=A.data.attrs=r({},A.data.attrs);P.href=s,P["aria-current"]=h}else K.on=v}return e(this.tag,K,this.$slots.default)}};function $(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var n=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(n))return}return e.preventDefault&&e.preventDefault(),!0}}var J="undefined"!=typeof window;function W(e,n,i,a,r){var l=n||[],t=i||Object.create(null),d=a||Object.create(null);e.forEach((function(e){!function e(n,i,a,r,l,t){var d=r.path,s=r.name;0;var m=r.pathToRegexpOptions||{},u=function(e,n,i){i||(e=e.replace(/\/$/,""));if("/"===e[0])return e;if(null==n)return e;return A(n.path+"/"+e)}(d,l,m.strict);"boolean"==typeof r.caseSensitive&&(m.sensitive=r.caseSensitive);var o={path:u,regex:X(u,m),components:r.components||{default:r.component},alias:r.alias?"string"==typeof r.alias?[r.alias]:r.alias:[],instances:{},enteredCbs:{},name:s,parent:l,matchAs:t,redirect:r.redirect,beforeEnter:r.beforeEnter,meta:r.meta||{},props:null==r.props?{}:r.components?r.props:{default:r.props}};r.children&&r.children.forEach((function(r){var l=t?A(t+"/"+r.path):void 0;e(n,i,a,r,o,l)}));i[o.path]||(n.push(o.path),i[o.path]=o);if(void 0!==r.alias)for(var k=Array.isArray(r.alias)?r.alias:[r.alias],y=0;y<k.length;++y){0;var b={path:k[y],children:r.children};e(n,i,a,b,l,o.path||"/")}s&&(a[s]||(a[s]=o))}(l,t,d,e,r)}));for(var s=0,m=l.length;s<m;s++)"*"===l[s]&&(l.push(l.splice(s,1)[0]),m--,s--);return{pathList:l,pathMap:t,nameMap:d}}function X(e,n){return B(e,[],n)}function q(e,n){var i=W(e),a=i.pathList,r=i.pathMap,l=i.nameMap;function t(e,i,t){var d=L(e,i,!1,n),m=d.name;if(m){var u=l[m];if(!u)return s(null,d);var o=u.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof d.params&&(d.params={}),i&&"object"==typeof i.params)for(var k in i.params)!(k in d.params)&&o.indexOf(k)>-1&&(d.params[k]=i.params[k]);return d.path=x(u.path,d.params),s(u,d,t)}if(d.path){d.params={};for(var y=0;y<a.length;y++){var b=a[y],c=r[b];if(Q(c.regex,d.path,d.params))return s(c,d,t)}}return s(null,d)}function d(e,i){var a=e.redirect,r="function"==typeof a?a(b(e,i,null,n)):a;if("string"==typeof r&&(r={path:r}),!r||"object"!=typeof r)return s(null,i);var d=r,m=d.name,u=d.path,o=i.query,k=i.hash,y=i.params;if(o=d.hasOwnProperty("query")?d.query:o,k=d.hasOwnProperty("hash")?d.hash:k,y=d.hasOwnProperty("params")?d.params:y,m){l[m];return t({_normalized:!0,name:m,query:o,hash:k,params:y},void 0,i)}if(u){var c=function(e,n){return f(e,n.parent?n.parent.path:"/",!0)}(u,e);return t({_normalized:!0,path:x(c,y),query:o,hash:k},void 0,i)}return s(null,i)}function s(e,i,a){return e&&e.redirect?d(e,a||i):e&&e.matchAs?function(e,n,i){var a=t({_normalized:!0,path:x(i,n.params)});if(a){var r=a.matched,l=r[r.length-1];return n.params=a.params,s(l,n)}return s(null,n)}(0,i,e.matchAs):b(e,i,a,n)}return{match:t,addRoute:function(e,n){var i="object"!=typeof e?l[e]:void 0;W([n||e],a,r,l,i),i&&i.alias.length&&W(i.alias.map((function(e){return{path:e,children:[n]}})),a,r,l,i)},getRoutes:function(){return a.map((function(e){return r[e]}))},addRoutes:function(e){W(e,a,r,l)}}}function Q(e,n,i){var a=n.match(e);if(!a)return!1;if(!i)return!0;for(var r=1,l=a.length;r<l;++r){var t=e.keys[r-1];t&&(i[t.name||"pathMatch"]="string"==typeof a[r]?m(a[r]):a[r])}return!0}var ee=J&&window.performance&&window.performance.now?window.performance:Date;function ne(){return ee.now().toFixed(3)}var ie=ne();function ae(){return ie}function re(e){return ie=e}var le=Object.create(null);function te(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,n=window.location.href.replace(e,""),i=r({},window.history.state);return i.key=ae(),window.history.replaceState(i,"",n),window.addEventListener("popstate",me),function(){window.removeEventListener("popstate",me)}}function de(e,n,i,a){if(e.app){var r=e.options.scrollBehavior;r&&e.app.$nextTick((function(){var l=function(){var e=ae();if(e)return le[e]}(),t=r.call(e,n,i,a?l:null);t&&("function"==typeof t.then?t.then((function(e){be(e,l)})).catch((function(e){0})):be(t,l))}))}}function se(){var e=ae();e&&(le[e]={x:window.pageXOffset,y:window.pageYOffset})}function me(e){se(),e.state&&e.state.key&&re(e.state.key)}function ue(e){return ke(e.x)||ke(e.y)}function oe(e){return{x:ke(e.x)?e.x:window.pageXOffset,y:ke(e.y)?e.y:window.pageYOffset}}function ke(e){return"number"==typeof e}var ye=/^#\d/;function be(e,n){var i,a="object"==typeof e;if(a&&"string"==typeof e.selector){var r=ye.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(r){var l=e.offset&&"object"==typeof e.offset?e.offset:{};n=function(e,n){var i=document.documentElement.getBoundingClientRect(),a=e.getBoundingClientRect();return{x:a.left-i.left-n.x,y:a.top-i.top-n.y}}(r,l={x:ke((i=l).x)?i.x:0,y:ke(i.y)?i.y:0})}else ue(e)&&(n=oe(e))}else a&&ue(e)&&(n=oe(e));n&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:n.x,top:n.y,behavior:e.behavior}):window.scrollTo(n.x,n.y))}var ce,ge=J&&((-1===(ce=window.navigator.userAgent).indexOf("Android 2.")&&-1===ce.indexOf("Android 4.0")||-1===ce.indexOf("Mobile Safari")||-1!==ce.indexOf("Chrome")||-1!==ce.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function pe(e,n){se();var i=window.history;try{if(n){var a=r({},i.state);a.key=ae(),i.replaceState(a,"",e)}else i.pushState({key:re(ne())},"",e)}catch(i){window.location[n?"replace":"assign"](e)}}function He(e){pe(e,!0)}var Se={redirected:2,aborted:4,cancelled:8,duplicated:16};function he(e,n){return ve(e,n,Se.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var n={};return Ke.forEach((function(i){i in e&&(n[i]=e[i])})),JSON.stringify(n,null,2)}(n)+'" via a navigation guard.')}function ze(e,n){return ve(e,n,Se.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+n.fullPath+'" with a new navigation.')}function ve(e,n,i,a){var r=new Error(a);return r._isRouter=!0,r.from=e,r.to=n,r.type=i,r}var Ke=["params","query","hash"];function fe(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function Ae(e,n){return fe(e)&&e._isRouter&&(null==n||e.type===n)}function Te(e,n,i){var a=function(r){r>=e.length?i():e[r]?n(e[r],(function(){a(r+1)})):a(r+1)};a(0)}function Be(e){return function(n,i,a){var r=!1,l=0,t=null;Re(e,(function(e,n,i,d){if("function"==typeof e&&void 0===e.cid){r=!0,l++;var s,m=Ne((function(n){var r;((r=n).__esModule||Pe&&"Module"===r[Symbol.toStringTag])&&(n=n.default),e.resolved="function"==typeof n?n:j.extend(n),i.components[d]=n,--l<=0&&a()})),u=Ne((function(e){var n="Failed to resolve async component "+d+": "+e;t||(t=fe(e)?e:new Error(n),a(t))}));try{s=e(m,u)}catch(e){u(e)}if(s)if("function"==typeof s.then)s.then(m,u);else{var o=s.component;o&&"function"==typeof o.then&&o.then(m,u)}}})),r||a()}}function Re(e,n){return Ye(e.map((function(e){return Object.keys(e.components).map((function(i){return n(e.components[i],e.instances[i],e,i)}))})))}function Ye(e){return Array.prototype.concat.apply([],e)}var Pe="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function Ne(e){var n=!1;return function(){for(var i=[],a=arguments.length;a--;)i[a]=arguments[a];if(!n)return n=!0,e.apply(this,i)}}var Oe=function(e,n){this.router=e,this.base=function(e){if(!e)if(J){var n=document.querySelector("base");e=(e=n&&n.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";"/"!==e.charAt(0)&&(e="/"+e);return e.replace(/\/$/,"")}(n),this.current=g,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function De(e,n,i,a){var r=Re(e,(function(e,a,r,l){var t=function(e,n){"function"!=typeof e&&(e=j.extend(e));return e.options[n]}(e,n);if(t)return Array.isArray(t)?t.map((function(e){return i(e,a,r,l)})):i(t,a,r,l)}));return Ye(a?r.reverse():r)}function Ie(e,n){if(n)return function(){return e.apply(n,arguments)}}Oe.prototype.listen=function(e){this.cb=e},Oe.prototype.onReady=function(e,n){this.ready?e():(this.readyCbs.push(e),n&&this.readyErrorCbs.push(n))},Oe.prototype.onError=function(e){this.errorCbs.push(e)},Oe.prototype.transitionTo=function(e,n,i){var a,r=this;try{a=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(n){n(e)})),e}var l=this.current;this.confirmTransition(a,(function(){r.updateRoute(a),n&&n(a),r.ensureURL(),r.router.afterHooks.forEach((function(e){e&&e(a,l)})),r.ready||(r.ready=!0,r.readyCbs.forEach((function(e){e(a)})))}),(function(e){i&&i(e),e&&!r.ready&&(Ae(e,Se.redirected)&&l===g||(r.ready=!0,r.readyErrorCbs.forEach((function(n){n(e)}))))}))},Oe.prototype.confirmTransition=function(e,n,i){var a=this,r=this.current;this.pending=e;var l,t,d=function(e){!Ae(e)&&fe(e)&&(a.errorCbs.length?a.errorCbs.forEach((function(n){n(e)})):console.error(e)),i&&i(e)},s=e.matched.length-1,m=r.matched.length-1;if(S(e,r)&&s===m&&e.matched[s]===r.matched[m])return this.ensureURL(),e.hash&&de(this.router,r,e,!1),d(((t=ve(l=r,e,Se.duplicated,'Avoided redundant navigation to current location: "'+l.fullPath+'".')).name="NavigationDuplicated",t));var u=function(e,n){var i,a=Math.max(e.length,n.length);for(i=0;i<a&&e[i]===n[i];i++);return{updated:n.slice(0,i),activated:n.slice(i),deactivated:e.slice(i)}}(this.current.matched,e.matched),o=u.updated,k=u.deactivated,y=u.activated,b=[].concat(function(e){return De(e,"beforeRouteLeave",Ie,!0)}(k),this.router.beforeHooks,function(e){return De(e,"beforeRouteUpdate",Ie)}(o),y.map((function(e){return e.beforeEnter})),Be(y)),c=function(n,i){if(a.pending!==e)return d(ze(r,e));try{n(e,r,(function(n){!1===n?(a.ensureURL(!0),d(function(e,n){return ve(e,n,Se.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+n.fullPath+'" via a navigation guard.')}(r,e))):fe(n)?(a.ensureURL(!0),d(n)):"string"==typeof n||"object"==typeof n&&("string"==typeof n.path||"string"==typeof n.name)?(d(he(r,e)),"object"==typeof n&&n.replace?a.replace(n):a.push(n)):i(n)}))}catch(e){d(e)}};Te(b,c,(function(){Te(function(e){return De(e,"beforeRouteEnter",(function(e,n,i,a){return function(e,n,i){return function(a,r,l){return e(a,r,(function(e){"function"==typeof e&&(n.enteredCbs[i]||(n.enteredCbs[i]=[]),n.enteredCbs[i].push(e)),l(e)}))}}(e,i,a)}))}(y).concat(a.router.resolveHooks),c,(function(){if(a.pending!==e)return d(ze(r,e));a.pending=null,n(e),a.router.app&&a.router.app.$nextTick((function(){z(e)}))}))}))},Oe.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},Oe.prototype.setupListeners=function(){},Oe.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=g,this.pending=null};var Ee=function(e){function n(n,i){e.call(this,n,i),this._startLocation=Ze(this.base)}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var n=this.router,i=n.options.scrollBehavior,a=ge&&i;a&&this.listeners.push(te());var r=function(){var i=e.current,r=Ze(e.base);e.current===g&&r===e._startLocation||e.transitionTo(r,(function(e){a&&de(n,e,i,!0)}))};window.addEventListener("popstate",r),this.listeners.push((function(){window.removeEventListener("popstate",r)}))}},n.prototype.go=function(e){window.history.go(e)},n.prototype.push=function(e,n,i){var a=this,r=this.current;this.transitionTo(e,(function(e){pe(A(a.base+e.fullPath)),de(a.router,e,r,!1),n&&n(e)}),i)},n.prototype.replace=function(e,n,i){var a=this,r=this.current;this.transitionTo(e,(function(e){He(A(a.base+e.fullPath)),de(a.router,e,r,!1),n&&n(e)}),i)},n.prototype.ensureURL=function(e){if(Ze(this.base)!==this.current.fullPath){var n=A(this.base+this.current.fullPath);e?pe(n):He(n)}},n.prototype.getCurrentLocation=function(){return Ze(this.base)},n}(Oe);function Ze(e){var n=window.location.pathname,i=n.toLowerCase(),a=e.toLowerCase();return!e||i!==a&&0!==i.indexOf(A(a+"/"))||(n=n.slice(e.length)),(n||"/")+window.location.search+window.location.hash}var Ge=function(e){function n(n,i,a){e.call(this,n,i),a&&function(e){var n=Ze(e);if(!/^\/#/.test(n))return window.location.replace(A(e+"/#"+n)),!0}(this.base)||Ce()}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var n=this.router.options.scrollBehavior,i=ge&&n;i&&this.listeners.push(te());var a=function(){var n=e.current;Ce()&&e.transitionTo(Ve(),(function(a){i&&de(e.router,a,n,!0),ge||Fe(a.fullPath)}))},r=ge?"popstate":"hashchange";window.addEventListener(r,a),this.listeners.push((function(){window.removeEventListener(r,a)}))}},n.prototype.push=function(e,n,i){var a=this,r=this.current;this.transitionTo(e,(function(e){_e(e.fullPath),de(a.router,e,r,!1),n&&n(e)}),i)},n.prototype.replace=function(e,n,i){var a=this,r=this.current;this.transitionTo(e,(function(e){Fe(e.fullPath),de(a.router,e,r,!1),n&&n(e)}),i)},n.prototype.go=function(e){window.history.go(e)},n.prototype.ensureURL=function(e){var n=this.current.fullPath;Ve()!==n&&(e?_e(n):Fe(n))},n.prototype.getCurrentLocation=function(){return Ve()},n}(Oe);function Ce(){var e=Ve();return"/"===e.charAt(0)||(Fe("/"+e),!1)}function Ve(){var e=window.location.href,n=e.indexOf("#");return n<0?"":e=e.slice(n+1)}function Me(e){var n=window.location.href,i=n.indexOf("#");return(i>=0?n.slice(0,i):n)+"#"+e}function _e(e){ge?pe(Me(e)):window.location.hash=e}function Fe(e){ge?He(Me(e)):window.location.replace(Me(e))}var xe=function(e){function n(n,i){e.call(this,n,i),this.stack=[],this.index=-1}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.push=function(e,n,i){var a=this;this.transitionTo(e,(function(e){a.stack=a.stack.slice(0,a.index+1).concat(e),a.index++,n&&n(e)}),i)},n.prototype.replace=function(e,n,i){var a=this;this.transitionTo(e,(function(e){a.stack=a.stack.slice(0,a.index).concat(e),n&&n(e)}),i)},n.prototype.go=function(e){var n=this,i=this.index+e;if(!(i<0||i>=this.stack.length)){var a=this.stack[i];this.confirmTransition(a,(function(){var e=n.current;n.index=i,n.updateRoute(a),n.router.afterHooks.forEach((function(n){n&&n(a,e)}))}),(function(e){Ae(e,Se.duplicated)&&(n.index=i)}))}},n.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},n.prototype.ensureURL=function(){},n}(Oe),Le=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=q(e.routes||[],this);var n=e.mode||"hash";switch(this.fallback="history"===n&&!ge&&!1!==e.fallback,this.fallback&&(n="hash"),J||(n="abstract"),this.mode=n,n){case"history":this.history=new Ee(this,e.base);break;case"hash":this.history=new Ge(this,e.base,this.fallback);break;case"abstract":this.history=new xe(this,e.base);break;default:0}},je={currentRoute:{configurable:!0}};Le.prototype.match=function(e,n,i){return this.matcher.match(e,n,i)},je.currentRoute.get=function(){return this.history&&this.history.current},Le.prototype.init=function(e){var n=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var i=n.apps.indexOf(e);i>-1&&n.apps.splice(i,1),n.app===e&&(n.app=n.apps[0]||null),n.app||n.history.teardown()})),!this.app){this.app=e;var i=this.history;if(i instanceof Ee||i instanceof Ge){var a=function(e){i.setupListeners(),function(e){var a=i.current,r=n.options.scrollBehavior;ge&&r&&"fullPath"in e&&de(n,e,a,!1)}(e)};i.transitionTo(i.getCurrentLocation(),a,a)}i.listen((function(e){n.apps.forEach((function(n){n._route=e}))}))}},Le.prototype.beforeEach=function(e){return Ue(this.beforeHooks,e)},Le.prototype.beforeResolve=function(e){return Ue(this.resolveHooks,e)},Le.prototype.afterEach=function(e){return Ue(this.afterHooks,e)},Le.prototype.onReady=function(e,n){this.history.onReady(e,n)},Le.prototype.onError=function(e){this.history.onError(e)},Le.prototype.push=function(e,n,i){var a=this;if(!n&&!i&&"undefined"!=typeof Promise)return new Promise((function(n,i){a.history.push(e,n,i)}));this.history.push(e,n,i)},Le.prototype.replace=function(e,n,i){var a=this;if(!n&&!i&&"undefined"!=typeof Promise)return new Promise((function(n,i){a.history.replace(e,n,i)}));this.history.replace(e,n,i)},Le.prototype.go=function(e){this.history.go(e)},Le.prototype.back=function(){this.go(-1)},Le.prototype.forward=function(){this.go(1)},Le.prototype.getMatchedComponents=function(e){var n=e?e.matched?e:this.resolve(e).route:this.currentRoute;return n?[].concat.apply([],n.matched.map((function(e){return Object.keys(e.components).map((function(n){return e.components[n]}))}))):[]},Le.prototype.resolve=function(e,n,i){var a=L(e,n=n||this.history.current,i,this),r=this.match(a,n),l=r.redirectedFrom||r.fullPath;return{location:a,route:r,href:function(e,n,i){var a="hash"===i?"#"+n:n;return e?A(e+"/"+a):a}(this.history.base,l,this.mode),normalizedTo:a,resolved:r}},Le.prototype.getRoutes=function(){return this.matcher.getRoutes()},Le.prototype.addRoute=function(e,n){this.matcher.addRoute(e,n),this.history.current!==g&&this.history.transitionTo(this.history.getCurrentLocation())},Le.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==g&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Le.prototype,je);var we=Le;function Ue(e,n){return e.push(n),function(){var i=e.indexOf(n);i>-1&&e.splice(i,1)}}Le.install=function e(n){if(!e.installed||j!==n){e.installed=!0,j=n;var i=function(e){return void 0!==e},a=function(e,n){var a=e.$options._parentVnode;i(a)&&i(a=a.data)&&i(a=a.registerRouteInstance)&&a(e,n)};n.mixin({beforeCreate:function(){i(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),n.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,a(this,this)},destroyed:function(){a(this)}}),Object.defineProperty(n.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(n.prototype,"$route",{get:function(){return this._routerRoot._route}}),n.component("RouterView",v),n.component("RouterLink",U);var r=n.config.optionMergeStrategies;r.beforeRouteEnter=r.beforeRouteLeave=r.beforeRouteUpdate=r.created}},Le.version="3.6.5",Le.isNavigationFailure=Ae,Le.NavigationFailureType=Se,Le.START_LOCATION=g,J&&window.Vue&&window.Vue.use(Le);i(125),i(65),i(126);i(127),i(121);var $e={"components/AlgoliaSearchBox":()=>Promise.all([i.e(0),i.e(27)]).then(i.bind(null,739)),"components/DropdownLink":()=>Promise.all([i.e(0),i.e(25)]).then(i.bind(null,485)),"components/DropdownTransition":()=>Promise.all([i.e(0),i.e(56)]).then(i.bind(null,445)),"components/Home":()=>Promise.all([i.e(0),i.e(40)]).then(i.bind(null,595)),"components/NavLink":()=>i.e(60).then(i.bind(null,384)),"components/NavLinks":()=>Promise.all([i.e(0),i.e(24)]).then(i.bind(null,500)),"components/Navbar":()=>Promise.all([i.e(0),i.e(4)]).then(i.bind(null,727)),"components/Page":()=>Promise.all([i.e(0),i.e(23)]).then(i.bind(null,596)),"components/PageEdit":()=>Promise.all([i.e(0),i.e(41)]).then(i.bind(null,515)),"components/PageNav":()=>Promise.all([i.e(0),i.e(34)]).then(i.bind(null,516)),"components/Sidebar":()=>Promise.all([i.e(0),i.e(22)]).then(i.bind(null,597)),"components/SidebarButton":()=>Promise.all([i.e(0),i.e(57)]).then(i.bind(null,599)),"components/SidebarGroup":()=>Promise.all([i.e(0),i.e(7)]).then(i.bind(null,501)),"components/SidebarLink":()=>Promise.all([i.e(0),i.e(43)]).then(i.bind(null,486)),"components/SidebarLinks":()=>Promise.all([i.e(0),i.e(7)]).then(i.bind(null,478)),"global-components/Badge":()=>Promise.all([i.e(0),i.e(9)]).then(i.bind(null,757)),"global-components/CodeBlock":()=>Promise.all([i.e(0),i.e(10)]).then(i.bind(null,740)),"global-components/CodeGroup":()=>Promise.all([i.e(0),i.e(11)]).then(i.bind(null,741)),"layouts/404":()=>i.e(12).then(i.bind(null,742)),"layouts/Layout":()=>Promise.all([i.e(0),i.e(4),i.e(5),i.e(8)]).then(i.bind(null,743)),NotFound:()=>i.e(12).then(i.bind(null,742)),Layout:()=>Promise.all([i.e(0),i.e(4),i.e(5),i.e(8)]).then(i.bind(null,743))},Je={"v-90050004":()=>i.e(69).then(i.bind(null,758)),"v-61b42a93":()=>i.e(70).then(i.bind(null,759)),"v-6465b33d":()=>i.e(71).then(i.bind(null,760)),"v-64dca03d":()=>i.e(61).then(i.bind(null,761)),"v-81b8a67a":()=>i.e(73).then(i.bind(null,762)),"v-22024c43":()=>i.e(72).then(i.bind(null,763)),"v-23bd824f":()=>i.e(74).then(i.bind(null,764)),"v-48317b86":()=>i.e(62).then(i.bind(null,765)),"v-5b1695dd":()=>i.e(35).then(i.bind(null,766)),"v-822cf8c6":()=>i.e(75).then(i.bind(null,767)),"v-7e81b77d":()=>i.e(44).then(i.bind(null,768)),"v-4888cd9d":()=>i.e(76).then(i.bind(null,769)),"v-01c649bd":()=>i.e(28).then(i.bind(null,770)),"v-7301a6d1":()=>i.e(77).then(i.bind(null,771)),"v-1178fa5d":()=>i.e(78).then(i.bind(null,772)),"v-432b5bd6":()=>i.e(79).then(i.bind(null,773)),"v-bc107546":()=>i.e(63).then(i.bind(null,774)),"v-485bbe8d":()=>i.e(80).then(i.bind(null,775)),"v-d80dcb06":()=>i.e(81).then(i.bind(null,776)),"v-0ec6f57d":()=>i.e(82).then(i.bind(null,777)),"v-f0808a06":()=>i.e(36).then(i.bind(null,778)),"v-3539d41d":()=>i.e(45).then(i.bind(null,779)),"v-3e221f7d":()=>i.e(84).then(i.bind(null,780)),"v-03088e53":()=>i.e(85).then(i.bind(null,781)),"v-1be15362":()=>i.e(83).then(i.bind(null,782)),"v-cc5a0b86":()=>i.e(64).then(i.bind(null,783)),"v-1ef8939d":()=>i.e(29).then(i.bind(null,784)),"v-751f6acf":()=>i.e(86).then(i.bind(null,785)),"v-8d4168c6":()=>i.e(65).then(i.bind(null,786)),"v-553c6446":()=>i.e(37).then(i.bind(null,787)),"v-9e25e106":()=>i.e(46).then(i.bind(null,788)),"v-9cc354c6":()=>i.e(87).then(i.bind(null,789)),"v-7e5b51bd":()=>i.e(30).then(i.bind(null,790)),"v-206455c6":()=>i.e(88).then(i.bind(null,791)),"v-3358815e":()=>i.e(89).then(i.bind(null,792)),"v-2fcc3a95":()=>i.e(91).then(i.bind(null,793)),"v-70a6dc4e":()=>i.e(92).then(i.bind(null,794)),"v-3637769d":()=>i.e(93).then(i.bind(null,795)),"v-e8779b46":()=>i.e(90).then(i.bind(null,796)),"v-3ee390dd":()=>i.e(94).then(i.bind(null,797)),"v-642a7506":()=>i.e(96).then(i.bind(null,798)),"v-68ac6685":()=>i.e(97).then(i.bind(null,799)),"v-f0a9c5f2":()=>i.e(26).then(i.bind(null,800)),"v-6480bcc7":()=>i.e(95).then(i.bind(null,801)),"v-e89e9b86":()=>i.e(66).then(i.bind(null,802)),"v-14ad9962":()=>i.e(98).then(i.bind(null,803)),"v-24f9d8c6":()=>i.e(67).then(i.bind(null,804)),"v-2b71dd9d":()=>i.e(99).then(i.bind(null,805)),"v-2c81f446":()=>i.e(31).then(i.bind(null,806)),"v-143b3106":()=>i.e(47).then(i.bind(null,807)),"v-448b4d1d":()=>i.e(100).then(i.bind(null,808)),"v-c07c3efa":()=>i.e(32).then(i.bind(null,809)),"v-29ce59bd":()=>i.e(33).then(i.bind(null,810)),"v-bfbd2b46":()=>i.e(102).then(i.bind(null,811)),"v-64fc905e":()=>i.e(101).then(i.bind(null,812)),"v-9f53f9d6":()=>i.e(103).then(i.bind(null,813)),"v-e73a02ea":()=>i.e(104).then(i.bind(null,814)),"v-7b0a82c6":()=>i.e(106).then(i.bind(null,815)),"v-48365a59":()=>i.e(105).then(i.bind(null,816)),"v-d8bdee46":()=>i.e(107).then(i.bind(null,817)),"v-35eaf572":()=>i.e(109).then(i.bind(null,818)),"v-b537e5f2":()=>i.e(108).then(i.bind(null,819)),"v-5a2e0d7d":()=>i.e(110).then(i.bind(null,820)),"v-aa99c1f6":()=>i.e(111).then(i.bind(null,821))};function We(e){const n=Object.create(null);return function(i){return n[i]||(n[i]=e(i))}}const Xe=/-(\w)/g,qe=We(e=>e.replace(Xe,(e,n)=>n?n.toUpperCase():"")),Qe=/\B([A-Z])/g,en=We(e=>e.replace(Qe,"-$1").toLowerCase()),nn=We(e=>e.charAt(0).toUpperCase()+e.slice(1));function an(e,n){if(!n)return;if(e(n))return e(n);return n.includes("-")?e(nn(qe(n))):e(nn(n))||e(en(n))}const rn=Object.assign({},$e,Je),ln=e=>rn[e],tn=e=>Je[e],dn=e=>$e[e],sn=e=>a.default.component(e);function mn(e){return an(tn,e)}function un(e){return an(dn,e)}function on(e){return an(ln,e)}function kn(e){return an(sn,e)}function yn(...e){return Promise.all(e.filter(e=>e).map(async e=>{if(!kn(e)&&on(e)){const n=await on(e)();a.default.component(e,n.default)}}))}function bn(e,n){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[e]=n)}var cn=i(117),gn=i.n(cn),pn=i(118),Hn=i.n(pn),Sn={created(){if(this.siteMeta=this.$site.headTags.filter(([e])=>"meta"===e).map(([e,n])=>n),this.$ssrContext){const n=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(e=n)?e.map(e=>{let n="<meta";return Object.keys(e).forEach(i=>{n+=` ${i}="${Hn()(e[i])}"`}),n+">"}).join("\n    "):"",this.$ssrContext.canonicalLink=zn(this.$canonicalUrl)}var e},mounted(){this.currentMetaTags=[...document.querySelectorAll("meta")],this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta(){document.title=this.$title,document.documentElement.lang=this.$lang;const e=this.getMergedMetaTags();this.currentMetaTags=vn(e,this.currentMetaTags)},getMergedMetaTags(){const e=this.$page.frontmatter.meta||[];return gn()([{name:"description",content:this.$description}],e,this.siteMeta,Kn)},updateCanonicalLink(){hn(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",zn(this.$canonicalUrl))}},watch:{$page(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy(){vn(null,this.currentMetaTags),hn()}};function hn(){const e=document.querySelector("link[rel='canonical']");e&&e.remove()}function zn(e=""){return e?`<link href="${e}" rel="canonical" />`:""}function vn(e,n){if(n&&[...n].filter(e=>e.parentNode===document.head).forEach(e=>document.head.removeChild(e)),e)return e.map(e=>{const n=document.createElement("meta");return Object.keys(e).forEach(i=>{n.setAttribute(i,e[i])}),document.head.appendChild(n),n})}function Kn(e){for(const n of["name","property","itemprop"])if(e.hasOwnProperty(n))return e[n]+n;return JSON.stringify(e)}i(64);var fn=i(119),An={mounted(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:i.n(fn)()((function(){this.setActiveHash()}),300),setActiveHash(){const e=[].slice.call(document.querySelectorAll(".sidebar-link")),n=[].slice.call(document.querySelectorAll(".header-anchor")).filter(n=>e.some(e=>e.hash===n.hash)),i=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),a=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),r=window.innerHeight+i;for(let e=0;e<n.length;e++){const l=n[e],t=n[e+1],d=0===e&&0===i||i>=l.parentElement.offsetTop+10&&(!t||i<t.parentElement.offsetTop-10),s=decodeURIComponent(this.$route.hash);if(d&&s!==decodeURIComponent(l.hash)){const i=l;if(r===a)for(let i=e+1;i<n.length;i++)if(s===decodeURIComponent(n[i].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(i.hash),()=>{this.$nextTick(()=>{this.$vuepress.$set("disableScrollBehavior",!1)})})}}}},beforeDestroy(){window.removeEventListener("scroll",this.onScroll)}},Tn=i(43),Bn=i.n(Tn),Rn=[Sn,An,{mounted(){Bn.a.configure({showSpinner:!1}),this.$router.beforeEach((e,n,i)=>{e.path===n.path||a.default.component(e.name)||Bn.a.start(),i()}),this.$router.afterEach(()=>{Bn.a.done(),this.isSidebarOpen=!1})}}],Yn={name:"GlobalLayout",computed:{layout(){const e=this.getLayout();return bn("layout",e),a.default.component(e)}},methods:{getLayout(){if(this.$page.path){const e=this.$page.frontmatter.layout;return e&&(this.$vuepress.getLayoutAsyncComponent(e)||this.$vuepress.getVueComponent(e))?e:"Layout"}return"NotFound"}}},Pn=i(28),Nn=Object(Pn.a)(Yn,(function(){return(0,this._self._c)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(e,n,i){switch(n){case"components":e[n]||(e[n]={}),Object.assign(e[n],i);break;case"mixins":e[n]||(e[n]=[]),e[n].push(...i);break;default:throw new Error("Unknown option name.")}}(Nn,"mixins",Rn);const On=[{name:"v-90050004",path:"/",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-90050004").then(i)}},{path:"/index.html",redirect:"/"},{name:"v-61b42a93",path:"/dijital-cuzdan.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-61b42a93").then(i)}},{name:"v-6465b33d",path:"/sorulan-sorular.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-6465b33d").then(i)}},{name:"v-64dca03d",path:"/pages/contact.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-64dca03d").then(i)}},{name:"v-81b8a67a",path:"/uyum-tarihleri.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-81b8a67a").then(i)}},{name:"v-22024c43",path:"/surum-yonetimi.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-22024c43").then(i)}},{name:"v-23bd824f",path:"/v1.0.1/contents/erisim-belirteci.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-23bd824f").then(i)}},{name:"v-48317b86",path:"/v1.0.1/contents/ekler.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-48317b86").then(i)}},{name:"v-5b1695dd",path:"/v1.0.1/contents/hesap-bilgisi-hizmeti.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-5b1695dd").then(i)}},{name:"v-822cf8c6",path:"/v1.0.1/contents/gkd.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-822cf8c6").then(i)}},{name:"v-7e81b77d",path:"/v1.0.1/contents/kapsam-ve-dayanak.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-7e81b77d").then(i)}},{name:"v-4888cd9d",path:"/v1.0.1/contents/hhs-yos-api.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-4888cd9d").then(i)}},{name:"v-01c649bd",path:"/v1.0.1/contents/odeme-emri-baslatma-hizmeti.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-01c649bd").then(i)}},{name:"v-7301a6d1",path:"/v1.0.1/contents/riza-durumlari.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-7301a6d1").then(i)}},{name:"v-1178fa5d",path:"/v1.0.1/contents/tanim-ve-kisitlamalar.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-1178fa5d").then(i)}},{name:"v-432b5bd6",path:"/v1.0.1/contents/temel-prensipler.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-432b5bd6").then(i)}},{name:"v-bc107546",path:"/v1.0.2/contents/ekler.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-bc107546").then(i)}},{name:"v-485bbe8d",path:"/v1.0.2/contents/erisim-belirteci.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-485bbe8d").then(i)}},{name:"v-d80dcb06",path:"/v1.0.2/contents/gkd.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-d80dcb06").then(i)}},{name:"v-0ec6f57d",path:"/v1.0.2/contents/hhs-yos-api.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-0ec6f57d").then(i)}},{name:"v-f0808a06",path:"/v1.0.2/contents/hesap-bilgisi-hizmeti.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-f0808a06").then(i)}},{name:"v-3539d41d",path:"/v1.0.2/contents/kapsam-ve-dayanak.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-3539d41d").then(i)}},{name:"v-3e221f7d",path:"/v1.0.2/contents/tanim-ve-kisitlamalar.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-3e221f7d").then(i)}},{name:"v-03088e53",path:"/v1.0.2/contents/temel-prensipler.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-03088e53").then(i)}},{name:"v-1be15362",path:"/v1.0.2/contents/riza-durumlari.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-1be15362").then(i)}},{name:"v-cc5a0b86",path:"/v1.1.0/contents/ekler.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-cc5a0b86").then(i)}},{name:"v-1ef8939d",path:"/v1.0.2/contents/odeme-emri-baslatma-hizmeti.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-1ef8939d").then(i)}},{name:"v-751f6acf",path:"/v1.1.0/contents/erisim-belirteci.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-751f6acf").then(i)}},{name:"v-8d4168c6",path:"/v1.1.0/contents/gkd.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-8d4168c6").then(i)}},{name:"v-553c6446",path:"/v1.1.0/contents/hesap-bilgisi-hizmeti.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-553c6446").then(i)}},{name:"v-9e25e106",path:"/v1.1.0/contents/kapsam-ve-dayanak.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-9e25e106").then(i)}},{name:"v-9cc354c6",path:"/v1.1.0/contents/hhs-yos-api.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-9cc354c6").then(i)}},{name:"v-7e5b51bd",path:"/v1.1.0/contents/odeme-emri-baslatma-hizmeti.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-7e5b51bd").then(i)}},{name:"v-206455c6",path:"/v1.1.0/contents/olay-bildirim.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-206455c6").then(i)}},{name:"v-3358815e",path:"/v1.1.0/contents/riza-durumlari.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-3358815e").then(i)}},{name:"v-2fcc3a95",path:"/v1.1.0/contents/temel-prensipler.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-2fcc3a95").then(i)}},{name:"v-70a6dc4e",path:"/v1.1.0/deneyalani/genel-bilgiler.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-70a6dc4e").then(i)}},{name:"v-3637769d",path:"/v1.1.0/deneyalani/hesap-bilgisi-api.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-3637769d").then(i)}},{name:"v-e8779b46",path:"/v1.1.0/contents/tanim-ve-kisitlamalar.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-e8779b46").then(i)}},{name:"v-3ee390dd",path:"/v1.1.0/deneyalani/hhs-yos-api.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-3ee390dd").then(i)}},{name:"v-642a7506",path:"/v1.1.0/deneyalani/olay-bildirim-api.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-642a7506").then(i)}},{name:"v-68ac6685",path:"/v1.1.0/deneyalani/test.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-68ac6685").then(i)}},{name:"v-f0a9c5f2",path:"/v2.0.0/contents/duzenli-odeme-emri-hizmeti.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-f0a9c5f2").then(i)}},{name:"v-6480bcc7",path:"/v1.1.0/deneyalani/odeme-emri-api.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-6480bcc7").then(i)}},{name:"v-e89e9b86",path:"/v2.0.0/contents/ekler.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-e89e9b86").then(i)}},{name:"v-14ad9962",path:"/v2.0.0/contents/erisim-belirteci.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-14ad9962").then(i)}},{name:"v-24f9d8c6",path:"/v2.0.0/contents/gkd.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-24f9d8c6").then(i)}},{name:"v-2b71dd9d",path:"/v2.0.0/contents/hhs-yos-api.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-2b71dd9d").then(i)}},{name:"v-2c81f446",path:"/v2.0.0/contents/hesap-bilgisi-hizmeti.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-2c81f446").then(i)}},{name:"v-143b3106",path:"/v2.0.0/contents/kapsam-ve-dayanak.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-143b3106").then(i)}},{name:"v-448b4d1d",path:"/v2.0.0/contents/olay-bildirim.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-448b4d1d").then(i)}},{name:"v-c07c3efa",path:"/v2.0.0/contents/ileri-tarihli-odeme-emri-hizmeti.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-c07c3efa").then(i)}},{name:"v-29ce59bd",path:"/v2.0.0/contents/odeme-emri-baslatma-hizmeti.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-29ce59bd").then(i)}},{name:"v-bfbd2b46",path:"/v2.0.0/contents/tanim-ve-kisitlamalar.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-bfbd2b46").then(i)}},{name:"v-64fc905e",path:"/v2.0.0/contents/riza-durumlari.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-64fc905e").then(i)}},{name:"v-9f53f9d6",path:"/v2.0.0/contents/temel-prensipler.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-9f53f9d6").then(i)}},{name:"v-e73a02ea",path:"/v2.0.0/deneyalani/duzenli-odeme-emri-api.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-e73a02ea").then(i)}},{name:"v-7b0a82c6",path:"/v2.0.0/deneyalani/hesap-bilgisi-api.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-7b0a82c6").then(i)}},{name:"v-48365a59",path:"/v2.0.0/deneyalani/genel-bilgiler.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-48365a59").then(i)}},{name:"v-d8bdee46",path:"/v2.0.0/deneyalani/hhs-yos-api.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-d8bdee46").then(i)}},{name:"v-35eaf572",path:"/v2.0.0/deneyalani/odeme-emri-api.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-35eaf572").then(i)}},{name:"v-b537e5f2",path:"/v2.0.0/deneyalani/ileri-tarihli-odeme-emri-api.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-b537e5f2").then(i)}},{name:"v-5a2e0d7d",path:"/v2.0.0/deneyalani/olay-bildirim-api.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-5a2e0d7d").then(i)}},{name:"v-aa99c1f6",path:"/v2.0.0/deneyalani/test.html",component:Nn,beforeEnter:(e,n,i)=>{yn("Layout","v-aa99c1f6").then(i)}},{path:"*",component:Nn}],Dn={title:"(ÖHVPS) API İLKE VE KURALLARI",description:" ",base:"/",headTags:[],pages:[{title:"ÖDEME HİZMETLERİ VERİ PAYLAŞIM SERVİSLERİ (ÖHVPS)",frontmatter:{},regularPath:"/",relativePath:"README.md",key:"v-90050004",path:"/",content:" ÖDEME HİZMETLERİ VERİ PAYLAŞIM SERVİSLERİ (ÖHVPS) \n API İLKE VE KURALLARI   \n SÜRÜM 2.0.0 aktif sürümdür. \n https://github.com/ohvps/ohvps.github.io/commits/master  adresi üzerinden değişiklik açıklamaları ve tarihçesi incelenebilir. \n \n SÜRÜM 1.1.0 geçiş tarihleri şu şekildedir. \n \n \n HHS/YÖS rolünde Sertifikasyona Geliş Son Tarihi : 1 Ağustos 2025 \n \n \n HHS rolünde Üretime Geçiş Son Tarihi : 1 Eylül 2025 \n \n \n SÜRÜM 2.0.0 geçiş tarihleri şu şekildedir. \n \n \n Sürüm Geçiş Tarihi : 1 Ağustos 2025 \n \n \n HHS(1.1.0’dan 2.0.0'a geçecek olan ve direkt 2.0.0’a gelecek olan) Sertifikasyon Başlangıç Tarihi :  1 Eylül 2025 \n \n \n HHS(1.1.0’dan 2.0.0’a geçecek olan, direkt 2.0.0’a gelecek olan) Yeni Sürüm Üretime Geçiş Başlangıç Tarihi : 1 Ekim 2025 \n \n \n YÖS(1.1.0’dan 2.0.0'a geçecek olan ve direkt 2.0.0’a gelecek olan) Sertifikasyon Başlangıç Tarihi : 1 Ekim 2025 \n \n \n HHS(1.1.0’dan 2.0.0’a geçecek olan) Sertifikasyon Bitiş Tarihi : 16 Ocak 2026 \n \n \n HHS(1.1.0’dan 2.0.0’a geçecek olan) Yeni Sürüm Üretime Geçiş Son Tarihi: 1 Mart 2026 \n \n \n YÖS(1.1.0’dan 2.0.0'a geçecek olan ve direkt 2.0.0’a gelecek olan) Yeni Sürüm Üretime Geçiş Başlangıç Tarihi : 1 Mart 2026 \n \n \n YÖS(1.1.0’dan 2.0.0’a geçecek olan) Sertifikasyon Bitiş Tarihi : 15 Mayıs 2026 \n \n \n YÖS(1.1.0’dan 2.0.0'a geçecek olan ve direkt 2.0.0’a gelecek olan) Yeni Sürüm Üretime Geçiş Son Tarihi : 1 Haziran 2026 \n \n \n Eski Sürümün(1.1.0) Kaldırılma Tarihi : 1 Haziran 2026\n \n \n \n ÖNEMLİ BİLGİLENDİRME : 31 Aralık 2025 tarihinde geçiş zorunluluğu olan HHS’lerin 1 Ağustos 2025 tarihinden sonra Sürüm 2.0.0 sertifikasyonuna gelmesi durumunda en geç 31 Aralık 2025 tarihine kadar sertifikasyon sürecini tamamlayarak üretime geçmeleri gerekmektedir. \n YÖS’lerin sadece kendilerinin destekledikleri API sürümünü destekleyen HHS’leri listelemesi gerekmektedir. \n 1.1.0 sürümü için hesap bilgisi rızası ve ödeme emri rızası oluşturmak isteyen YÖS kurumu için YOS API içerisinde apiBilgileri olarak \"ODS\" tanımı HHS tarafından kontrol edilmelidir. YÖS'ün ilgili tanımı olmaması halinde rıza isteğinde \"TR.OHVPS.Resource.APIVersionNotSupported\" hatası verilmelidir. \n Sürüm Yönetimi  bölümünden tarih bilgilerinin açıklamalarına ulaşılabilir. \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n "},{title:"Dijital Cüzdanlardan TR Karekod ile Ödeme",frontmatter:{},regularPath:"/dijital-cuzdan.html",relativePath:"dijital-cuzdan.md",key:"v-61b42a93",path:"/dijital-cuzdan.html",headers:[{level:2,title:"1.      Dijital Cüzdana Kart Ekleme Akışı",slug:"_1-dijital-cuzdana-kart-ekleme-akısı"},{level:2,title:"2. Uyum Tarihi",slug:"_2-uyum-tarihi"}],content:" Dijital Cüzdanlardan TR Karekod ile Ödeme \n Dijital cüzdanlara eklenmiş ve cüzdan sahibi kuruluşun kendisinin ihraç etmediği, diğer Kart Çıkaran Kuruluşlar tarafından ihraç edilmiş kartlar ile TR Karekod ödemesi yapılabilmesi için HHS olarak GEÇİT’e bağlanmış olan Kart Çıkaran Kuruluşların,  BKM (Kartlı Ödemeler) TR Karekod Teknik İlke ve Kuralları Rehberinde  yer alan 5.2 maddelerindeki belirtilen akışlar için BKM Karekod Yönlendirme Sistemi (KYS) entegrasyonu yapması gerekmektedir.  \n Bu sayede Kart Çıkaran Kuruluşlar, otorizasyon öncesinde işlemin POS’ta Kart PIN’i ile doğrulanmasını veya müşterinin telefonunda yüklü olan Kart Çıkaran Kuruluşa ait mobil uygulamaya anlık bildirim göndererek doğrulanmasını sağlayabilecektir. HHS olarak GEÇİT’e bağlanmış olan Kart Çıkaran Kuruluşlar için de bu doğrulama akışlarından en az birini hayata geçirmesi zorunludur. \n 1.      Dijital Cüzdana Kart Ekleme Akışı \n Dijital Cüzdanlardan ödeme yapılabilmesi için kullanıcıların ilk olarak kartı Dijital Cüzdana eklemesi gerekmektedir. Dijital Cüzdana eklenecek olan karta ait bilgiler kullanıcı tarafından cüzdana girilmektedir. Kart bilgilerinin Dijital Cüzdana eklenmesinin ardından kart hamili iki faktörlü doğrulama yöntemi (GO Güvenli Öde, 3D Secure  vb.) ile doğrulanması gerekmektedir.  Kart hamilinin iki faktörlü doğrulanmasının ardından kart cüzdana eklenir ve eklenen bu kartlar ile ödeme işlemleri yapılabilir. Dijital Cüzdanlarla yapılabilen işlemler aşağıda bilgi amaçlı özetlenmiştir. Bu belgenin Uyum Tarihi başlığında TR Karekod ile yapılan işlemler için kullanılacak doğrulama akışlarına yer verilmiştir. \n \n \n Dijital cüzdanlar ile fiziksel mağazalarda POS terminali üzerinden, e-ticaret sitelerinde ise online kanallar üzerinden  ödeme yapmak mümkündür. \n \n \n Fiziksel ödemelerde dijital cüzdan POS terminallerinde gösterilen TR Karekod’u okuyarak ödemeyi gerçekleştirebilir. İkinci bir yöntem olarak, mobil telefonun ve dijital cüzdanın NFC teknolojisini desteklemesi durumunda telefonun POS terminaline temassız olarak okutulması suretiyle ödeme yapılabilmesi mümkündür. \n \n \n E-ticaret ödemelerinde web sitesinde gösterilen TR Karekod’un dijital cüzdan ile okutulması suretiyle ödeme yapılması mümkündür. Sanal POS işlemlerinden kastedilen dijital cüzdanda saklı olan kart ile online kanallar üzerinden bir e-ticaret ödemesinin yapılmasıdır. \n 2. Uyum Tarihi \n Dijital cüzdan sahibi kuruluş ile cüzdana eklenen kart kuruluşunun farklı olması durumunda hem fiziki POS’larda hem de sanal POS’larda TR Karekod ile ödeme yapılabilmesine ilişkin akışlar BKM (Kartlı Ödemeler) TR Karekod Teknik İlke ve Kuralları Rehberinde 5.2. maddelerinde tariflenmiştir. \n Bu akışlarda; \n \n \n No-CVM (İlave doğrulama yapmadan) veya  \n \n \n Kart PIN (POS cihazında kart şifresi girilerek) veya  \n \n \n Anlık Bildirim ile (mobil telefonda yüklü olan kart çıkaran kuruluşa ait uygulama üzerinden ile müşteri doğrulaması yer almaktadır.) müşteri doğrulaması yer almaktadır. \n \n \n Kuruluşların tercihine göre yukarıda tariflenmiş olan akışlardan biri veya tamamı kuruluşlar tarafından desteklenebilir. Kuruluşların tercih ettiği akışlar için Karekod Yönlendirme Sistemi sertifikasyonlarını tamamlanması gerekmektedir. Yukarıda tariflenmiş akışlarda görüleceği üzere kart çıkaran kuruluşlar otorizasyon öncesinde kendi risk değerlendirmesini yaparak “No cvm” ilave bir doğrulama yöntemine gerek kalmadan da işlemleri sonlandırılmasını isteyebilmektedir. \n ** 31.12.2023 tarihinden önce HHS olarak GEÇİT’e bağlanmış olan Kart Çıkaran Kuruluşların  BKM (Kartlı Ödemeler) TR Karekod Teknik İlke ve Kuralları Rehberinde  yer alan madde 5.2’de tarifli akış/akışlar için Karekod Yönlendirme Sistemi sertifikasyonunun tamamlanarak en geç  30 Haziran 2024  tarihinde üretime geçmiş olması zorunludur. \n Nezdinde Ödeme hesabı bulunduran Kart Çıkaran diğer tüm Ödeme Hizmeti Sağlayıcıların da GEÇİT’e bağlantı sağlamaları sonrası ilk 6 ay içerisinde KYS sertifikasyonunu tamamlaması gerekmektedir.** \n"},{title:"Sıkça Sorulan Sorular",frontmatter:{},regularPath:"/sorulan-sorular.html",relativePath:"sorulan-sorular.md",key:"v-6465b33d",path:"/sorulan-sorular.html",content:" Sıkça Sorulan Sorular \n 1)\tÖHVPS kapsamında Hesap Bilgisi Hizmeti ve Ödeme Emri Başlatma Hizmeti’ni kullanabilmemiz için hangi şartların sağlanması beklenmektedir? \n •\tHesap Hizmeti Sağlayıcılar(HHS) ve Yetkilendirilmiş Ödeme Hizmeti sağlayıcılarının(YÖS) ÖHVPS kapsamında sağlması gereken şartlar için TCMB’nin yayınladığı kanun ve yönetmeliklerin incelenmesi gerekmektedir. İlgili linkte yer alan (https://ohvps.github.io/uyum-tarihleri.html) referans adreslerinin incelenmesini öneririz. \n•\tTCMB tarafından lisans süreciniz başlatıldığında geliştirmelerinizde yardımcı olmak adına BKM başvuru yapan Kurum/Kuruluşlara test hesabı tanımlanmakta ve ilgili alanlara yetki almanız için gerekli yönlendirme yapılmaktadır.  \n•\tÖHVPS kapsamında; \n \n Lisans sürecini yürüten Kurum/Kuruluşların BKM tarafından BKM ÖHVPS Teknik Sertifikasyon Onay Belgesi alması gerekmektedir. \n Lisans alması gerekmeyen Kurum/Kuruluşların üretime geçmeden önce BKM ÖHVPS Teknik Sertifikasyon Onay Belgesi alması gerekmektedir. \n \n 2)\tBKM ÖHVPS Teknik Sertifikasyon Onay Belgesi nedir, nasıl alınır? \n BKM ÖHVPS Teknik Sertifikasyon Onay Belgesi,  https://ohvps.github.io/  ‘da yayınlanan teknik şartların yerine getirilecek şekilde geliştirme yapılması ve Trip/Tripsit üzerinden paylaşılan sertifikasyon senaryolarının test ortamında simulator üzerinden koşularak onaya gönderilmesi sonrası BKM tarafından yapılan kontrollerin olumlu olması sonucunda verilen belgedir. Teknik sertifikasyon belgesi alınabilmesi için katılımcıların öncelikle sertifikasyona gelmeleri gerekmektedir. Sertifikasyon sürecine ait detaylı bilgiler Tripsit> BKM Online> ÖHVPS> Dokümanlar menüsü altında yer almaktadır. \n 3)\tElektronik Para Kuruluşları ve Ödeme Kuruluşları olarak HHS olma zorunluluğumuz var mıdır? \n •\tTCMB tarafından yayınlanan kanun ve yönetmeliklerde bu bilgi yer almaktadır. Kanun, yönetmelik, tebliğ vb. aşağıdaki sayfadan ulaşabilirsiniz.  https://www.tcmb.gov.tr/wps/wcm/connect/TR/TCMB+TR/Main+Menu/Banka+Hakkinda/Mevzuat/Odeme+Sistemleri/ \n •\tElektronik Para Kuruluşları ve Ödeme Kuruluşları’nın HHS uyum tarihleri,  https://ohvps.github.io/uyum-tarihleri.html , adresinde yer almaktadır. \n 4)\tEPK ve/veya ÖK olarak HHS ve YÖS sertifikasyonuna aynı anda gelme zorunluluğumuz bulunmakta mıdır? \n API dokümanında da belirtildiği üzere Banka rolündeki HHS’ler HHS olmadan YÖS olamazlar. Ancak EPK/ÖK’lar için böyle bir zorunluluk bulunmamaktadır. Ek olarak, HHS’lerin hem HBH hem de ÖBH tarafında geliştirme yaparak sertifikasyona bu iki hizmeti dahil edecek şekilde aynı anda gelmeleri gerekirken ; YÖS’ler hangi lisansı alacaklarsa HBH ve ÖBH hizmetleri ayrı ayrı ya da beraber oalcak şekilde sertifikasyona gelebilirler. \n 5)\tÖdeme Hizmetleri Veri Paylaşım Servisleri API İlke ve Kuralları’na nereden erişebiliriz? \n https://ohvps.github.io/  adresinden erişebilirsiniz. \n 6)\tÖHVPS API sürüm geçiş tarihlerine nereden ulaşabiliriz? \n https://ohvps.github.io/  adresinden ulaşabilirsiniz. \n 7)\tYatırım Bankası olarak sertifikasyona gelmemiz gereken son tarih bilgisi nedir? \n https://ohvps.github.io/uyum-tarihleri.html  uyum tarihleri paylaşılmıştır. Buradan sizin için belirtilen tarih aralığını baz alabilirsiniz. \n 8)\tHenüz Açık Bankacılık kapsamında herhangi bir çalışmada bulunmamış/ yeni sertifikasyona gelecek olan bir banka olarak sertifikasyona geleceğimiz son tarih bilgisi konusunda bizlere destek olabilir misiniz? \n https://ohvps.github.io/uyum-tarihleri.html  uyum tarihleri paylaşılmıştır. Buradan sizin için belirtilen tarih aralığını baz alabilirsiniz. \n 9)\tSimülatörün mobil uygulaması bulunmakta mıdır? Var ise uygulamayı nasıl indirebiliriz?  \nEvet, BOSS mobil uygulamamız bulunmaktadır. Trip/Tripsit > BKM Online > ÖHVPS > Dokümanlar kısmından adımları takip ederek indirebilirsiniz. \n 10)\tÖHVPS API’larının entegrasyonu için hangi adımlar ile ilerlemeliyiz? \n •\tÖHVPS API geliştirmeleri için BKM olarak simülator ortamı sunulmaktadır. Simülatör ortama erişim sağlayabilmek için destek@bkm.com.tr adresine mail atılarak  https://tripsit.bkm.com.tr/main/welcome  adresi için ÖHVPS kullanıcılarınız için yetki talebinde bulunulmalıdır. Mail atıldıktan sonra sizlere iletilecek formda aşağıdaki mavi ile belirtilmiş alanları işaretlemeniz gerekmektedir. Yeşil ile işaretli ‘İstemci Sertifikası Talep Ekranı’  ise sadece yetkili kişi tarafından seçilerek gönderilmelidir. Simülatör ortamı sizlere API geliştirmelerinizi sandbox ortamında test edebilme imkanı sunmaktadır. Bu yüzden form içerisinde kullanacağınız role göre yetki istemelisiniz. \n •\tSimülatör için yetki alındıktan sonra ÖHVPS API’larını kullanabilmek için dokümanlar altında API Entegrasyon formu doldurularak ohvps@bkm.com.tr adresine mail iletilmelidir. BKM tarafından tanımların yapıldığına dair mail dönüşü sağlandıktan sonra ÖHVPS API’larını kullanmaya başlayabilirsiniz. Tanımlar yapılana kadar BKM simülatörü 8000’den 8000’ e işlemler deneyerek API’larını test edebilirsiniz. \n •\tTanımlar yapıldığına dair dönüş yapıldıktan sonra erişim sorunu yaşanıyorsa kendi tarafınızdaki firewall talepleri kontrol edilmelidir. \n 11)\tİstemci sertifikası talebini nereden yapabiliriz? \n‘İstemci Sertifikası Talep Ekranı’ ise sadece yetkili kişi tarafından seçilerek gönderilmelidir. Yetkili kişi Trip/Tripsit > BKM Online > Ödeme İste > Dokümanlar menüsü altından ulaşabilir. \n 12)\tMesaj imzalama süreçleri nasıl olmalıdır? \n https://ohvps.github.io/v1.1.0/contents/temel-prensipler.html#_3-12-mesaj-imzalama  detaylı bilgiye erişebilirsiniz. \n 13)\tÖHVPS API sürüm geçiş tarihlerine nereden ulaşabiliriz? \n https://ohvps.github.io/  adresinden ulaşabilirsiniz. \n 14)\tSertifikasyona gelmeden önce yapılması gerekenleri paylaşabilir misiniz? \nSertifikasyon onayı iletilmeden en az bir ay öncesinde mail ile slot tarihi istenmelidir. Size verilecek olan slot tarihinden en az üç iş günü öncesinde ohvps@bkm.com.tr’ye mail ile Sertifikasyon Başvuru formunun iletilmesi gerekmektedir. Sertifikasyon kontrolleri sonrasında sizlere geri bildirimlerde bulunulur. Tüm revizeler tamamlandıktan sonra sertifikasyon onayı verilir ve üretime geçiş için planlama yapılır. \n 15)\tKurum/Kuruluş olarak mobil kanallardan müşterimize hizmet vermemekteyiz. Bu kapsamda sertifikasyonda sadece web akışlarını işletebilir miyiz? \nSertifikasyon sürecinde mobil ve web sertifikasyonları ayrı işletilmektedir. Bu kapsamda mevcut durumda hangi servisi destekleniyorsa ya da hangi kanal üzerinden müşterilere hizmet sunuluyorsa sadece o hizmet kapsamında sertifikasyona gelebilirsiniz. \n 16)\tBireysel segmentte mobil ve web kanallarında hizmetimiz bulunurken Kurumsal müşteri özelinde sadece web kanalında hizmetimiz bulunmaktadır. Bu kapsamda Kurumsal müşteriler için sadece web akışını destekleyebilir miyiz? \nSertifikasyon sürecinde mobil ve web sertifikasyonları ayrı işletilmektedir. Bu kapsamda mevcut durumda hangi servisi destekleniyorsa ya da hangi kanal üzerinden müşterilere hizmet sunuluyorsa sadece o hizmet kapsamında sertifikasyona gelebilirsiniz. \n 17)\tSertifikasyon onay isteği oluşturmak için nasıl bir yol izlemeliyiz? \nTüm seritifkasyon süreçleri ile ilgili bilgiler Tripsit>BKM Online> ÖHVPS > dokümanlar menüsü altında paylaşılmaktadır. Bu süreçle ilgili yine destek alabileceğiniz Tripsit> BOSS> Sertifikasyon Onayı oluşturma menüsü altında sertifikasyon süreci ile ilgili video kaydı bulunmaktadır. Bu alanlardaki belgeleri ve video kayıtlarını inceleyerek destek alabilirsiniz. Simülatör üzerinden sertifikasyon senaryolarının tiklenerek onaya gönderilmesinden sonra Tripsit>BKM Online> ÖHVPS > dokümanlar menüsü altında bulunan Sertifikasyon Onay İstek Form’larının ohvps@bkm.com.tr ye mail olarak iletilmesi gerekmektedir. \n 18)\tSertifikasyon slot tarihine yetişememe durumu ile karşılaşılaşılırsa nasıl ilerlemeliyiz? \nSertifikasyon slot tarihine yetişilemediği durumda bir sonraki uygun sertifikasyon tarihinin katılımcı tarafından tekrar talep edilmesi gerekecektir. \n 19)\tSertifikasyon için koşulması gereken senaryolara nereden ulaşabiliriz? \nTrip/Tripsit > BKM Online > ÖHVPS > Dokümanlar bölümünden ulaşabilirsiniz. \n 20)\tSertifikasyon senaryolarının hepsi koşulmalı mıdır? Bireysel ve kurumsal için ayrı sertifikasyona gelinebilir mi? \n•\tTrip/Tripsit > BKM Online > ÖHVPS > Dokümanlar bölümünden indirilen ilgili sertifikasyon senaryoları dokümanında koşulması gereken senaryolar belirtilmektedir. HHS Sertifikasyonları için bireysel ve kurumsal birlikte koşularak gönderilmesi beklenmektedir. YÖS sertifikasyonları için hangi müşteri segmentine hizmet verilecekse ilgili müşteri segmenti için ayrı olarak sertifikasyona gelinebilir.\n•\tMobil ve web kanalları için ayrı sertifikasyona gelinmelidir. Mobil ve Web Kanallar için aynı altyapı (backend-arkayüz) kullanılıyor ise sertifikasyona nasıl gelineceğinin detayları için sertifikasyon senaryoları dokümanın incelenmesini gerekmektedir. \n 21)\tSertifikasyon onay istek formunu ve kontrol listesini nereden bulabiliriz? \nSertifikasyon kontrol listesi dokümanına Trip/Tripsit > BKM Online > ÖHVPS > Dokümanlar menüsü altından ulaşabilirsiniz. \n 22)\tSertifikasyon senaryoları koşulurken nelere dikkat edilmelidir? Ekranlar nasıl olmalıdır? \n•\tSertifikasyon için  https://ohvps.github.io/  adresinde yayınlanan API İlke ve Kuralları dokümanındaki teknik gereksinimleri yerine getirmeniz beklenmektedir. \n •\tWeb/mobil ekranlar için sertifikasyonda iletilmesi gereken zorunlu alanlar bulunmaktadır. Bu alanlar için Trip/Tripsit > BKM Online > ÖHVPS >Dokümanlar menüsü altında yer alan ‘Müşteri Deneyim Dokümanı’nı inceleyebelirsiniz. Ekranlarda İstenilen şartlar yerine getirildiği sürece ekran tasarımlarını dileğiniz  gibi dizayn edebilirsiniz. \nAyrıca mobil/web ekran gösterimleri için ayrı bir form hazırlanmıştır. İlgili formadaki yönergeler izlenerek Sertifikasyon Onay Formu ile birlikte e-posta yoluyla iletilmesi gerekmektedir. \nSertifikasyona gelmeden önce ekranlar son kullanıcıya gösterilecek şekilde hazırlanmalıdır. \n 23)\tSertifikasyon onay isteği nasıl oluşturabiliriz? \nTripsit > Sertifikasyon Onayı Oluşturma > Sertifikasyon Onay İsteği Oluşturma başlığı altından sertifikasyona gelinecek rol için oluşturulmaktadır. Bu süreçle ilgili yine destek alabileceğiniz video kaydı bulunmaktadır. \n 24)\tSertifikasyon onay isteği oluşturdum. Başlatıldı statüsünde kaldı. Yardımcı olabilir misiniz? \nSertifikasyon talebinde bulunulduğunda seçilen tarih aralığındaki log kayıtları çekilerek otomatik olarak ‘Çalıştırıldı’ statüsüne geçmektedir. Sizin çalıştırdığınız tarih aralığında log kaydı olup olmadığı kontrol edilmelidir. \n 25)\tSertifikasyon onay isteği oluşturdum. Senaryolar tiklenmedi. Kontrol edebilir misiniz? \nSertifikasyon onayı oluşturulduktan sonra ‘Detay’ seçilerek senaryonun neden tiklenmediği ‘Hata Gör’ kolonundan kontrol edilmelidir. \n 26)\tÖHVPS Simülatörlerini kullanarak geliştirmelerimizi tamamladık. Üretim ortamına geçiş için neler yapılması gerekir? \nTripsit>BKM Online> ÖHVPS > dokümanlar menüsü altında sertifikasyon sürecini anlatan kılavuz yer almaktadır. Aynı zamanda Tripsit> BOSS> Sertifikasyon Onayı oluşturma menüsü altında sertifikasyon süreci ile ilgili video kaydı bulunmaktadır. İlgili dokümanları inceleyebilirsiniz. \n 27)\tÖHVPS API’larına ait swagger dosyası bulunmakta mıdır? \nEvet bulunmaktadır. ÖHVPS > HHS/YÖS Simülatörü ekranına gidilerek açılan sayfada istenilen API seçilir ve ‘Swagger Dokümanını İndir’ seçilerek indirebilir. \n 28)\tÖHVPS API İlke ve Kuralları dokümanında yapılan değişiklikleri nereden görebiliriz? \n https://ohvps.github.io/  adresine gidildiğinde ana sayfada yer alan  https://github.com/ohvps/ohvps.github.io/commits/master  adresi üzerinden değişiklik açıklamaları ve tarihçesi incelenebilir. \n 29)\tYapılan tüm değişiklikler https://ohvps.github.io/ adresinde hemen güncellenmekte midir? \nEvet, güncellenmektedir. \n 30)\tGeliştirmeler sırasında doküman ile simülatör arasında fark görüldüğünde hangisi doğrudur? Nasıl ilerlemeliyiz? \nSimülatör ortamı katılımcıların API geliştirmelerini test edebilmesi için oluşturulmuş sandbox ortamıdır. Bazı geliştirmeler simülatör tarafında unutulabilmektedir. Bu yüzden her zaman doküman dikkate alınmalıdır. Simülatörün geliştirilmesi için farklılığı bizlere iletebilirsiniz. Doğru ya da çelişkili olduğu düşünülen bir bilginin olduğu düşünülüyorsa ohvps@bkm.com.tr adresine mail iletilmelidir. \n 31)\tAçık Bankacılık kanal ayarları her kullanıcıya default olarak açık mı olmalıdır? \nAçık Bankacılık müşteriye bir kanal olarak sunuluyorsa müşterinin kanal ayarını açıp kapatabileceği bir ekran olması gerekmektedir. Üretim ortamına ilk çıkıldığında default olarak açık olmalıdır. Müşteri dilerse kendi kapatabilmelidir.  https://ohvps.github.io/v1.1.0/contents/temel-prensipler.html  temel prensipler başlığı altından inceleyebilirsiniz. \n 32)\tSadece web uygulamamız üzerinden ÖHVPS API’larını kullanmak istiyoruz. Sorun olur mu? \nHHS olunan rolde tarayıcı tabanlı yönlendirme yapılması zorunlu olmakla beraber 1 Ekim 2023 itibarıyla HHS’nin uygulaması varsa uygulama tabanlı yönlendirme hizmeti vermesi de zorunludur. \n 33)\tDaha önce sorulan katılımcı sorularına nereden ulaşabiliriz? \nTrip/Tripsit > BKM Online > ÖHVPS > Dokümanlar menüsü altından ulaşabilirsiniz. \n 34)\tÖHVPS Üretim ortamı katılımcılarının iletişim adreslerine nereden ulaşabiliriz? \nTrip/Tripsit > BKM Online > ÖHVPS > İletişim Listesi altından bulabilirsiniz. Bu menüye erişim sağlayamıyorsanız destek@bkm.com.tr adresinden yetki talep edebilirsiniz. \n 35)\tSertifikasyon için yeni sürüm olan  V 1.1.0 sürümüne gelmek zorunda mıyız? Eski sürüm ile sertifikasyona gelebilir miyiz? \n1 Aralık 2023 tarihinden sonra sertifikasyon talebinde bulunan tüm katılımcıların V 1.1.0 aktif sürümüne gelme zorunluluğu bulunmaktadır. \n 36)\tSürüm 1.1.0 sertifikasyonunu almak için Sürüm 1.0.2 sertifikasyonunu almak gerekiyor mu? Açık bankacılık sistemine 1.1.0 versiyonu ile dahil olunabilir mi? \n1 Aralık 2023 sonrası sertifikasyona gelinerek üretim ortamı geçişi yapılırsa sürüm 1.1.0 versiyonu ile dahil olunabilir ayrıca 1.0.2’ye gelinmesine gerek yoktur. İlk kez üretim ortamına 1.1.0 sürümü ile geçecek HHS'ler, 1.1.0 sürümünü destekleyen YÖS'ler tarafından listenebileceklerdir. YÖS’lerin sadece kendilerinin destekledikleri API sürümünü destekleyen HHS’leri listelemesi gerekmektedir. \n 37)\tYeni sürüm (V 1.1.0) kapsamında Ayrık GKD zorunlu mudur? \nMobil uygulaması bulunan HHS'ler için Ayrık GKD desteklenmesi zorunludur.  https://ohvps.github.io/v1.1.0/contents/gkd.html#_5-2-ayr%C4%B1k-guclu-kimlik-dogrulama  adresinden detaylı inceleyebilirsiniz. \n 38)\tYeni sürüm (V 1.1.0) kapsamında Ayrık GKD süreci bulunmaktadır. Ayrık GKD yapılırken kullanıcıya push iletilemediğinde uygulama içerisindeki bildirimler gibi bir alan içerisinde bunu göstermemiz beklenmekte midir? \nHHS inisiyatifindedir. \n 39)\tAyrık GKD bilgilendirme mesajı kullanıcıya iletilmezse süreci nasıl yönetebiliriz? \nMüşterinin ne şekilde bilgilendirileceği HHS inisiyatifindedir. Aşağıda paylaşmış olduğumuz linkte detaylı bilgi yer almaktadır.  https://ohvps.github.io/v1.1.0/contents/gkd.html#_5-2-ayr%C4%B1k-guclu-kimlik-dogrulama  Linkte yer alan detaya istinaden HHS olarak işlemi red etmeniz uygundur. YÖS olarak ise hata almış bir ayrık GKD işlemini yönlendirmeli akışa çevirip tekrar iletebilirsiniz. \n 40)\tAyrık GKD sadece mobil uygulamaya mı bildirim gönderilebilir? Sms içerisinde webe yönlenecek universal link verebilir mi? \nAyrık GKD sürecinde HHS tarafında sadece mobil uygulama üzerinden GKD yapılmalıdır. ÖHK’nın web uygulamasına yönlendirme yapmaması gerekmektedir. SMS iletilecekse sms içerisindeki universal link sadece mobile yönlendirilmelidir.  https://ohvps.github.io/v1.1.0/contents/gkd.html#_5-2-ayr%C4%B1k-guclu-kimlik-dogrulama  adresinden detaylı inceleyebilirsiniz. \n 41)\tMevcut sistemimizde GSM birden fazla müşteride tanımlıdır. Bu noktada Ayrık GKD Tek seferlik ödeme akışında hangi müşteriye bildirim gönderilmesi gerektiğini ayırt edemeyeceğimizden sorun oluşturmaktadır. Bu nedenle GSM için muafiyet talep edilebilir mi? \nMevcut durumda ilgili cep numarasına nasıl bildirim gönderiliyorsa aynı yöntem izlenebilir. (Yetkili kişi ataması yapılabilir vs.) \n 42)\tHesap Bilgisi Hizmeti ve Ödeme Emri Başlatma Hizmeti akışlarında default olarak yönlendirmeli akış tercih edilebilir mi? Yoksa ayrık GKD sunan HHS’ler için, YÖS’ün de ayrık GKD’yi tercih etmesi zorunlu mudur? \nYÖS’ün kendi insiyatifindedir.  https://ohvps.github.io/v1.1.0/contents/gkd.html#_5-2-ayr%C4%B1k-guclu-kimlik-dogrulama  detaylı bilgiye erişebilirsiniz. \n 43)\tKurumumuzun YÖS olduğu durumda karşı HHS Ayrık GKD'yi desteklese dahi kullanıcıda HHS'ye ait mobil uygulama olmadığı takdirde nasıl ilerlememiz beklenmektedir? \n https://ohvps.github.io/v1.1.0/contents/gkd.html#_5-2-ayr%C4%B1k-guclu-kimlik-dogrulama  adresinden detaylı senaryoları inceleyebilirsiniz. \n 44)\tYÖS olduğumuz durumda ayrık GKD kimlik doğrulama web akışından başlayabilir mi yoksa mobil uygulamada olma zorunluluğu var mıdır? \nHer iki kanaldan işlem başlatılabilmektedir. \n 45)\tYeni sürüm (V 1.1.0) kapsamında Olay Bildirim Servis’lerinin kullanılması zorunlu mudur? \nOlay Dinleme API’nın (ODS) servis olarak sunulması HHS ve YÖS’ler için zorunludur. Olay Abonelik Servisleri’nin (OAS) kullanımı YÖS insiyatifindedir. YÖS, Ayrık GKD yöntemi kullanacaksa ise AYRIK_GKD_BASARILI ve AYRIK_GKD_BASARISIZ olay tipleri için de abonelik oluşturulması gerekir.  https://ohvps.github.io/v1.1.0/contents/olay-bildirim.html  detaylı inceleyebilirsiniz. \n 46)\tSertifikasyon senaryoları içerisinde yer alan Sistem olay dinleme Eventini nasıl test edebiliriz? Formun içerisinde iletmemiz istenmiş. Bu konuda yönlendirebilir misiniz? \nKullanmış olduğunuz YÖS simülatörü için Tripsit üzerinden güncelleme yapılması sağlanarak HHS tarafına sistem olay dinleme kaydı oluşturabilirsiniz. \n 47)\tYeni sürüm (V 1.1.0)’da eklenen ‘06: Anlık Bakiye Bildirimi’ izin türü müşterinin mevcut rızası için sorgulanabilir mi? \nMüşterinin mevcut rızasında 06 izin türü bulunmuyor ise sorgulanamaz. 06 izin türü sadece V1.1 sürümünde bulunmaktadır. Müşteriden yeni Hesap Bilgisi Rızası alınırken 06 izin türü için de izin istenmelidir. YÖS olduğunuz durumda müşteriye rıza izin türlerini seçtirtmek ya da seçtirtmeden hepsini kabul ettirme koşulu ile ilerleyebilirsiniz. Başka bir deyişle, rıza izin türlerini müşteriye seçtirilmesi/seçtirilmeden ilerlenmesi YÖS inisiyatifindedir. \n 48)\tSertifikasyon senaryoları içerisinde yer alan Sistem olay dinleme eventini nasıl test edebiliriz? Formun içerisinde iletmemiz istenmiş. Bu konuda yönlendirebilir misiniz? \nKullanmış olduğunuz YÖS simülatörü için Tripsit üzerinden güncelleme yapılması sağlanarak HHS tarafına sistem olay dinleme kaydı oluşturabilirsiniz. \n 49)\tÖHVPS API kullanımları için ücretlendirme olacak mıdır? Ücretlendirme kapsamında nasıl bir yol haritası izlenecektir? \n •\tSorgulama yönteminin ne şekilde devam edeceği YÖS'ün inisiyatifindedir. API sorgulamaları üzerinden ücret alınmaya devam edecektir. Event notification ile YÖS'lerin api sorgulaması arasında bir bağlantı olmamakla beraber TCMB'nin belirlediği tarihten itibaren ücretlendirme devreye alınacaktır. \n •\tTCMB'nin daha evvel bilgi verdiği ücretlendirme içeriği ile ilgili detaylar önümüzdeki günlerde Trip>ÖHVPS dokümanları  altında yer alan ÖHVPS Uygulama Kuralları Dokümanında detaylandırılacaktır. \n 50)\tEvent notification devreye alındıktan sonra bankaların sorgulamaları devam edebilecek mi, o sorgulamalardan ücret alınabilir mi? \nSorgulama yönteminin ne şekilde devam edeceği YÖS'ün inisiyatifindedir. API sorgulamaları üzerinden ücret alınmaya devam edecektir. Event notification ile YÖS'lerin api sorgulaması arasında bir bağlantı olmamakla beraber TCMB'nin belirlediği tarihten itibaren ücretlendirme devreye alınacaktır. \n 51)\tSertifikasyonu tamamlayarak üretim ortamına geçiş yaptıktan sonra hizmet vermeyi durdurabilir miyiz? Evet ise, ne kadar süre ile hizmet vermeyebiliriz? \nHHS olunan rolde hizmet durdurulması gibi bir durum söz konusu değildir. \n 52)\tBKM Açık Bankacılık Deney Alanı Nedir? \nAçık Bankacılık Deney Alanı, ÖHVPS (Ödeme Hizmetleri Veri Paylaşım Servisleri) kapsamındaki açık bankacılık hizmetlerinin katılımcılar (HHS ve YÖS) ve katılımcı olmayan kuruluşlar ve finansal teknoloji girişimleri tarafından belirli çerçevelerde denenebileceği, test amaçlı kullanılan açık simülatörlerin bulunduğu bir test ortamıdır. İlgili alana erişmek için  https://ohvps.github.io/v1.1.0/deneyalani/genel-bilgiler.html \n 53)\tAçık Bankacılık Kurumsal Bankacılık tarafında tüzel kişilerin hesaplarının yetkilendirilmesi (münferit/müşterek) nasıl yapılmalı, nereden bilgi alabilirim? \nTüzel taraftaki Müşteri yetkileri için BKM tarafında bir yönlendirme yapılamamaktadır. Banka içinde bu kişilerin neye yetkisi varsa ÖHVPS kapsamında da aynı müşteri deneyimini yansıtacak şekilde çözüm üretmeniz beklenir. \n"},{frontmatter:{},regularPath:"/pages/contact.html",relativePath:"pages/contact.md",key:"v-64dca03d",path:"/pages/contact.html",content:" Türkiye Cumhuriyeti Merkez Bankası\nohvps@tcmb.gov.tr \n \n"},{title:"ÖDEME HİZMETLERİ VERİ PAYLAŞIM SERVİSLERİ (ÖHVPS) UYUM TARİHLERİ",frontmatter:{},regularPath:"/uyum-tarihleri.html",relativePath:"uyum-tarihleri.md",key:"v-81b8a67a",path:"/uyum-tarihleri.html",content:" ÖDEME HİZMETLERİ VERİ PAYLAŞIM SERVİSLERİ (ÖHVPS) UYUM TARİHLERİ \n Hesap Hizmeti Sağlayıcılar ve Yetkili Ödeme Hizmeti Sağlayıcıların ÖHVPS standartlarına uyumu için tarihler, Ödeme Hizmetleri ve Elektronik Para İhracı ile Ödeme Hizmeti Sağlayıcıları Hakkında Yönetmelik ile Ödeme ve Elektronik Para Kuruluşlarının Bilgi Sistemleri İle Ödeme Hizmeti Sağlayıcılarının Ödeme Hizmetleri Alanındaki Veri Paylaşım Servislerine İlişkin Tebliğ’de belirlenmiştir. \n Yönetmeliğin 59 uncu maddesinin beşinci fıkrasında belirlenen yükümlülükler, nezdinde ödeme hesabı bulunduran ve bu hesaplar için müşterilerine doğrudan çevrim içi erişim imkânı sağlayan hesap hizmeti sağlayıcılarından \n \n Fonların Anlık ve Sürekli Transferi (FAST) Sistemine katılımcı olan ödeme hizmeti sağlayıcıları ile \n FAST Sistemine katılımcı olmayan kuruluşlardan her yıl ayrıca hesaplanmak üzere ödeme hacmi bakımından ilk on arasında yer alanlar\niçin geçerlidir. \n \n Kapsamda yer alan Hesap Hizmeti Sağlayıcılar için Yönetmelik ve Tebliğde ÖHVPS uyum tarihleri aşağıdaki şekilde belirlenmiştir: \n \n \n FAST Sistemine katılımcı olmayan ödeme hizmeti sağlayıcılarının, katılımcı olmaları halinde, katılımcı oldukları tarihten itibaren 6 ay içerisinde teknik sertifikasyonlarını başarıyla tamamlayarak GEÇİT’e bağlantı sağlamaları gerekmektedir (HHS’leri ilgilendirmektedir.). \n \n \n FAST Sistemine katılımcı olmayan ödeme ve elektronik para kuruluşlarından her yıl ayrıca hesaplanmak üzere bir önceki takvim yılında gerçekleşen işlemlere göre ödeme hacmi bakımından ilk on arasında yer alan ve; \n •\t    Nezdinde bulunan ödeme hesapları için müşterilerine doğrudan çevrim içi erişim imkânı sağlayan kuruluşların, içinde bulunulan yılın sonuna kadar teknik sertifikasyonlarını başarıyla tamamlayarak GEÇİT’e bağlantı sağlamaları gerekmektedir (HHS’leri ilgilendirmektedir.). \n •\tNezdinde bulunan ödeme hesapları için müşterilerine doğrudan çevrim içi erişim imkânı sağlamayan kuruluşların ise, içinde bulunulan yıl sonuna kadar çevrim içi erişim imkânı sağlamaları halinde çevrim içi erişim imkânı sağladıkları tarihten itibaren 6 ay içerisinde teknik sertifikasyonlarını başarıyla tamamlayarak GEÇİT’e bağlantı sağlamaları gerekmektedir (HHS’leri ilgilendirmektedir.). \n \n \n Yönetmelik ve Tebliğde yapılan 28 Mart 2025 tarihli değişiklik itibarıyla; \n •\tFAST Sistemine katılımcı olan ödeme hizmeti sağlayıcılarının 31 Aralık 2025 tarihine kadar teknik sertifikasyonlarını başarıyla tamamlayarak GEÇİT’e bağlantı sağlamaları gerekmektedir (HHS’leri ilgilendirmektedir.). \n •\tFAST Sistemine katılımcı olmayan ve 2024 takvim yılı ödeme hacmi bakımından ilk on arasında yer alan kuruluşlardan; \n \n Nezdinde bulunan ödeme hesapları için müşterilerine doğrudan çevrim içi erişim imkânı sağlayanların 31 Aralık 2025 tarihine kadar teknik sertifikasyonlarını başarıyla tamamlayarak GEÇİT’e bağlantı sağlamaları gerekmektedir (HHS’leri ilgilendirmektedir.). \n Nezdinde bulunan ödeme hesapları için müşterilerine doğrudan çevrim içi erişim imkânı sağlamayanların 2025 yılı sonuna kadar çevrim içi erişim imkânı sağlamaları halinde çevrim içi erişim imkânı sağladıkları tarihten itibaren 6 ay içerisinde teknik sertifikasyonlarını başarıyla tamamlayarak GEÇİT’e bağlantı sağlamaları gerekmektedir (HHS’leri ilgilendirmektedir.). \n \n \n \n 6493 Sayılı Kanun’un Geçici 3 üncü maddesinin üçüncü fıkrası uyarınca TCMB’ye faaliyet izni başvurusunda bulunmuş olup faaliyet izni süreci devam edenler ile TCMB’den faaliyet izni almış olan Kuruluşlara teknik gereklilikleri belirlenmiş veri paylaşım hizmetleri, standart olmayan servislerle 30 Haziran 2024 tarihine kadar sunulabilir. (HHS’leri ilgilendirmektedir.) \n \n \n 6493 Sayılı Kanun’un Geçici 3 üncü maddesinin üçüncü fıkrası uyarınca TCMB’ye faaliyet izni başvurusunda bulunmuş olup faaliyet izni değerlendirme süreci devam edenler, teknik gereklilikleri belirlenmiş veri paylaşım hizmetlerini, 30 Haziran 2024 tarihine kadar standart olmayan servisleri kullanarak verebilir. (YÖS’leri ilgilendirmektedir.) \n \n \n 5411 sayılı Kanun kapsamındaki bankalar ile teknik gereklilikleri belirlenmiş veri paylaşım  hizmetlerini sunmak üzere TCMB’den izin almış olan kuruluşlar (YÖS’ler), TCMB Ödeme Sistemlerinde 2020 yılı içerisinde gerçekleştirilen hesaba ödeme işlemleri açısından, toplam adedine göre ilk on katılımcı arasında yer almayan ödeme hizmeti sağlayıcıları nezdinde bulunan ödeme hesapları ile ilgili olarak, teknik gereklilikleri belirlenmiş veri paylaşım servisleri hizmetlerini 30 Haziran 2024 tarihine kadar standart olmayan servisleri kullanarak verebilir. (YÖS’leri ilgilendirmektedir.) \n \n \n Teknik gereklilikleri henüz belirlenmemiş veri paylaşım servisi hizmetleri, gereklilikler belirleninceye kadar standart olmayan servisler kullanılarak verilmeye devam edilir. Banka tarafından teknik ve operasyonel gerekliliklerin belirlenmesinin ardından bu hizmetler için de en geç bir yıl içerisinde uyum sağlanarak, hizmetler söz konusu gerekliliklere uygun olarak yürütülmeye başlanır. \n \n \n Referanslar: \n 6493 Sayılı Ödeme ve Menkul Kıymet Mutabakat Sistemleri, Ödeme Hizmetleri ve Elektronik Para Kuruluşları Hakkında Kanun   \n Ödeme Hizmetleri ve Elektronik Para İhracı ile Ödeme Hizmeti Sağlayıcıları Hakkında Yönetmelik   \n Ödeme ve Elektronik Para Kuruluşlarının Bilgi Sistemleri İle Ödeme Hizmeti Sağlayıcılarının Ödeme Hizmetleri Alanındaki Veri Paylaşım Servislerine İlişkin Tebliğ \n"},{title:"ÖDEME HİZMETLERİ VERİ PAYLAŞIM SERVİSLERİ (ÖHVPS)",frontmatter:{},regularPath:"/surum-yonetimi.html",relativePath:"surum-yonetimi.md",key:"v-22024c43",path:"/surum-yonetimi.html",content:" ÖDEME HİZMETLERİ VERİ PAYLAŞIM SERVİSLERİ (ÖHVPS) \n API İLKE VE KURALLARI SÜRÜM YÖNETİMİ  \n OHVPS API İlke ve Kuralları dokümanındaki sürüm bilgileri aşağıdaki kurallara göre belirlenmektedir. \n \n \n Sürümler 3 basamaklı kodla belirlenir. Sürüm değişiklikleri basamak sırasına göre Major değişiklikler, Minör değişiklikler ve Patch değişiklikleri olarak sıralanır. Örneğin  Sürüm 1.0.0 üzerinde yapılacak major değişiklik Sürüm 2.0.0 olarak ifade edilirken, Minör değişiklik Sürüm 1.1.0 olarak ifade edilir. Patch değişiklik ise Sürüm 1.1.1 olarak ifade edilir. \n \n \n Major değişiklikler: \na. Sürümün 1. basamağı proje kapsamındaki major değişiklikleri ifade eder. Bu major değişiklikler ; \n    § Kredi kartı akışları, tekrarlı işlem akışları gibi kapsama yeni akışların eklenmiş olması, \n    §  Eski hizmetlerin çalışamaz hale getirilmesi, \n    § API desenlerinde değişiklik olması ve geriye yönelik desteğin sona ermesidir. \nb. Major değişiklikler, öncelikle API standartlarının taslak sürümüne eklenir. Paralelinde simülatör geliştirmelerine başlanır.  Simülatörde ilgili değişikliğin hayata geçirileceği tarih ayrıca katılımcılarla paylaşılır. \nc. Major değişiklikler sınırlı bir set ya da tüm set ile sertifikasyona tabiidir. \nd. Simülatör tek bir major ya da minör sürümü destekler. \ne. Simülatörün desteklediği sürüm üzerinden sertifikasyon yapılır. \nf. API Standartlarında major  Sürüm Geçiş Tarihinin  duyurusu TCMB tarafından yapılır. \ng. Katılımcıların  HHS/YÖS Yeni Sürüm Üretime Geçiş Son Tarihi  yine TCMB tarafından belirlenir ve duyurulur. Bu tarihe kadar katılımcıların sertifikasyonlarının tamamlanması beklenir. \n \n \n Minör değişiklikler:    \na. Sürümün 2. basamağı proje kapsamındaki minör değişiklikleri ifade eder. Bu minör değişiklikler ; \n    § Kural değişiklikleri, \n    § API desenlerinde olabilecek opsiyonel alan değişiklikleri, \n    § Sıralı veri türlerine yeni değerlerin eklenmesi, \n    § GKD sürecinde değişiklik yapılması, \n    § API desenlerinde değişiklik olması ve geriye yönelik desteğin devam etmesi, \n    § Yeni bir endpoint eklenmesidir. \nb. Değişiklik kapsamı TCMB tarafından belirlenir. \nc. Bu basamakta yapılan değişikliklerin tümünün sertifikasyona tabi olması gerekir. Ancak değişikliğin boyutuna göre sınırlı bir set ya da tüm değişiklik seti ile sertifikasyon senaryoları oluşturulur. \nd. Geriye dönük destek bittiği noktada sürüm değeri artar. \ne. Major ve minör değişikliklerin sürüm yönetimi aynı akışla işletilir. \n \n \n Patch değişiklikler: \n a. Sürümün 3. basamağı proje kapsamındaki patch değişiklikleri ifade eder. API desenlerinde bir değişiklik yaratmayan iş kuralı değişikliği örnek olabilir. \n b. Patch değişiklikler sonrası katılımcıların yeniden sertifikasyon yapmaları gerekmemektedir. \n \n \n İlk defa sertifikasyona gelecek kurumlar en son aktif sürüm ile sertifikasyona gelir. \n \n \n API Endpointlerde yapılacak major ve minor değişiklikler, endpointin pathi içerisinde yer alır. Detaylı bilgi  3.5.\tKaynak URI Yol Yapısı  adresinde yer alır.  \n \n \n Sürüm geçişlerinde kullanılan tarih bilgileri şu şekildedir: \n \n \n \n Sürüm Geçiş Tarihi  : \n \n Yeni API Standartı sürümünün yayınlandığı tarih bilgisidir.\n \n API Standartları taslak sürümü, güncel sürüm haline getirilir. \n Simülatörde yapılan güncellemeler development ortamından, katılımcıların kullanımında olan Tripsit ortamına aktarılır. \n Tripsit ortamında katılımcılar hem simülatör hem de kendi uygulama testlerine başlayabilir. \n \n \n \n Sertifikasyona Başlangıç Tarihi  : \n \n HHS ve YÖS'ler için ayrı olarak iletilecek tarih bilgisidir. \n \n HHS Yeni Sürüm Üretime Geçiş Son Tarihi / YÖS Yeni Sürüm Üretime Geçiş Başlangıç Tarihi   : \n \n Bu tarihe kadar HHS'lerin sertifikasyonu tamamlayıp başarı ile geçmesi gerekir. Bu tarihten önce sertifikasyonu tamamlayan HHS'ler üretime geçer. \n Bu tarih HHS'lerin üretime geçişi için tanımlanmış son tarih olduğu için, bu tarihte tüm HHS'ler üretime geçmiş olacaktır. YÖS'ler bu tarihten itibaren üretime geçişe başlar. \n BKM tarafından yapılması gerekecek API sürüm değişikliği varsa bu tarihte yayına alınır.(HHS-YÖS API gibi) \n \n YÖS Yeni Sürüm Üretime Geçiş Son Tarihi  : \n \n YÖS'lerin sertifikasyon süreci, YÖS Yeni Sürüm Üretime Geçiş Başlangıç Tarihinden, YÖS Yeni Sürüm Üretime Geçiş Son Tarihine kadar sürer. \n Mevcut YÖS'ler yeni sürümü en geç bu tarihte üretim ortamına alır. \n \n Eski Sürümün Kaldırılma Tarihi  : \n \n HHS'ler; HHS Yeni Sürüm Üretime Geçiş Son Tarihi ile Eski Sürümün Kaldırılma Tarihi arasında iki servis sürümünü de desteklemek zorundadır. \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n "},{title:"POST /erisim-belirteci",frontmatter:{},regularPath:"/v1.0.1/contents/erisim-belirteci.html",relativePath:"v1.0.1/contents/erisim-belirteci.md",key:"v-23bd824f",path:"/v1.0.1/contents/erisim-belirteci.html",content:' POST /erisim-belirteci \n İSTEK: \n YÖS erisim-belirteci erişim adresini 2 amaçla kullanır: \n \n \n Bir önceki adımdan aldığı rizaNo, rizaTip (ödeme emri başlatma hizmetinde “O”, hesap bilgisi hizmetinde “H”) ve GKD sonrası dönülen yetKod bilgilerini kullanarak HHS nezdinde ErisimBelirteci nesnesi oluşturmak üzere istekte bulunur. YÖS’ün istekte bulunabilmesi için GKD adımının başarılı bir şekilde tamamlanması rizaDrm bilgisinin ‘yetkilendirildi’ olması gerekir. Erişim Belirteci nesnesi ile rızası nesnesi (Ödeme Emri Rızası veya Hesap Bilgisi Rızası) arasındaki ilişki rıza numarası üzerinden sağlanır. \n \n \n Aldığı erişim belirtecinin Geçerlilik Süresinin dolduğu durumda, yenileme belirteci karşılığında yeni bir erişim belirteci alması gerekmektedir. \n \n \n POST /erisim-belirteci isteğinin (REQUEST) gövdesinde (BODY)  “ErisimBelirteciIstegi” nesnesi (Tablo-23) kullanılır. İstek başarıyla sonuçlanırsa HHS kaynak sunucusunda “ErisimBelirteci” nesnesi (Tablo 24) oluşturulur veya (Yenileme Belirteci için) güncellenir. Rıza durumu “Yetki Kullanıldı” olarak güncellenir. \n Tablo 23: “ErisimBelirteciIstegi” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format:Veri modeli İsmi \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n RızaNo \n rizaNo \n AN1..128 \n Z \n Rıza nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n Rıza Tipi \n rizaTip \n AN1 \n Z \n O veya H (TR.OHVPS.DataCode.RizaTip) \n \n \n Yetki Tipi \n yetTip \n AN1..50 \n Z \n “yet_kod” yada “yenileme_belirteci” değerini alabilir.  (TR.OHVPS.DataCode.YetTip) \n \n \n Yetki Kodu \n yetKod \n AN1..255 \n K \n GKD işleminden dönen yetkilendirme kodudur. Tek kullanımlık olup, aynı yetKod ile birden fazla token alınamaz. yetKod Parametresinin yaşam ömrü 5 dakika olmalıdır. yetTip = “yet_kod” ise zorunludur. \n \n \n Yenilenme Belirteci \n yenilemeBelirteci \n AN1..4096 \n K \n Erişim belirtecinin yenilenmesi amacıyla kullanılır. yetTip = “yenileme_belirteci” ise kullanımı zorunludur. \n \n \n \n BAŞARILI YANIT: \n POST işleminin RESPONSE gövdesini (BODY) oluşturan “erisimBelirteci” nesnesinde (Tablo-19) bulunan erişim belirteci değeri ödeme emrinin başlatılması esnasında kullanılır. \n Tablo 24: "ErisimBelirteci" nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format:Veri modeli İsmi \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Erişim Belirteci \n erisimBelirteci \n AN1..4096 \n Z \n Yetkilendirme Kodu karşılığında HHS tarafından dönülen ve sonraki hesap bilgisi ve ödeme emri servislerine erişimde kullanılan bilgidir. \n \n \n Geçerlilik Süresi \n gecerlilikSuresi \n N1..9 \n Z \n Erişim Belirtecini saniye cinsinden geçerlilik süresidir.  Erişim belirteci geçerli olduğu son tarih ; Hesap Bilgisi Rızası için 30 gün olmalıdır. Erişimin Geçerli Olduğu Son Tarih 30’dan küçük ise bu süre değeri ile sınırlıdır. Ödeme Başlatma Rızası için 5 dakika olmalıdır. \n \n \n Yenileme Belirteci \n yenilemeBelirteci \n AN1..4096 \n Z \n Erişim belirtecinin yenilenmesi amacıyla kullanılır. \n \n \n Yenileme Belirteci Geçerlik Süresi \n yenilemeBelirteciGecerlilikSuresi \n N1..9 \n Z \n Yenileme belirtecinin saniye cinsinden geçerlilik süresidir. Yenileme belirtecinin geçerli olduğu son tarih ; Hesap Bilgisi için Erişimin Geçerli Olduğu Son Tarih ile sınırlı olmalıdır. Bu tarih geldiği zaman Hesap Bilgisi Rıza Durumunu ”Yetki Sonlandırıldı” statüsüne çekilmesi gerekir. Ödeme Başlatma için Rıza Oluşturma Zamanından 15 gün sonrası olmalıdır. 15 gün süresi sorgulama servislerinin çağrımını destekleyecek şekilde uzun tutulmuştur. İleri vadeli işlemler bu kapsamda değildir.  Ödeme emri 5 dakika içinde gerçekleştirilmelidir. Gerçekleşmediğinde 4.2.8 bölümünde aktarılan rıza statü güncellemesi yapılmalıdır. \n \n \n \n erisim-belirteci erisim noktasından alınan elde edilen erisimBelirteci ilişkilendiriliği nesne veya işlem için gönderilen POST isteği başlığında x-access-token alanında iletilir.\nYenilenme Belirteci (refreshToken) kullanılarak Erişim Belirteci (accessToken) alındığında, dönen yanıttaki Yenileme Belirteci ve Yenileme Belirteci Geçerlik Süresi değişmez. \n Erişim Belirteci API çağrımı sırasında rıza durumları kontrol edilmelidir. Bu kontrollerin nasıl yapılması gerektiği 4-Rıza Durumları bölümünde aktarılmıştır. \n'},{title:"EK-1: İstek/Cevap Mesajlarında Kullanılacak Nesne Yapıları",frontmatter:{},regularPath:"/v1.0.1/contents/ekler.html",relativePath:"v1.0.1/contents/ekler.md",key:"v-48317b86",path:"/v1.0.1/contents/ekler.html",headers:[{level:2,title:"EK-1: İstek/Cevap Mesajlarında Kullanılacak Nesne Yapıları",slug:"ek-1-istek-cevap-mesajlarında-kullanılacak-nesne-yapıları"},{level:2,title:"EK-2: Sıralı Veri Türleri",slug:"ek-2-sıralı-veri-turleri"},{level:2,title:"EK-3: İstemci Sertifikalarının Tanım ve Yönetimi",slug:"ek-3-istemci-sertifikalarının-tanım-ve-yonetimi"},{level:2,title:"EK-4: Sunucu Sertifikaları",slug:"ek-4-sunucu-sertifikaları"},{level:2,title:"EK-5: Mesaj İmzalama Akışı",slug:"ek-5-mesaj-imzalama-akısı"},{level:3,title:"İmzalama Kuralları (YÖS)",slug:"imzalama-kuralları-yos"},{level:2,title:"EK-6: HHS/YÖS API Mimarisi",slug:"ek-6-hhs-yos-api-mimarisi"}],content:' EK-1: İstek/Cevap Mesajlarında Kullanılacak Nesne Yapıları \n Açık Bankacılık simülatör uygulaması üzerinde swagger dökümanlarının güncel sürümlerine erişim sağlanabilir. \n EK-2: Sıralı Veri Türleri \n \n \n \n Kod \n Açıklama \n \n \n \n \n TR.OHVPS.DataCode.KimlikTur \n Kod, Tip, Format K , TCKN , N11 M , MNO , AN1..30 (HHS’ye özel bireysel veya kurum müşteri numarası) Y , YKN , N11 P , PNO , AN7..9 \n \n \n TR.OHVPS.DataCode.KurumKimlikTur \n Kod, Tip, Format K , TCKN , N11 M , MNO , AN1..30 (HHS’ye özel bireysel veya kurum müşteri numarası) V , VKN , N10 \n \n \n TR.OHVPS.DataCode.OhkTur \n Kod: B: Bireysel  K: Kurumsal \n \n \n TR.OHVPS.DataCode.KolasTur \n Müşterinin sorgulama istediği Kolay Adres Tipi değeridir. Alabileceği değerler BKM “Kolay Adresleme Sistemi Uygulama Kuralları” belgesinde tanımlıdır: T: Telefon Numarası E: E-Posta K: TCKN V: VKN Y: YKN P: Pasaport Numarası \n \n \n TR.OHVPS.DataCode.KareKodAksTur \n Karekod Akış Türü Karekod ödemesinin hangi akışla gerçekleştirildiğini gösterir.  01: FAST katılımcısından dinamik doğrulamalı hizmet alınan işyeri ödemesi 02: FAST katılımcısından statik doğrulamalı işyeri ödemesi 03: Kişiden kişiye ödemeler \n \n \n TR.OHVPS.DataCode.OdemeKaynak \n I: İnternet bankacılığından gönderilen ödemelerde kullanılır. A: Otomatik para makineleri (ATM) ile gönderilen ödemelerde kullanılır. T: Telefon bankacılığı ile gönderilen ödemelerde kullanılır. K: Kiosklar aracılığıyla gönderilen ödemelerde kullanılır. S: Şubeden girilen ödemelerde kullanılır. M: Mobil uygulamadan gönderilen ödemelerde kullanılır. D: Yukarıdakiler dışındaki ödeme kaynaklarından gönderilen ödemelerde kullanılır.  O: Açık bankacılık aracılığı ile gönderilen ödemelerde kullanılır. \n \n \n TR.OHVPS.DataCode.OdemeAmaci \n Ödemenin Amacına yönelik olarak aşağıdaki değerlerden birini alır: 01: Konut Kirası Ödemesi 02: İş yeri Kirası Ödemesi 03: Diğer Kira Ödemesi 04: E-Ticaret Ödemesi: Elektronik ticaret işlem amaçlı aktarımlar 05: Çalışan Ödemesi: Maaş, harcırah, prim gibi çalışan ödemeleri 06: Ticari ödeme: Ticari işletmelerin birbirlerine, kendi hesaplarına veya müşterilerine ödemeleri, borç, ithalat, ihracat, şirket satın alma, vb. kapsamında ödemeler 07: Bireysel Ödeme: Özel amaçlı (aile bireylerine, hediye, bağış, borç, alışveriş vs.) ödemeler 08: Yatırım: Mevduat, menkul kıymet, döviz, gayrı menkul, taşıt, varlık alımı, temettü ödeme, tahsilat vb. gibi yatırım amaçlı ödemeler 09: Finansal: Kredi, depo, repo, türev, finansal varlık alım/satımı vb. ödemeler 10: Eğitim ödemesi 11: Aidat ödemesi \n \n \n TR.OHVPS.DataCode.OdemeDurumu \n Ödemenin durumunu gösterir. Alabileceği değerler: 01: Gerçekleşti (Ödeme ilgili ödeme sistemine iletildi ve alıcı hesabına ulaştı.)  02: Gönderildi (Ödeme ilgili ödeme sistemine iletildi ancak alıcı hesabına ulaştığına dair teyit alınmadı.)İşlemin son durumunun teyidi için YÖS sorgulama yapmalıdır. 03- Gerçekleşmedi (Ödemenin ilgili ödeme sistemine işletiminde veya işlenmesi sırasında hata, zaman aşımı, sistemin gün sonu işlemlerine başlaması vb. durum oluştu ve ödeme gereçeklemedi veya iade edildi.) 04- Onayda bekliyor (Ödeme emri alındı. Çoklu onay akışının tamamlanması bekleniyor.) 05- İşleme Alındı ( Ödeme emri alındı. ) YÖS tarafından müşteriye gösterilmeyen bir koddur. Bu kod dönüldüğünde YÖS uygulamasında ÖHK’ya ödeme durumu 02-Gönderildi  olarak gösterilir. İşlemin son durumunun teyidi için YÖS sorgulama yapmalıdır. \n \n \n TR.OHVPS.DataCode.IslemAmaci \n Ödemenin Amacına yönelik olarak aşağıdaki değerlerden birini alır: 01: Konut Kirası Ödemesi 02: İş yeri Kirası Ödemesi 03: Diğer Kira Ödemesi 04: E-Ticaret Ödemesi: Elektronik ticaret işlem amaçlı aktarımlar 05: Çalışan Ödemesi: Maaş, harcırah, prim gibi çalışan ödemeleri 06: Ticari ödeme: Ticari işletmelerin birbirlerine, kendi hesaplarına veya müşterilerine ödemeleri, borç, ithalat, ihracat, şirket satın alma, vb. kapsamında ödemeler 07: Bireysel Ödeme: Özel amaçlı (aile bireylerine, hediye, bağış, borç, alışveriş vs.) ödemeler 08: Yatırım: Mevduat, menkul kıymet, döviz, gayrı menkul, taşıt, varlık alımı, temettü ödeme, tahsilat vb. gibi yatırım amaçlı ödemeler 09: Finansal: Kredi, depo, repo, türev, finansal varlık alım/satımı vb. ödemeler 10: Eğitim ödemesi 11: Aidat ödemesi 12: Diğer \n \n \n TR.OHVPS.DataCode.RizaDurumu \n B: Yetki Bekleniyor Y: Yetkilendirildi K: Yetki Kullanıldı E: Yetki Ödeme Emrine Dönüştü S: Yetki Sonlandırıldı I :Yetki Iptal \n \n \n TR.OHVPS.DataCode.GkdTur \n GKD yapılmasını gerekli bulduğu durumda HHS, YÖS’ün belirlediği yöntemi dikkate alarak kendi belirlediği GKD yöntemini bildirir: Y: Yönlendirmeli GKD A: Ayrık GKD \n \n \n TR.OHVPS.DataCode.RizaTip \n H: Hesap Bilgisi Rızası O: Ödeme Emri Rızası \n \n \n TR.OHVPS.DataCode.IzinTur \n 01: Temel Hesap Bilgisi 02: Ayrıntılı Hesap Bilgisi 03: Bakiye Bilgisi 04: Temel İşlem (Hesap Hareketleri) Bilgisi 05: Ayrıntılı İşlem Bilgisi \n \n \n TR.OHVPS.DataCode.OdemeSistemi \n İşlemin yönlendirildiği Ödeme Sistemine göre aşağıdaki değerlerden birini alabilir: H: Havale F: FAST E: EFT (PÖS) değerlerinden birini alabilir. \n \n \n TR.OHVPS.DataCode.IslemTuru \n Hesap hareketleri (işlemler) sorgusunda dönülen İşlem Türü (islTur) parametresi aşağıdaki değerlerden birini alabilir: HAVALE EFT FAST PARA_YATIRMA PARA_CEKME YABANCI_PARA_HAVALE YATIRIM_HESABINA_AKTARIM YATIRIM_HESABINDAN_AKTARIM KURUM_FATURA_ODEMESI CEK SENET SIGORTA_ODEMESI UCRET_KOMISYON_FAIZ SGK_ODEMESI VERGI_ODEMESI DOVIZ_ALIM DOVIZ_SATIM KREDI_ODEMESI KREDI_KULLANIM KK_ODEMESI KK_NAKIT_AVANS SANS_OYUNU UYE_ISYERI_ISLEMLERI HGS_OGS_ISLEMLERI DOGRUDAN_BORCLANDIRMA_SISTEMI DIGER \n \n \n TR.OHVPS.DataCode.HspTur \n Hesabın bireysel veya ticari nitelikte olduğunu belirtir: B: Bireysel T: Ticari \n \n \n TR.OHVPS.DataCode.KolasHspTur \n Hesabın bireysel veya ticari nitelikte olduğunu belirtir: B: Bireysel T: Ticari \n \n \n TR.OHVPS.DataCode.HspTip \n Hesap çeşidini belirtir: VADESIZ VADELI KREDILI MEVDUAT HESABI POS CEK YATIRIM \n \n \n TR.OHVPS.DataCode.HspDrm \n Hesabın durumunu belirtir: AKTIF PASIF KAPALI \n \n \n TR.OHVPS.DataCode.YetTip \n Alabileceği değerlere göre hangi belirtecin döneceğine karar verilir. yet_kod yenileme_belirteci \n \n \n TR.OHVPS.DataCode.BrcAlc \n İşlemin hesabı borçlandırdığı ya da alacaklandırdığı bilgisidir. B : Borç A : Alacak \n \n \n TR.OHVPS.DataCode.RizaIptDtyKod \n ‘01’ :Yeni Rıza Talebi ile İptal ‘02’ :Kullanıcı İsteği ile HHS üzerinden İptal ‘03’ :Kullanıcı İsteği ile YÖS üzerinden İptal ‘04’ :Süre Aşımı : Yetki Bekleniyor ‘05’ :Süre Aşımı : Yetkilendirildi ‘06’ :Süre Aşımı : Yetki Ödemeye Dönüşmedi ‘07’ :GKD iptali : Aynı rıza no ile mükerrer çağrımı ‘08’ :GKD iptali : Rızano ile TCKN uyuşmaması ‘09’ :GKD iptali : Uygun ürünü bulunmuyor ‘10’ :GKD iptali : HHS Açık Bankacılık kanalı işleme kapalı ’11’ :GKD iptali : Hesap Yetki Sorunu ‘12’ :GKD iptali : ÖHK HHS müşterisi değil ‘13’ :GKD iptali : ÖHK HHS kontrollerini aşamadı ‘14’ :GKD iptali : Başarısız GKD ‘15’ :GKD iptali : ÖHK isteği ile GKD’den vazgeçildi ‘16’ :GKD iptali : Diğer \n \n \n TR.OHVPS.DataCode.PSUInitiated \n ‘E’ : Evet ‘H’ : Hayır \n \n \n TR.OHVPS.DataCode.HHSYOSSrlmKrtr \n ‘kod’ : Kod,‘unv’ : Unvan \n \n \n TR.OHVPS.DataCode. SrlmYon \n ‘A’: Azalan değerle sıralama ‘Y’: Artan değerle sıralama \n EK-3: İstemci Sertifikalarının Tanım ve Yönetimi \n YÖS rolü ile gelen katılımcılar BKM API Geçidi erişimlerini kendileri ile BKM tarafından önden paylaşılacak olan istemci sertifikalarını kullanarak sağlayacaklardır. \n Bu sertifikalar BKM bünyesinde oluşturulacak ve erişimde bulunacak olan kuruma özel olarak hazırlanacaktır. Hazırlanan istemci sertifikaları güvenli FTP veya e-posta aracılığı ile önden ilgili kişiler ile paylaşılacaktır. \n Sertifika doğrulama işlemi API Geçidi üzerinde yapılacak olup, istemci tarafında web isteğinin ilgili sertifika ile ilişkilendirilerek oluşturulması gerekecektir. \n Uzun dönemli olarak hazırlanacak olan sertifikalar test, sertifikasyon ve üretim ortamlarında kullanılacaktır. Sertifikaların işlevselliği ve geçerliliği bu aşamalarda  sınanacaktır. \n BKM API Geçidi çözümünün test ve üretim ortamları ayrımında istemci sertifikaları, HHS Listeleme API erişimleri ve  Sertifikasyon bağlantıları Şekil 15-HHS/YÖS API Mimarisi Diagramında resmedilmiştir. \n OpenSSL ile CSR (Certificate Signing Request) Oluşturma \nAşağıdaki komut ile 2048-bit RSA private key ve CSR oluşturulur. \nopenssl req -new -newkey rsa:2048 -nodes -keyout PRIVATEKEY.key -out CSR.csr \n CSR ile ilgili detay bilgilerin girişinde; \nOrganization Unit Name (OU) olarak BKM tarafından size iletilen clientId değeri, \nCommon Name (CN) olarak 4 karakterli yosKod değeri, \nDiğer alanlar için de kurum bilgilerinize göre giriş yapılır. \n Tüm bilgilerin girilmesinden sonra CSR dosyası imzalanmak üzere BKM ye iletilir. \n EK-4: Sunucu Sertifikaları \n Sunucu sertifikalarının endpoint bilgisini (Fqdn) içerecek ve global bir Certification Authority tarafından imzalanmış olarak sunulması gerekmektedir.\nÖrneğin; entegrasyon formu içerinde yer alan URL bilgisinin (test.xbank.com.tr) sertifika içerisinde tanımlı olması ve bu sertifikanın global bir CA örneğin Verisign tarafından imzalanmış olarak sunulması gerekmektedir. \n EK-5: Mesaj İmzalama Akışı \n Dijital imzalama yapısı, ÖHVPS API’de gerçekleştirilen işlemlerin ve taşınan verilerin bütünlük ve inkâr edilemezliğini sağlamak amacıyla kurgulanmıştır.\nBu kapsamda imzalama akışı aşağıdaki gibi olmalıdır: \n \n HHS ya da YÖS öncelikle özel ve açık anahtarlarını oluşturmalıdır. Bu anahtarları oluşturmak için aşağıda “openssl” kullanılarak oluşturma örneği paylaşılmıştır.  Bu anahtarlardan özel olan anahtar mesajı imzalamak için kullanılacak olup, açık anahtar ise mesajı doğrulamak amacıyla mesajın alıcısı tarafından kullanılacaktır. \n \n private_key.pem ve public_key.pem dosyasinin içerikleri kod tarafında kullanılacaktır. \n --private.pem => Özel anahtarın ismi\nopenssl genrsa -out private.pem 2048 \n --public_key.pem => Açık anahtarın ismi\nopenssl rsa -in private.pem -pubout -outform PEM -out public_key.pem \n --private_key.pem => Özel anahtarın PCKS8 formatına çevrilmesi (Java açısından PCKS8 formatında olma ihtiyacı nedeniyle) openssl pkcs8 -topk8 -inform PEM -in private.pem -out private_key.pem -nocrypt \n \n \n Açık ve Özel anahtarlar oluşturulduktan sonra Açık Anahtar BKM ile paylaşılır. BKM bu açık anahtarı diğer katılımcıların ulaşabilmesi ve alabilmesi için bir Anahtar Deposu yaklaşımı ile bünyesinde tutar. İlgili anahtarı iletebilmek ve alabilmek için kullanılacak HHS/YOS API ye erişim detayları EK-6 bölümünde detaylı olarak paylaşılmıştır.  Eğer kurumun ilgili anahtar çiftinin yenilenme durumu söz konusu ise yenilemenin hemen ardından açık anahtar yeni bir imzalama yapılmadan önce mutlaka BKM ile paylaşılmalıdır. \n \n \n İmzalı mesajı açacak olan kurum mesajı imzalayan kurumun açık anahtarını her sorguda yeniden almak durumunda değildir. Belirli periyodlarda kendi ortamındaki anahtarı yenileyerek sistemi işletebilir. Ancak imzalayan kurum anahtar çifti yenilemesi yaptığında BKM ile açık anahtarını paylaşsa dahi imzalı mesajı doğrulayacak taraf eski açık anahtar ile doğrulama yapmaya çalıştığı için hata alacaktır. Bu ilk hata durumunda hızlıca BKM üzerinden yeni anahtarı alıp mesajı tekrar doğrulamayı denemelidir. Eğer yine hata alıyor ise doğrulama işlemini hata statüsüne almalıdır. Bu sebeple anahtar yenileyen kurum yeni açık anahtarını yeni bir mesaj imzalama yapmadan önce mutlaka BKM ile paylaşmalıdır. \n İmzalama Kuralları (YÖS) \n Bir YÖS üzerinden başlayan akış örnek olarak paylaşılmıştır. \n \n \n YÖS, mesaj imzalama gerektiren her API isteğinin HTTP gövdesini (request body) kendi özel anahtarı ile şifreleyerek imza bilgisini oluşturur. \n \n \n Ardından bu imza verisini, göndereceği mesajın istek başlığında yer alan X-JWS-Signature alanında göndermelidir. \n \n \n X-JWS-Signature alanında gönderilecek olan bilgi aşağıdaki yöntem ile oluşturulmalıdır. \n \n \n Bu alana yazılacak olan bilgi JWT formatında oluşturulmalıdır. \n \n \n Bir JWT, header-payload-signature alanlarından oluşmaktadır. \n \n Header alanında JWT’yi imzalamak için kullanılacak algoritma belirtilmelidir.  Standartlar kapsamında RS256 kullanılacaktır. \n Payload kısmında özel olarak oluşturulacak olan “body” claim alanına istek gövdesi (request body) verisinin SHA256 hash değeri karşılığı yazılmalıdır. \n JSON payload oluşturulurken RFC 7519 baz alınmalıdır. "iss" (Issuer) Claim, "exp" (Expiration Time) Claim, "iat" (Issued At) Claim, “body” Claim alanlarının gönderilmesi zorunludur. ^RFC7519 \na.\t"iss" (Issuer) Claim : Kurumunuza özel bilgidir. \nb.\t"exp" (Expiration Time) Claim: Saniye cinsinden (Unix time) imzanın son geçerli olduğu tarih. \nc.\t"iat" (Issued At) Claim : Saniye cinsinden (Unix time) imzanın oluşturulduğu tarih \nd.\t“body” Claim : istek gövdesi (request body) verisinin SHA256 hash değeri karşılığı. \n Signature alanında da özel anahtar ile imzalanmış olan imza içeriği yer alacaktır. \n \n X-JWS-Signature:   JWS imzasını içeren üstbilgi. Bu başlığın ne zaman belirtilmesi gerektiği hususu ilgili endpoint için belirtilmiştir. \n Örnek X-JWS-Signature Payload Değeri \n { \n"iss": "https://apigw.bkm.com.tr", \n"exp": 1646832405, \n"iat": 1646746005, \n"body": "c543072f97a761a1d891dc81acc380bc1e6f61ca6541bd93ebfdece338457922" \n} \n \n \n \n \n YÖS, isteği gönderir. Sadece mesajın bütünlüğünü ve doğruluğunu teyit amacı ile istek gövdesi (request body) SHA256 hash değeri imzalanarak X-JWS-Signature alanında bu imza iletilir. İsteğin gövde (request body) kısmı açık ve şifresiz olarak gönderilmektedir. \n \n \n HHS, isteği alır, talebi gerçekleştirmeden önce aldığı API isteklerinin imzasını doğrulamalıdır. X-JWS-Signature alanındaki JWT aşağıdaki adımlarla doğrulanmalıdır. \n \n Header kısmındaki algoritmanin RS256 olduğu kontrol edilir. \n Gönderen kurumun açık anahtarı ile JWT verify (doğrulama) işlemi yapılır. \n Yukarıdaki işlemlerin doğruluğunun ardından JWT’nin payload kısmındaki “body” claim alanındaki bilginin, isteğin gövde verisinin SHA256 hash değerlerinin aynı olduğu kontrol edilir. \n \n \n \n Yukarıdaki işlemler ile doğruluğu teyit edilmiş olan isteğin talebi gerçekleştirir. \n \n \n Eğer istek doğrulanamıyor ise gönderen kurumun açık ve özel anahtar çifti yenilenmiş olabilir. \n \n \n BKM HHS API  üzerinden ilgili kurumun bilgilerini (kurum kodu vs) kullanarak kurumun detay bilgileri çeker ve kendi ortamında yeniler. \n \n \n Ardından imzayı tekrar açık anahtar ile doğrulayarak kontroller gerçekleştirilir. (Eğer halen doğrulama işlemi başarısız ise bu istek için hata akışı çalıştırılır.  TR.OHVPS.Resource.InvalidSignature  kodu ile hata üretilebilir.) \n \n \n İmza bilgisinin beklendiği (x-jws-signature) servislerde, bu bilginin iletilmediği durumlarda  TR.OHVPS.Resource.MissingSignature  hatası üretilebilir. \n \n \n HHS isteği işledikten sonra cevabı oluştururken de yukarıdaki akışlar ile göndereceği cevabı imzalamalıdır. \n EK-6: HHS/YÖS API Mimarisi \n HHS/YÖS API Uygulama Mimarisinde Test ve Üretim ortamlarında aşağıdaki alanda yer almaktadır. \n \n Şekil 15: HHS/YÖS API Mimarisi \n'},{title:"7.\tHesap Bilgisi Hizmeti",frontmatter:{},regularPath:"/v1.0.1/contents/hesap-bilgisi-hizmeti.html",relativePath:"v1.0.1/contents/hesap-bilgisi-hizmeti.md",key:"v-5b1695dd",path:"/v1.0.1/contents/hesap-bilgisi-hizmeti.html",headers:[{level:2,title:"Genel Bilgiler",slug:"genel-bilgiler"},{level:2,title:"Hesap Bilgisi Hizmeti İçin Erişim Adresleri",slug:"hesap-bilgisi-hizmeti-icin-erisim-adresleri"},{level:2,title:"ADIM 0: ÖHK'nın hesap bilgilerine erişim için talepte bulunması:",slug:"adim-0-ohk-nın-hesap-bilgilerine-erisim-icin-talepte-bulunması"},{level:2,title:"7.1 ADIM 1: Hesap Bilgisi Rızasının Hazırlanması",slug:"_7-1-adim-1-hesap-bilgisi-rızasının-hazırlanması"},{level:3,title:"POST /hesap-bilgisi-rizasi",slug:"post-hesap-bilgisi-rizasi"},{level:3,title:"Başarılı İstek:",slug:"basarılı-istek"},{level:3,title:"Başarılı Yanıt:",slug:"basarılı-yanıt"},{level:2,title:"İzinler",slug:"izinler"},{level:2,title:"7.2 ADIM 2: Hesap Bilgisi Hizmeti Rızasının Tesisi",slug:"_7-2-adim-2-hesap-bilgisi-hizmeti-rızasının-tesisi"},{level:2,title:"7.3 ADIM 2.1: Hesap Bilgisi Rızasının Sorgulanması (İsteğe Bağlı)",slug:"_7-3-adim-2-1-hesap-bilgisi-rızasının-sorgulanması-istege-baglı"},{level:2,title:"7.4 ADIM 2.2: Hesap Bilgisi Rızasının İptali",slug:"_7-4-adim-2-2-hesap-bilgisi-rızasının-iptali"},{level:2,title:"7.5 ADIM 3: Hesap Bilgilerinin Alınması",slug:"_7-5-adim-3-hesap-bilgilerinin-alınması"},{level:2,title:"7.6 ADIM 3.1 ve 3.2: Hesap Bilgilerinin Sorgulanması",slug:"_7-6-adim-3-1-ve-3-2-hesap-bilgilerinin-sorgulanması"},{level:2,title:"7.7 ADIM 3.3 ve 3.4: Hesap Bakiyesinin Sorgulanması",slug:"_7-7-adim-3-3-ve-3-4-hesap-bakiyesinin-sorgulanması"},{level:2,title:"7.8 ADIM 3.5 ve 3.6: İşlemlerin Sorgulanması",slug:"_7-8-adim-3-5-ve-3-6-islemlerin-sorgulanması"},{level:2,title:"7.9\tHealthcheck API",slug:"_7-9healthcheck-api"},{level:3,title:"Başarılı Yanıt:",slug:"basarılı-yanıt-2"}],content:" 7.\tHesap Bilgisi Hizmeti  \n Genel Bilgiler \n Hesap bilgisi sorgulama için HBHS tarafından müşteri rızası tesisinin HHS tamamlanmış olması gerekir. Müşteri rızası tesisi tamamlandıktan sonra, HBHS sorgulamak istediği hesaba ait verileri ilgili erişim adresi üzerinden sorgular. \n \n \n Şekil 10: Hesap Bilgisi Hizmeti Üst Düzey Akışı \n Şekil-10’da sunulan hesap bilgisi hizmeti 5 temel akıştan oluşur: \n 0.\tMüşterinin hesap bilgilerine erişim için talepte bulunması:  ÖHK ÖBHS mobil uygulama ya da web sitesinden hesap bilgilerine erişim işlemini başlatır. \n 1.\tHesap Bilgisi müşteri rızasının hazırlanması: \n HBHS, “hesap bilgilerine erişim” için müşteri rızası tesisi amacıyla HHS’deki hesap bilgisi rızası erişim adresine bir POST isteğinde bulunur ve bir hesap bilgisi rızası nesnesi oluşturur. HHS hesap bilgisi rızası nesnesi için biricik tanımlayacı döner (RızaNo). Hesap bilgisi rızası, müşterinin HBHS’nin hesap bilgilerine erişim izin verdiği alanları içerir: \n \n İzinler - erişim için izin verilen veri kümelerinin listesi. \n Erişimin Geçerli Olduğu Son Tarih - HBHS'nin müşterinin hesap bilgilerine erişebileceği isteğe bağlı seçilebilen son tarih. \n İşlem Sorgulama Başlangıç Zamanı – Müşteri rızasının tesisinden itibaren geriye dönük olarak HBHS’nin hesap bilgilerine erişebileceği süreyi \n İşlem Sorgulama Bitiş Zamanı - Müşteri rızasının tesisinden itibaren ileriye dönük olarak HBHS’nin hesap bilgilerine erişebileceği süreyi \n \n 2.\tHesap bilgisi hizmeti müşteri rızasının tesisi: \n HHS, Hesap Bilgisi Rızası servisi ile ÖHK özelinde “Yetki bekleniyor” statüsünde bir rıza nesnesi hazırlar. HHS, GKD’nin başarıyla tamamlanması sonrasında hesap bilgisi rızası nesnesinin yetkilendirildiğini belirtmek için Rıza Durumunu “Rıza Yetkilendirildi” olarak günceller. Nesne yetkilendirildikten sonra HHS nesne ile bir erişim belirteci (access token) ilişkilendirir, Rıza Durumunu “Yetki Kullanıldı” yapar ve bu belirteci HBHS’ye geri döner.  Böylece müşteri rıza tesisi sağlanmış olur. \n Hesap bilgisi için müşteri rızasına ilişkin temel ilkeler şunlardır: \n \n 1 ÖHK'nın 1 YÖS için 1HHS'de Yetki Bekleniyor, Yetkilendirildi, Yetki Kullanıldı statüsünde 1 rızası olabilir. \n Müşteri rızasının ayrıntıları ÖHK ile HBHS arasında belirlenir. Bu nedenle müşteri rızasının ayrıntıları HHS ekranında değiştirilmemelidir. \n ÖHK, hesap erişim izni ayrıntılarını yalnızca bir bütün olarak yetkilendirebilir veya geri alabilir. \n Müşteri rızası tesisi esnasında, müşteri HHS arayüzünde erişim için yetkilendirecek hesapları seçer. \n \n 2.1\tHesap bilgisi rızasının sorgulanması:  Müşteri rızası  GET/hesap-bilgisi-rizasi/{RizaNo}  çağrısı yapılarak sorgulanır. \n 2.2\tHesap bilgisi müşteri rızasının iptali:  Müşteri rızası  DELETE/hesap-bilgisi-rizasi/{RizaNo}  çağrısı yapılarak iptal edilir. \n 3.\tHesap bilgilerinin alınması:  Hesap bilgileri ilgili kaynağa (hesaplar, bakiye, işlemler) GET isteği yapılarak gerçekleştirilir. HBHS, müşteri rızasının tesisinden sonrasında (geçerli bir erişim belirticine sahip olduğunda) öncelikle  GET/hesaplar  çağrısı yapacaktır. \n Hesap Bilgisi Hizmeti İçin Erişim Adresleri \n Etki Alanı (Scope) =“hesap_bilgisi” \n \n \n \n No \n Kaynak \n HTTP işlemi \n Erişim Adresi \n Zorunlu / İsteğe Bağlı \n Yetkilendirme Türü \n İmzalama \n Parametre \n İstem Nesnesi \n Yanıt Nesnesi \n \n \n \n \n 1 \n hesap-bilgisi-rizasi \n POST \n /hesap-bilgisi-rizasi \n Z \n İstemci Kimlik Bilgileri \n İmzalı İstek ve Yanıt \n \n HesapBilgisiRizasiIstegi \n HesapBilgisiRizasi \n \n \n 2 \n erisim-belirteci  (GKD için) \n POST \n POST/erisim-belirteci \n Z \n İstemci Kimlik Bilgileri \n İmzalı İstek ve Yanıt \n \n ErisimBelirteciIstegi \n ErisimBelirteci \n \n \n 2.1 \n hesap-bilgisi-rizasi \n GET \n /hesap-bilgisi-rizasi/{RizaNo} \n Z \n İstemci Kimlik Bilgileri \n İmzalı Yanıt \n \n \n HesapBilgisiRizasi \n \n \n 2.2 \n hesap-bilgisi-rizasi \n DELETE \n /hesap-bilgisi-rizasi/{RizaNo} \n Z \n İstemci Kimlik Bilgileri \n \n \n \n \n \n \n 3.1 \n hesaplar \n GET \n /hesaplar \n Z \n İstemci Kimlik Bilgileri ve Yetkilendirme Kodu (GKD) \n \n Sayfalama \n \n HesapBilgileri(birden çok hesap) \n \n \n 3.2 \n hesaplar \n GET \n /hesaplar/{hspRef} \n Z \n İstemci Kimlik Bilgileri ve Yetkilendirme Kodu (GKD) \n \n \n \n HesapBilgileri(tek  hesap) \n \n \n 3.3 \n bakiye \n GET \n /hesaplar/{hspRef}/bakiye \n Z \n İstemci Kimlik Bilgileri ve Yetkilendirme Kodu (GKD) \n \n \n \n BakiyeBilgileri(tek  hesap) \n \n \n 3.4 \n bakiye \n GET \n /bakiye \n İ \n İstemci Kimlik Bilgileri ve Yetkilendirme Kodu (GKD) \n \n Sayfalama \n \n BakiyeBilgileri(birden çok hesap) \n \n \n 3.5 \n islemler \n GET \n /hesaplar/{hspRef}/işlemler \n Z \n İstemci Kimlik Bilgileri ve Yetkilendirme Kodu (GKD) \n \n Sayfalama Filtreleme \n \n IslemBilgileri (tek hesap) \n \n \n \n Tablo 11: Hesap Bilgisi Hizmeti İçin Erişim Adresleri \n ADIM 0: ÖHK'nın hesap bilgilerine erişim için talepte bulunması: \n ÖHK, HBHS uygulamasında (web arayüzü/mobil uygulama) hesap bilgilerine erişim için talepte bulunur. \n 7.1 ADIM 1: Hesap Bilgisi Rızasının Hazırlanması \n Bu API çağrısı HBHS'nin HHS'de yeni bir “HesapBilgisiRizasi” nesnesi oluşturmasını ve nesneye erişmek için benzersiz bir rıza numarası ({RizaNo}) dönülmesini sağlar. \n API çağrısının başarıyla sonuçlanması için HBHS'nin istemci kimlik bilgileri yetkisi kullanması yeterlidir.\nBaşarıyla oluşturulan hesap bilgisi rıza kaynağının rıza durumu “Yetki Bekleniyor” olarak düzenlenir.\nÖHK daha önce aldığı rızaya ilişkin erişim tarihleri, izin türlerini ve hesap bilgilerini güncellemek isterse, HBHS önce HHS nezdindeki rızayı iptal etmeli ve sonrasında yeni bir rıza talebinde bulunmalıdır.\n \n \n Şekil 11: Hesap Bilgisi Müşteri Rızasının Hazırlanması \n \n POST /hesap-bilgisi-rizasi isteğinin (REQUEST) gövdesinde (BODY)  “HesapBilgisiRizasıIstegi” nesnesi (Tablo-12) kullanılır. İstek başarıyla sonuçlanırsa HHS kaynak sunucusunda “HesapBilgisiRizasi” (Tablo-13) nesnesi oluşturulur. \n  POST /hesap-bilgisi-rizasi \n Başarılı İstek: \n İSTEK: \n HBHS, bu API erişim adresinden HHS’ye yeni bir HesapBilgisiRizasi oluşturulması için istekte bulunur: \n \n HBHS, ÖHK’nın hesap bilgilerine yönelik rıza başlatma isteği olduğunu HHS’ye bildirir. \n HBHS, ÖHK’nın, HBHS arayüzünden verdiği rızanın (“Ön Onay”) bir kopyasının HHS nezdinde müşteri tarafından onaylanması için HHS’ye gönderilmesini sağlar. \n HHS; istek mesajında yer alan alanların API dökümanında belirtilen şartları sağlayacak şekilde zorunluluk ve uzunluk kontrollerini yapar. (Zorunlu) \n HHS; YÖS API ile alınan HBHS bilgilerinin içerisinde yer alan yönlendirme ve bildirim adresleri ile ödeme emri rızası nesnesi request mesajında paylaşılan adreslerin uyumlu olup olmadığının kontrollerini yapar. (Zorunlu) \n HHS; kimlik bilgileri nesnesinde iletilen kimlik bilgileri ile ÖHK’nın HHS müşterisi olup olmadığının kontrollerini yapar. Bu kontrol hem bireysel hem de kurumsal ÖHK’lar için yapılmalıdır.  (Zorunlu) \n Erişimin Geçerli Olduğu Son Tarih, İşlem Sorgulama Başlangıç Zamanı, İşlem Sorgulama Bitiş Zamanı alanları ile ilgili Tablo 12’de belirtilen kontroller yapılmalıdır. (Zorunlu) \n HHS, benzersiz “RizaNo” ile “HesapBilgisiRizasi” nesnesi oluşturur ve HBHS’ye döner. \n HHS, HesapBilgisiRizasi oluşturduğu anda durumunu “Yetki Bekleniyor” olarak düzenler. \n \n Erişimin Geçerli Olduğu Son Tarih, İşlem Sorgulama Başlangıç Zamanı, İşlem Sorgulama Bitiş Zamanı alanlarında zaman aralıkları müşteri deneyimi penceresinden değerlendirilerek ay cinsinden belirtilmiştir. Bu konuda aşağıdaki gibi oluşabilecek uç örneklere dikkat edilmesi gerekmektedir. \n Bugün : 31.08.2019 \nBugün + 6 Ay : 29.02.2020 \nBugün : 30.08.2020 \nBugün + 6 Ay : 28.02.2021 \n Tablo 12: “HesapBilgisiRizasiIstegi” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n HHS tarafından yapılması gereken kontrol ve işlemler \n \n \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n HHS, hhsKod’un kendisine ait olduğunu ve istek başlığındaki x-aspsp-code değeri ile aynı olduğunu kontrol eder. Hata durumunda TR.OHVPS.Connection.InvalidASPSP hata kodunu döner. \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur \n HHS, yosKod’un geçerli bir Ödeme Hizmeti Sağlayıcısı Kodu olduğunu ve istek başlığındaki x-tpp-code değeri ile aynı olduğunu kontrol eder.  Hata durumunda TR.OHVPS.Connection.InvalidTPP hata kodunu döner. \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n \n >Yetkilendirme Yöntemi \n yetYntm \n AN1 \n İ \n TR.OHVPS.DataCode.GkdTur sıralı veri türü değerlerinden birini alır.   Yetkilendirme yöntemi, HBHS tarafından belirtilmeyebilir. \n HHS, HBHS’nin belirlediği yöntemi dikkate alarak kendi belirlediği yöntemi kullanır. \n \n \n > Yönlenme Adresi \n yonAdr \n AN1..1024 \n K \n Yönlendirmeli güçlü kimlik doğrulama için zorunludur.  YÖS Yönlendirmeli GKD yöntemi ile akışı destekliyorsa, yetYntm değişkeninden bağımsız olarak yönlendirme adresini iletmelidir. Durum kodu(drmKod), yönlendirme adresine parametre olarak eklenmelidir. \n HHS, müşteri uygulama / tarayıcısını bu alanda belirtilen adrese yönlendirir. \n \n \n > Bildirim Adresi \n bldAdr \n AN1..1024 \n K \n Ayrık güçlü kimlik doğrulama için zorunludur.  YÖS Ayrık GKD yöntemi ile akışı destekliyorsa, yetYntm değişkeninden bağımsız olarak bildirim adresini iletmelidir.  Durum kodu(drmKod), yönlendirme adresine parametre olarak eklenmelidir. \n HHS, ayrık GKD sonrası bu alanda belirtilen adrese otorizasyon kodunu (authentication code) iletir. \n \n \n Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n \n > Kimlik Türü \n kmlkTur \n AN1 \n Z \n TR.OHVPS.DataCode.KimlikTur sıralı veri türü değerlerinden birini alır.   Kurum adına yapılan(ticari) işlemlerde kurum kullanıcısının bilgisi iletilmelidir. \n \n \n \n > Kimlik Verisi \n kmlkVrs \n AN1..30 \n Z \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır.   TR.OHVPS.DataCode.KimlikTur değerine göre uzunluk ve formatı değişir.   Kurum adına yapılan(ticari) işlemlerde kurum kullanıcısının bilgisi iletilmelidir. \n \n \n \n > Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n K \n ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür.  TR.OHVPS.DataCode.KurumKimlikTur sıralı veri türü değerlerinden birini alır. \n \n \n \n > Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n K \n ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.  TR.OHVPS.DataCode.KurumKimlikTur değerine göre uzunluk ve formatı değişir. \n \n \n \n > Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur sıralı veri türü değerlerinden birini alır (B: Bireysel, K:Kurumsal) \n \n \n \n Hesap Bilgisi \n hspBlg \n Kompleks: HesapBilgisi \n Z \n \n \n \n \n >İzin Bilgisi \n iznBlg \n Kompleks: IzinBilgisi \n Z \n \n \n \n \n >> İzin Türü \n iznTur \n Array[AN2] \n Z \n ÖHK tarafından HHS önyüzünde belirlenen izin tipleridir. Bir istekte birden fazla değer bulunabilir, TR.OHVPS.DataCode.IzinTur sıralı veri türü değerlerinden birini alır. \n \n \n \n >> Erişimin Geçerli Olduğu Son Tarih \n erisimIzniSonTrh \n ISODateTime \n Z \n Hesap bilgisi rızasının geçerli olduğu son tarih.   Müşteri YÖS ekranından bu değeri belirleyebilir.   Varsayılan değer : Rıza verilen tarih + 6 ay   Alabileceği maksimum değer : Rıza tarihi + 6 ay    Alabileceği minimum değer : Rıza tarihi + 1 gün   Örneğin 23/09/2021’de minimum 24/09/2021 seçilebilir. Bu durumda izin 24/09/2021 23:59:59’da bitecek şekilde olmalıdır. \n Bu alanda bir değer bulunmadığı durumda HHS hata dönmelidir. \n \n \n >> İşlem Sorgulama Başlangıç Zamanı \n hesapIslemBslZmn \n ISODateTime \n K \n Hesap bilgisi rızası verilmesinden geçmişe dönük en fazla 12 ay olabilir, daha eski olmaması gerekir.   Varsayılan değeri rıza verilen tarih (işlem zamanı) – 12 aydır.   ÖHK bu alana bir değer girişi sağlamamış ise ÖBHS varsayılan değerlerle bu alanı doldurarak, HHS’ye iletir.   Minimum tarihi : Rızanın veriliş tarihi  - 12 ay    Maksimum tarih: Rızanın veriliş tarihi +  12 ay    İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçildiğinde bu alanların doldurulması zorunludur.  İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçilmemiş ise gönderilmemelidir. \n ÖHK tarafından izin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçilmemiş ve  İşlem Sorgulama Başlangıç Zamanı ÖBHS tarafından dolu olarak gönderilmiş ise HHS tarafından işlemin devamına izin verilmez. İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçilmiş ise; HHS bu alanın alabileceği minimum ve maksimum değerlerin sınırlar içerisinde olduğunu kontrol eder. \n \n \n >> İşlem Sorgulama Bitiş Zamanı \n hesapIslemBtsZmn \n ISODateTime \n K \n Hesap bilgisi rızası verilmesinden geleceğe dönük en fazla 12 ay sonrası olabilir, daha ileri bir tarih olmaması gerekir.   Varsayılan değeri: Rıza verilen tarih + 12 aydır.  ÖHK bu alana bir değer girişi sağlamamış ise ÖBHS varsayılan değerlerle bu alanı doldurarak, HHS’ye iletir.  Minimum tarihi : Rızanın veriliş tarihi  – 12 ay  Maksimum tarihi :  Rızanın veriliş tarihi + 12 ay   İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçildiğinde bu alanların doldurulması zorunludur.  İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçilmemiş ise gönderilmemelidir. Eğer dolu gönderilirse HHS tarafından uygun hata mesajı iletilmelidir. \n ÖHK tarafından izin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçilmemiş ve İşlem Sorgulama Bitiş Zamanı ÖBHS tarafından dolu olarak gönderilmiş ise HHS tarafından işlemin devamına izin verilmez.   İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçilmiş ise; HHS bu alanın alabileceği minimum ve maksimum değerlerin sınırlar içerisinde olduğunu kontrol eder. \n Başarılı Yanıt: \n Tablo 13: HesapBilgisiRizasi nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Riza Bilgileri \n rzBlg \n Kompleks: RizaBilgileri \n Z \n \n \n \n > Rıza No \n rizaNo \n AN1..128 \n Z \n HesapBilgisiRızasi nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n > Oluşturma Zamanı \n olusZmn \n ISODateTime \n Z \n HesapBilgisiRızası nesnesinin oluşturulma zamanı \n \n \n > Güncellenme Zamanı \n gnclZmn \n ISODateTime \n Z \n HesapBilgisiRızası nesnesinin güncellenme zamanı \n \n \n > Rıza Durumu \n rizaDrm \n AN1 \n Z \n TR.OHVPS.DataCode.RizaDurumu sıralı veri tipini değerlerinden birini alır. Örn; hesap bilgi rızasının tesisine dair ilk istek mesajına dönüşte “B: Yetki Bekleniyor” değerini alması beklenir. \n \n \n > Rıza Iptal Detay Kodu \n rizaIptDtyKod \n AN2 \n K \n Rıza durumunun iptal olduğu durumda zorunludur. \n \n \n Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n > Kimlik Türü \n kmlkTur \n AN1 \n Z \n TR.OHVPS.DataCode.KimlikTur sıralı veri türü değerlerinden birini alır. \n \n \n > Kimlik Verisi \n kmlkVrs \n AN1..30 \n Z \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır. TR.OHVPS.DataCode.KimlikTur değerine göre uzunluk ve formatı değişir. \n \n \n > Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n K \n ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür.  TR.OHVPS.DataCode.KurumKimlikTur sıralı veri türü değerlerinden birini alır. \n \n \n > Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n K \n ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.  TR.OHVPS.DataCode.KurumKimlikTur değerine göre uzunluk ve formatı değişir. \n \n \n > Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur sıralı veri türü değerlerinden birini alır (B: Bireysel, K:Kurumsal) \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n > Yetkilendirme Yöntemi \n yetYntm \n AN1 \n K \n HHS, HBHS’nin belirlediği yöntemi dikkate alarak kendi belirlediği yöntemi kullanır.  TR.OHVPS.DataCode.GkdTur sıralı veri türü değerlerinden birini alır. \n \n \n > Yönlenme Adresi \n yonAdr \n AN1..1024 \n K \n HHS, müşteri uygulama / tarayıcısını bu alanda belirtilen YÖS adresine yönlendirir. \n \n \n > Bildirim Adresi \n bldAdr \n AN1..1024 \n K \n HHS, ayrık GKD sonrası bu alanda belirtilen YÖS adresine otorizasyon kodunu (authentication code) iletir. \n \n \n > HHS Yönlenme Adresi \n hhsYonAdr \n AN1..1024 \n K \n GKD doğrulama bilgilerinin girilebilmesi için uygulamadan açılacak yönlendirme sayfasının adresi. \n \n \n > Yetkilendirme Tamamlanma Zamanı \n yetTmmZmn \n ISODateTime \n Z \n Yetkilendirme akışının tamamlanması gereken son zamanı gösterir.  HHS tarafından maksimum 5 dk içinde işlem tamamlanacak şekil zaman damgası oluşturulur. Zaman aşımı olduğunda HHS’nin GKD’ye izin vermeyecek şekilde hata mesajı vermesi gerekmektedir. Rıza durumu Yetkilendirildi statüsüne geçene kadarki süredir. \n \n \n Hesap Bilgisi \n hspBlg \n Kompleks: HesapBilgisi \n Z \n \n \n \n > İzin Bilgisi \n iznBlg \n Kompleks: IzinBilgisi \n Z \n \n \n \n >> İzin Türü \n iznTur \n Array[AN2] \n Z \n ÖHK tarafından HBHS önyüzünde belirlenen izin tipleridir. Bir istekte birden fazla değer bulunabilir, TR.OHVPS.DataCode.IzinTur sıralı veri türü değerlerinden birini alır. \n \n \n >> Erişimin Geçerli Olduğu Son Tarih \n erisimIzniSonTrh \n ISODateTime \n Z \n Hesap bilgisi rızasının geçerli olduğu son tarih \n \n \n >> İşlem Sorgulama Başlangıç Zamanı \n hesapIslemBslZmn \n ISODateTime \n K \n Hesap hareketlerinin sorgunabileceği başlangıç zamanı. İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçildiğinde bu alanların doldurulması zorunludur. \n \n \n >> İşlem Sorgulama Bitiş Zamanı \n hesapIslemBtsZmn \n ISODateTime \n K \n Hesap hareketlerinin sorgunabileceği bitiş zamanı. İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçildiğinde bu alanların doldurulması zorunludur. \n \n \n > Ayrıntı Bilgi \n ayrBlg \n Kompleks: AyrintiBilgi \n İ \n \n \n \n > ÖHK Mesaj Alanı \n ohkMsj \n AN1..200 \n İ \n HHS’nin ÖHK’ya göstermek üzere ilettiği mesaj. \n İzinler \n Bir hesap bilgisi müşteri rızası kaynağı çağrısına yanıt olarak döndürülen verileri sınırlamak için izin kodları kullanılır: \n \n Temel Hesap Bilgisi \n Ayrıntılı Hesap Bilgisi \n Bakiye Bilgisi \n Temel İşlem (Hesap Hareketleri) Bilgisi \n Ayrıntılı İşlem Bilgisi \n \n ÖHK’ya sunulacak seçimler ve kuralları aşağıdaki gibi olmalıdır. \n \n \n \n Seçim \n Kural \n \n \n \n \n Temel Hesap Bilgisi \n ÖHK seçimine sunulmamalıdır. Değiştirilemez şekilde seçili gösterilmelidir. \n \n \n Ayrıntılı Hesap Bilgisi \n ÖHK seçim yapabilir. \n \n \n Bakiye Bilgisi \n ÖHK seçim yapabilir. \n \n \n Temel İşlem (Hesap Hareketleri)  Bilgisi \n ÖHK seçim yapabilir. \n \n \n Ayrıntılı İşlem Bilgisi \n ÖHK seçim yapabilir. Ayrıntılı İşlem Bilgisi seçimi Temel İşlem Bilgisi seçimini kapsar. (Ayrıntılı İşlem bilgisi seçildiğinde Temel İşlem Bilgisi de seçili olmalıdır.) \n \n \n \n Aşağıdaki durumlarda, izin kombinasyonlarına izin verilmez. HHS, bu hesap erişim onaylarını 400 (Hatalı İstek) yanıt koduyla reddetmelidir: \n \n İzin dizisinin herhangi bir izin türü içermemesi durumu, \n İzin dizisinde HHS tarafından desteklenmeyen bir izin kodunun yer alması durumu \n 7.2 ADIM 2: Hesap Bilgisi Hizmeti Rızasının Tesisi \n \n \n Şekil 12: Hesap Bilgisi ÖHK Rızasının Tesisi \n Rıza tesisinin başarıyla sonuçlanması için HBHS'nin istemci kimlik bilgileri yetkisi kullanması ve ardından müşterinin HHS tarafından yönlendirmeli veya ayrık GKD ile doğrulanması gerekir. HHS'de oluşturulan ve rıza durumu “Yetki Bekleniyor” olan bir hesap bilgisi rızası, GKD sonrası “Yetkilendirildi” statüsüne güncellenir. HBHS, erişim sağlayacağı hesapları hesap bilgisi rızasının tesisinden önce seçer. \n \n \n Yönlendirmeli doğrulama akışında, HBHS ÖHK’yı HHS’ye yönlendirir. \n \n \n HBHS tarafından yönlendirme, bir önceki adımdaki RizaNo’yu içerir. \n \n \n HHS, ÖHK için GKD sürecini işletir. \n ÖHK’yı doğrularsa, \n \n \n ÖHK HBHS üzerinden işlem yapılmasına izin vereceği hesap seçimini yapar. HBHS üzerinden ÖHK’nın verdiği izin bilgilerini ve erişim izninin bitiş tarihi bilgilerini, HHS bilgilendirme amaçlı ÖHK’ya gösterir. \n \n \n HHS hesap bilgisiri rıza kaynağının durumunu “Yetkilendirildi” olarak günceller. \n \n \n HHS, ÖHK’yı “olumlu yönlendirme akışı” ile HBHS tarafından tanımlanan yönlendirme adresine yönlendirir: \n yonAdr?rizaDrm=Y&yetKod=xx&rizaNo=yy&rizaTip=H&drmKod=zzz\n \n \n \n ÖHK’yı doğrulayamazsa, \n \n \n HHS, hesap bilgisi rıza kaynağının durumunu “Yetki İptal” olarak günceller. \n \n \n HHS, ÖHK’yı “olumsuz yönlendirme akışı” ile HBHS tarafından tanımlanan yönlendirme adresine yönlendirir: \n yonAdr?rizaDrm=I &rizaNo=yy&rizaTip=H&rizaIptDtyKod=11&drmKod=zzz\n \n \n \n \n \n \n \n Ayrık doğrulama akışında, HHS, ÖHK’nın hesap bilgisi hizmetini başlattığı uygulamadan farklı olabilecek bir “doğrulama” uygulamasında işlemi doğrulamasını ister. \n \n Ayrık akış HBHS’nin farklı bir kanal kullanarak yetkilendirme isteği göndermesiyle başlatılır. \n Bu yetkilendirme isteği, yetkilendirilecek hesap bilgisi rızasının eşleştirileceği ÖHK’nın bulunması için ilgili veriyi taşır. \n HHS, ödeme hizmeti kullanıcısını doğrular. \n ÖHK verdiği izin tipi dahilinde bilgileri paylaşılacak olan hesapları seçer. \n HHS, hesap bilgisi rıza kaynağının durumunu “Yetkilendirildi” olarak günceller. \n \n \n \n Başarılı GKD sonrasında (rizaDrm=’Y’) ilgili rıza nesnesi için (belirli bir rizaNo) yetkilendirme kodunun (yetKod) alınmasının ardından erişim belirteci erişim adresine POST çağrısı yapılarak yetkilendirme kodu karşılığında erişim belirteci ve yenileme belirteci alınır. POST /erişim-belirteci erişim noktası EK-3’te açıklanmıştır. \n Erişim belirteci alındıktan sonra; HHS,  hesap bilgisi rızasının durumunu “Yetki Kullanıldı” olarak günceller. Rıza tesisi sağlanmış olur. \n 7.3 ADIM 2.1: Hesap Bilgisi Rızasının Sorgulanması (İsteğe Bağlı) \n GET /hesap-bilgisi-rizasi/{RizaNo} \n ÖHK, HHS üzerinden rıza iptali yapmış olabilir veya ÖHK’nın verdiği rıza süresi dolmuş olabilir.  Bu durumlarda HBHS, rıza alma akışına başlamadan önce, daha önce oluşturulmuş bir HesapBilgisiRizasi kaynağının durumunu, isteğe bağlı olarak alabilir. \n Servis başarılı yanıtında Tablo 13’de belirtilen “HesapBilgisiRizasi” nesnesini dönmektedir. \n Durum \nHesapBilgisiRizasi kaynağı için kullanılabilecek durum göstergeleri şu şekildedir: \n \n Yetki Bekleniyor \n Yetkilendirildi \n Yetki Kullanıldı \n Yetki Sonlandırıldı \n Yetki İptal \n 7.4 ADIM 2.2: Hesap Bilgisi Rızasının İptali \n \n \n \n Şekil 13: Hesap Bilgisi Müşteri Rızasının Geri Alınması \n DELETE /hesap-bilgisi-rizasi/{RizaNo} \n DELETE /hesap-bilgisi-rizasi çağrısı, bir HBHS'nin önceden oluşturulmuş bir hesap erişim rızasını (yetkili olsun veya olmasın) silmesine izin verir. Müşteri, rızasını HHS üzerinden iptal etmek yerine, HBHS üzerinden bu rızasını kaldırmak isteyebilir. \nBu API çağrısı, müşterinin HBHS üzerinden hesap bilgisi rızasını iptal etmesine ve HHS nezdindeki hesap bilgisi rızası nesnesinin silinmesini sağlar. \nMüşterinin HBHS’nin veri erişim iznini iptal etmesi durumunda HBHS, HHS’de mevcut olan HesapBilgisiRizasi kaynağını pratik olarak mümkün olan en kısa sürede silmelidir. Bu ise, ilgili kaynağa \n DELETE /hesap-bilgisi-rizasi/{RizaNo} \nçağrısı aracılığı ile yerine getirilir. HBHS ayrıca, sisteminden Hesap Erişim İzni kaynaklarını da temizlemelidir. \nSöz konusu silme işlemi, kayıtların statüsünün pasife çekilmesi ile gerçekleştirilmelidir. Söz konusu kayıtlar, denetim izlerinin oluşturulması ve saklanmasına ilişkin ikincil düzenleme hükümleri kapsamında güvenli şekilde tutulmalıdır. \nServis istek parametresi olarak sadece path’de iletilen Rıza No bilgisine ihtiyaç duymaktadır. \nÖHK rızası başarı ile silindiğinde HTTP 204 response kodu ile işlem sonucu iletilir. Rıza tipi “I” yani “Yetki İptal” olarak güncellenir ve gnclZmn zaman damgası vurularak güncellenir. \nÖHK ile rıza iptali sırasında kurulacak iletişimde (e-posta, sms gibi) aşağıdaki alanların iletilmesi tavsiye edilmektedir: \nYÖS Adı, HHS adı, Rıza Oluşturma Zamanı, Servis Tipi Bilgisi (HBHS) \n 7.5 ADIM 3: Hesap Bilgilerinin Alınması \n    \n \n   \n Şekil 14: Hesap Bilgilerinin Alınması \n İSTEK: \nMüşteri rızası tesis edilmiş kullanıcı için HBHS API erişim adresinden HHS’ye erişilebilir hesap bilgilerini GET isteği ile sorgular: \n \n RizaDurumu “Yetki Kullanıldı” ise işleme başlanır. RizaDurumu farklı bir değerde ise “TR.OHVPS.Resource.ConsentMismatch” hatasının iletilmesi gerekir. \n GET verisinin modele göre kontrolü yapılır (Örneğin: Alan kontrolleri) \n \n GET verisinin mantıksal kontrolleri yapılır. \n 7.6 ADIM 3.1 ve 3.2: Hesap Bilgilerinin Sorgulanması \n GET /hesaplar ve GET /hesaplar/{hspRef} \n Bu erişim noktalarından tüm hesapların veya belirli bir hesabın bilgilerinin sorgulanır. Hesap bilgisi için daha önce tanımlanmış izin türüne göre (Temel Hesap Bilgisi veya Detaylı Hesap Bilgisi) yanıtında dönülen HesapBilgileri nesnesinin içeriği değişir.  Tablo 15’te HesapBilgileri nesnesinin içeriği verilmiştir. \n Hesap Bilgisi Sorgu Örneği (Tüm Hesaplar) =  /hesaplar \nHesap Bilgisi Sorgu Örneği (Belirli Bir Hesap) =  /hesaplar/{hspRef} \nİşlem Sorgu Örneği (Belirli Bir Hesap) =  /hesaplar?\nsyfKytSayi=25&\nsyfNo=1&\nsrlmKrtr= hspRef &\nsrlmYon=A \n Tablo 14: Hesap Bilgileri Sorgulama İsteği Sorgu Parametreleri \n \n \n \n Alan Adı \n Parametre Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n HHS tarafından yapılması gereken kontrol ve işlemler \n \n \n \n \n Sayfa Başına İstenen Kayıt Sayısı \n syfKytSayi \n N3 \n İ \n Sayfa başına istenen kayıt sayısı. Bu alanda iletilen değer 100’den büyük olamaz. \n Bu veri gönderildiği durumda, HHS listesini bu sayı kadar gruplandırarak gönderir. Bu veri gönderilmediğinde sayfadaki kayıt sayısı 100 olarak kullanılır. \n \n \n İstenen Sayfa Numarası \n syfNo \n N3 \n İ \n Cevapta dönecek sayfa numarası 1’den başlayarak artan değerlerle iletilmelidir. \n Bu veri gönderildiği durumda, HHS işlemler listesini bu sayfadaki kayıtları gönderir. Gönderilmediğinde, HHS ilk sayfadaki kayıtları gönderir. \n \n \n Sıralama Kriteri \n srlmKrtr \n AN3..50 \n İ \n Cevapta dönülecek kayıtların sıralama kriterini belirtir. Alabileceği değerler: { “hspRef”} \n Bu veri gönderildiği durumda, HHS listesini bu kritere göre sıralayarak gönderir. Gönderilmediğinde, HHS sıralama kriterini hspRef olarak belirler. \n \n \n Sıralama Yönü \n srlmYon \n AN1 \n İ \n Cevapta dönülecek işlemlerin sıralama yönünü belirtir. Alabileceği değerler:  A: Azalan değerle sıralama Y: Artan değerle sıralama {“A”,”Y”} \n Bu veri gönderildiği durumda, HHS listesini bu yöne göre sıralayarak gönderir. Gönderilmediğinde, HHS sıralama yönünü Azalan olarak belirler. \n \n \n \n Tablo 15: “HesapBilgileri” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Rıza No \n rizaNo \n AN1..128 \n Z \n HesapBilgisiRızası nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n Hesap Temel \n hspTml \n Kompleks: HesapTemel \n Z \n Temel Hesap Bilgileri (Temel Hesap Bilgisi varsayılan izin türü olduğundan Hesap Temel nesnesi zorunlu olarak yanıtta bulunur) \n \n \n > Hesap Referansı \n hspRef \n AN5..40 \n Z \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid). YÖS bazında farklılaşması gerekmez. \n \n \n > Hesap Numarası \n hspNo \n AN26 \n K \n Eğer varsa ödeme hesabına ait IBAN bilgisi \n \n \n > Hesap Sahibi Unvanı \n hspShb \n AN3..140 \n Z \n Hesap sahibi ya da hesap sahiplerinin ad-soyadı, ticari unvanı \n \n \n > Şube Adı \n subeAdi \n AN3..50 \n K \n Eğer varsa ödeme hesabının bağlı olduğu şubenin adı \n \n \n > Kısa Ad \n kisaAd \n AN3..50 \n K \n Eğer hesap sahibi hesaba ait bir ad tanımladıysa, tanımlanan hesap adı \n \n \n > Para Birimi \n prBrm \n AN3 \n Z \n Para Birimi. \n \n \n > Hesap Türü \n hspTur \n AN1 \n Z \n Hesabın türü (bireysel veya ticari). TR.OHVPS.DataCode.HspTur sırali veri değerlerinden birini alır. \n \n \n > Hesap Tipi \n hspTip \n AN1..32 \n Z \n Hesabın tipi (VADESİZ, KREDİLİ vb.).TR.OHVPS.DataCode.HspTip sıralı veri değerlerinden birini alır. \n \n \n >Hesap Ürün Adı \n hspUrunAdi \n AN1..140 \n İ \n HHS tarafından atanmış olan ürün adı bilgisidir. HBHS tarafından ÖHK’ya gösterilmesi kullanım kolaylığı sağlayacaktır. \n \n \n > Hesap Durumu \n hspDrm \n AN5..50 \n Z \n Hesabın durumunu belirtir. TR.OHVPS.DataCode.HspDrm sıralı veri türlerinden birini alır. \n \n \n Hesap Detay \n hspDty \n Kompleks: HesapDetay \n K \n Detay Hesap Bilgileri (Temel Hesap Bilgisine ek olarak Detay Hesap Bilgisi izin türü de seçilmişse Hesap Detay nesnesi koşullu olarak yanıtta bulunur) \n \n \n > Açılış Tarihi \n hspAclsTrh \n ISODateTime \n Z \n Belirtilen hesabın açılış tarihi. \n 7.7 ADIM 3.3 ve 3.4: Hesap Bakiyesinin Sorgulanması \n GET /bakiye ve GET /hesaplar/{hspRef}/bakiye \nBu erişim noktalarından tüm hesapların veya belirli bir hesabın bakiyesi sorgulanır. \nİstek çağrısına dönülen “BakiyeBilgileri” nesnesi Tablo 17’de verilmiştir. \nİşlem Sorgu Örneği (Belirli Bir Hesap)=  /bakiye?\nsyfKytSayi=25&\nsyfNo=1&\nsrlmKrtr= hspRef &\nsrlmYon=A \n Tablo 16: “BakiyeBilgileri” Sorgulama İsteği Sorgu Parametreleri \n \n \n \n Alan Adı \n Parametre Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n HHS tarafından yapılması gereken kontrol ve işlemler \n \n \n \n \n Sayfa Başına İstenen Kayıt Sayısı \n syfKytSayi \n N3 \n İ \n Sayfa başına istenen kayıt sayısı. Bu alanda iletilen değer 100’den büyük olamaz. \n Bu veri gönderildiği durumda, HHS listesini bu sayı kadar gruplandırarak gönderir. Bu veri gönderilmediğinde sayfadaki kayıt sayısı 100 olarak kullanılır. \n \n \n İstenen Sayfa Numarasi \n syfNo \n N3 \n İ \n Cevapta dönecek sayfa numarası 1’den başlayarak artan değerlerle iletilmelidir. \n Bu veri gönderildiği durumda, HHS işlemler listesini bu sayfadaki kayıtları gönderir. Gönderilmediğinde, HHS ilk sayfadaki kayıtları gönderir. \n \n \n Sıralama Kriteri \n srlmKrtr \n AN3..50 \n İ \n Cevapta dönülecek kayıtların sıralama kriterini belirtir. Alabileceği değerler: { “hspRef”} \n Bu veri gönderildiği durumda, HHS listesini bu kritere göre sıralayarak gönderir. Gönderilmediğinde, HHS sıralama kriterini hspRef olarak belirler. \n \n \n Sıralama Yönü \n srlmYon \n AN1 \n İ \n Cevapta dönülecek işlemlerin sıralama yönünü belirtir. Alabileceği değerler:  A: Azalan değerle sıralama Y: Artan değerle sıralama {“A”,”Y”} \n Bu veri gönderildiği durumda, HHS listesini bu yöne göre sıralayarak gönderir. Gönderilmediğinde, HHS sıralama yönünü Azalan olarak belirler. \n \n \n \n Tablo 17: “BakiyeBilgileri” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Hesap Referansı \n hspRef \n AN5..40 \n Z \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid). YÖS bazında farklılaşması gerekmez. \n \n \n Bakiye \n bky \n Kompleks:Bakiye \n Z \n \n \n \n > Hesap Bakiye Tutarı \n bkyTtr \n N1..18 \n Z \n Hesabın bakiyesi.  Örneğin 1,20 TRY için tutar alanında “120” değeri iletilir \n \n \n > Blokeli Tutar \n blkTtr \n N1..18 \n K \n Varsa hesapta blokeli tutar bilgisi.  Örneğin 1,20 TRY için tutar alanında “120” değeri iletilir \n \n \n > Para Birimi \n prBrm \n AN3 \n Z \n Para birimi. \n \n \n > Bakiye İletilme Zamanı \n bkyZmn \n ISODateTime \n Z \n Bakiyenin iletildiği zaman bilgisi. \n \n \n > KrediliHesap \n krdHsp \n Kompleks: KrediliHesap \n K \n \n \n \n >> Kredili Mevduat Hesabı Bakiyesi \n kulKrdTtr \n N1..18 \n Z \n Kullanılabilir kredili mevduat tutarı. Kredili bir hesap ise zorunlu. Örneğin 1,20 TRY için tutar alanında “120” değeri iletilir \n \n \n >> Kredi Dahil Göstergesi \n krdDhlGstr \n AN1 \n Z \n Kredili bir hesap ise zorunlu. Bakiye tutarının kullanılabilir kredi tutarı dahil edilerek ya da edilmeden iletildiğini gösterir.  0: Kredi tutarı dahil edilmeden bakiye bilgisi iletilmesi durumu 1: Kredi tutarı dahil edilerek bakiye bilgisi iletilmesi durumu \n 7.8 ADIM 3.5 ve 3.6: İşlemlerin Sorgulanması \n GET /hesaplar/{hspRef}/islemler \n Belirli bir hesaba ilişkin işlem bilgileri Tablo 1’daki istek parametrelerine göre sorgulanır. \nİşlem bilgisi için daha önce tanımlanmış izin türüne göre yanıtta dönen IslemBilgileri nesnesinin (Temel İşlem Bilgisi veya Temel İşlem Bilgisi ve Detaylı İşlem Bilgisi) içeriği değişir. \nİşlemler servisi hem ÖHK’nın talebi ile YÖS uygulaması üzerinden çağrılabileceği gibi, YÖS’ün ÖHK’sız başlatabileceği otomatik çağrıları ile de yanıt dönebilmektedir. \nHHS, işlemin sistemsel yapılıp yapılmadığını, istek parametreleri içerisinde yer alan PSU-Initiated parametresi ile anlar. Bu parametre “E” ise ÖHK’lı, “H” ise sistemsel yapılmış bir sorgu anlamına gelmektedir.\nÖHK’nın başlattığı sorgular için HHS tarafından belirlenen üst rate limitler dahilinde çağrım yapılabilir. \nYÖS, otomatik yapacağı sorgularda; \n \n Bireysel ÖHK’lar için hesap bazında günde en fazla 4 adet sorgulama yapabilir. \n Kurumsal ÖHK’lar için hesap bazında saatte en fazla 12 adet sorgulama yapabilir. \n \n HHS, tutacağı sayaç bilgisi ile bu sayıları kontrol ederek daha fazla sorgulama yapılmasına izin vermeyebilir. \n Aynı istek parametreleri ile yapılan sorgu sonucunda dönecek toplam kayıt sayısı 100’ü aştığında, sayfalama yöntemi ile HHS’nin cevap dönmesi beklenmektedir.  Her bir sayfa için işlemler servisi tekrar çağrılsa da, bu çağrım HHS’nin tuttuğu sayaç değerini arttırmaz. HHS’nin tutacağı sayaçın kontrol parametreleri YÖS kodu, hesap numarası ya da referansı olmalıdır. Sayfa no parametresi varsa ve 1'den büyük ise işlem sayacını arttırmamalıdır. \n ÖHK’nın YÖS uygulaması üzerinden tetiklediği işlemlerde ise;\nbireysel ÖHK’lar  için en fazla 1 aylık,\nkurumsal ÖHK’lar için ise en fazla 1 haftalık bir pencere aralığında sorgulama yapılabilir. \n YÖS, otomatik yapacağı sorgularda hem bireysel hem de kurumsal ÖHK’lar için 24 saatlik bir pencere aralığında sorgulama yapabilir. \n İşlem Sorgu Örneği (Belirli Bir Hesap)=  /hesaplar/{hspRef}/islemler?\nhesapIslemBslTrh=2020-06-01T00:00:00+03:00&\nhesapIslemBtsTrh=2020-06-02T23:59:59+03:00&\nminIslTtr=0&\nmksIslTtr=100000&\nbrcAlc=A&\nsyfKytSayi=25&\nsyfNo=1&\nsrlmKrtr= islGrckZaman &\nsrlmYon=A \n Tablo 18: İşlem Listesi Sorgulama İsteği Sorgu Parametreleri \n \n \n \n Alan Adı \n Parametre Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n HHS tarafından yapılması gereken kontrol ve işlemler \n \n \n \n \n İşlem Sorgulama Başlangıç Zamanı \n hesapIslemBslTrh \n ISODateTime \n Z \n Sorgulanacak işlemlerin başlangıç tarihi. \n HHS işlemler listesi dönüşünü bu kritere göre filtreleyerek iletmek zorundadır. ÖHK tarafından tetiklenen sorgularda;hesapIslemBslTrh ve hesapIslemBtsTrh arası fark bireysel ÖHK’lar için en fazla 1 ay,kurumsal ÖHK’lar için ise en fazla 1 hafta olabilir. YÖS tarafından sistemsel yapılan sorgulamalarda hem bireysel, hem de kurumsal ÖHK’lar için;son 24 saat sorgulanabilir. Bu yüzden hesapIslemBtsTrh-24 saat’ten daha uzun bir aralık sorgulanamaz olmalıdır. İstek başlığında yer alan PSU-Initiated alanı “E” ise ÖHK’lı, “H” ise sistemsel yapılmış bir sorgu anlamına gelmektedir. \n \n \n İşlem Sorgulama Bitiş Zamanı \n hesapIslemBtsTrh \n ISODateTime \n Z \n Sorgulanacak işlemlerin bitiş tarihi. \n HHS işlemler listesi dönüşünü bu kritere göre filtreleyerek iletmek zorundadır. YÖS tarafından sistemsel yapılan sorgulamalarda hem bireysel, hem de kurumsal ÖHK’lar için;İleri vadeli işlem emirleri dahil olmadığı için; İşlem Sorgulama Bitiş Zamanı, her zaman, sorgulama zaman damgasını iletecek şekilde (datetime (now)) iletilmelidir. \n \n \n En Düşük İşlem Tutarı \n minIslTtr \n N1..18 \n İ \n Sorgulanacak işlemlerin alabileceği en düşük işlem tutarı.Örneğin 1,20 TRY için tutar alanında “120” değeri iletilir. \n Bu veri gönderildiği durumda HHS işlemler listesi dönüşünü bu kritere göre filtreleyerek iletmek zorundadır. \n \n \n En Yüksek İşlem Tutarı \n mksIslTtr \n N1..18 \n İ \n Sorgulanacak işlemlerin alabileceği en yüksek işlem tutarı.Örneğin 1,20 TRY için tutar alanında “120” değeri iletilir. \n Bu veri gönderildiği durumda HHS işlemler listesi dönüşünü bu kritere göre filtreleyerek iletmek zorundadır. \n \n \n Borç Alacak Göstergesi \n brcAlc \n AN1 \n İ \n TR.OHVPS.DataCode.BrcAlc sıralı veri tipi değerlerinden birini alır. Sorgulanacak işlemlerin borç / alacak kriteri B: Hesaba borç yaratan işlem.A: Hesaba alacak yaratan işlem.{“B”,”A”} \n Bu veri gönderildiği durumda HHS işlemler listesi dönüşünü bu kritere göre filtreleyerek iletmek zorundadır. \n \n \n Sayfa Başına İstenen Kayıt Sayısı \n syfKytSayi \n N3 \n İ \n Sayfa başına istenen kayıt sayısı. Bu alanda iletilen değer 100’den büyük olamaz. \n Bu veri gönderildiği durumda, HHS işlemler listesini bu sayı kadar gruplandırarak gönderir. Bu veri gönderilmediğinde sayfadaki kayıt sayısı 100 olarak kullanılır. \n \n \n İstenen Sayfa Numarasi \n syfNo \n N3 \n İ \n Cevapta dönecek sayfa numarası 1’den başlayarak artan değerlerle iletilmelidir. \n Bu veri gönderildiği durumda, HHS işlemler listesini bu sayfadaki kayıtları gönderir. Gönderilmediğinde, HHS ilk sayfadaki kayıtları gönderir. \n \n \n Sıralama Kriteri \n srlmKrtr \n AN3..50 \n İ \n Cevapta dönülecek işlemlerin sıralama kriterini belirtir. Alabileceği değerler: {“islGrckZaman”} \n Bu veri gönderildiği durumda, HHS işlemler listesini bu kritere göre sıralayarak gönderir. Gönderilmediğinde, HHS sıralama kriterini islGrckZaman olarak belirler. \n \n \n Sıralama Yönü \n srlmYon \n AN1 \n İ \n Cevapta dönülecek işlemlerin sıralama yönünü belirtir. Alabileceği değerler: A: Azalan değerle sıralama Y: Artan değerle sıralama {“A”,”Y”} \n Bu veri gönderildiği durumda, HHS işlemler listesini bu yöne göre sıralayarak gönderir. Gönderilmediğinde, HHS sıralama yönünü Azalan olarak belirler. \n \n \n \n Tablo 19: “IslemBilgileri” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Hesap Referans Numarası \n hspRef \n AN5..40 \n Z \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid). YÖS bazında farklılaşması gerekmez. \n \n \n Islemler \n isller \n Kompleks:Islem[Array] \n K \n Hesaba ilişkin hareketler varsa İşlemler nesnesi dizisi olarak dönülür. İşlemler nesnesi Temel İşlem Bilgileri ve Detay İşlem Bilgileri nesnesinden meydana gelir. İzin türü varsayılan olarak Temel İşlem Bilgilerini içerir. Detay İşlem Bilgileri izin türü de seçildi ise Temel İşlem Bilgilerine ek olarak Detay İşlem Bilgileri de gönderilir. \n \n \n > Temel İşlem Bilgileri \n islTml \n Kompleks:IslemTemel \n Z \n Temel İşlem Bilgileri varsayılan olarak dönülür. \n \n \n >> İşlem Numarası \n islNo \n AN3..50 \n Z \n Hesap hareketinin oluşturulması sırasında atanan ve borç (veya alacak) hareketini tekilleştiren HHS bazında tekil tanımlayıcıdır. Bu değer tek başına tekil olabileceği gibi birden fazla değerin bir araya getirilmesiyle de tekilliği sağlanmış olabilir. Bu değerin en azından hesap numarası (hesNo) bazında tekil olması beklenir. Genellikle kullanılan örnekleri; Instance_Id, Transaction_Id, Transaction_Num, Transaction_TimeStamp,dekont numarası \n \n \n >> İşlem Referans Numarası \n refNo \n AN3..50 \n Z \n İşlemi uçtan uca tanımlayan tekil tanımlayıcıdır. Borç ve alacak hareketinden oluşan bir veya birden fazla işlemler bütünü için atanmış olan ve bu bütünü tekilleştiren (bir biri ile ilişkisini tutan) değerdir.Bu değer hem YÖS’ten gelen değer olabilir (ödeme işlemlerinde kullanılan kkodRef ya da refBlg alanı) hem de HHS içinde takip edilmek için üretilmiş bir değer olabilir. HHS sisteminde 2 değerin de bulunması durumunda;refNo alanını doldurmak için, HHS’nin YÖS’ten gelen değere öncelik vermesi beklenmektedir. YÖS’ten gelen veri örneği: Sipariş Numarası, Fatura Numarası, Karekod Referansı vb. HHS’te üretilen veri örneği: Masraflı havale işleminde hem havale işleminin hem de masraf işleminin aynı referans numarasına sahip olması da örnek olarak gösterilebilir. \n \n \n >> İşlem Tutarı \n islTtr \n N1..18 \n Z \n İşlem tutarı. Örneğin 1,20 TRY için tutar alanında “120” değeri iletilir. \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para birimi. \n \n \n >> İşlem Gerçekleşme Zamanı \n islGrckZaman \n ISODateTime \n Z \n İşlemin gerçekleşme zamanı. \n \n \n >> İşlem Kanalı \n kanal \n AN1 \n Z \n TR.OHVPS.DataCode.OdemeKaynak sıralı veri türü değerlerinden birini alır. \n \n \n >> Borçlandırma Alacaklandırma Göstergesi \n brcAlc \n AN1 \n Z \n TR.OHVPS.DataCode.BrcAlc sıralı veri türü değerlerinden birini alır. İşlemin hesabı borç ya da alacaklandırdığı bilgisidir. \n \n \n >> İşlem Türü \n islTur \n AN3..50 \n Z \n HHS’nin işleme ait ilişkilendirdiği işlem türü değeri. TR.OHVPS.DataCode.IslemTuru sıralı veri türü değerlerinden birini alır. \n \n \n >> İşlem Amacı \n islAmc \n AN2 \n Z \n TR.OHVPS.DataCode.IslemAmaci sırali veri değerlerinden birini alır. Karekod akışında, FAST Karekod Veri Organizasyonundaki 62-08: alanında tanımlı Ödeme Amacı verisi kullanılır. \n \n \n >> Ödeme Sistemi No \n odmStmNo \n AN10..50 \n K \n Ödeme başarılı başlatıldıysa, ödemenin başlatıldığı sistemdeki referans numarası. FAST işlemleri için MesRefBlg değeri atanır. Ödeme Hizmeti kullancısına işlemin takibi için gösterilebilir. \n \n \n > Detay İşlem Bilgileri \n islDty \n Kompleks: IslemDetay \n K \n Detay İşlem Bilgileri dizi olarak gönderilmelidir. \n \n \n >> İşlem Açıklaması \n islAcklm \n AN1..150 \n Z \n HHS tarafından atanan işlem açıklaması.HHS kendi işlem hareketlerine yansıttığı açıklamayı buraya yansıtmalıdır. \n \n \n >> Karşı Taraf \n krsTrf \n Kompleks:  KarsiTaraf \n K \n Kullanımı işlem bazında değişmektedir. Örnek: FAST işleminde karşı taraf alıcının bilgileridir. Vergi ödemesinde kurum IBAN bilgisi müşteriye gösterilemeyebileceğinden bu alanın boş gelmesi HHS insiyatifindedir. \n \n \n >>> Karşı Maskeli IBAN \n krsMskIBAN \n AN26 \n K \n İlgili hesap hareketinin karşı tarafının maskeli IBAN bilgisi. \n \n \n >>> Karşı Maskeli Unvan \n krsMskUnvan \n AN3..140 \n K \n İlgili hesap hareketinin karşı tarafının maskeli ad-soyad ya da ticari unvan bilgisi. \n 7.9\tHealthcheck API \n GET /health \n HHS’lerin sunacağı bu servis, düzenli olarak BKM tarafından çağırılarak servislerin ayakta olup olmadıklarının kontrolünün sağlanması planlanmaktadır \n Başarılı yanıtta Http 200 kodu dönülmelidir. \n Başarılı Yanıt: \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n \n \n \n \n status \n status \n AN2..20 \n Z \n “UP”, “DOWN” değerlerini alabilir \n \n \n \n"},{title:"5.\tGüçlü Kimlik Doğrulama",frontmatter:{},regularPath:"/v1.0.1/contents/gkd.html",relativePath:"v1.0.1/contents/gkd.md",key:"v-822cf8c6",path:"/v1.0.1/contents/gkd.html",headers:[{level:2,title:"5.1.\tYönlendirmeli Güçlü Kimlik Doğrulama",slug:"_5-1-yonlendirmeli-guclu-kimlik-dogrulama"},{level:2,title:"5.2.\tAyrık Güçlü Kimlik Doğrulama",slug:"_5-2-ayrık-guclu-kimlik-dogrulama"},{level:2,title:"5.3.\tYönlendirme/Bildirim Adresleri ve Durum Kodu Parametresi",slug:"_5-3-yonlendirme-bildirim-adresleri-ve-durum-kodu-parametresi"},{level:2,title:"5.4\tHealthcheck API",slug:"_5-4healthcheck-api"},{level:2,title:"5.5  Güçlü Kimlik Doğrulama Kontrolleri",slug:"_5-5-guclu-kimlik-dogrulama-kontrolleri"}],content:" 5.\tGüçlü Kimlik Doğrulama \n Müşteri için güçlü kimlik doğrulama, ÖHK’nın (müşterinin) kimliğinin doğrulamada kullanılan ve bir bileşenin ele geçirilmesinin diğer bileşenin güvenliğini tehlikeye atmayacağı en az iki bileşenden oluşan, bu iki bileşenin de müşterinin “bildiği”, “sahip olduğu” veya “biyometrik bir karakteristiği olan” bileşen sınıflarından farklı ikisine ait olacak şekilde seçildiği yöntemi tanımlar. \n Ödeme ve Elektronik Para Kuruluşlarının Bilgi Sistemleri ile Ödeme Hizmeti Sağlayıcılarının Ödeme Hizmetleri Alanındaki Veri Paylaşım Servislerine İlişkin Tebliğ uyarınca hesap bilgisi hizmetinde müşterinin onayının alınması esnasında ve ödeme emri başlatma hizmetinde her bir ödeme emri başlatma işleminde  HHS tarafından müşteriye güçlü kimlik doğrulama (GKD) uygulanması esastır.  Buna göre: \n \n \n Hesap bilgisi hizmetinde ÖHK’nın onayının alınması esnasında  Tebliğin 26 ncı maddesinin 1 inci fıkrası uyarınca  HHS tarafından ÖHK’ya GKD uygulanır. \n \n \n Ödeme emri başlatma hizmetinde,  Tebliğin 26 ncı maddesinin 2 nci fıkrası uyarınca  HHS tarafından ÖHK’ya güçlü kimlik doğrulama uygulanır ve işlem doğrulama kodu ile ÖHK’nın onayı alınır. \n \n \n Ödeme emri başlatma hizmetinde,  Tebliğin 26 ncı maddesinin 3 nci fıkrası uyarınca  HHS tarafından ÖHK’ya güçlü kimlik doğrulama uygulanmasına ilişkin istisna veya ilave güvenlik önlemleri işbu API İlke ve Kuralları belgesinde tanımlanır. \n \n \n HHS, güçlü kimlik doğrulama sürecinde ÖHK’nin sahip olduğu bileşen sınıfı olarak SMS OTP ya da SMS ile işlem doğrulama kodu kullanabilir. \n \n \n HHS, aşağıdaki hallerde veya  Tebliğin 10 uncu maddesinin ikinci fıkrasında  belirtilen risk değerlendirmesi sonucuna göre tek bileşen ile kimlik doğrulama yapabilir. \n \n Ödemenin göndereni ve alıcısının aynı olması, \n Daha önce tanımlanmış güvenli alıcılar listesine ödeme yapılması, \n ÖHK’nin talimatına istinaden gerçekleştirilen düzenli bir ödeme olması. \n \n \n \n Tek bileşen ile kimlik doğrulama yapılan bu işlemlerle ilgili olarak gerçekleştirilen işlemin müşteri tarafından yapıldığını ispat etme yükümlülüğü HHS’ye ait olur. \n \n \n İşlem Doğrulamada  Tebliğin 3 üncü maddesinin birinci fıkrası ğğ bendindeki  işlem bilgisi tanımına uygun olarak aşağıdaki bilgiler ile  Tebliğin 3 üncü maddesinin birinci fıkrası hh bendinde  tanımlanan işleme özel üretilmiş işlem doğrulama kodu birlikte kullanılır. \n \n Alıcı Unvan (Kolas akışında maskeli olarak)  (ödeme emri başlatma hizmeti) \n Tutar (ödeme emri başlatma hizmeti) \n Referans bilgisi (8 karakterden küçük ise alanın tüm değeri, büyük ise ilk 4 ve son 4 hanesi) \n \n İşleme ait yukarıdaki bilgilerden en az biri değiştiği zaman  Tebliğin 3 üncü maddesinin birinci fıkrası hh bendinde  belirtildiği gibi yeni bir işlem doğrulama kodu üretilecek şekilde akış kurgulanmalıdır. \n \n \n İşlem doğrulama kodunun gönderilmesinden HHS sorumludur. HHS,  Tebliğin 10 uncu maddesinin ikinci fıkrasında  belirtilen risk değerlendirmesi sonucuna göre işlem doğrulama kodu kullanmaksızın ÖHK’nın onayını alabilir. İşlem doğrulama kodu kullanılmayan işlemlerle ilgili olarak gerçekleştirilen işlemin ÖHK tarafından yapıldığını ispat etme yükümlülüğü HHS’ye aittir. \n \n \n ÖHVPS API standartı kapsamında iki adet Güçlü Kimlik Doğrulama (GKD) yöntemi kullanılacaktır: \n \n Yönlendirmeli (Redirect) GKD Yöntemi \n Ayrık (Decoupled) GKD Yöntemi \n \n \n \n HHS asgari olarak tarayıcı tabanlı Yönlendirmeli GKD yöntemini desteklemek zorundadır. \n \n \n Çerçeve sözleşme kapsamında olmayan tek seferlik ödeme işlemleri sadece Yönlendirmeli GKD yöntemi ile gerçekleştirilebilir. \n 5.1.\tYönlendirmeli Güçlü Kimlik Doğrulama \n Yönlendirmeli GKD Yönteminde, müşteri kimlik doğrulama için YÖS tarafından HHS arayüzüne yönlendirilir. \n Müşteri HHS’ye (uygulama veya web arayüzü vasıtasıyla) yönlendirildikten sonra müşterinin güçlü kimlik doğrulaması adım adım ve doğrudan HHS ile müşteri arasında yürütülür. GKD’nin tamamlanmasından sonra müşteri tekrar YÖS uygulamasına yönlendirilir. \n Yönlendirmeli GKD Yöntemi için üst düzey örnek iş akışı aşağıdaki adımlardan oluşur: \n \n YÖS, GKD için HHS tarafından tanımlanan arayüze (tarayıcı ya da uygulama) yönlendirme yapar. \n Müşteri, YÖS arayüzünden ayrılır, yönlendirildiği HHS arayüzü üzerinde kimlik doğrulama işlemlerini gerçekleştirir. \n GKD tamamlandıktan sonra müşteri, YÖS arayüzüne tekrar yönlendirilir ve işlem sonucu görüntülenir. \n \n Yönlendirmeli GKD için temel gereklilikler şunlardır: \n \n Ödeme hizmeti (hesap bilgisi veya ödeme emri başlatma hizmeti) tarayıcı ya da uygulama tabanlı bir şekilde sunulabilir. Bu nedenle,  YÖS ve HHS’lerin Yönlendirmeli GKD için asgari olarak tarayıcı tabanlı yönlendirme akışını desteklemeleri gerekmektedir. \n Çerçeve sözleşme (ÇS) kapsamında olmayan tek seferlik ödeme işlemleri sadece Yönlendirmeli GKD yöntemi ile gerçekleştirilebilir. \n \n Tarayıcı Tabanlı Yönlendirme \n HHS’nin web arayüzüne, \n \n HHS’nin mobil uygulamasının olmadığı, \n ÖHK’nın ödeme hizmetini (hesap bilgisi veya ödeme emri başlatma hizmeti) sunduğu mobil cihazda HHS uygulamasının yüklü olmadığı, \ndurumlarda yönlendirme yapılır. \n \n YÖS’ün mobil uygulaması varsa mobil cihazda uygulamadan tarayıcıya, YÖS’ün mobil uygulaması yoksa ödeme hizmetinin sunduğu cihazda (Kişisel Bilgisayar veya Mobil Cihaz) tarayıcı üzerinden yönlendirme yapılır. \n Uygulama Tabanlı Yönlendirme \n ÖHK’nın ödeme hizmetini (hesap bilgisi veya ödeme emri başlatma hizmeti) YÖS’ün mobil uygulaması ile kullanıyorsa, aynı mobil cihazda HHS’nin mobil uygulamasının yüklenmiş olması durumunda, ÖHK doğrulamasının HHS mobil uygulaması tarafından yapılması için uygulama tabanlı yönlendirme yapılır. Böylece ÖHK, ödeme hizmetine erişim için HHS’nin mobil kanalına erişim sırasında kullandığı doğrulama yöntemini ile doğrulanabilir. \n Tablo 5: Yönlendirmeli Güçlü Kimlik Doğrulama Kanalları \n \n \n \n Doğrulama Yöntemi \n YÖS Olası Ortam \n HHS Olası Ortam \n \n \n \n \n Tarayıcı Tabanlı Yönlendirme \n Kişisel Bilgisayar (masaüstü, dizüstü)/Mobil Cihaz \n Kişisel Bilgisayar (masaüstü, dizüstü) / Mobil Cihaz \n \n \n Uygulama Tabanlı Yönlendirme \n Mobil Cihaz \n Mobil Cihaz \n 5.2.\tAyrık Güçlü Kimlik Doğrulama \n Ayrık GKD Yöntemi iş akışı, Yönlendirmeli GKD Yönteminin işlem akışına benzer. Fark, HHS'nin, çevrimiçi arayüzünden bağımsız olan herhangi bir uygulama veya cihaz aracılığıyla ödeme işlemi ayrıntılarını içeren bir anlık bildirim (push notification) göndererek müşteriden kimlik doğrulaması istemesidir. Ayrık GKD Yöntemine dayalı bir işlem için (çok basitleştirilmiş) üst düzey örnek bilgi akışı şu şekildedir: \n \n Müşteri, YÖS arayüzünde işlemini başlatır. \n YÖS, talebini müşteriye ait TCKN, VKN, YKN gibi tekil tanımlayıcı kimlik numarası bilgisi içerecek şekilde HHS’ye iletilir. \n HHS tekil tanımlayıcı bilgisini kullanarak farklı bir cihaz veya uygulama üzerinden müşteriye anlık bildirim gönderir ve doğrulama yapılmasını sağlar. Bu şekilde HHS kendi mobil uygulamasına erişim için kullanılan doğrulama yöntemini aynen kullanabilecektir. \n YÖS, herhangi bir yere yönlendirme yapmadan işlemin sonucunu bekler, müşteri YÖS arayüzünden ayrılmaz (arayüz aynı kalır). \n Kimlik doğrulama sonrası, YÖS arayüzünde işlem sonucu görüntülenir. \n 5.3.\tYönlendirme/Bildirim Adresleri ve Durum Kodu Parametresi \n CSRF Ataklarından korunmak için ve YÖS uygulamasının bir önceki durumunu restore edebilmesi için; YÖS tarafından iletilen yönlendirme ve bildirim adreslerine , Oauth2 standartlarındaki state parametresine eşdeğer,   durum kodu (drmKod)  parametresinin eklenmesi gerekmektedir. Durum kodu parametresi YÖS tarafından üretilen, tekil ve kolay tahmin edilemeyen bir değer olmalıdır. Rıza isteği gönderimi aşamasında oluşturulmalıdır. YÖS uygulamasında uygun bir yerde saklanmalıdır (cookie, session, local storage gibi) . \n Durum kodu, rıza isteğindeki yönlendirme adresine parametre olarak eklenir.  GKD süreci sonrasında yetki kodu ile birlikte bu bilgi, HHS tarafından YÖS’e iletilir. YÖS sakladığı değer ile parametre olarak gelen değerin eşitliğini kontrol eder. Aynı ise erişim belirteci almak üzere akışı ilerletir. Farklı ise işlemi keser. \n 5.4\tHealthcheck API \n GET /health \n HHS’lerin sunacağı bu servis, düzenli olarak BKM tarafından çağırılarak servislerin ayakta olup olmadıklarının kontrolünün sağlanması planlanmaktadır. \n Başarılı yanıtta Http 200 kodu dönülmelidir. \nBaşarılı Yanıt: \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Koşullu  / İsteğe Bağlı \n Açıklama \n \n \n \n \n status \n status \n AN2..20 \n Z \n “UP”, “DOWN” değerlerini alabilir. \n 5.5  Güçlü Kimlik Doğrulama Kontrolleri \n ÖHK, GKD için HHS uygulamasına yönlendirildiğinde, HHS’nin çeşitli kontroller yaparak işlemin doğruluğunu teyit etmesi gerekmektedir. Yapılması gereken kontrollere ait temel senaryolar aşağıdaki tabloda belirtilmiştir. Bu senaryolar baz alınarak HHS’ler tarafından zenginleştirilebilir. \n Zorunlu olarak belirtilen hata durumlarının HHS’ler tarafından gerçeklenmesini ve uygun hata kodlarının YÖS’e iletilmesi; ileride oluşabilecek mutabakatlaşma sorunlarını ortadan kaldırabilecek, yapılacak raporlamalar kapsamında sistem ve süreç iyileştirmelerine katkı sağlayacak, son kullanıcı açısından da alınan hataya yönelik bilgilendirici içerik sağlayacaktır. \n Hata açıklamaları; hata koduna uygun ya da uyumlu olmak kaydıyla, HHS ve YÖS tarafından farklı şekillerde sunulabilir. \n GKD Sırasında yapılması gereken kontroller \n \n \n \n Rıza İptal Detay Kodu \n HHS hata açıklaması* \n Yös ekranında listelenecek örnek mesaj metni* \n Örnek Senaryo \n Zorunlu / Opsiyonel \n \n \n \n \n 07 \n Rıza durumunun \"Yetkilendirildi\" , \"Yetki Kullanıldı\" olduğu durum \n Yetki Hatası \n ÖHK,  GKD işlemi tamamlandıktan sonra  YÖS ekranında ileri- geri yaparak ya da ÖHK'nın yönlendirme adresini kopyalayarak tarayıcıya yapıştırması ile tekrar HHS'ye yönlendirir. Bu durumda HHS bu hata mesajını iletir. \n Zorunlu \n \n \n 08 \n Rızano ile kimlik bilgileri uyuşmazlığı. \n İşleminiz gerçekleştirilememiştir. \n YÖS tarafından başlatılan rıza içerisinde yer alan kimlik bilgisi (TCKN) ile HHS'de GKD yapılan ÖHK'nın bilgilerinin uyuşmadığı durumda \n Zorunlu \n \n \n 09 \n ÖHK'nın HHS'de ilgili ürününün olmadığı durum (hesap/kart) \n Gösterilebilecek hesap/kart bulunamamıştır. \n ÖHK'nın uygun statülü hesabının olmadığı durumda \n Zorunlu \n \n \n 10 \n Açık bankacılık kanalınız işleme kapalıdır. \n Açık bankacılık kanalınız işleme kapalıdır. \n Açık bankacılığı ayrı bir kanal olarak tanımlamış HHS'lerde, ÖHK'nın işlemlerini AB kanalına kapatması durumunda \n Opsiyonel \n \n \n 11 \n Kullanıcının HHS'deki hesaplarında yeterli yetkisinin olmama durumu \n Yetkiniz bulunmamaktadır. \n 1- Kurumsal firma kullanıcılarının hesaplar üzerinde işlem yetkisinin olmaması durumunda 2- Bireysel ortak hesaplarda hesap kısıtı bulunuyorsa (para çıkışına izin verilmediği durum) \n Zorunlu \n \n \n 12 \n ÖHK'nın ilgili HHS müşterisi olmadığı durum \n Yetkiniz bulunmamaktadır. \n Tek seferlik ödemelerde rıza isteğinde ÖHK kimlik bilgileri bulunmamaktadır. Diğer akışlarda rıza isteğinde müşteri olma kontrolü yapılabilir. \n Zorunlu \n \n \n 13 \n HHS’nin ÖHK için yaptığı kontrollerin başarısız olduğu durum \n Yetkiniz bulunmamaktadır \n HHS'nin, ÖHK için iç sistemlerinde yaptığı kontrollerin başarısız olması. Örneğin: Müşterinin henüz bankacılık hizmet sözleşmesi gibi Internet şubesi üzerinde işlem yapmasını engelleyen eksikleri olması durumunda veya kurumsal kullanıcıda vekalet süresinin dolması/eksik doküman olması durumunda kanal üzerinde işlem yapamadığı durum \n Zorunlu \n \n \n 14 \n Başarısız GKD \n Yetkiniz bulunmamaktadır \n 1-ÖHK'nın GKD için gerekli 2FA bilgilerini sağlayamaması   2- HHS risk algısına göre 12 nolu hata kodunu dönmek yerine 14 nolu hata kodunu da YÖS’e dönebilir. \n Zorunlu \n \n \n 15 \n ÖHK isteği ile GKD’den vazgeçildiği durum (Ör: HHS ekranında yer alan VAZGEÇ butonuna basmış olabilir. ) \n Müşteri işlemden vazgeçmiştir. \n 1- HHS ekranında yer alan VAZGEÇ butonuna basılması durumu (Hem ÖHK login olmadan önce hem de GKD sonrası (rıza verme öncesi) VAZGEÇ butonu olabilir.)  2-Müşteri Banka login ekranında herhangi bir aksiyon almadan beklemiştir ve HHS GKD zaman aşımı süresi 5 dakikadan kısadır. \n Zorunlu \n \n \n 16 \n Diğer \n İşleminiz gerçekleştirilememiştir. \n - \n Opsiyonel \n \n \n \n GKD sırasında iletilen rıza no eğer HHS’nin sisteminde bulunamazsa durumu güncellenecek bir rıza no da olmayacaktır. HHS kendi önyüzünde bu duruma uygun bir mesaj gösterebilir. YÖS’e de Diğer hata kodu ile bu durumu iletebilir. \n"},{title:"2.Kapsam ve Dayanak",frontmatter:{},regularPath:"/v1.0.1/contents/kapsam-ve-dayanak.html",relativePath:"v1.0.1/contents/kapsam-ve-dayanak.md",key:"v-7e81b77d",path:"/v1.0.1/contents/kapsam-ve-dayanak.html",content:" 2.Kapsam ve Dayanak \n 12 Kasım 2019’da güncellenen “ 6493 sayılı Ödeme ve Menkul Kıymet Mutabakat Sistemleri, Ödeme Hizmetleri ve Elektronik Para Kuruluşları Hakkında Kanun ”un (Kanun) 12’nci maddesine yeni eklenen ve  Ödeme Hizmetleri Direktifi 2 'de (Payment Services Directive 2, PSD2) bulunan iki yeni ödeme hizmeti aşağıdaki gibi tanımlanmıştır (Şekil-1: Ödeme Hizmetleri Veri Paylaşım Servisleri): \n \n Ödeme Emri Başlatma Hizmeti : ÖHK’nın isteği üzerine başka bir ödeme hizmeti sağlayıcısında bulunan  ödeme hesabıyla  ilgili sunulan ödeme emri başlatma hizmeti [Madde 12, birinci fıkra, (f) bendi] \n Hesap Bilgisi Hizmeti : ÖHK’nın onayının alınması koşuluyla, ÖHK’nın ödeme hizmeti sağlayıcıları nezdinde bulunan bir veya daha fazla  ödeme hesabına  ilişkin konsolide edilmiş bilgilerin çevrim içi platformlarda sunulması hizmeti [Madde 12, birinci fıkra, (g) bendi] \n \n   \n Şekil 1: Ödeme Hizmetleri Veri Paylaşım Servisleri (ÖHVPS)- tanıtım \n Kanunun 14/A maddesinin ikinci fıkrasına göre , Kanunun 12’nci maddesinin birinci fıkrasının (f) veya (g) bentlerinde yer alan ödeme hizmetleri ile ilgili işlemlerin yürütülmesine ilişkin usul ve esaslar ile taraflarca uyulması gereken teknik ve operasyonel gereklilikler ikincil düzenlemeler uyarınca Türkiye Cumhuriyet Merkez Bankası (TCMB) tarafından belirlenir. Kanunun 12’nci maddesinin birinci fıkrasının (f) veya (g) bentlerinde yer alan ödeme hizmetlerinde kullanılan veri paylaşım servisleri  ödeme hizmetleri veri paylaşım servisleri (ÖHVPS)  olarak adlandırılmaktadır. \n Ödeme Hizmetleri ve Elektronik Para İhracı ile Ödeme Hizmeti Sağlayıcıları Hakkında Yönetmelik’in (Yönetmelik) 59’uncu maddesinin birinci fıkrası uyarınca hazırlanan bu belgede söz konusu ödeme hizmetlerini sunacak ödeme hizmeti sağlayıcısının, ödeme hesabının bulunduğu ödeme hizmeti sağlayıcısının, varsa ilgili diğer tarafların ve bu hizmetlerin sunulması için taraflar arasında kurulacak bağlantının teknik ve operasyonel gereklilikleri açıklanmaktadır. \n Düzenlemeler kapsamında yetkilendirilen üçüncü taraf hizmet sağlayıcısı  (Yetkili Ödeme Hizmeti Sağlayıcısı, YÖS) , ödeme hizmeti kullanıcılarının  Hesap Hizmeti Sağlayıcıları (HHS)  nezdindeki ödeme hesaplarına ulaşarak ödeme emri başlatma ve hesap bilgisi sağlama hizmetlerinden (ödeme hizmetleri veri paylaşım servislerinden) faydalanmasına aracılık eder. Ödeme hizmetleri veri paylaşım servisleri kapsamında iki tip YÖS bulunmaktadır:  1) Hesap Bilgisi Hizmeti Sağlayıcısı (HBHS) ve 2) Ödeme Emri Başlatma Hizmeti Sağlayıcısı (ÖBHS). \n Hesap Bilgisi Hizmeti Sağlayıcısı (HBHS) ÖHK’nın farklı Hesap Hizmeti Sağlayıcıları (HHS) nezdindeki hesaplarının bilgilerini derleyerek çevrim içi platformlarda  toplu şekilde  sunar. Ödeme Emri Başlatma Hizmeti Sağlayıcısı (ÖBHS) ise talebi üzerine ÖHK’nın HHS’de bulunan ödeme hesabından ödeme işlemi başlatır. \n ÖHVPS’nin üst düzey gösterimi Şekil-2’de verilmiştir. \n   \n Şekil 2: Ödeme Hizmetleri Veri Paylaşım Servisleri (ÖHVPS) -üst düzey gösterim \n Ödeme Hizmetleri Veri Paylaşım Servislerinin HHS’ler tarafından  BKM API Geçidi  vasıtasıyla sunulduğu uygulama mimarisi ise Şekil-3’te sunulmuştur. \n  \n Şekil 3: ÖHVPS'nin BKM API Geçidi vasıtasıyla sunumu \n"},{title:"HHS ve YÖS API",frontmatter:{},regularPath:"/v1.0.1/contents/hhs-yos-api.html",relativePath:"v1.0.1/contents/hhs-yos-api.md",key:"v-4888cd9d",path:"/v1.0.1/contents/hhs-yos-api.html",headers:[{level:2,title:"HHS API",slug:"hhs-api"},{level:2,title:"YOS API",slug:"yos-api"},{level:2,title:"Healthcheck API",slug:"healthcheck-api"}],content:' HHS ve YÖS API \n HHS API, HHS’lerin detay bilgilerini sunan servistir. Bu servis ile aşağıdaki istek/yanıt yapıları ile ihtiyaç duyulabilecek ilgili bilgiler temin edilebilir. HHS API için “hhs_read” scope bilgisi kullanılır. \n Production ortamında HHS / YOS API içerisinde sisteme dahil olmuş, sertifikasyonu başarı ile tamamlamış paydaşlar listelenecektir. HHS tarafından desteklenen API sürümleri listelenecektir. \n YÖS’ler HHS API’sini sorgulayabilir ancak YÖS API’sini sorgulayamazlar. \nBenzer şekilde HHS’ler YÖS API’sini sorgulayabilir, HHS API’sini sorgulayamazlar. \n HHS API \n GET /hhs/{hhsKod} \n İşlem Sorgu Örneği =  /hhs  ⇨  bu sorgu yöntemi ile tüm HHS’lerin dizi şeklinde verileri listelenir. \nİşlem Sorgu Örneği =  /hhs/2001   ⇨ bu sorgu yöntemi ile gönderilmiş olan hhsKodu’na ait bilgiler listelenir. Ya da “404 Not Found” hatası alır. \nHHS ve YÖS API Tablo 20’deki istek parametrelerine göre sorgulanabilir. \nİşlem Sorgu Örneği (Belirli Bir Hesap) =  /hhs?srlmKrtr=kod&srlmYon=A \n Tablo 20: HHS ve YÖS API Sorgulama İsteği Sorgu Parametreleri \n \n \n \n Alan Adı \n Parametre Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n HHS tarafından yapılması gereken kontrol ve işlemler \n \n \n \n \n Sıralama Kriteri \n srlmKrtr \n AN3..50 \n İ \n Cevapta dönülecek işlemlerin sıralama kriterini belirtir. Alabileceği değerler: {“kod”, “unv”} \n Bu veri gönderildiği durumda, HHS işlemler listesini bu kritere göre sıralayarak gönderir. Gönderilmediğinde, sıralama kriteri “unv” olarak belirlenmelidir. \n \n \n Sıralama Yönü \n srlmYon \n AN1 \n İ \n Cevapta dönülecek işlemlerin sıralama yönünü belirtir. Alabileceği değerler: A: Azalan değerle sıralama Y: Artan değerle sıralama {“A”,”Y”} \n Bu veri gönderildiği durumda, HHS işlemler listesini bu yöne göre sıralayarak gönderir. Gönderilmediğinde, HHS sıralama yönünü Azalan olarak belirler. \n \n \n \n Tablo 21: HHS Bilgileri Sorgulama Yanıtı “Hhs” nesnesi \n \n \n \n Alan Adı \n Parametre Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n hhs kodu \n kod \n AN4 \n Z \n HHS nin kod bilgisi \n \n \n hhs unvanı \n unv \n AN3..140 \n Z \n HHS nin unvan bilgisi \n \n \n hhs markası \n marka \n AN1..140 \n Z \n ÖHK\'nın kolaylıkla algılayabileceği kısa unvan bilgisi. HHS tarafından belirlenecektir. \n \n \n Açık anahtar \n acikAnahtar \n AN1..1024 \n Z \n HHS’nin mesaj imzalama için paylaştığı açık anahtar \n \n \n HHS Api Bilgileri \n apiBilgileri \n Kompleks: HhsApiBilgi[Array][0..N] \n Z \n Desteklenen Api ve sürüm bilgileri dönülecektir. \n \n \n > api \n api \n AN1..20 \n Z \n Api İsmi Örnek :obh, hbh,gkd \n \n \n > surum \n surum \n AN1..10 \n Z \n Api Sürüm Kodu Örnek: s1.0, s2.0 s1.0 \n \n \n Logo Bilgileri \n logoBilgileri \n Kompleks: LogoBilgisi [Array][1..N] \n Z \n HHS’ye ait logo bilgileri. Logotur = Original  formatındaki logonun minimumda gönderimi zorunludur. \n \n \n >logoTur \n logoTur \n AN3..50 \n Z \n Logonun türünü belirler. TR.OHVPS.DataCode.LogoTur alabileceği değerler  ORIGINAL , WHITE_OVERLAY , BLACK_OVERLAY , GRAY_OVERLAY \n \n \n > logoAdr \n logoAdr \n AN1..255 \n Z \n HHS tarafında tutulan ve YÖS’lerle paylaşılacak olan url adres bilgisidir. \n \n \n \n Hem YOS hem de HHS API için geçerli olacak; logo gönderiminde dikkat edilmesi gerekenler şu şekilde tariflenmiştir: \n \n Logoların ham dosya yerine kurumun yayınlayacağı bir URL üzerinden sunulması gerekmektedir. (Örn: logoURL  =  https://kurumadi.com.tr/logo.png) Logo BKM tarafında host edilmeyecektir.) \n PNG formatında (PNG-24) olmalıdır. \n 72 DPI çözünürlükte olmalıdır. \n 500 x 500 boyutlarında, yatayda veya dikeyde taşma paysız tam oturacak, sınır boyutlarını geçmeyecek ve ortalanmış yerleşime sahip olmalıdır. \n Logo arka planı renkli olmamalı, arka plan transparan olmalıdır. \n YÖS uygulamasında gösterim esnasında logoların hızlı yüklenmesi ve düşük veri tüketmesi açısından; logo boyutu 250 KB’ın altında olmalıdır. \n Dört adet logo türü belirlenmiştir. Bu 4 tür için de logo dönülmesi zorunludur. \n Logo url’in public erişilebilir url olması gereklidir. \n \n YÖS API, YÖS statüsundeki kurumların detay bilgilerini sunan servistir. Bu servis ile aşağıdaki istek/yanıt yapıları ile ihtiyaç duyulabilecek ilgili bilgiler temin edilebilir. YÖS API için “yos_read” scope bilgisi kullanılır. \n YÖS API yanıtında, listelenen yönlendirme ve bildirim adresleri bulunmaktadır. HHS, işlem anında iletilen yonAdr ya da bldrAdr alanlarında gönderilen adreslere yetKod değerini iletmelidir. YÖS API içerisinde yer alan adresleri, rıza isteğinde gönderilen adreslerin doğruluğunu kontrol etme amacıyla kullanılmalıdır. Bu nedenle YÖS API içerisinde listelenen adreslerin hostname seviyesinde yer alması yeterlidir. \n YOS API \n GET /yos/{yosKod} \n İşlem Sorgu Örneği =  /yos    bu sorgu yöntemi ile tüm yos lerin dizi şeklinde verileri listelenir. \n İşlem Sorgu Örneği =  /yos/2501    bu sorgu yöntemi ile gönderilmiş olan yosKodu’na ait bilgiler listelenir ya da “404 Not Found” hatası alır.\nYÖS API Tablo 20’deki istek parametrelerine göre sorgulanabilir.\nİşlem Sorgu Örneği (Belirli Bir Hesap)=  /yos?srlmKrtr=kod&srlmYon=A \n Tablo 22: YOS Bilgileri Sorgulama Yanıtı “Yos” nesnesi \n \n \n \n Alan Adı \n Parametre Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Yös kodu \n kod \n AN4 \n Z \n YÖS\'ün kod bilgisi \n \n \n Yös unvanı \n unv \n AN3..140 \n Z \n YÖS unvan bilgisi \n \n \n Yös markası \n marka \n AN1..140 \n Z \n ÖHK\'nın kolaylıkla algılayabileceği kısa unvan bilgisi. YÖS tarafından belirlenecektir. \n \n \n YÖS rolleri \n roller \n Array[AN4] \n Z \n YÖS’un rollerini belirten değer. Örnek: [ "obhs", "hbhs" ]  - obhs - Ödeme Bilgisi Hizmet Sağlayıcı Rolü  - hbhs - Hesap Bilgisi Hizmet Sağlayıcı Rolü \n \n \n Adresler \n adresler \n Kompleks:Adres[Array] [1..N] \n Z \n --- \n \n \n > Yetkilendirme Yöntemi \n yetYntm \n AN1 \n Z \n TR.OHVPS.DataCode.GkdTur sıralı veri türü değerlerlerinden birini alır. Adres detaylarının hangi GKD türüne ait olduğunu belirtir. \n \n \n >Adres Detayları \n adresDetaylari \n adresDetaylari\tKompleks: AdresDetayi[Array] [1..N] \n Z \n \n \n \n >>Temel Adres \n tmlAdr \n AN1..1024 \n Z \n yetYntm değeri “Y” olarak iletildiğinde Yönlendirmeli GKD sürecinde HHS’nin YOS’e authorizasyon kodunu hangi url e göndereceği bilgisini tutar. yetYntm değeri “A” olarak iletildiğinde Ayrık GKD sürecinde HHS’nin YOS’e authorizasyon kodunu hangi url e göndereceği bilgisini tutar. Riza isteklerinde bu değer ile uyumluluğu kontrol edilmelidir. Örnek: https://example.com https://example2.com/path deepLink://example/test deepLink://example2/test \n \n \n >>Açıklama \n aciklama \n AN1..1024 \n İ \n YÖS’ün gönderdiği adrese yönelik vermek istediği açıklama Örnek: WEB bireysel , WEB kurumsal  , APP \n \n \n Açık anahtar \n acikAnahtar \n AN1..1024 \n Z \n YÖS’ün mesaj imzalama için paylaştığı açık anahtar \n \n \n Logo Bilgileri \n logoBilgileri \n Kompleks: LogoBilgisi [Array][1..N] \n Z \n YOS’e ait logo bilgileri. Logotur = Original formatındaki logonun minimumda gönderimi zorunludur. \n \n \n >logoTur \n logoTur \n AN3..50 \n Z \n Logonun türünü belirler. TR.OHVPS.DataCode.LogoTur alabileceği değerler  ORIGINAL , WHITE_OVERLAY , BLACK_OVERLAY , GRAY_OVERLAY \n \n \n > logoAdr \n logoAdr \n AN1..255 \n Z \n YÖS tarafında tutulan ve HHS’lerle paylaşılacak olan url adres bilgisidir. Örnek: https://via.placeholder.com/150?text=0001 \n Healthcheck API \n GET /health \n HHS ve YÖS API için health servisleri aşağıdaki servislerle kontrol edilebilir. \n Başarılı yanıtta Http 200 kodu dönülecektir\nBaşarılı Yanıt: \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n \n \n \n \n status \n status \n AN2..20 \n Z \n “UP”, “DOWN” değerlerini alabilir \n \n \n \n'},{title:"6.\tÖdeme Emri Başlatma Hizmeti",frontmatter:{},regularPath:"/v1.0.1/contents/odeme-emri-baslatma-hizmeti.html",relativePath:"v1.0.1/contents/odeme-emri-baslatma-hizmeti.md",key:"v-01c649bd",path:"/v1.0.1/contents/odeme-emri-baslatma-hizmeti.html",headers:[{level:3,title:"Ödeme Emri Başlatma Hizmeti için Erişim Adresleri (Endpoints)",slug:"odeme-emri-baslatma-hizmeti-icin-erisim-adresleri-endpoints"},{level:2,title:"6.1.\tADIM 0 - Ödeme Emri Başlatma Isteği",slug:"_6-1-adim-0-odeme-emri-baslatma-istegi"},{level:2,title:"6.2.\tADIM 1 - Ödeme Emri Rızasının Hazırlanması",slug:"_6-2-adim-1-odeme-emri-rızasının-hazırlanması"},{level:2,title:"6.3.\tADIM 2- Ödeme Emri Rızasının Yetkilendirilmesi",slug:"_6-3-adim-2-odeme-emri-rızasının-yetkilendirilmesi"},{level:2,title:"6.4.\tADIM 2.1 – Ödeme Emri Rızasının Sorgulanması (isteğe bağlı)",slug:"_6-4-adim-2-1-odeme-emri-rızasının-sorgulanması-istege-baglı"},{level:2,title:"6.5.\tADIM 3- Ödeme Emrinin Oluşturulması",slug:"_6-5-adim-3-odeme-emrinin-olusturulması"},{level:2,title:"6.6.\tADIM 3.1- Ödeme Emri Sorgusu (İsteğe bağlı)",slug:"_6-6-adim-3-1-odeme-emri-sorgusu-istege-baglı"},{level:3,title:"GET /odeme-emri/{odemeEmriNo}",slug:"get-odeme-emri-odemeemrino"},{level:2,title:"6.7\tHealthcheck API",slug:"_6-7healthcheck-api"},{level:3,title:"GET /health",slug:"get-health"}],content:" 6.\tÖdeme Emri Başlatma Hizmeti \n Ödeme emri başlatma işlemi havale, FAST ya da PÖS ödemesiyle sonuçlanabilir. Ödeme işleminin amacı kişiden kişiye para transferi, e-ticaret ödemesi gibi farklı ödeme türleri olabilir. Ödemenin amacına göre ÖBHS’nin ileteceği veri setinde farklılaşmalar olabilir. \n Ödeme Emri Başlatma Hizmeti 5 temel akışdan oluşur: \n \n Ödeme Emri Başlatma İsteğinin tetiklenmesi:  ÖHK ÖBHS mobil uygulama ya da websitesinden ödeme emrini başlatır. \n Ödeme Emri Rıza Hazırlanması:  ÖBHS, “Ödeme Emri Başlatma” işlemi için izin oluşturulması isteğini HHS’ye iletir. \n Ödeme Emri Rızasının Yetkilendirilmesi:  HHS, gerekli gördüğü durumlarda ÖHK’yı GKD ile doğrular ve ödeme emri rızasına erişim için erişim belirteci tanımlanmasını temin eder. \n Ödeme Emrinin Başlatılması:  ÖBHS, “ödeme emri”ni HHS’ye iletir. \n Ödeme Emri Rıza Durumu, Ödeme Emri Durumu, Ödeme Emri Detayı Sorguları:  ÖBHS, Ödeme Emri Rıza Durumu, Ödeme Emri Durumu, Ödeme Emri Detayı bilgilerini isteğe bağlı olarak sorgulayabilir. \n \n \n Şekil 4: Ödeme Emri Başlatma Hizmeti Üst Düzey İş Akışı \n Ödeme Emri Başlatma Hizmeti için Erişim Adresleri (Endpoints) \n Ödeme Emri Başlatma Hizmeti İçin Erişim Adreslerinin Etki Alanı (Scope) = “odeme_emri” olarak belirtilmelidir. \n Tablo 6: Ödeme Emri Başlatma Hizmeti İçin Erişim Adresleri \n \n \n \n No \n Kaynak \n HTTP işlemi \n Erişim Adresi \n Zorunlu / İsteğe Bağlı \n Yetkilendirme Türü \n İmzalama \n İstem Nesnesi \n Yanıt Nesnesi \n \n \n \n \n 1 \n odeme-emri-rizasi \n POST \n POST /odeme-emri-rizasi \n Z \n İstemci Kimlik Bilgileri \n İmzalı İstek ve Yanıt \n OdemeEmriRizasiIstegi \n OdemeEmriRizasi \n \n \n 2 \n erisim-belirteci (GKD için) \n POST \n POST/erisim-belirteci /odeme-emri-rizasi \n Z \n İstemci Kimlik Bilgileri \n İmzalı İstek ve Yanıt \n ErisimBelirteciIstegi \n ErisimBelirteci \n \n \n 2.1 \n odeme-emri-rizasi \n GET \n GET /odeme-emri-rizasi/{rizaNo} \n Z \n İstemci Kimlik Bilgileri \n İmzalı Yanıt \n - \n OdemeEmriRizaYaniti \n \n \n 3 \n odeme-emri \n POST \n POST /odeme-emri \n Z \n İstemci Kimlik Bilgileri & Yetkilendirme Kodu (GKD) \n İmzalı Yanıt \n OdemeEmriIstegi \n OdemeEmri \n \n \n 3.1 \n odeme-emri \n GET \n GET /odeme-emri/{odemeEmriNo} \n Z \n İstemci Kimlik Bilgileri & Yetkilendirme Kodu (GKD) \n İmzalı Yanıt \n - \n OdemeEmri \n 6.1.\tADIM 0 - Ödeme Emri Başlatma Isteği \n \n ÖHK, ÖBHS uygulamasında (web arayüzü/mobil uygulama) ödeme emri başlatma işlemine onay verir. \n Gönderen hesap detaylarının bu aşamada belirtilmesi zorunlu değildir. \n 6.2.\tADIM 1 - Ödeme Emri Rızasının Hazırlanması \n   \n Şekil 5: Ödeme Emri Rızasının Hazırlanması \n \n \n ÖBHS, ödeme hizmeti kullanıcı hesabının bulunduğu HHS’ye bağlanarak ödeme emri rıza kaynağının oluşturulmasını (odemeEmriRizasi) sağlar. \n \n \n POST isteği TLS protokolü tesis edilen iletişim katmanı üzerinden gerçekleştirilir. TLS için nitelikli sertifikalar kullanılır. \n \n \n POST isteğinin başlığındaki alanlar ve istemcinin sertifikasındaki özel alanlar kullanılarak istemcinin yetkilendirilmesi sağlanır: \n \n İstekte bulunan ÖBHS yetkilendirilmiş mi? \n İstekte bulunan yetkilendirilmiş ödeme hizmeti sağlayıcısı ÖBHS rolüne sahip mi? \n İstekte bulunulan HHS kodu doğru mu? \n \n \n \n POST başarılı olursa, HHS, ödeme emri için içeride rıza olup olmamasına bakılmaksızın yeni bir rıza tanımlayıcısı RizaNo içeren odemeEmriRizasi  yanıt olarak döner. \n \n \n 1 ÖHK'nın 1 YÖS için 1HHS'de istediği kadar rızası olabilir. \n \n \n HHS tarafında RizaDurumu değişkeninin durumu “Yetki Bekleniyor” olarak güncellenir. \n \n \n YÖS’ün doğrulama ekranı olarak ÖHK’ya açacağı URL adresini de ilgili rıza numarasına göre oluşturur. Burada 2 farklı yöntemle URL oluşturabilir. \n \n Statik URL  : \nHHS’nin base pathi/alt-dizin/{rızaNo} \nÖrnek hhsYonAdr : https://xbank.com.tr/ohvps/cb54834e36f742d09af3d534ece3352a \nBu adres için ilgili doğrulama sayfası önden hazırlanmalı ve ÖHK’nın doğrulama sayfasına erişimi için yayınlanmış olmalıdır (publish edilmelidir). \n Dinamik URL : \nHHS’nin base pathi/alt-dizin/GKD Karşılama Ekranı?rizano={rızano} \nÖrnek: https://xbank.com.tr/ohvps/gkd?rizano=cb54834e36f742d09af3d534ece3352a \n \n \n \n POST /odeme-emri-rizasi \n İSTEK: \n ÖBHS, bu API erişim adresinden HHS’ye yeni bir OdemeEmriRizasi oluşturulması için istekte bulunur: \n \n ÖBHS, ödeme emri başlatma isteği olduğunu HHS’ye bildirir. \n ÖBHS, ÖHK’nın, ÖBHS arayüzünden verdiği rızanın (“Ön Onay”) bir kopyasının HHS nezdinde müşteri tarafından onaylanması için HHS’ye gönderilmesini sağlar. \n HHS; istek mesajında yer alan alanların API dökümanında belirtilen şartları sağlayacak şekilde zorunluluk, uzunluk ve içerik kontrollerini yapar. (Zorunlu) \n HHS; YÖS API ile alınan ÖBHS bilgilerinin içerisinde yer alan yönlendirme ve bildirim adresleri ile ödeme emri rızası nesnesi request mesajında paylaşılan adreslerin uyumlu olup olmadığının kontrollerini yapar. (Zorunlu) \n HHS; kimlik bilgileri nesnesinde eğer kimlik bilgileri iletilmiş ise; bu veri ile ÖHK’nın HHS müşterisi olup olmadığının kontrollerini yapar. Bu kontrol hem bireysel hem de kurumsal ÖHK’lar için yapılmalıdır.  (Koşullu Zorunlu) \n HHS kimlik bilgisi ile gönderen unvanının uyumlu olduğunun kontrol eder. (Zorunlu) \n Gönderen Hesap Numarası ile ilgili Tablo7’de belirtilen kontroller yapılmalıdır. (Zorunlu) \n HHS, ödeme için benzersiz “RizaNo” ile “OdemeEmriRizasi” nesnesi oluşturur ve ÖBHS’ye döner. \n HHS, OdemeEmriRizasi oluşturduğu anda durumunu “Yetki Bekleniyor” olarak düzenler. \nBu aşamada ÖHK’nın HHS tarafından tanımlanmış ve isteğin veri alanında gönderen hesaba (borçlandırılacak hesaba) ilişkin bir bilgisinin olması gerekmez. \nHesap bakiye kontrolünün rıza aşamasında yapılmaması gerekmektedir. Çünkü ÖHK ödeme emri gerçekleşene kadar hesabına para eklemesi yapabilir. \n \n POST /odeme-emri-rizasi  isteğinin (REQUEST) gövdesinde (BODY)  “odemeEmriRizasiIstegi” nesnesi (Tablo-7) kullanılır. İstek başarıyla sonuçlanırsa HHS kaynak sunucusunda “odemeEmriRizasi” (Tablo-8) nesnesi oluşturulur. \n  BAŞARILI İSTEK: \n Tablo 7: “OdemeEmriRizasiIstegi” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n HHS tarafından ödeme emri rızası oluşturulması sırasında yapılması gereken kontrol ve işlemler \n \n \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n HHS, hhsKod’un kendisine ait olduğunu ve istek başlığındaki x-aspsp-code değeri ile aynı olduğunu kontrol eder.  Hata durumunda  TR.OHVPS.Connection.InvalidASPSP  hata kodunu döner. \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n HHS, yosKod’un geçerli bir Ödeme Hizmeti Sağlayıcısı Kodu olduğunu ve istek başlığındaki x-tpp-code değeri ile aynı olduğunu kontrol eder. Hata durumunda  TR.OHVPS.Connection.InvalidTPP  hata kodunu döner. \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n \n > Yetkilendirme Yöntemi \n yetYntm \n AN1 \n İ \n TR.OHVPS.DataCode.GkdTur  sıralı veri türü değerlerinden birini alır. Yetkilendirme yöntemi, ÖBHS tarafından belirtilmeyebilir. \n HHS, ÖBHS’nin belirlediği yöntemi dikkate alarak kendi belirlediği yöntemi kullanır. \n \n \n > Yönlenme Adresi \n yonAdr \n AN1..1024 \n K \n Yönlendirmeli güçlü kimlik doğrulama için zorunlu.  YÖS’ün ileteceği adrestir.  YÖS Yönlendirmeli GKD yöntemi ile akışı destekliyorsa, yetYntm değişkeninden bağımsız olarak yönlendirme adresini iletmelidir.  Durum kodu(drmKod), yönlendirme adresine parametre olarak eklenmelidir. \n HHS, müşteri uygulama / tarayıcısını bu alanda belirtilen adrese yönlendirir. \n \n \n > Bildirim Adresi \n bldAdr \n AN1..1024 \n K \n Ayrık güçlü kimlik doğrulama için zorunlu. YÖS’ün ileteceği adrestir.  YÖS Ayrık GKD yöntemi ile akışı destekliyorsa, yetYntm değişkeninden bağımsız olarak bildirim adresini iletmelidir.  Durum kodu(drmKod), yönlendirme adresine parametre olarak eklenmelidir. \n HHS, ayrık GKD sonrası bu alanda belirtilen adrese otorizasyon kodunu (authentication code) iletir. \n \n \n Ödeme Başlatma \n odmBsltm \n Kompleks: OdemeBaslatma \n Z \n \n \n \n \n > Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n \n >> Kimlik Türü \n kmlkTur \n AN1 \n K \n TR.OHVPS.DataCode.KimlikTur  sıralı veri türü değerlerinden birini alır. \n Çerçeve sözleşme kapsamındaki ödemelerde kullanımı zorunludur. HHS geçerli bir Kimlik Numarası Türü olduğunu kontrol eder. Kurum adına yapılan (ticari) ödemelerde, kurum adına işlem yapan kullanıcının kimlik türünün bu alanda gönderilmesi zorunludur. \n \n \n >> Kimlik Verisi \n kmlkVrs \n AN1..30 \n K \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır. TR.OHVPS.DataCode.KimlikTur  değerine göre uzunluk ve formatı değişir. \n Çerçeve sözleşme kapsamındaki ödemelerde kullanımı zorunludur. HHS, ÖBHS tarafından iletilmesi durumunda Kimlik Verisi üzeriden çapraz kontroller uygulamalı ve Kimlik Verisini temel alarak GKD gerçekleştirmelidir.  Pasaport numarasına ilişkin kontroller HHS'nin halihazırda kullandığı veri, akış ve tabi olduğu diğer düzenlemelerdeki işleyiş ile aynı şekilde ele alınmalıdır.  Kurum adına yapılan (ticari) ödemelerde, kurum adına işlem yapan kullanıcının kimlik türünün bu alanda gönderilmesi zorunludur. \n \n \n >> Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür. TR.OHVPS.DataCode.KurumKimlikTur  sıralı veri türü değerlerinden birini alır. \n Kurum adına yapılan (ticari) ödemelerde kullanımı zorunludur.  HHS geçerli bir Kurum Kimlik Numarası Türü olduğunu kontrol eder. \n \n \n >> Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.   TR.OHVPS.DataCode.KurumKimlikTur  değerine göre uzunluk ve formatı değişir. \n Kurum adına yapılan (ticari) ödemelerde kullanımı zorunludur.  HHS, ÖBHS tarafından iletilmesi durumunda Kurum Kimlik Verisi üzeriden çapraz kontroller uygulamalıdır. \n \n \n >> Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur  sıralı veri türü değerlerinden birini alır  (B: Bireysel, K:Kurumsal) \n Kurum adına yapılan ödemelerde K değerini alır. Kurum Kimlik Türü ve Kurum Kimlik Verisi alanlarının girilmiş olduğu çapraz olarak kontrol edilir. \n \n \n > İşlem Tutarı \n islTtr \n Kompleks:Tutar \n Z \n \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para Birimi.  Karekod akışında, FAST Karekod Veri Organizasyonundaki  53: (Para Birimi)  alanında tanımlı Para Birimi verisi kullanılır. \n HHS geçerli bir para birimi olduğu kontrol eder. \n \n \n >> Tutar \n ttr \n N1..18 \n Z \n ÖBHS'nin ön yüzde kullanıcıdan teyit aldığı tutar.   Karekod akışında, FAST Karekod Veri Organizasyonundaki  54: (Tutar)  alanında tanımlı Tutar verisi kullanılır. Örneğin 1,20 TRY için tutar alanında “120” değeri iletilir. \n \n \n \n > Gönderen \n gon \n Kompleks:Hesap \n İ \n \n \n \n \n >> Unvan \n unv \n AN3..140 \n İ \n Gönderenin unvanıdır.  HHS, bu bilgiyi ÖBHS sisteminden gelen veri yerine FAST’a iletirken kendi sisteminden alabilir. \n HHS’nin bu veri ile kendi sistemlerindeki verinin farklı olması ve Kimlik Numarası ile eşleşmemesi durumunda ödeme emri başlatma isteği reddedilir.  ÖBHS verisi ile HHS verisinin farklılaşması durumunun ise risk değerlendirme sistemlerine girdi olarak kullanması tavsiye edilir. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n İ \n ÖBHS'nin ön yüzünden daha önce kayıt altına alınmış hesaplar arasından seçtirdiği veya müşteriye girdiği IBAN’dır.  ÖBHS tarafından iletilmediği durumda, gönderen hesap bilgisini müşteri tarafından HHS’nin dijital kanalında GKD sonrasında seçilebilir. Bu amaçla ÖBHS arayüzünde HHS seçtirilmelidir.  Hesap Referansı kullanılıyorsa Hesap Numarası kullanılmayabilir. Hesap referansı ile ödeme emri rızası başlatılacak ise HHS hesap referansı değeri ile ilişkilendirilmiş mevcut bir hesap bilgisi rızası var mı kontrol etmelidir. Eğer aktif bir rızası yok ise  TR.OHVPS.Business.InvalidContent  hatası verilmelidir. \n ÖBHS tarafından iletildiği durumda; IBAN içerisindeki HHS kodunun istek başlığındaki HHS kodu ile aynı olduğu (hesabın HHS’ye aitliğinin kontrolü), IBAN’ın doğruluğu (kontrol basamağı doğrulaması), Hesap numarasının ÖHK’ya ait olduğu, HHS’ye özel ödeme izni verilmeyen farklı statülerin bulunması durumu kontrol edilir.  Kontrol başarısız olduğunda  TR.OHVPS.Business. InvalidAccount  hatası YÖS’e iletilir. \n \n \n >> Hesap Referansı \n hspRef \n AN5..40 \n İ \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid). YÖS bazında farklılaşması gerekmez.  ÖBHS’nin aynı zamanda HBHS olduğu durumda müşteri rızası tesis edilmiş bir hesabın referansı üzerinden de ödeme başaltılabilir.  Hesap Numarası kullanılıyorsa Hesap Referansı kullanılmayabilir. \n HspRef'e bağlı IBAN değiştiğinde yeni IBAN'ın da ilgili HspRef ile ilişkilendirilmesi beklenmektedir. Bu durumda, HBHS, HspRef ile sorguya geldiğinde HHS'nin yeni IBAN ve hesap hareketlerini dönebilmesi mümkün olacaktır. HspRef’in, IBAN değiştiğinde değiştirilmemesi tavsiye edilmektedir. \n \n \n > Alıcı \n alc \n Kompleks:Hesap \n Z \n \n \n \n \n >> Unvan \n unv \n AN3..140 \n K \n Kolay Adres Sistemi  kullanılmıyorsa zorunludur.  Alıcının unvanıdır. ÖBHS ekranlarından girişi yapılabileceği gibi ÖBHS’nin kayıtlı alıcılarından yapılan seçimle de doldurup gönderebildiği bilgi olabilir.  FAST-TR Karekod Veri Organizasyonunda;  İşyeri tarafından sunulan uzun karekod yapısının  59:  alanında tanımlı İşyeri adı alanıdır, Kişiden Kişiye Ödeme Karekod Yapısının  07:  alanında tanımlı    Ödeme Alıcısının Adı ve Soyadı  alanıdır.  FAST-TR Karekod dışındaki iş yeri ödemelerinde; yine Unvan alanında işyeri adı bilgisi gönderilmelidir. \n \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n K \n Alıcının Hesap Numarası (IBAN)  alanıdır.   Kolay Adres Sistemi  kullanılmıyorsa zorunludur.  Karekod akışında, FAST Karekod Veri Organizasyonundaki  30-01:  alanında tanımlı İş Yeri IBAN verisi kullanılır.  Alıcının birden fazla hesabının kullanılabilir olduğu durumlarda (özellikle işyeri ödemelerinde HHS nezdindeki hesap (on-us havale akışı) tercih edilmelidir. \n HHS (Gönderen Katılımcı) tarafından IBAN doğrulaması (kontrol basamağı doğrulaması) yapılır. \n \n \n >> Kolay Adres \n kolas \n Kompleks:Kolas \n K \n \n \n \n \n >>> Kolas Türü \n kolasTur \n AN1 \n Z \n TR.OHVPS.DataCode.KolasTur  sıralı veri türü değerlerinden birini alır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n HHS (Gönderen FAST katılımcısı) tarafından KOLAS Servisine yapılan sorguda girdi olarak kullanılır. \n \n \n >>> Kolas Değeri \n kolasDgr \n AN7..50 \n Z \n Müşterinin eklediği, HHS (FAST katılımcısı) tarafından doğrulanmış Kolay Adres değeridir. Alabileceği değerler BKM “Kolay Adresleme Sistemi Uygulama Kuralları” belgesinde tanımlıdır.  Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n HHS (Gönderen FAST katılımcısı) tarafından KOLAS Servisine yapılan sorguda girdi olarak kullanılır. \n \n \n > Karekod \n kkod \n Kompleks:Karekod \n K \n \n \n \n \n >> Akış Türü \n aksTur \n AN2 \n Z \n TR.OHVPS.DataCode.KareKodAksTur  sıralı veri değerlerinden birini alır. Kolay Adresi Sistemi ile birlikte kullanılmaz. \n \n \n \n >> Referansı \n kkodRef \n AN1..12 \n K \n Karekod referans numarasını  gösterir. Okunan karekodda referans değeri varsa kullanılması zorunludur.  Karekod ilke ve kurallar belgesinde tanımlandığı şekilde kullanılması gerekmektedir.  Kolay Adresi Sistemi ile birlikte kullanılmaz. \n \n \n \n >> Üretici Kodu \n kkodUrtcKod \n AN4 \n Z \n Karekod üreticisinin kodu.  Ödeme Hizmeti Sağlayıcıları ve TCMB tarafından uygun görülen ödeme sistemi işleticisi TR Karekod üretebilmek için BKM’ye kayıt başvurusu yaparak karekod üretici kodu alabileceklerdir. Bankalar EFT kodlarını kullanacak olup ayrıca kayıt yaptırmalarına gerek bulunmamaktadır. 4 haneden kısa değerlerin sol tarafı ’0’ karakteri ile tamamlanmalıdır. \n \n \n \n > Ödeme Ayrıntıları \n odmAyr \n Kompleks: OdemeAyrintilari \n Z \n \n \n \n \n >> Ödeme Kaynağı \n odmKynk \n AN1 \n Z \n Ödemenin başlatıldığı kaynağı belirtir.  TR.OHVPS.DataCode.OdemeKaynak  sıralı veri değerlerinden birini alır. \n HHS geçerli bir Ödeme Kaynağı kodu kullanıldığını kontrol eder. \n \n \n >> Ödeme Amacı \n odmAmc \n AN2 \n Z \n TR.OHVPS.DataCode.OdemeAmaci  sıralı veri değerlerinden birini alır. Karekod akışında, FAST Karekod Veri Organizasyonundaki 62-08: alanında tanımlı Ödeme Amacı verisi kullanılır. \n HHS geçerli bir Ödeme Amacı kodu olduğunu kontrol eder. \n \n \n >> Referans Bilgisi \n refBlg \n AN1..140 \n K \n Ödemeye özel  Referans Bilgisi  alanıdır. Karekod işlemi değil ise zorunludur.  -\tKişiden kişiye fon aktarımlarda: Gün içerisinde ÖHK için biricik olarak oluşturan referans bilgisi  -\tE-ticaret işlemlerinde sipariş/takip numarası/müşteri/abone numarası  -\tKarekod akışında, FAST Karekod Veri Organizasyonundaki  -\t62-01: alanında tanımlı Fatura Numarası   -\t62-06: alanında tanımlı Müşteri Numarası   verilerinden biri kullanılır. \n HHS bu değeri GKD için kullandığı önyüzünde “işlem doğrulama kodunun” bir unsuru olarak göstermelidir. \n \n \n >> Açıklama \n odmAcklm \n AN1..50 \n İ \n ÖBHS’nin ÖHK’dan aldığı ya da kendisinin atadığı işlem açıklaması bilgisi. \n \n \n \n > ÖBHS Masraf Tutarı \n obhsMsrfTtr \n Kompleks:Tutar \n İ \n \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para birimi (TRY, USD, EUR vb.). \n \n \n \n >> Tutar \n ttr \n N1..18 \n Z \n ÖBHS’nin işlemle ilgili ÖHK’nın borçlandırılmasını belirttiği masraf tutarı. İşlem Tutarı ile aynı para biriminde olmalıdır.Örneğin 1,20 TRY için tutar alanında “120” değeri iletilir. \n \n \n \n İşyeri Ödeme Bilgileri \n isyOdmBlg \n Kompleks:IsyeriOdemeBilgileri \n İ \n İşyeri ödemelerinde kullanılabilecek alanlardır. Karekodlu işyeri ödemesi akışında bu alanlar dolu geldiği için isteğe bağlı olarak gönderilebilir. isyOdmBlg alanlarının en az birinin dolu olması durumunda istekte yer alır. \n \n \n \n > İşyeri Kategori Kodu \n isyKtgKod \n AN4 \n İ \n İşlemin, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). Ödeme Amacı = ‘06’ ya da ‘04’ olan ödeme işlemleri için doldurulabilir.  4 karakterden küçük değerlerin başına 0 eklenerek iletilmesi gereklidir. \n \n \n \n > Alt İşyeri Kategori Kodu \n altIsyKtgKod \n AN4 \n İ \n İşlem alt işyerinden gerçekleştiriliyorsa, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). 4 karakterden küçük değerlerin başına 0 eklenerek iletilmesi gereklidir. \n \n \n \n >Üye İş Yeri Tekil Kimlik \n genelUyeIsyeriNo \n AN8 \n İ \n İşyeri kayıt sisteminde kayıtlı İşyeri için BKM tarafından üretilmiş olan genel işyeri numarasıdır (GlobalMerchantId) 8 haneden küçük gönderiminde başa ‘0’ eklenmelidir. Örnek değer ‘01630618’ \n  BAŞARILI YANIT: \n POST işleminin RESPONSE gövdesini (BODY) oluşturan “OdemeEmriRizasi” nesnesi Tablo-8’deki parametrelerden oluşur: \n Tablo 8: “OdemeEmriRizasi” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n \n \n \n \n Riza Bilgileri \n rzBlg \n Kompleks: RizaBilgileri \n Z \n \n \n \n > Rıza No \n rizaNo \n AN1..128 \n Z \n OdemeEmriRızasi nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n > Oluşturma Zamanı \n olusZmn \n ISODateTime \n Z \n OdemeEmriRizasi nesnesinin oluşturulma zamanı \n \n \n > Güncellenme Zamanı \n gnclZmn \n ISODateTime \n Z \n OdemeEmriRizasi nesnesinin güncellenme zamanı \n \n \n > Rıza Durumu \n rizaDrm \n AN1 \n Z \n TR.OHVPS.DataCode.RizaDurumu  sıralı veri tipini değerlerinden birini alır. \n \n \n > Rıza Iptal Detay Kodu \n rizaIptDtyKod \n AN2 \n K \n Rıza durumunun iptal olduğu durumda zorunludur. Alabileceği değerler 4. Bölümde detaylandırılmıştır. \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n > Yetkilendirme Yöntemi \n yetYntm \n AN1 \n Z \n TR.OHVPS.DataCode.GkdTur  sıralı veri türü değerlerinden birini alır. \n \n \n > Yönlenme Adresi \n yonAdr \n AN1..1024 \n K \n Yönlendirmeli güçlü kimlik doğrulama için zorunlu. \n \n \n > Bildirim Adresi \n bldAdr \n AN1..1024 \n K \n Ayrık güçlü kimlik doğrulama için zorunlu. \n \n \n > HHS Yönlenme Adresi \n hhsYonAdr \n AN1..1024 \n K \n GKD doğrulama bilgilerinin girilebilmesi için uygulamadan açılacak yönlendirme sayfasının adresi \n \n \n > Yetkilendirme Tamamlanma Zamanı \n yetTmmZmn \n ISODateTime \n Z \n Yetkilendirme akışının tamamlanması gereken son zamanı gösterir.   HHS tarafından maksimum 5 dk içinde işlem tamamlanacak şekil zaman damgası oluşturulur. Zaman aşımı olduğunda HHS’nin GKD’ye izin vermeyecek şekilde hata mesajı vermesi gerekmektedir.  Rıza durumu Yetkilendirildi statüsüne geçene kadarki süredir. \n \n \n Ödeme Başlatma \n odmBsltm \n Kompleks: OdemeBaslatma \n Z \n \n \n \n > Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n >> Kimlik Türü \n kmlkTur \n AN1 \n K \n TR.OHVPS.DataCode.KimlikTur  sıralı veri türü değerlerinden birini alır. \n \n \n >> Kimlik Verisi \n kmlkVrs \n AN1..30 \n K \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır. TR.OHVPS.DataCode.KimlikTur  değerine göre uzunluk ve formatı değişir. \n \n \n >> Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür. TR.OHVPS.DataCode.KurumKimlikTur  sıralı veri türü değerlerinden birini alır. \n \n \n >> Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.   TR.OHVPS.DataCode.KurumKimlikTur  değerine göre uzunluk ve formatı değişir. \n \n \n >> Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur  sıralı veri türü değerlerinden birini alır  (B: Bireysel, K:Kurumsal) \n \n \n > İşlem Tutarı \n islTtr \n Kompleks:Tutar \n Z \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para Birimi.  Karekod akışında, FAST Karekod Veri Organizasyonundaki  53: (Para Birimi)  alanında tanımlı Para Birimi verisi kullanılır. \n \n \n >> Tutar \n ttr \n N1..18 \n Z \n ÖBHS'nin ön yüzde kullanıcıdan teyit aldığı tutar.   Karekod akışında, FAST Karekod Veri Organizasyonundaki  54: (Tutar)  alanında tanımlı Tutar verisi kullanılır. \n \n \n > Gönderen \n gon \n Kompleks:Hesap \n İ \n \n \n \n >> Unvan \n unv \n AN3..140 \n İ \n Gönderenin unvanıdır.  HHS, bu bilgiyi ÖBHS sisteminden gelen veri yerine FAST’a iletirken kendi sisteminden alabilir. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n İ \n ÖBHS'nin ön yüzünden daha önce kayıt altına alınmış hesaplar arasından seçtirdiği veya müşteriye girdiği IBAN’dır.  ÖBHS tarafından iletilmediği durumda, gönderen hesap bilgisini müşteri tarafından HHS’nin dijital kanalında GKD sonrasında seçilebilir. Bu amaçla ÖBHS arayüzünde HHS seçtirilmelidir.   GKD sonrası HHS ekranında seçilen Hesap Numarası POST işleminin yanıtında dönülemez ancak isteğe bağlı GET sorgusu ile dönülebilir.    Hesap Referansı kullanılıyorsa Hesap Numarası kullanılmayabilir. \n \n \n >> Hesap Referansı \n hspRef \n AN5..40 \n İ \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid). YÖS bazında farklılaşması gerekmez.  ÖBHS’nin aynı zamanda HBHS olduğu durumda müşteri rızası tesis edilmiş bir hesabın referansı üzerinden de ödeme başaltılabilir.   GKD sonrası HHS ekranında seçilen Hesap Referansı POST işleminin yanıtında dönülemez ancak isteğe bağlı GET sorgusu ile dönülebilir.    Hesap Numarası kullanılıyorsa Hesap Referansı kullanılmayabilir. \n \n \n > Alıcı \n alc \n Kompleks:Hesap \n Z \n \n \n \n >> Unvan \n unv \n AN3..140 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen adres kaydı yaptırmış olan alıcının maskeli ad-soyadı veya maskeli ticari unvan bilgisidir. Kolas’tan dönen “account owner” alanı kullanılmalıdır. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen unvan bilgisidir. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n Z \n ÖBHS tarafından istek mesajında iletilip doğrulanan veya Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen alıcı maskeli IBAN bilgisidir. \n \n \n >> Kolay Adres \n kolas \n Kompleks:Kolas \n K \n \n \n \n >>> Kolas Türü \n kolasTur \n AN1 \n Z \n TR.OHVPS.DataCode.KolasTur  sıralı veri türü değerlerinden birini alır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n \n \n >>> Kolas Değeri \n kolasDgr \n AN7..50 \n Z \n Müşterinin eklediği, HHS (FAST katılımcısı) tarafından doğrulanmış Kolay Adres değeridir. Alabileceği değerler BKM “Kolay Adresleme Sistemi Uygulama Kuralları” belgesinde tanımlıdır.  Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n \n \n >>> Kolas Referans Numarası \n kolasRefNo \n N12 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı KOLAS tarafından ilgili sorguya özel olarak üretilmiş referans numarasıdır. \n \n \n >>> Kolas Hesap Türü \n kolasHspTur \n AN1 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı hesap türü bilgisidir:   TR.OHVPS.DataCode.KolasHspTur  sıralı veri değerlerinden birini alır. \n \n \n > Karekod \n kkod \n Kompleks:Karekod \n K \n \n \n \n >> Akış Türü \n aksTur \n AN2 \n Z \n TR.OHVPS.DataCode.KareKodAksTur  sıralı veri değerlerinden birini alır. Kolay Adresi Sistemi ile birlikte kullanılmaz. \n \n \n >> Referansı \n kkodRef \n AN1..12 \n K \n Karekod referans numarasını  gösterir. \n \n \n >> Üretici Kodu \n kkodUrtcKod \n AN4 \n Z \n Karekod üreticisinin kodu.  Ödeme Hizmeti Sağlayıcıları ve TCMB tarafından uygun görülen ödeme sistemi işleticisi TR Karekod üretebilmek için BKM’ye kayıt başvurusu yaparak karekod üretici kodu alabileceklerdir. Bankalar EFT kodlarını kullanacak olup ayrıca kayıt yaptırmalarına gerek bulunmamaktadır. 4 haneden kısa değerlerin sol tarafı ’0’ karakteri ile tamamlanmalıdır. \n \n \n > Ödeme Ayrıntıları \n odmAyr \n Kompleks: OdemeAyrintilari \n Z \n \n \n \n >> Ödeme Kaynağı \n odmKynk \n AN1 \n Z \n Ödemenin başlattığı kaynağı belirtir.  TR.OHVPS.DataCode.OdemeKaynak  sıralı veri değerlerinden birini alır. \n \n \n >> Ödeme Amacı \n odmAmc \n AN2 \n Z \n TR.OHVPS.DataCode.OdemeAmaci  sıralı veri değerlerinden birini alır. Karekod akışında, FAST Karekod Veri Organizasyonundaki 62-08: alanında tanımlı Ödeme Amacı verisi kullanılır. \n \n \n >> Referans Bilgisi \n refBlg \n AN1..140 \n K \n Ödemeye özel  Referans Bilgisi  alanıdır. Karekod işlemi değil ise zorunludur.  -\tKişiden kişiye fon aktarımlarda: Gün içerisinde ÖHK için biricik olarak oluşturan referans bilgisi  -\tE-ticaret işlemlerinde sipariş/takip numarası/müşteri/abone numarası  -\tKarekod akışında, FAST Karekod Veri Organizasyonundaki  -\t62-01: alanında tanımlı Fatura Numarası   -\t62-06: alanında tanımlı Müşteri Numarası   verilerinden biri kullanılır. \n \n \n >> Açıklama \n odmAcklm \n AN1..50 \n İ \n ÖBHS’nin ÖHK’dan aldığı ya da kendisinin atadığı işlem açıklaması bilgisi. \n \n \n >> ÖHK Mesaj Alanı \n ohkMsj \n AN1..200 \n İ \n HHS’nin ÖHK’ya göstermek üzere ilettiği mesaj. \n \n \n >> Ödeme Sistemi \n odmStm \n AN1 \n Z \n TR.OHVPS.DataCode.OdemeSistemi  sıralı veri değerlerinden birini alır. \n \n \n >> Beklenen Ödeme Zamanı \n bekOdmZmn \n ISODateTime \n K \n İşlemin yönlendirildiği ödeme sistemi PÖS ise ve PÖS işlem saatleri dışında ise işlemin yapılabileceği ilk zaman bilgisidir. Bu alan ileri vadeli ödemeler için düşünülmüştür. İlk fazda doldurulmasına gerek olmadığı düşünülmektedir. \n \n \n > ÖBHS Masraf Tutarı \n obhsMsrfTtr \n Kompleks:Tutar \n İ \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para birimi (TRY, USD, EUR vb.). \n \n \n >> Tutar \n ttr \n N1..18 \n Z \n ÖBHS’nin işlemle ilgili ÖHK’nın borçlandırılmasını belirttiği masraf tutarı. İşlem Tutarı ile aynı para biriminde olmalıdır.Örneğin 1,20 TRY için tutar alanında “120” değeri iletilir. \n \n \n > HHS Masraf Tutarı \n hhsMsrfTtr \n Kompleks:Tutar \n İ \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para birimi (TRY, USD, EUR vb.). \n \n \n >> Tutar \n ttr \n N1..18 \n Z \n HHS’nin işlemle ilgili ÖHK’nın borçlandırılmasını belirttiği masraf tutarı. İşlem Tutarı ile aynı para biriminde olmalıdır. Örneğin 1,20 TRY için tutar alanında “120” değeri iletilir. \n \n \n İşyeri Ödeme Bilgileri \n isyOdmBlg \n Kompleks:IsyeriOdemeBilgileri \n İ \n İşyeri ödemelerinde kullanılabilecek alanlardır. Karekodlu işyeri ödemesi akışında bu alanlar dolu geldiği için isteğe bağlı olarak gönderilebilir. isyOdmBlg alanlarının en az birinin dolu olması durumunda yanıtta yer alır. \n \n \n > İşyeri Kategori Kodu \n isyKtgKod \n AN4 \n İ \n İşlemin, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). Ödeme Amacı = ‘06’ ya da ‘04’ olan ödeme işlemleri için doldurulabilir. \n \n \n > Alt İşyeri Kategori Kodu \n altIsyKtgKod \n AN4 \n İ \n İşlem alt işyerinden gerçekleştiriliyorsa, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). \n \n \n >Üye İş Yeri Tekil Kimlik \n genelUyeIsyeriNo \n AN8 \n İ \n İşyeri kayıt sisteminde kayıtlı İşyeri için BKM tarafından üretilmiş olan genel işyeri numarasıdır (GlobalMerchantId) 8 haneden küçük gönderiminde başa ‘0’ eklenmelidir. Örnek değer ‘01630618’ \n 6.3.\tADIM 2- Ödeme Emri Rızasının Yetkilendirilmesi \n   \n Şekil 6: Ödeme Emri Rızasının Yetkilendirilmesi \n ÖBHS, ÖHK’nın ödeme emrini yetkilendirmesi isteğini iletir. Ödeme emrinin yetkilendirilmesi, HHS tarafından gerçekleştirilen Yönlendirme veya Ayrık GKD yöntemiyle yapılır. \n \n \n Yönlendirmeli doğrulama akışında , ÖBHS ÖHK’yı HHS’ye yönlendirir. \n \n ÖBHS tarafından yönlendirme, bir önceki adımdaki RizaNo’yu içerir. \n Yönlendirmenin RizaNo’yu içermesi sayesinde, HHS hangi ödeme emriyle ilişkili olarak yönlendirme yapıldığını ilişkilendirebilir. \n HHS, ÖHK için GKD sürecini işletir. \n \n ÖHK’yı doğrularsa, \n \n ÖHK -bir önceki adımda seçmediyse- borçlu hesabını seçer. \n HHS, ödeme emri rıza kaynağının durumunu “Yetkilendirildi” olarak günceller. \n HHS, ÖHK’yı “olumlu yönlendirme akışı” ile ÖBHS tarafından tanımlanan yönlendirme adresine yönlendirir: \n \n \n \n yonAdr?rizaDrm=Y&yetKod=xx&rizaNo=yy&rizaTip=O&drmKod=zzz\n \n ÖHK’yı doğrulayamazsa, \n1. HHS, ödeme emri rıza kaynağının durumunu “Yetki İptal” olarak günceller. \n2. HHS, ÖHK’yı “olumsuz yönlendirme akışı” ile ÖBHS tarafından tanımlanan yönlendirme adresine yönlendirir: \n yonAdr?rizaDrm=I&rizaNo=yy&rizaTip=O&drmKod=zzz\n \n HHS tarafında oluşabilecek bir hata durumunun YÖS’e aktarılması gerektiği durumlar olabilir. Bu durumda yonlendirme adresinde hata kodu parametresi zorunlu olarak iletilmelidir. \nHata açıklamalarının neler olabileceği ve YÖS’ün kendi uygulamasında bu hatayı ne şekilde göstereceği aşağıda tariflenmiştir. \n yonAdr?rizaDrm=I&rizaNo=yy&rizaTip=O&rizaIptDtyKod=11&drmKod=zzz\n \n URL’de iletilen “Rıza İptal Detay Kodu” Rıza durumları bölümünde (4. Bölüm) belirtilen hata kodları ile aynı olacak şekilde tasarlanmıştır. GKD sırasında yapılması gereken kontroller 5.3 bölümünde detaylandırılmıştır. \n \n Ayrık doğrulama akışında , HHS, ÖHK’nın ödeme emrini başlattığı uygulamadan farklı olabilecek bir “doğrulama” uygulamasında işlemi doğrulamasını ister.\n \n Ayrık akış ÖBHS’nin farklı bir kanal kullanarak yetkilendirme isteği göndermesiyle başlatılır. \n Bu yetkilendirme isteği, yetkilendirilecek ödeme emri rızasının eşleştirileceği ÖHK’nın bulunması için ilgili veriyi taşır. \n HHS, ÖHK’yı doğrular. \n ÖHK -bir önceki adımda seçmediyse- borçlandırılacak hesabını seçer. \n HHS, ödeme emri rıza kaynağının durumunu “Yetkilendirildi” olarak günceller. \n \n \n \n Başarılı GKD sonrasında (rizaDrm=’Y’) ilgili rıza nesnesi için (belirli bir rizaNo) yetkilendirme kodunun (yetKod) alınmasının ardından erişim belirteci erişim adresine POST çağrısı yapılarak yetkilendirme kodu karşılığında erişim belirteci ve yenileme belirteci alınır. POST /erişim-belirteci erişim noktası EK-3’te açıklanmıştır. \n Erişim belirteci alındıktan sonra; HHS, ödeme emri rıza kaynağının durumunu “Yetki Kullanıldı” olarak günceller. \n 6.4.\tADIM 2.1 – Ödeme Emri Rızasının Sorgulanması (isteğe bağlı) \n   \n Şekil 7: “odemeEmriRizasi” nesnesinin sorgulanması (isteğe bağlı) \n GKD işleminin başarıyla tamamlanıp Ödeme Emri Rızasının yetkilendirilmesi esnasında, gönderen hesap seçiminin HHS ekranında yapıldığı durumlar olabilir. Bu durumlarda ödeme emri isteğinde gönderen hesap bilgileri alanının zorunlu olması nedeniyle,  OdemeEmriRizasi  nesnesi sorgulanarak gönderen hesap bilgileri (hesap numarası ve/veya hesap referansı) alınmalıdır. HHS, “ ADIM 2 -Ödeme Emri Rızasının Yetkilendirilmesi ” akışında ÖHK’nın hesapları arasında seçim yapmasını ve seçilen hesap bilgisinin  OdemeEmriRizasi  nesnesine işler. \n GET /odeme-emri-rizasi/{RizaNo} \n ÖBHS, mevcut durumunu kontrol etmek için, oluşturulan bir  OdemeEmriRizasi  kaynağının durumunu isteğe bağlı olarak alabilir. \n Durum \n OdemeEmriRizasi  kaynağı için kullanılabilecek durum göstergeleri şu şekildedir: \n \n Yetki Bekleniyor \n Yetkilendirildi \n Yetki Kullanıldı \n Yetki Ödeme Emrine Dönüştü \n Yetki Sonlandırıldı \n Yetki İptal \n \n Ödeme emri rıza durum değişiklikleri 4.2 bölümünde detaylandırılmıştır. \n BAŞARILI YANIT: \n GET /odeme-emri-rizasi/{RizaNo}  yanıtının (RESPONSE) gövdesinde (BODY)  “OdemeEmriRizasiİstegi” nesnesi kullanılır. İstek başarıyla sonuçlanırsa HHS kaynak sunucusunda Tablo-8’de yer alan parametreleri içeren “OdemeEmriRizasi” oluşturulur. \n Gönderen Hesap Bilgisinin, ADIM 2 (Ödeme Emri Rızasının Yetkilendirilmesi) sonrasında HHS ekranından seçildiği akışta “OdemeEmriRizasi” nesnesi güncellenir ve ÖBHS  GET /odeme-emri-rizasi/{RizaNo}  isteği yaparak güncel gönderen hesap bilgisi bilgisini de içeren “OdemeEmriRizasi” nesnesini çekmelidir. \n Çerçeve sözleşme kapsamında olmayan tek seferlik ödeme işlemlerinde, Kimlik Türü ve Kimlik Verisi bilgilerinin ödeme emri rızası sırasında gönderimi zorunlu değildir. Başarılı GKD sonrası, yani erişim belirteci alındığında, ödeme emri oluşmadan önce, YÖS’ün ödeme emri rızasını sorgulayarak bu bilgileri alması ve ödeme emrini oluştururken Kimlik Türü ve Kimlik Verisi alanlarını dolu olarak göndermesi beklenmektedir.  Ancak rıza durumu “Yetki Bekleniyor - B”, “Yetkilendirildi - Y” ve “Yetki İptal - I” statülerinde ise, ödeme emri rızası sorgulamasında, HHS’nin Kimlik Türü ve Kimlik Verisi bilgisini YÖS ile paylaşmaması gerekmektedir. \n 6.5.\tADIM 3- Ödeme Emrinin Oluşturulması \n   \n Şekil 8: Ödeme Emrinin Oluşturulması \n POST /odeme-emri \n \n ÖHK’nın Güçlü Kimlik Doğrulama ile işlemi yetkilendirmesi sonrasında, ÖBHS OdemeEmri kaynağını oluşturur. \n Ödeme emri (OdemeEmri) uygun ödeme kaynağına POST isteği yapılarak başlatılır.\n \n POST HHS tarafından işlenir: RizaDurumu “Yetki Kullanıldı” ise işleme başlanır. \n POST /odeme-emri-rizasi ile POST /odeme-emri isteklerinde istek alanların aynı olması beklenmektedir. HHS tarafından kontrolü sağlanmalıdır.POST verisindeki Gönderen Hesap Numarası ve Alıcı Hesap Numarasının aynı bankaya aitse HAVALE değilse FAST veya PÖS iş akışına geçilir. \n POST verisinin modele göre kontrolü yapılır (alan kontrolleri) \n POST verisinin mantıksal kontrolleri yapılır (IBAN kontrolü, çapraz alan kontroller) \n OdemeEmriDurumu “Gerçekleşti” / “Gönderildi” / “Gerçekleşmedi” olarak güncellenir. \n \n \n POST başarılı olursa, içerisinde OdemeEmriNo ve OdemeEmriDurumu değişkenleri de bulunan OdemeEmri nesnesi ÖBHS’ye döner ve RizaDurumu değişkenin değeri “Yetki Ödeme Emrine Dönüştü” olarak güncellenir. \n \n BAŞARILI İSTEK: \n Tablo 9: “OdemeEmriIstegi” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n HHS tarafından ödeme emri oluşturulması sırasında yapılması gereken kontrol ve işlemler \n FAST A01 PÖS M01 mesaj mapping \n \n \n \n \n Riza Bilgileri \n rzBlg \n Kompleks: RizaBilgileri \n Z \n \n \n \n \n \n > Rıza No \n rizaNo \n AN1..128 \n Z \n OdemeEmriRızasi nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n \n \n > Oluşturma Zamanı \n olusZmn \n ISODateTime \n Z \n OdemeEmriRizasi nesnesinin oluşturulma zamanı \n \n \n \n \n > Rıza Durumu \n rizaDrm \n AN1 \n Z \n TR.OHVPS.DataCode.RizaDurumu  sıralı veri tipini değerlerinden birini alır. \n \n \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n HHS, hhsKod’un kendisine ait olduğunu ve istek başlığındaki x-aspsp-code değeri ile aynı olduğunu kontrol eder.  Hata durumunda  TR.OHVPS.Connection.InvalidASPSP  hata kodunu döner. \n Gönderen katılımcı kodu (yani bankanın FAST/PÖS’teki Katılımcı kodu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n HHS, yosKod’un geçerli bir Ödeme Hizmeti Sağlayıcısı Kodu olduğunu ve istek başlığındaki x-tpp-code değeri ile aynı olduğunu kontrol eder.  Hata durumunda  TR.OHVPS.Connection.InvalidTPP  hata kodunu döner. \n YosKod \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n \n \n > Yetkilendirme Yöntemi \n yetYntm \n AN1 \n Z \n TR.OHVPS.DataCode.GkdTur  sıralı veri türü değerlerinden birini alır. \n \n \n \n \n > Yönlenme Adresi \n yonAdr \n AN1..1024 \n K \n Yönlendirmeli güçlü kimlik doğrulama için zorunlu. \n \n \n \n \n > Bildirim Adresi \n bldAdr \n AN1..1024 \n K \n Ayrık güçlü kimlik doğrulama için zorunlu. \n \n \n \n \n > HHS Yönlenme Adresi \n hhsYonAdr \n AN1..1024 \n K \n GKD doğrulama bilgilerinin girilebilmesi için uygulamadan açılacak yönlendirme sayfasının adresi \n \n \n \n \n > Yetkilendirme Tamamlanma Zamanı \n yetTmmZmn \n ISODateTime \n Z \n Yetkilendirme akışının tamamlanması gereken son zamanı gösterir.   Rıza durumu Yetkilendirildi statüsüne geçene kadarki süredir. \n \n \n \n \n Ödeme Başlatma \n odmBsltm \n Kompleks: OdemeBaslatma \n Z \n \n \n \n \n \n > Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n \n \n >> Kimlik Türü \n kmlkTur \n AN1 \n Z \n TR.OHVPS.DataCode.KimlikTur  sıralı veri türü değerlerinden birini alır. \n Çerçeve sözleşme kapsamındaki ödemelerde kullanımı zorunludur. Ödeme Emri Rizası Nesnesindeki Kimlik Numarası Türü verisi ile aynı olmalıdır. Kurum adına yapılan (ticari) ödemelerde, kurum adına işlem yapan kullanıcının kimlik türünün bu alanda gönderilmesi zorunludur. \n \n \n \n >> Kimlik Verisi \n kmlkVrs \n AN1..30 \n Z \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır. TR.OHVPS.DataCode.KimlikTur  değerine göre uzunluk ve formatı değişir. \n Çerçeve sözleşme kapsamındaki ödemelerde kullanımı zorunludur. HHS, ÖBHS tarafından iletilmesi durumunda Kimlik Verisi üzeriden çapraz kontroller uygulamalı ve Kimlik Verisini temel alarak GKD gerçekleştirmelidir. Ödeme Emri Rizası Nesnesindeki Kimlik Numarası verisi ile aynı olmalıdır. Gerçek kişi tarafından yapılan ödemelerde, 1. HHS, Gönderen Adı ve Gönderen Hesap Numarasını ödeme emri isteğinde (Havale/FAST/PÖS) gönderir. - Gönderen Adı ve diğer tüm müşteri bilgileri, Kimlik Numarası üzerinden elde edillir. Pasaport numarasına ilişkin kontroller HHS'nin halihazırda kullandığı veri, akış ve tabi olduğu diğer düzenlemelerdeki işleyiş ile aynı şekilde ele alınmalıdır. Kurum adına yapılan (ticari) ödemelerde, kurum adına işlem yapan kullanıcının kimlik verisi bu alanda gönderilebilmesi zorunludur. \n GonKimN / Psp \n \n \n >> Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür. TR.OHVPS.DataCode.KurumKimlikTur  sıralı veri türü değerlerinden birini alır. \n Kurum adına yapılan (ticari) ödemelerde kullanımı zorunludur. Ödeme Emri Rizası Nesnesindeki Kurum Kimlik Türü verisi ile aynı olmalıdır. \n \n \n \n >> Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.   TR.OHVPS.DataCode.KurumKimlikTur  değerine göre uzunluk ve formatı değişir. \n Kurum adına yapılan (ticari) ödemelerde kullanımı zorunludur. Ödeme Emri Rizası Nesnesindeki Kurum Kimlik Verisi ile aynı olmalıdır. \n GonKimN / VKN \n \n \n >> Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur  sıralı veri türü değerlerinden birini alır  (B: Bireysel, K:Kurumsal) \n Kurum adına yapılan ödemelerde K değerini alır. Kurum Kimlik Türü ve Kurum Kimlik Verisi alanlarının giilmiş olduğu çapraz olarak kontrol edilir.  Ödeme Emri Rizası Nesnesindeki ÖHK Türü ile aynı olmalıdır. \n \n \n \n > İşlem Tutarı \n islTtr \n Kompleks:Tutar \n Z \n \n \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para Birimi.  Karekod akışında, FAST Karekod Veri Organizasyonundaki  53: (Para Birimi)  alanında tanımlı Para Birimi verisi kullanılır. \n Ödeme Emri Rizası Nesnesindeki Para Birimi verisi ile aynı olmalıdır. \n \n \n \n >> Tutar \n ttr \n N1..18 \n Z \n ÖBHS'nin ön yüzde kullanıcıdan teyit aldığı tutar.   Karekod akışında, FAST Karekod Veri Organizasyonundaki  54: (Tutar)  alanında tanımlı Tutar verisi kullanılır. Örneğin 1,20 TRY için tutar alanında “120” değeri iletilir. \n Ödeme Emri Rizası Nesnesindeki İşlem Tutarı verisi ile aynı olmalıdır. HHS işlem tutarı ödeme mesajında (Havale/FAST/PÖS) aynen taşınmak durumundadır. \n Ttr \n \n \n > Gönderen \n gon \n Kompleks:Hesap \n Z \n \n \n \n \n \n >> Unvan \n unv \n AN3..140 \n Z \n Gönderen kişinin ad soyad ya da ticari unvan bilgisi. \n HHS ve ÖBHS verisi tutarlı olmalıdır.  ÖBHS verisi ile HHS verisinin farklılaşması durumunun ise risk değerlendirme sistemlerine girdi olarak kullanması tavsiye edilir. \n GonAd \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n K \n ÖBHS'nin ön yüzünden seçtirdiği/kullanıcıya girdiği IBAN Hesap numarası ya da Hesap Referansı alanlarından en az birinin dolu olarak gelmesi gerekmektedir. \n Ödeme Emri Rizası Yanıtı Nesnesindeki Gönderen Hesap Numarası verisi ile aynı olmalıdır. \n GonHesN \n \n \n >> Hesap Referansı \n hspRef \n AN5..40 \n K \n ÖBHS’nin aynı zamanda HBHS olduğu durumda müşteri rızası tesis edilmiş bir hesabın referansı üzerinden de ödeme başlatılabilir. GKD sonrası HHS ekranında seçilen Hesap Referansı POST işleminin yanıtında dönülemez ancak isteğe bağlı GET sorgusu ile dönülebilir. Hesap Numarası kullanılıyorsa Hesap Referansı kullanılmayabilir. \n \n \n \n \n > Alıcı \n alc \n Kompleks:Hesap \n Z \n \n \n \n \n \n >> Unvan \n unv \n AN3..140 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen adres kaydı yaptırmış olan alıcının maskeli ad-soyadı veya maskeli ticari unvan bilgisidir. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen unvan bilgisidir. \n YÖS’ten alıcı ad soyad bilgisi geliyorsa ve HHS'nin kontrolünden başarılı bir şekilde geçti ise HHS'nin tekrar alıcı ad soyad bilgisi için giriş yaptırmasına gerek bulunmamaktadır. \n AlAd \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n Z \n Alıcının Hesap Numarası alanıdır (IBAN). Kolay Adres  sorgusunda dönülen adres kaydı yaptırmış olan alıcının maskeli IBAN bilgisidir. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen IBAN bilgisidir. Karekod akışında, FAST Karekod Veri Organizasyonundaki 30-01: alanında tanımlı İş Yeri IBAN verisi kullanılır. \n Ödeme Emri Rizası Yanıtı Nesnesindeki Alıcı Hesap Numarası verisi ile aynı olmalıdır.  Kontroller başarıyla sonuçlanırsa, bilgi FAST/PÖS AlHesN alanına doğrudan aktarır ve FAST/PÖS Alan Katılımcı Kodu (AlKK) olarak Alıcı HHS Kodu kullanılır.  KOLAS sorgusu sonucunda ödeme emrinde iletilen maskeli bilgi ile HHS’nin kendi ödeme emri rızası isteğinde tuttuğu KOLAS sorgusundan dönülen bilgi maskelenerek karşılaştırılır. Eğer aynı değilse uygun hata kodu dönülerek işlem sonlandırılır. \n AlHesN \n \n \n >> Kolay Adres \n kolas \n Kompleks:Kolas \n K \n \n \n \n \n \n >>> Kolas Türü \n kolasTur \n AN1 \n Z \n Müşterinin sorgulamak istediği Kolay Adres Tipi değeridir.  TR.OHVPS.DataCode.KolasTur  sıralı veri türü değerlerinden birini alır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n Ödeme Emri Rizası Yanıtı Nesnesindeki Kolay Adres Tipi verisi ile aynı olmalıdır. \n \n \n \n >>> Kolas Değeri \n kolasDgr \n AN7..50 \n Z \n Müşterinin eklediği, HHS (FAST katılımcısı) tarafından doğrulanmış Kolay Adres değeridir. Alabileceği değerler BKM “Kolay Adresleme Sistemi Uygulama Kuralları” belgesinde tanımlıdır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n Ödeme Emri Rizası Yanıtı Nesnesindeki Kolay Adres Değeri verisi ile aynı olmalıdır. \n FAST (KolasRef) \n \n \n >>> Kolas Referans Numarası \n kolasRefNo \n N12 \n Z \n Ödemeye özel Referans Bilgisi alanıdır. Karekod işlemi değil ise zorunludur.  -\tKişiden kişiye fon aktarımlarda: Gün içerisinde ÖHK için biricik olarak oluşturan referans bilgisi -\tE-ticaret işlemlerinde sipariş/takip numarası/müşteri/abone numarası -\tKarekod akışında, FAST Karekod Veri Organizasyonundaki -\t62-01: alanında tanımlı Fatura Numarası -\t62-06: alanında tanımlı Müşteri Numarası verilerinden biri kullanılır. \n Ödeme Emri Rizası Nesnesindeki Referans Bilgisi verisi ile aynı olmalıdır. FAST:  KareKod ile başlatılan işlemlerde FAST A01 mesajındaki Karekod Referansı (KrkdRef) alanına karşılık gelir. Bu durumda, FAST A01 mesajı alanları “FAST Mesaj Yapısı ve İşlem Türleri” belgesin uygun şekilde oluşturulur: KareKod (KrKd) bölümündeki Karekod Akış Türü (KrkdAksTur) ve Karekod Referansı (KrkdRef) alanları doldurulmalıdır.  Kişiden kişiye fon aktarımlarında ve e-ticaret işlemelerinde Referans Bilgisi (RefBlg) alanı doldurulur. \n FAST (KrkdRef) ve (RefBlg) \n \n \n >>> Kolas Hesap Türü \n kolasHspTur \n AN1 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı hesap türü bilgisidir:   TR.OHVPS.DataCode.KolasHspTur  sıralı veri değerlerinden birini alır. \n \n \n \n \n > Karekod \n kkod \n Kompleks:Karekod \n K \n \n \n \n \n \n >> Akış Türü \n aksTur \n AN2 \n Z \n Karekod Akış Türü Karekod ödemesinin hangi akışla gerçekleştirildiğini gösterir.  Kolay Adresi Sistemi ile birlikte kullanılmaz.  01: FAST katılımcısından dinamik doğrulama hizmeti alınan işyeri ödemesi  02: FAST katılımcısından statik doğrulama hizmeti alınan işyeri ödemesi 03: Kişiden kişiye ödemeler \n Ödeme Emri Rizası Nesnesindeki Kare Kod Akış Türü verisi ile aynı olmalıdır. \n FAST: KrkdAksTur \n \n \n >> Referansı \n kkodRef \n AN1..12 \n K \n Karekod referans numarasını gösterir.  Okunan karekodda referans değeri varsa kullanılması zorunludur. Kolay Adresi Sistemi ile birlikte kullanılmaz. \n Ödeme Emri Rizası Nesnesindeki Karekod Referansı verisi ile aynı olmalıdır.  Çevrimiçi doğrulama hizmeti alınmayan statik karekodlar için Referans numarasının bulunmadığı durumlarda HHS tarafından “NONREF” ifadesi girilir. \n FAST: Karekod Referansı (KrkdRef) \n \n \n >> Üretici Kodu \n kkodUrtcKod \n AN4 \n Z \n Karekod üreticisinin kodu.  Ödeme Hizmeti Sağlayıcıları ve TCMB tarafından uygun görülen ödeme sistemi işleticisi TR Karekod üretebilmek için BKM’ye kayıt başvurusu yaparak karekod üretici kodu alabileceklerdir. Bankalar EFT kodlarını kullanacak olup ayrıca kayıt yaptırmalarına gerek bulunmamaktadır. 4 haneden kısa değerlerin sol tarafı ’0’ karakteri ile tamamlanmalıdır. \n \n \n \n \n > Ödeme Ayrıntıları \n odmAyr \n Kompleks: OdemeAyrintilari \n Z \n \n \n \n \n \n >> Ödeme Kaynağı \n odmKynk \n AN1 \n Z \n Ödemenin başlattığı kaynağı belirtir.  TR.OHVPS.DataCode.OdemeKaynak  sıralı veri değerlerinden birini alır. \n Ödeme Emri Rizası Nesnesindeki Ödeme Kaynağı verisi ile aynı olmalıdır. HHS tarafından ödeme mesajında (FAST/PÖS) aynen taşınmak durumundadır. \n FAST/PÖS: OdmKynk \n \n \n >> Ödeme Amacı \n odmAmc \n AN2 \n Z \n TR.OHVPS.DataCode.OdemeAmaci  sıralı veri değerlerinden birini alır. \n Ödeme Emri Rizası Nesnesindeki Ödeme Amacı verisi ile aynı olmalıdır. HHS tarafından ödeme mesajında (FAST/PÖS) aynen taşınmak durumundadır. \n FAST (OdmAmc)/PÖS(OdmAmaci) \n \n \n >> Referans Bilgisi \n refBlg \n AN1..140 \n K \n Ödemeye özel  Referans Bilgisi  alanıdır. Karekod işlemi değil ise zorunludur.  -\tKişiden kişiye fon aktarımlarda: Gün içerisinde ÖHK için biricik olarak oluşturan referans bilgisi  -\tE-ticaret işlemlerinde sipariş/takip numarası/müşteri/abone numarası  -\tKarekod akışında, FAST Karekod Veri Organizasyonundaki  -\t62-01: alanında tanımlı Fatura Numarası   -\t62-06: alanında tanımlı Müşteri Numarası   verilerinden biri kullanılır. \n \n FAST (KrkdRef) ve (RefBlg) \n \n \n >> Açıklama \n odmAcklm \n AN1..50 \n İ \n ÖBHS’nin ÖHK’dan aldığı ya da kendisinin atadığı işlem açıklaması bilgisi. \n \n FAST/PÖS Acklm \n \n \n >> ÖHK Mesaj Alanı \n ohkMsj \n AN1..200 \n İ \n HHS’nin ÖHK’ya göstermek üzere ilettiği mesaj. \n \n \n \n \n >> Ödeme Sistemi \n odmStm \n AN1 \n Z \n TR.OHVPS.DataCode.OdemeSistemi  sıralı veri değerlerinden birini alır. \n Ödeme Emri Rizası Nesnesindeki Ödeme Sistemi verisi ile aynı olmalıdır. \n \n \n \n >> Beklenen Ödeme Zamanı \n bekOdmZmn \n ISODateTime \n K \n İşlemin yönlendirildiği ödeme sistemi PÖS ise ve PÖS işlem saatleri dışında ise işlemin yapılabileceği ilk zaman bilgisi \n \n \n \n \n > ÖBHS Masraf Tutarı \n obhsMsrfTtr \n Kompleks:Tutar \n İ \n \n \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para birimi (TRY, USD, EUR vb.). \n Ödeme Emri Rizası Nesnesindeki ÖBHS Masraf Para Birimi verisi ile aynı olmalıdır. \n \n \n \n >> Tutar \n ttr \n N1..18 \n Z \n ÖBHS’nin işlemle ilgili ÖHK’nın borçlandırılmasını belirttiği masraf tutarı. İşlem Tutarı ile aynı para biriminde olmalıdır.Örneğin 1,20 TRY için tutar alanında “120” değeri iletilir. \n Ödeme Emri Rizası Nesnesindeki ÖBHS Masraf Tutarı verisi ile aynı olmalıdır. \n \n \n \n > HHS Masraf Tutarı \n hhsMsrfTtr \n Kompleks:Tutar \n İ \n \n \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para birimi (TRY, USD, EUR vb.). \n Ödeme Emri Rizası Nesnesindeki HHS Masraf Para Birimi verisi ile aynı olmalıdır. \n \n \n \n >> Tutar \n ttr \n N1..18 \n Z \n HHS’nin işlemle ilgili ÖHK’nın borçlandırılmasını belirttiği masraf tutarı. İşlem Tutarı ile aynı para biriminde olmalıdır. Örneğin 1,20 TRY için tutar alanında “120” değeri iletilir. \n Ödeme Emri Rizası Nesnesindeki HHS Masraf Tutarı verisi ile aynı olmalıdır. \n \n \n \n İşyeri Ödeme Bilgileri \n isyOdmBlg \n Kompleks:IsyeriOdemeBilgileri \n İ \n İşyeri ödemelerinde kullanılabilecek alanlardır. Karekodlu işyeri ödemesi akışında bu alanlar dolu geldiği için isteğe bağlı olarak gönderilebilir. isyOdmBlg alanlarının en az birinin dolu olması durumunda istekte yer alır. \n \n \n \n \n > İşyeri Kategori Kodu \n isyKtgKod \n AN4 \n İ \n İşlemin, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). Ödeme Amacı = ‘06’ ya da ‘04’ olan ödeme işlemleri için doldurulabilir. 4 karakterden küçük değerlerin başına 0 eklenerek iletilmesi gereklidir. \n \n \n \n \n > Alt İşyeri Kategori Kodu \n altIsyKtgKod \n AN4 \n İ \n İşlem alt işyerinden gerçekleştiriliyorsa, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). 4 karakterden küçük değerlerin başına 0 eklenerek iletilmesi gereklidir. \n \n \n \n \n >Üye İş Yeri Tekil Kimlik \n genelUyeIsyeriNo \n AN8 \n İ \n İşyeri kayıt sisteminde kayıtlı İşyeri için BKM tarafından üretilmiş olan genel işyeri numarasıdır (GlobalMerchantId) 8 haneden küçük gönderiminde başa ‘0’ eklenmelidir. Örnek değer ‘01630618’ \n \n \n \n \n \n BAŞARILI YANIT: \n POST işleminin RESPONSE gövdesini (BODY) oluşturan “OdemeEmri” nesnesi Tablo-10’daki parametrelerden oluşur: \n Tablo 10: “OdemeEmri” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n \n \n \n \n Riza Bilgileri \n rzBlg \n Kompleks: RizaBilgileri \n Z \n \n \n \n > Rıza No \n rizaNo \n AN1..128 \n Z \n OdemeEmriRızasi nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n > Oluşturma Zamanı \n olusZmn \n ISODateTime \n Z \n OdemeEmriRizasi nesnesinin oluşturulma zamanı \n \n \n > Rıza Durumu \n rizaDrm \n AN1 \n Z \n TR.OHVPS.DataCode.RizaDurumu  sıralı veri tipini değerlerinden birini alır. \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n > Yetkilendirme Yöntemi \n yetYntm \n AN1 \n Z \n TR.OHVPS.DataCode.GkdTur  sıralı veri türü değerlerinden birini alır. \n \n \n > Yönlenme Adresi \n yonAdr \n AN1..1024 \n K \n Yönlendirmeli güçlü kimlik doğrulama için zorunlu. \n \n \n > Bildirim Adresi \n bldAdr \n AN1..1024 \n K \n Ayrık güçlü kimlik doğrulama için zorunlu. \n \n \n > HHS Yönlenme Adresi \n hhsYonAdr \n AN1..1024 \n K \n GKD doğrulama bilgilerinin girilebilmesi için uygulamadan açılacak yönlendirme sayfasının adresi \n \n \n > Yetkilendirme Tamamlanma Zamanı \n yetTmmZmn \n ISODateTime \n Z \n Yetkilendirme akışının tamamlanması gereken son zamanı gösterir.   Rıza durumu Yetkilendirildi statüsüne geçene kadarki süredir. \n \n \n Emir Bilgileri \n emrBlg \n Kompleks: EmirBilgileri \n Z \n \n \n \n > Ödeme Emri Numarası \n odmEmriNo \n AN1..128 \n Z \n Ödeme Emri nesnesinin UID'sidir. OdemeEmrine İlişkin sorgular bu ID üzerinden yapılır. \n \n \n > Ödeme Emri Zaman \n odmEmriZmn \n ISODateTime \n Z \n Ödeme emrinin FAST, PÖS, havale gibi gerçekleştirileceği ilgili ödeme sistemine iletilme tarihi. \n \n \n Ödeme Başlatma \n odmBsltm \n Kompleks: OdemeBaslatma \n Z \n \n \n \n > Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n >> Kimlik Türü \n kmlkTur \n AN1 \n Z \n TR.OHVPS.DataCode.KimlikTur  sıralı veri türü değerlerinden birini alır. \n \n \n >> Kimlik Verisi \n kmlkVrs \n AN1..30 \n Z \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır. TR.OHVPS.DataCode.KimlikTur  değerine göre uzunluk ve formatı değişir. \n \n \n >> Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür. TR.OHVPS.DataCode.KurumKimlikTur  sıralı veri türü değerlerinden birini alır. \n \n \n >> Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.   TR.OHVPS.DataCode.KurumKimlikTur  değerine göre uzunluk ve formatı değişir. \n \n \n >> Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur  sıralı veri türü değerlerinden birini alır  (B: Bireysel, K:Kurumsal) \n \n \n > İşlem Tutarı \n islTtr \n Kompleks:Tutar \n Z \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para Birimi.  Karekod akışında, FAST Karekod Veri Organizasyonundaki  53: (Para Birimi)  alanında tanımlı Para Birimi verisi kullanılır. \n \n \n >> Tutar \n ttr \n N1..18 \n Z \n ÖBHS'nin ön yüzde kullanıcıdan teyit aldığı tutar.   Karekod akışında, FAST Karekod Veri Organizasyonundaki  54: (Tutar)  alanında tanımlı Tutar verisi kullanılır. Örneğin 1,20 TRY için tutar alanında “120” değeri iletilir. \n \n \n > Gönderen \n gon \n Kompleks:Hesap \n Z \n \n \n \n >> Unvan \n unv \n AN3..140 \n Z \n Gönderen kişinin ad soyad ya da ticari unvan bilgisi. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n K \n ÖBHS tarafından iletilip doğrulanan veya HHS ekranında seçilen Gönderen Hesap Numarası dönülür. \n \n \n >> Hesap Referansı \n hspRef \n AN5..40 \n K \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid)  YÖS bazında farklılaşması gerekmez. ÖBHS’nin aynı zamanda HBHS olduğu durumda müşteri rızası tesis edilmiş bir hesabın referansı üzerinden de ödeme başaltılabilir. GKD sonrası HHS ekranında seçilen Hesap Referansı POST işleminin yanıtında dönülemez ancak isteğe bağlı GET sorgusu ile dönülebilir. Hesap Numarası kullanılıyorsa Hesap Referansı kullanılmayabilir. \n \n \n > Alıcı \n alc \n Kompleks:Hesap \n Z \n \n \n \n >> Unvan \n unv \n AN3..140 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen adres kaydı yaptırmış olan alıcının maskeli ad-soyadı veya maskeli ticari unvan bilgisidir. Kolas’tan dönen “account owner” alanı kullanılmalıdır. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen unvan bilgisidir. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n Z \n Alıcının Hesap Numarası alanıdır (IBAN). Kolay Adres  sorgusunda dönülen adres kaydı yaptırmış olan alıcının maskeli IBAN bilgisidir. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen IBAN bilgisidir. Karekod akışında, FAST Karekod Veri Organizasyonundaki 30-01: alanında tanımlı İş Yeri IBAN verisi kullanılır. \n \n \n >> Kolay Adres \n kolas \n Kompleks:Kolas \n K \n \n \n \n >>> Kolas Türü \n kolasTur \n AN1 \n Z \n Müşterinin sorgulamak istediği Kolay Adres Tipi değeridir.  TR.OHVPS.DataCode.KolasTur  sıralı veri türü değerlerinden birini alır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n \n \n >>> Kolas Değeri \n kolasDgr \n AN7..50 \n Z \n Müşterinin eklediği, HHS (FAST katılımcısı) tarafından doğrulanmış Kolay Adres değeridir. Alabileceği değerler BKM “Kolay Adresleme Sistemi Uygulama Kuralları” belgesinde tanımlıdır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n \n \n >>> Kolas Referans Numarası \n kolasRefNo \n N12 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı KOLAS tarafından ilgili sorguya özel olarak üretilmiş referans numarasıdır. \n \n \n >>> Kolas Hesap Türü \n kolasHspTur \n AN1 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı hesap türü bilgisidir:   TR.OHVPS.DataCode.KolasHspTur  sıralı veri değerlerinden birini alır. \n \n \n > Karekod \n kkod \n Kompleks:Karekod \n K \n \n \n \n >> Akış Türü \n aksTur \n AN2 \n Z \n Karekod Akış Türü Karekod ödemesinin hangi akışla gerçekleştirildiğini gösterir.  Kolay Adresi Sistemi ile birlikte kullanılmaz.  01: FAST katılımcısından dinamik doğrulama hizmeti alınan işyeri ödemesi  02: FAST katılımcısından statik doğrulama hizmeti alınan işyeri ödemesi 03: Kişiden kişiye ödemeler \n \n \n >> Referansı \n kkodRef \n AN1..12 \n K \n Karekod referans numarasını gösterir.  Okunan karekodda referans değeri varsa kullanılması zorunludur. Kolay Adresi Sistemi ile birlikte kullanılmaz. \n \n \n >> Üretici Kodu \n kkodUrtcKod \n AN4 \n Z \n Karekod üreticisinin kodu.  Ödeme Hizmeti Sağlayıcıları ve TCMB tarafından uygun görülen ödeme sistemi işleticisi TR Karekod üretebilmek için BKM’ye kayıt başvurusu yaparak karekod üretici kodu alabileceklerdir. Bankalar EFT kodlarını kullanacak olup ayrıca kayıt yaptırmalarına gerek bulunmamaktadır. 4 haneden kısa değerlerin sol tarafı ’0’ karakteri ile tamamlanmalıdır. \n \n \n > Ödeme Ayrıntıları \n odmAyr \n Kompleks: OdemeAyrintilari \n Z \n \n \n \n >> Ödeme Kaynağı \n odmKynk \n AN1 \n Z \n Ödemenin başlatıldığı kaynağı belirtir.  TR.OHVPS.DataCode.OdemeKaynak  sıralı veri değerlerinden birini alır. \n \n \n >> Ödeme Durumu \n odmDrm \n AN2 \n Z \n TR.OHVPS.DataCode.OdemeDurumu  sıralı veri değerlerinden birini alır. \n \n \n >> Ödeme Amacı \n odmAmc \n AN2 \n Z \n TR.OHVPS.DataCode.OdemeAmaci  sıralı veri değerlerinden birini alır. \n \n \n >> Referans Bilgisi \n refBlg \n AN1..140 \n K \n Ödemeye özel  Referans Bilgisi  alanıdır. Karekod işlemi değil ise zorunludur.  -\tKişiden kişiye fon aktarımlarda: Gün içerisinde ÖHK için biricik olarak oluşturan referans bilgisi  -\tE-ticaret işlemlerinde sipariş/takip numarası/müşteri/abone numarası  -\tKarekod akışında, FAST Karekod Veri Organizasyonundaki  -\t62-01: alanında tanımlı Fatura Numarası   -\t62-06: alanında tanımlı Müşteri Numarası   verilerinden biri kullanılır. \n \n \n >> Açıklama \n odmAcklm \n AN1..50 \n İ \n ÖBHS’nin ÖHK’dan aldığı ya da kendisinin atadığı işlem açıklaması bilgisi. \n \n \n >> ÖHK Mesaj Alanı \n ohkMsj \n AN1..200 \n İ \n HHS’nin ÖHK’ya göstermek üzere ilettiği mesaj. \n \n \n >> Ödeme Sistemi \n odmStm \n AN1 \n Z \n TR.OHVPS.DataCode.OdemeSistemi  sıralı veri değerlerinden birini alır. \n \n \n >> Ödeme Sistem Numarası \n odmStmNo \n AN10..50 \n K \n Ödeme başarılı başlatıldıysa, ödemenin başlatıldığı sistemdeki referans numarası. FAST işlemleri için MesRefBlg değeri atanır. Ödeme Hizmeti kullancısına işlemin takibi için gösterilebilir. \n \n \n >> Beklenen Ödeme Zamanı \n bekOdmZmn \n ISODateTime \n K \n İşlemin yönlendirildiği ödeme sistemi PÖS ise ve PÖS işlem saatleri dışında ise işlemin yapılabileceği ilk zaman bilgisi \n \n \n > ÖBHS Masraf Tutarı \n obhsMsrfTtr \n Kompleks:Tutar \n İ \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para birimi (TRY, USD, EUR vb.). \n \n \n >> Tutar \n ttr \n N1..18 \n Z \n ÖBHS’nin işlemle ilgili ÖHK’nın borçlandırılmasını belirttiği masraf tutarı. İşlem Tutarı ile aynı para biriminde olmalıdır.Örneğin 1,20 TRY için tutar alanında “120” değeri iletilir. \n \n \n > HHS Masraf Tutarı \n hhsMsrfTtr \n Kompleks:Tutar \n İ \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para birimi (TRY, USD, EUR vb.). \n \n \n >> Tutar \n ttr \n N1..18 \n Z \n HHS’nin işlemle ilgili ÖHK’nın borçlandırılmasını belirttiği masraf tutarı. İşlem Tutarı ile aynı para biriminde olmalıdır. Örneğin 1,20 TRY için tutar alanında “120” değeri iletilir. \n \n \n İşyeri Ödeme Bilgileri \n isyOdmBlg \n Kompleks:IsyeriOdemeBilgileri \n İ \n İşyeri ödemelerinde kullanılabilecek alanlardır. Karekodlu işyeri ödemesi akışında bu alanlar dolu geldiği için isteğe bağlı olarak gönderilebilir. isyOdmBlg alanlarının en az birinin dolu olması durumunda yanıtta yer alır. \n \n \n > İşyeri Kategori Kodu \n isyKtgKod \n AN4 \n İ \n İşlemin, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). Ödeme Amacı = ‘06’ ya da ‘04’ olan ödeme işlemleri için doldurulabilir. \n \n \n > Alt İşyeri Kategori Kodu \n altIsyKtgKod \n AN4 \n İ \n İşlem alt işyerinden gerçekleştiriliyorsa, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). \n \n \n >Üye İş Yeri Tekil Kimlik \n genelUyeIsyeriNo \n AN8 \n İ \n İşyeri kayıt sisteminde kayıtlı İşyeri için BKM tarafından üretilmiş olan genel işyeri numarasıdır (GlobalMerchantId) 8 haneden küçük gönderiminde başa ‘0’ eklenmelidir. Örnek değer ‘01630618’ \n 6.6.\tADIM 3.1- Ödeme Emri Sorgusu (İsteğe bağlı) \n   \n Şekil 9: Ödeme Emri Sorgusu \n GET /odeme-emri/{odemeEmriNo} \n ÖBHS, bu erişim adresi aracılığıyla ödeme emrini sorgulayabilir. \n BAŞARILI YANIT: \n GET /odeme-emri/{odemeEmriNo} yanıtının (RESPONSE) gövdesinde (BODY)  “OdemeEmri” nesnesi bulunur. İstek başarıyla sonuçlanırsa HHS kaynak sunucusunda Tablo-10’da yer alan parametreleri içeren “OdemeEmri” nesnesi döner. \n 6.7\tHealthcheck API \n GET /health \n HHS’lerin sunacağı bu servis, düzenli olarak BKM tarafından çağırılarak servislerin ayakta olup olmadıklarının kontrolünün sağlanması planlanmaktadır \n Başarılı yanıtta Http 200 kodu dönülmelidir. \n Başarılı Yanıt: \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n \n \n \n \n status \n status \n AN2..20 \n Z \n “UP”, “DOWN” değerlerini alabilir \n \n \n \n"},{title:"4. Rıza Durumları",frontmatter:{},regularPath:"/v1.0.1/contents/riza-durumlari.html",relativePath:"v1.0.1/contents/riza-durumlari.md",key:"v-7301a6d1",path:"/v1.0.1/contents/riza-durumlari.html",headers:[{level:2,title:"4.1.\tHesap Bilgisi Hizmeti Rıza durum değişiklikleri",slug:"_4-1-hesap-bilgisi-hizmeti-rıza-durum-degisiklikleri"},{level:2,title:"4.2.\tÖdeme Bilgisi Hizmeti Rıza Durum Değişiklikleri",slug:"_4-2-odeme-bilgisi-hizmeti-rıza-durum-degisiklikleri"}],content:" 4. Rıza Durumları \n ÖHK, Ödeme Emri Başlatma Hizmetine ya da Hesap Bilgisi Hizmetine müşteri rızasının tesisi ile başlar. ÖHK’nın YÖS uygulaması üzerinden yaptığı işlemler neticesinde rıza durumları değişebilir.\nRıza’nın alabileceği durum kodları şu şekilde belirlenmiştir. \n B: Yetki Bekleniyor  – İlk rıza talebinde \n Y: Yetkilendirildi  – Başarılı GKD sonrası yetKod üretildiğinde \n K: Yetki Kullanıldı  – Erişim Belirteci alındığında \n E: Yetki ödeme emrine dönüştü  – ÖBHS için \n S: Yetki Sonlandırıldı \n    HBHS için : Erişimin Geçerli Olduğu Son Tarih geldiğinde \n    ÖBHS için : Yenileme belirteci Son Tarihi geldiğinde \n I :Yetki İptal \nRıza iptal durumu ise gerek raporlama gerekse müşteri deneyimi perspektifinden doğru   bilgilendirmeler yapılabilmesi açısından aşağıdaki gibi detay kodları ile zenginleştirilmiştir: \n \n Rıza İptal Detay Kodu: \n \n \n \n ‘01’ :\tYeni Rıza Talebi ile İptal \n ‘02’ :\tKullanıcı İsteği ile HHS üzerinden İptal \n ‘03’ :\tKullanıcı İsteği ile YÖS üzerinden İptal \n ‘04’ :\tSüre Aşımı : Yetki Bekleniyor \n ‘05’ :\tSüre Aşımı : Yetkilendirildi \n ‘06’ :\tSüre Aşımı : Yetki Ödemeye Dönüşmedi \n ‘07’ :\tGKD iptali : Aynı rıza no ile mükerrer çağrımı \n ‘08’ :\tGKD iptali : Rızano ile TCKN uyuşmaması \n ‘09’ :\tGKD iptali : Uygun ürünü bulunmuyor \n ‘10’ :\tGKD iptali : HHS Açık Bankacılık kanalı işleme kapalı \n ’11’ :\tGKD iptali : Hesap Yetki Sorunu \n ‘12’ :\tGKD iptali : ÖHK HHS müşterisi değil \n ‘13’ :\tGKD iptali : ÖHK HHS kontrollerini aşamadı \n ‘14’ :\tGKD iptali : Başarısız GKD \n ‘15’ :\tGKD iptali : ÖHK isteği ile GKD’den vazgeçildi \n ‘16’ :\tGKD iptali : Diğer \n \n \n 4.1 ve 4.2 bölümlerinde detaylandırılan rıza durum değişikliklerinde rıza iptal detay kodları kullanılmıştır. \n Örneğin B⇨ I/01 denildiğinde “Yetki Bekleniyor” rıza durumundan “Yetki İptal” rıza durumuna Rıza İptal Detay Kodu da ‘01’ yani ‘Yeni Rıza Talebi ile İptal’ olarak güncellenmelidir ifade edilmiştir. \n ÖHK verdiği rıza sırasında seçtiği hesaplarından biri kapatılırsa, diğer hesaplara ait bilgileri görmeye devam eder. Ancak ÖHK’nın hesabına ait bilgilerinin YÖS'e iletilmesini istemediği durumda, rızasını tamamen iptal ederek yeni hesap listesi ile yeni rıza vermesi gerekmektedir. Yani hesap kapanması nedeniyle rıza geçerliliğini yitirmez. ÖHK'nın proaktif olarak bu hesabı rızadan çıkarması durumunda rıza iptali olur. \n Rıza iptal edilmediği ve geçerli olduğu sürece kapalı hesaplar için diğer çevrimiçi kanallarda uygulanan yöntem izlenmelidir. Diğer çevrimiçi kanallarda kapalı hesaplara ilişkin bilgi dönülmüyor ise ÖHVPS'den de dönüş yapılmaz. ÖHK’nın rıza onayı verdiği açık hesaplarının tümü HHS tarafında kapatıldığı durumda, yine aynı şekilde HHS çevrimiçi kanallarında koyduğu kurallara göre bu hesaplarının YÖS uygulamasında gösterilmesine karar verir. \n Hesap kapama ve ticari kullanıcıların hesaplar üzerindeki yetki değişiklikleri HHS'nin iç sistemleri tarafından yapılan kontrollerle yönetilir. Buradaki değişiklikler ile HHS sistemsel olarak rıza iptali gerçekleştiremez. ÖHK izni ve onayı dahilinde rıza iptal gerçekleştirilmesi gerekmektedir. \n 4.1.\tHesap Bilgisi Hizmeti Rıza durum değişiklikleri \n Kural : Bir ÖHK'nın, bir YÖS için, bir HHS'de Y, K, B rıza durumlarında tek bir rızası olabilir.\nBir ÖHK hem kişisel olarak hem de bir kurumun kullanıcısı olabilir. Bu durumda kurum ve kişisel rıza aynı anda mevcut olabilmelidir. Rıza nesneleri, HHS tarafından uygun şekilde yönetilmelidir. \n \n \n Hesap Bilgisi Rızası isteği HHS’ye iletilir. \na.\tHHS ÖHK'ya ait içeride rıza var mı kontrol eder. Eğer yoksa  Yetki Bekleniyor - B  rıza durumu ile yeni rıza oluşturur. \nb.\tEğer içeride rıza varsa \n     i. Rıza durumu Yetki Bekleniyor - B ise; \n        HHS, sistemde Yetki Bekleniyor - B rıza durumuna sahip kayıt olduğu için, öncelikle eski kaydı Yetki İptal - I durumuna getirir.  Rıza İptal Detay Kodu “Yeni Rıza Talebi ile iptal” olmalıdır.  B ⇨ I / 01  Sonrasında,  Yetki Bekleniyor - B  rıza durumu ile yeni rıza oluşturur. \n      ii. Rıza durumu Yetkilendirildi - Y veya Yetki Kullanıldı - K ise; \n    ÖHK'nın halihazırda verilmiş bir rızası vardır. HHS, önce mevcut rızanın iptalinin yapılması gerektiğine dair hata döner.  TR.OHVPS.Resource.ConsentMismatch \n      iii.\tRıza durumu Yetki Sonlandırıldı - S  ise Yetki Bekleniyor - B durumunda yeni rıza no oluşturur. \n      iv.\tRıza durumu Yetki İptal - I ise  Yetki Bekleniyor - B  durumunda yeni rıza no oluşturur. \n \n \n GKD başarılı bir şekilde tamamlandığında Rıza durumu Yetki Bekleniyor’dan Yetkilendirildi’ye güncellenir.  B ⇨ Y \n \n \n GKD'nin gerçekleşmediği durumlardan HHS haberdar olmayabilir. \n ÖHK GKD yapmadan ayrılmış olabilir. (ÖR: Tarayıcıyı kapatmış olabilir) Rıza Yetki Bekleniyor - B rıza durumunda kalır.  5 dakika içerisinde sistem tarafından Yetki Bekleniyor - B rıza durumundaki kayıtlar Yetki İptal  : Yetki Bekleniyor Süre Aşımı olarak güncellenir.   B ⇨ I / 04  Bkz. 9. Madde. \n \n \n GKD'nin gerçekleşmediği durumlardan HHS haberdardır. HHS yonlendirme adresinin query parametrelerine  rizaIptDtyKod  değerini ekleyerek bu durumu YÖS’e bildirmek zorundadır. \n \n \n Rıza durumunun  “Yetkilendirildi\" , “Yetki Kullanıldı” olduğu durum.  Yetki Bekleniyor ⇨ Yetki İptal   B ⇨  I / 07 \n \n \n Rızano ile kimlik bilgileri uyuşmazlığı.  Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 08 \n \n \n ÖHK'nın HHS'de ilgili ürününün olmadığı durum (hesap/kart) Yetki Bekleniyor ⇨ Yetki İptal   B ⇨I / 09 \n \n \n Açık bankacılık kanalınız işleme kapalıdır.Yetki Bekleniyor ⇨ Yetki İptal  B ⇨I / 10 \n \n \n Kullanıcının HHS'deki hesaplarında yeterli yetkisinin olmama durumu  Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 11 \n \n \n ÖHK'nın ilgili HHS müşterisi olmadığı durum Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 12 \n \n \n HHS’nin ÖHK için yaptığı kontrollerin başarısız olduğu durum Yetki Bekleniyor ⇨ Yetki İptal   B ⇨ I / 13 \n \n \n ÖHK kendini doğrulayamamış olabilir. Başarısız GKD Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 14 \n \n \n ÖHK isteği ile GKD’den vazgeçildiği durum Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 15 \n \n \n Diğer Yetki Bekleniyor ⇨  Yetki İptal   B ⇨  I / 16 \n \n \n \n \n \n \n ÖHK, hesaplarında/izin türlerinde/Erişimin Geçerli Olduğu Son Tarih bilgilerinden bir ya da birden fazlasında güncelleme yapmak için YÖS ekranına girer. \n \n \n     a.\tYÖS önce Rıza İptal API'sini çağırır. Sonra yeni değerlerle yeni bir rıza isteğinde bulunur. Tekrar GKD gerekir. \n     b.\tYÖS rıza iptal yapmadan yeni rıza alma akışına başlarsa 1.b akışı devreye girer. \n     c.\tRıza güncelleme ilerleyen sürümlerde ele alınacaktır. \n \n \n Erişim Belirteci API \n a. Erişim Belirteci'nin yetkilendirme kodu ile çağrımı yapıldığında; \n      i. Rıza durumu Yetki İptal - I ya da Yetki Sonlandırıldı - S ise   TR.OHVPS.Resource.ConsentRevoked  hatası dönülmelidir. \n     ii. Rıza durumu Yetki Bekleniyor - B ya da Yetki Kullanıldı - K  ise  TR.OHVPS.Resource.ConsentMismatch  hatası dönülmelidir. \n     iii. Rıza durumu Yetkilendirildi - Y olduğunda erişim belirteci tahsis edilir.\nErişim belirteci alındığında rıza durumu K: Yetki Kullanıldı yapılır.  Y ⇨K \n b. Yenileme belirteci karşılığı erişim belirteci alınması sırasında; yenileme belirteci kontrolü ve sonrasında rıza kontrolü yapılmalıdır. \n      i. Öncelikle Yenileme Belirteci Geçerlik Süresi kontrolü yapılmalıdır. Geçerli bir Yenileme Belirteci olmadığı görülür ise  TR.OHVPS.Connection.InvalidToken  hatası dönülmelidir. \n     ii. Rıza durumu Yetki İptal - I  ya da Yetki Sonlandırıldı - S ise  TR.OHVPS.Resource.ConsentRevoked  hatası dönülmelidir. \n     iii. Rıza durumu Yetki Bekleniyor - B ya da Yetkilendirildi - Y  ise  TR.OHVPS.Resource.ConsentMismatch  hatası dönülmelidir. \n     iv. Rıza durumu Yetki Kullanıldı - K olduğunda, yenileme belirteci karşılığı erişim belirteci tahsis edilir. \n \n \n Sorgulama: HBHS, rıza alma akışına başlamadan önce, daha önce oluşturulmuş bir hesap bilgisi-rizasi kaynağının durumunu, isteğe bağlı olarak alabilir. Rıza numarası ile sorgulama yapılır. \n \n \n Hesap Bilgisi Rızasının İptali: HBHS üzerinden ya da HHS üzerinden yapılan rıza iptallerinde Rıza durumu  Yetki İptal - I olarak güncellenir. Rıza numarası ile iptal sağlanır. \n a. HHS üzerinden rıza iptali yapmış olabilir.  Rıza durumu sorgulanır. \n Rıza numarası Yetki Bekleniyor - B ve Yetkilendirildi - Y ve Yetki Kullanıldı - K durumlarında ise Yetki İptal durumuna getirilir. Rıza gnclzmn timestamp ile güncellenir.\nHHS, Rıza iptalinde aynı zamanda erişim belirtecini de invalid hale getirmelidir. \n B ⇨ I / 02 \n Y ⇨ I / 02 \n K ⇨ I / 02 \n b.\tYÖS üzerinden yapılacak iptal işleminde yine Y ve B ve K rıza durumlarında ise iptal edilebilir. \n B ⇨ I / 03 \n Y ⇨ I / 03 \n K ⇨ I / 03 \n Rıza durumu Yetki Sonlandırıldı - S  ise iptal gerçekleşmez. “Rıza durumunuz iptal etmeye uygun değildir.” hatası ÖHK'ya yansıtılır.  TR.OHVPS.Resource.ConsentMismatch \n \n \n ÖHK’nın verdiği rıza süresi dolmuş olabilir.\nErişimin Geçerli Olduğu Son Tarih geldiğinde Rıza durumu Yetki Kullanıldı’dan Yetki Sonlandırıldı durumuna çekilmelidir.   K ⇨ S \n \n \n Hesaplar, Bakiye ve İşlemler servislerinde erişim belirteci kontrolü ve sonrasında rıza kontrolü yapılmalıdır.\nGeçerli bir erişim belirteci yok ise  TR.OHVPS.Connection.InvalidToken  hatası dönülmelidir. \n YÖS'ün; Rıza İptal - I ya da Yetki Sonlandırıldı - S rıza durumlarında Hesaplar, Bakiye ve İşlemler servislerini çağırmaması beklenir. HHS'nin bu rıza durumları ile yapılmış çağrılar olduğunda  TR.OHVPS.Resource.ConsentRevoked  hatasını dönmesi gereklidir. \n Rıza durumu Yetki Kullanıldı - K dışında ise  TR.OHVPS.Resource.ConsentMismatch  hatası verilmelidir. \n Rıza durumu Yetki Kullanıldı - K ise servis akışlarına devam edilir. \n Rıza sorgulama API'sinde ilgili rıza kaydı bulunamaz veya sorgulayan kurumun yetkisi yoksa (örn : YÖS’ün farklı bir YÖS’e ait rıza noyu sorgulaması) \n TR.OHVPS.Resource.NotFound hatası  verilmelidir. \n \n \n HHS/YÖS tarafında rıza bilgileri belirli aralıklarla sistem kullanıcısı tarafından taranır:\n5 dakikadan uzun süredir “Yetki Bekleniyor” durumunda kalan kayıtların durumları güncellenir.\nYetki Bekleniyor  ⇨ Rıza İptal  / Süre Aşımı : Yetki Bekleniyor  B ⇨ I / 04 \n 5 dakikadan uzun süredir “Yetkilendirildi” durumunda kalan kayıtlar güncellenir.\nYetkilendirildi     ⇨ Rıza İptal / Süre Aşımı: Yetkilendirildi  B ⇨ I / 05 \nYukarıda bahsedilen, YÖS Süre Aşımı nedeniyle rıza iptal durum güncellemelerini yapmadan önce HHS’yi sorgulayarak rıza durumunu öğrenmeli ve süre aşımı dışında bir kodu varsa aynı kodla kendi sistemini güncellemelidir. \nErişimin Geçerli Olduğu Son Tarih geldiğinde rıza durumu Yetki Kullanıldı’dan Yetki Sonlandırıldı’ya güncellenir.  K ⇨ S \n 4.2.\tÖdeme Bilgisi Hizmeti Rıza Durum Değişiklikleri \n Kural : Bir ÖHK'nın bir YÖS için bir HHS'de istediği kadar rızası olabilir. \n Kurum ve kişisel rıza aynı anda mevcut olabilmelidir. Rıza nesneleri, HHS tarafından uygun şekilde yönetilmelidir. \n \n \n Ödeme Emri Rızası isteği HHS’ye iletilir. İçeride rıza olup olmamasına bakılmaksızın  Yetki Bekleniyor - B  rıza durumu ile yeni rıza no oluşturur. \n \n \n GKD başarılı bir şekilde tamamlandığında rıza durumu Yetki Bekleniyor’dan Yetkilendirildi’ye güncellenir.   B ⇨ Y \n \n \n GKD'nin gerçekleşmediği durumlardan HHS haberdar olmayabilir. \n ÖHK GKD yapmadan ayrılmış olabilir. (ÖR: Browserı kapatmış olabilir)\nRıza durumu Yetki Bekleniyor'dur. 5 dakika içerisinde sistem tarafından Yetki Bekleniyor - B durumundaki kayıtlar Rıza İptal : Yetki Bekleniyor Süre Aşımı olarak güncellenir. Bkz. 8. Madde. \n \n \n GKD'nin gerçekleşmediği durumlardan HHS haberdardır. HHS yonlendirme adresinin query parametrelerine rizaIptDtyKod değerini ekleyerek bu durumu YÖS’e bildirmek zorundadır. \n \n \n Rıza durumunun  “Yetkilendirildi\" , “Yetki Kullanıldı” olduğu durum.  Yetki Bekleniyor ⇨ Yetki İptal   B ⇨  I / 07 \n \n \n Rızano ile kimlik bilgileri uyuşmazlığı.  Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 08 \n \n \n ÖHK'nın HHS'de ilgili ürününün olmadığı durum (hesap/kart) Yetki Bekleniyor ⇨ Yetki İptal   B ⇨I / 09 \n \n \n Açık bankacılık kanalınız işleme kapalıdır.Yetki Bekleniyor ⇨ Yetki İptal  B ⇨I / 10 \n \n \n Kullanıcının HHS'deki hesaplarında yeterli yetkisinin olmama durumu  Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 11 \n \n \n ÖHK'nın ilgili HHS müşterisi olmadığı durum Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 12 \n \n \n HHS’nin ÖHK için yaptığı kontrollerin başarısız olduğu durum Yetki Bekleniyor ⇨ Yetki İptal   B ⇨ I / 13 \n \n \n ÖHK, kendini doğrulayamamış olabilir. Başarısız GKD Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 14 \n \n \n ÖHK isteği ile GKD’den vazgeçildiği durum Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 15 \n \n \n Diğer Yetki Bekleniyor ⇨  Yetki İptal   B ⇨  I / 16 \n \n \n \n \n \n \n GKD muafiyeti olduğunda YÖS HHS’den arka planda onay alır. Bu onay sırasında rıza durumu  Yetkilendirildi  yapılır.  B ⇨ Y \n \n \n Erişim Belirteci API \na. Erişim Belirteci'nin yetkilendirme kodu ile çağrımı yapıldığında; \n      i. Rıza durumu Yetki İptal - I  ya da Yetki Sonlandırıldı - S ise   TR.OHVPS.Resource.ConsentRevoked  hatası dönülmelidir. \n     ii. Rıza durumu Yetki Bekleniyor - B , Yetki Kullanıldı - K  ya da Yetki ödeme emrine dönüştü - E  ise  TR.OHVPS.Resource.ConsentMismatch  hatası dönülmelidir. \n     iii. Rıza durumu Yetkilendirildi - Y olduğunda erişim belirteci tahsis edilir.\nErişim belirteci alındığında rıza durumu K: Yetki Kullanıldı yapılır.  Y ⇨K \n b. Yenileme belirteci karşılığı erişim belirteci alınması sırasında; yenileme belirteci kontrolü ve sonrasında rıza kontrolü yapılmalıdır. \n      i. Öncelikle Yenileme Belirteci Geçerlik Süresi kontrolü yapılmalıdır. Geçerli bir Yenileme Belirteci olmadığı görülür ise  TR.OHVPS.Connection.InvalidToken  hatası dönülmelidir. \n     ii. Rıza durumu Yetki İptal - I  ya da Yetki Sonlandırıldı - S ise  TR.OHVPS.Resource.ConsentRevoked  hatası dönülmelidir. \n     iii. Rıza durumu Yetki Bekleniyor - B ya da Yetkilendirildi - Y  ise  TR.OHVPS.Resource.ConsentMismatch  hatası dönülmelidir. \n     iv. Rıza durumu Yetki Kullanıldı - K veya Yetki Ödeme Emrine Dönüştü – E olduğunda, yenileme belirteci karşılığı erişim belirteci tahsis edilir. \n \n \n Ödeme Başlatma API önce erişim belirteci ve sonrasında rıza kontolü yapılarak gerçekleştirilmelidir \n \n Öncelikle Erişim Belirteci kontrolü yapılmalıdır. Geçerli bir Erişim Belirteci olmadığı görülür ise  TR.OHVPS.Connection.InvalidToken  hatası dönülmelidir. \n Rıza durumu Yetki İptal - I  ya da Yetki Sonlandırıldı - S ise  TR.OHVPS.Resource.ConsentRevoked  hatası dönülmelidir. \n Rıza durumu Yetki Bekleniyor - B , Yetkilendirildi - Y, Yetki Ödeme Emrine Dönüştü - E  ise  TR.OHVPS.Resource.ConsentMismatch  hatası dönülmelidir. \n Rıza durumu Yetki Kullanıldı - K olduğunda ödeme emri gerçekleştirilir.  Rıza durumu Yetki Kullanıldı - K'dan Yetki Ödeme Emrine Dönüştü – E yapılmalıdır.   K ⇨E \n \n \n \n Sorgulama: GKD işleminin başarıyla tamamlanıp Ödeme Emri Rızasının yetkilendirilmesi esnasında, gönderen hesap seçiminin HHS ekranında yapıldığı durumlarda, ödeme emri isteğinde gönderen hesap bilgileri alanının zorunlu olması nedeniyle, ödemeEmriRizasi nesnesi sorgulanarak gönderen hesap bilgileri (hesap numarası ve/veya hesap referansı) alınmalıdır.\nRıza sorgulama, Ödeme Emri Sorgulama API'lerinde ilgili rıza kaydı bulunamaz veya sorgulayan kurumun yetkisi yoksa (örn : YÖS’ün farklı bir YÖS’e ait rıza noyu sorgulaması) \n TR.OHVPS.Resource.NotFound  hatası verilmelidir. \n \n \n Ödeme Emri Rızasının İptali bulunmamaktadır. \n \n \n HHS/YÖS tarafında rıza bilgileri belirli aralıklarla sistem kullanıcısı tarafından taranır:\n5 dakikadan uzun süredir Yetki Bekleniyor'da kalan kayıtların durumları güncellenir.\nYetki Bekleniyor ⇨ Rıza İptal / Süre Aşımı : Yetki Bekleniyor  B ⇨ I / 04 \n 5 dakikadan uzun süredir Yetkilendirildi'de kalan kayıtlar durumları güncellenir.\nYetkilendirildi     ⇨ Rıza İptal / Süre Aşımı : Yetkilendirildi  B ⇨ I / 05 \n 5 dakikadan uzun süredir Yetki kullanıldı'da kalan kayıtlar durumları güncellenir.\nYetki kullanıldı ⇨ Rıza İptal / Süre Aşımı : Yetki Ödemeye Dönüşmedi  B ⇨ I / 06 \n Yenileme belirteci Son Tarih geldiğinde rıza durumu Yetki ödeme emrine dönüştü’den Yetki Sonlandırıldı'ya güncellenir. \n E ⇨ S \n \n \n GKD muafiyeti sadece ödeme başlatma servislerinde bulunmaktadır. \n \n \n"},{frontmatter:{},regularPath:"/v1.0.1/contents/tanim-ve-kisitlamalar.html",relativePath:"v1.0.1/contents/tanim-ve-kisitlamalar.md",key:"v-1178fa5d",path:"/v1.0.1/contents/tanim-ve-kisitlamalar.html",content:"  1.\tTanım ve Kısaltmalar   \n Tablo 1: Tanım ve Kısaltmalar \n \n \n \n Kısaltma \n Tanım \n Açıklama \n İngilizce Açıklama \n İngilizce Kısaltma \n \n \n \n \n ÇS \n Çerçeve Sözleşme \n Ödeme hizmeti sağlayıcısı ile müşteri arasında tekil veya süreklilik arz eden ödeme işlemlerinin yürütülmesine ve mümkün olan durumlarda ödeme hesabının açılmasına ilişkin usul ve esasları belirleyen sözleşme \n \n \n \n \n EPK \n Elektronik Para Kuruluşu \n Kanun kapsamında elektronik para ihraç etme yetkisi verilen tüzel kişi \n Electronic Money Institution \n EMI \n \n \n FAST \n Fonların Anlık ve Sürekli Transferi \n TCMB tarafından işletilen Fonların Anlık ve Sürekli Transferi Sistemi \n \n \n \n \n FAST TR-Karekod \n FAST-TR Karekod Teknik İlke ve Kurallar Rehberi \n TR Karekod’un FAST Sistemi aracılığıyla gerçekleşecek işlemlerde kullanılmasına ilişkin detaylı teknik ilke ve kurallarını içeren doküman \n \n \n \n \n GKD \n Güçlü Kimlik Doğrulama \n Kimlik doğrulamada kullanılan ve bir bileşenin ele geçirilmesinin diğer bileşenin güvenliğini tehlikeye atmayacağı en az iki bileşenden oluşan, bu iki bileşenin de müşterinin bildiği, sahip olduğu veya biyometrik bir karakteristiği olan bileşen sınıflarından farklı ikisine ait olacak şekilde seçildiği yöntem \n Strong Customer Authentication \n SCA \n \n \n İB \n İşlem Bilgisi \n Gerçekleştirilen işleme ilişkin işlem zamanını, işlemin niteliğini ve ödeme işlemi için ödeme emrinin masraf, komisyon ve ücretler de dahil hesabın borçlandırılacağı toplam tutarını ve ödemenin göndereni ile alıcısını veya toplu ödeme emrinin masraf, komisyon ve ücretler de dahil hesabın borçlandırılacağı toplam tutarını ve göndereni ile alıcılarını içeren bilgi \n \n \n \n \n İDK \n İşlem Doğrulama Kodu \n Kimlik doğrulama yöntemlerinden biriyle kendisini sisteme tanıtan bir müşterinin gerçekleştirmek istediği işleme özgü olmak ve belirli bir geçerlilik süresi içinde işlem onayında kullanılmak üzere oluşturulan, finansal sonuç doğrunan işlemlerde kişiye onay anında ilgili işlem bilgisi (İB) ile birlikte gösterilen, alıcı veya tutarın değişmesiyle geçersiz hale gelen bilgi \n Authentication Code \n AC \n \n \n KOLAS \n Kolay Adresleme Servisi \n Fon transferlerinde hesap numarası ile ad soyad yerine kullanılan ve belirli bir hesap ile eşleştirilmiş telefon numarası, e-posta adresi, T.C. Kimlik Numarası (TCKN), Vergi Kimlik Numarası (VKN), Yabancı Kimlik Numarası veya Pasaport Numarası gibi Kolay Adres bilgilerinin kaydedilmesini, güncellenmesini ve sorgulamasını sağlayan katman servis \n \n \n \n \n HBHS \n Hesap Bilgisi Hizmeti Sağlayıcısı \n Kanunun 12 inci maddesinin birinci fıkrasının (g) bendinde tanımlanan ödeme hizmetini (hesap bilgisi hizmetini) sunan tüzel kişi \n Account Information Service Provider \n AISP \n \n \n HHS \n Hesap Hizmeti Sağlayıcısı \n Nezdinde ödeme hesabı bulunan ödeme hizmeti sağlayıcısı \n Account Servicing Payment Service Provider \n ASPSP \n \n \n ÖBHS \n Ödeme Emri Başlatma Hizmeti Sağlayıcısı \n Kanunun 12 inci maddesinin birinci fıkrasının (f) bendinde tanımlanan ödeme hizmetini (ödeme emri başlatma hizmetini) sunan tüzel kişi \n Payment Initiation Service Provider \n PISP \n \n \n ÖDK \n Ödeme Kuruluşu \n Ödeme hizmeti sağlamak ve gerçekleştirmek için Kanun kapsamında yetkilendirilmiş tüzel kişi \n Payment Institution \n PI \n \n \n ÖH \n Ödeme Hesabı \n Ödeme hizmeti kullanıcısı adına açılan ve ödeme işleminin yürütülmesinde kullanılan hesap \n Payment Account \n PA \n \n \n ÖHK \n Ödeme Hizmeti Kullanıcısı (Müşteri) \n Gönderen, alıcı veya her ikisi sıfatıyla belirli bir ödeme hizmetinden faydalanan gerçek veya tüzel kişi \n Payment Service User \n PSU \n \n \n ÖHS \n Ödeme Hizmeti Sağlayıcısı \n 5411 sayılı Kanun kapsamındaki bankalar, EPK, ÖDK ve Posta ve Telgraf Teşkilatı Anonim Şirketi(PTT) \n Payment Service Provider \n PSP \n \n \n ÖHVPS \n Ödeme Hizmetleri Veri Paylaşım Servisleri \n Kanunun 12’nci maddesinin birinci fıkrasının (f) veya (g) bentlerinde yer alan ödeme hizmetlerinde kullanılan veri paylaşım servisleri \n \n \n \n \n PÖS \n Perakende Ödeme Sistemi \n TCMB tarafından işletilen, işlemlerin Türk Lirası üzerinden gerçekleştiği Müşteriler Arası Türk Lirası Aktarım Sistemi \n \n \n \n \n TR-Karekod \n TR-Karekod İlke ve Kuralları \n Ulusal karekod (TR Karekod) ilke ve kurallarının belirlendiği belge \n \n \n \n \n YÖS \n Yetkili Ödeme Hizmeti Sağlayıcısı \n Ödeme emri başlatma hizmeti ve/veya hesap bilgisi hizmeti sunan tüzel kişi \n Third Party Payment Service Providers \n TPP \n \n \n \n"},{title:"3. Temel Prensipler",frontmatter:{},regularPath:"/v1.0.1/contents/temel-prensipler.html",relativePath:"v1.0.1/contents/temel-prensipler.md",key:"v-432b5bd6",path:"/v1.0.1/contents/temel-prensipler.html",headers:[{level:2,title:"3.1 Genel",slug:"_3-1-genel"},{level:2,title:"3.2.\tİstem (Çağrı) ve Oturum",slug:"_3-2-istem-cagrı-ve-oturum"},{level:2,title:"3.3.\tRESTful API",slug:"_3-3-restful-api"},{level:2,title:"3.4.\tSürüm Yönetimi",slug:"_3-4-surum-yonetimi"},{level:2,title:"3.5.\tKaynak URI Yol Yapısı",slug:"_3-5-kaynak-uri-yol-yapısı"},{level:2,title:"3.6.\tKarakter Kodlama",slug:"_3-6-karakter-kodlama"},{level:2,title:"3.7.\tVeri Formatı",slug:"_3-7-veri-formatı"},{level:2,title:"3.8.\tİstemci Sertifika Yönetimi",slug:"_3-8-istemci-sertifika-yonetimi"},{level:2,title:"3.9.\tYetkilendirme Türleri",slug:"_3-9-yetkilendirme-turleri"},{level:2,title:"3.10. İstek/Cevap Mesajlarında Kullanılan Nesne Yapıları",slug:"_3-10-istek-cevap-mesajlarında-kullanılan-nesne-yapıları"},{level:2,title:"3.11. Sayfalandırma ve Filtreleme",slug:"_3-11-sayfalandırma-ve-filtreleme"},{level:2,title:"3.12. Mesaj İmzalama",slug:"_3-12-mesaj-imzalama"},{level:2,title:"3.13. Durum Kodu",slug:"_3-13-durum-kodu"},{level:2,title:"3.14. Gereksinimlerinin Sınıflandırılması",slug:"_3-14-gereksinimlerinin-sınıflandırılması"},{level:2,title:"3.15. İstek Başlığı",slug:"_3-15-istek-baslıgı"},{level:2,title:"3.16. Yanıt Başlığı",slug:"_3-16-yanıt-baslıgı"},{level:2,title:"3.17. Idempotency Kuralları",slug:"_3-17-idempotency-kuralları"},{level:2,title:"3.18. HTTP Durum Kodları",slug:"_3-18-http-durum-kodları"},{level:2,title:"3.19. Maskeleme Kuralları",slug:"_3-19-maskeleme-kuralları"},{level:2,title:"3.20. Fonksiyonel Olmayan Gereksinimler",slug:"_3-20-fonksiyonel-olmayan-gereksinimler"}],content:' 3. Temel Prensipler  \n Bu bölümde Ödeme Hizmetleri Veri Paylaşım Servisleri (Hesap Bilgisi Hizmeti, Ödeme Emri Başlatma Hizmeti) için tanımlanan temel prensipler açıklanmaktadır. \n 3.1 Genel \n \n \n HHS’ler Yönetmeliğin 59. maddesinin beşinci fıkrası ve Ödeme ve Elektronik Para Kuruluşlarının Bilgi Sistemleri ile Ödeme Hizmeti Sağlayıcılarının Ödeme Hizmetleri Alanındaki Veri Paylaşım Servislerine İlişkin Tebliğin (Tebliğ) 23. maddesinin birinci fıkrası uyarınca, ödeme hizmetleri veri paylaşım servislerini BKM API Geçidi aracılığıyla HBHS ve ÖBHS’ye sunmakla yükümlüdür. \n \n \n Tebliğin 23. maddesinin ikinci fıkrası uyarınca ödeme emri başlatma hizmetinde açık iletişim servisinin tarafları ÖBHS ile HHS’dir. \n \n \n Tebliğin 23. maddesinin üçüncü fıkrası uyarınca hesap bilgisi hizmetinde açık iletişim servisinin tarafları HBHS ile HHS’dir. \n \n \n Yönetmeliğin 60. maddesinin birinci fıkrası uyarınca müşteri, ödeme emri başlatma hizmetini  ödeme hesabının çevrim içi olarak erişilebilir olduğu durumlarda , kullanmayı tercih edebilir. \n \n \n Yönetmeliğin 61. maddesinin birinci fıkrası uyarınca müşteri, hesap bilgisi hizmetini  ödeme hesabının çevrim içi olarak erişilebilir olduğu durumlarda , kullanmayı tercih edebilir. \n \n \n Tebliğin 25. maddesi uyarınca HHS ve YÖS (ÖBHS ve HBHS) arasında bağlantı uçtan uca güvenli bir şekilde sağlanır. Bu amaçla iletim katmanında TLS (asgari 1.2 sürümü) ile şifreli iletişim sağlanır. \n \n \n Tebliğin 23. maddesinin dördüncü fıkrası uyarınca HHS tarafından sunulan ödeme hizmetleri veri paylaşım servislerini kullanan yetkilendirilmiş ödeme hizmeti sağlayıcılarının TCMB tarafından ilgili ödeme hizmeti için yetkilendirilmiş olduğu kontrol edilir. \n \n \n Tebliğin 25. maddesinin beşinci fıkrası uyarınca zaman damgası, 15/1/2004 tarihli 5070 sayılı Elektronik İmza Kanunu kapsamında tanımlanan zaman damgasına dayanır. \n \n \n API alan isimleri Türkçe olarak tanımlanmıştır. Ancak API başlığı (header) alanındaki alan isimleri özelinde, API Geçitleri tarafından otomatik olarak tanınabilmesi gözetilerek, İngilizce isimlendirme tercih edilmiştir. \n 3.2.\tİstem (Çağrı) ve Oturum \n \n \n Her istek biricik istek numarası ve ÖHK’lı işlemler için zaman damgası içerir. Birden fazla istek içeren işlem YÖS tarafından belirlenen çağrıya özgü talep kimliği (istek numarası: x-request-id) ve işlem akışına özgü talep kimliği (işlem grup numarası: x-group-id) değerleri kullanılarak HHS tarafından bir oturum yaklaşımı ile sürdürülür (Bknz. 3.15 İstek Başlığı). \n \n \n Oturum takibi ise işlem grup numarası ile yapılır. İşlem grup numarası da ÖHK’lı işlemler için zaman damgası ile birlikte ilgili tüm işlem verilerini içerecek şekilde kayıt altına alınır. \n \n \n Örneğin, bir ödeme emri başlatma işlemi birden fazla istekten oluşur. Her istek yukarıda belirtildiği gibi biricik istek numarası ve ÖHK’lı işlemler için zaman damgası içerir. Ancak işlemin oturum bütünlüğü işlem grup numarası ile sağlanır. \n \n \n Taraflar açtıkları oturumu işlem bütünlüğünü sağlayacak süre içerisinde açık tutar ve işlem biter bitmez kapatır. \n 3.3.\tRESTful API \n API’ler, dünya ölçeğinde yaygın bir şekilde kullanılan Temsili Durum Transferi (Representational State Transfer, REST) mimari tarzı ve JavaScript Nesne Notasyonu (JavaScript Object Notation, JSON) veri formatlarına uygun olarak geliştirilir. En üst seviye Veri Tanımlama Dili (Data Description Language) ve en iyi uygulama örnekleri için  ^JSON Şeması  temel alınır. \n 3.4.\tSürüm Yönetimi \n API sonraki aşamalarda doğabilecek gereksinimleri ve daha karmaşık kullanım durumlarını karşılamak için sürümler halinde geliştirilir ve bu durum tasarım sırasında göz önünde bulundurulur. \n API v1.0 sürümünde ; \n \n Kapsamdaki ödeme hesapları : Vadesiz TL, yabancı para hesapları (gerçek ve tüzel kişilere ait ödeme hesapları), Kredili Mevduat Hesabı \n Tekil ödeme (Virman/Havale/FAST/Müşterilerarası TL Aktarım Sistemi)\n \n Virman ve havale işlemleri kapsamında yabancı para transferi yapılabilir. \n \n \n Hesap bilgisi hizmetleri\n \n Temel veya ayrıntılı hesap bilgisi \n Bakiye \n Gerçekleşen işlemler için Hesap hareketleri \n \n \n Karekodlu ödemelerdeki 01, 02 ve 03 akış türleri\nyer almaktadır. \n \n Her sürüm değişikliğinde bir önceki sürüm belirli bir süre desteklenecektir. Diğer bir ifadeyle, sadece belirli bir süre için mevcut ve bir önceki sürüm aynı anda erişilebilir olacaktır. \n 3.5.\tKaynak URI Yol Yapısı \n YÖS’lerin başlattığı çağrılarda URI yolu aşağıdaki yapıyı takip eder: \n [hhs-yol-ön-eki]/ohvps/ [kaynak-grubu]/ [sürüm]/ [kaynak]/[kaynak-no]/[alt-kaynak] \n Bu, aşağıdaki unsurlardan oluşur: \n \n [hhs-yol-ön-eki] \nİsteğe bağlı, HHS\'ye özgü yol ön ekini ifade eder. \nBKM API geçidi üzerinden yapılan çağrılarda BKM tarafından belirlenen sistem adı ve yol ön eki kullanılır. \n ohvps \nSabit metin “ohvps” (Ödeme Hizmetleri Veri Paylaşım Servisleri kısaltması) \n [kaynak-grubu] \nKaynak grubu, API’ye erişmek için kullanılan ödeme hizmetine (HBH, ÖBH) göre erişim adresi (end point) grubunu tanımlar (“hbh” veya “obh”). \n [sürüm] \nAPI sürümünü ifade eder (“/s[ana-sürüm].[alt-sürüm]/”). \n [kaynak]/[kaynak-no] \nKaynak detaylarını ifade eder. \n [alt-kaynak] \nAlt kaynak detaylarını ifade eder. \n \n HHS, tüm kaynakları için aynı katılımcı yolu ön ekini ve sistem adını kullanmalıdır. \n BKM API’lerine erişmek isteyen uygulamaların yetkilerine göre aşağıdaki API’lere abone olmaları gerekmektedir: \n OBH: \n https://apigw-prod.bkm.com.tr/api/main/ohvps/obh/s1.0/odeme-emri-rizasi \n https://apigw-prod.bkm.com.tr/api/main/ohvps/obh/s1.0/odeme-emri \nHBH: \n https://apigw-prod.bkm.com.tr/api/main/ohvps/hbh/s1.0/hesap-bilgisi-rizasi \n https://apigw-prod.bkm.com.tr/api/main/ohvps/hbh/s1.0/hesaplar \n https://apigw-prod.bkm.com.tr/api/main/ohvps/hbh/s1.0/hesaplar/1234/islemler \n https://apigw-prod.bkm.com.tr/api/main/ohvps/hbh/s1.0/hesaplar/1234/bakiye \nGKD \n https://apigw-prod.bkm.com.tr/api/main/ohvps/gkd/s1.0/erisim-belirteci \nHHS – YÖS API \n https://apigw-prod.bkm.com.tr/api/main/hhs-api/s1.0/hhs \n https://apigw-prod.bkm.com.tr/api/main/hhs-api/s1.0/hhs/1234 \n https://apigw-prod.bkm.com.tr/api/main/yos-api/s1.0/yos \n https://apigw-prod.bkm.com.tr/api/main/yos-api/s1.0/yos/1234 \n HHS’lerin sağlayacakları API’lerdeki URI çevrimi örnekleri aşağıdaki gibidir. \n \n https://xbank.com.tr/api-portal/ohvps/obh/s1.0/odeme-emri \n https://apigw-prod.bkm.com.tr/api/main/ohvps/obh/s1.0/odeme-emri  (BKM API) \n https://xbank.com.tr/api-portal/ohvps/hbh/s1.0/hesap-bilgisi-rizasi \n https://apigw-prod.bkm.com.tr/api/main/ohvps/hbh/s1.0/hesap-bilgisi-rizasi  (BKM API) \n https://xbank.com.tr/api-portal/ohvps/hbh/s1.1/hesaplar \n https://apigw-prod.bkm.com.tr/api/main/ohvps/hbh/s1.1/hesaplar   (BKM API) \n https://xbank.com.tr/api-portal/ohvps/hbh/s1.1/hesaplar/1234 \n https://apigw-prod.bkm.com.tr/api/main/ohvps/hbh/s1.1/hesaplar/1234  (BKM API) \n \n BKM API Geçidi üzerinden yapılan çağrılarda, istek başlığında bulunan “x-aspsp-code” (isteğin iletildiği Hesap Hizmeti Sağlayıcısının kodu) değerine göre HHS API’de standart olarak tanımlanmış olan “basePath” bilgisine servis uzantısı eklenerek HHS’ye yönlendirme yapılır. \n Örneğin, istek başlığında  xbank ’ın kodu varsa, YÖS tarafından yapılan \n https://apigw-prod.bkm.com.tr/api/main/ohvps/hbh/s1.0/hesap-bilgisi-rizasi \nçağrısı BKM API Geçidi tarafından karşılanarak \n https://xbank.com.tr/api-portal/ohvps/hbh/s1.0/hesap-bilgisi-rizasi \nadresine yönlendirilir. \n Bu örnekte,  https://xbank.com.tr/api-portal  basePath bilgisi HHS tarafından HHS API’ye girilen değerdir. \n 3.6.\tKarakter Kodlama \n API istekleri ve yanıtlarında UTF-8 karakter kodlaması kullanılır. Bu, JSON için varsayılan karakter kodlamasıdır. \n Ancak, bir HHS\'nin kendi uygulamaları ve ödeme başlattığı ödeme sistemi (FAST vb.)  bazı UTF-8 karakterlerini kabul etmeyebilir. HHS, UTF-8 kodlaması içeren bir mesajı işleyemez ve reddederse, HTTP 400 (Hatalı İstek) durum kodu ile yanıt vermelidir. \n 3.7.\tVeri Formatı \n \n Açık bankacılık kapsamındaki zaman damgası, ISO 8601 standartına uygun olarak yerel saat bilgisini ve timezone bilgisini de içerecek şekilde " yyyy-MM-dd’T’HH:mm:ssXXX " formattaki haliyle hazırlanmalıdır. \n \n Örnek:  "timestamp": "2021-05-30T20:34:15+03:00" \nyyyy : 4 hane yıl \nMM : Başa ‘0’ eklenmiş, toplam 2 hane ay \ndd    : Başa ‘0’ eklenmiş, toplam 2 hane gün \nHH    : Başa ‘0’ eklenmiş, toplam 2 hane saat (0-23 arası değer alabilir.) \nmm : Başa ‘0’ eklenmiş, toplam 2 hane dakika \nss    : Başa ‘0’ eklenmiş, toplam 2 hane saniye \nXXX : ISO 8601 Time zone \n \n JWT veri paketlerinde kullanılan zaman damgaları, 1 Ocak 1970 Saat 00:00:00 (UTC) anından itibaren geçen saniye sayısı değerini (Unix Time) kullanır. \n Bir HHS, tarihi yanlış biçimlendirilmiş bir istek aldığında, 400 (Hatalı İstek) durum kodu ve ilgili hata kodu ile yanıt verir. \n Tüm tutar alanları tam sayı olarak, para birimleri ise ISO4217’deki 3 harfli kodla iletilir. Tutar alanı, tutara ilişkin para biriminin ISO4217’de tanımlı olan tam sayıdan sonraki uzunluğuna göre formatlanarak okunmalıdır. Örneğin 1,20 TRY için tutar alanında “120” değeri iletilir, para birimi TRY olduğu için son iki basamağın kuruş olduğu sonucuna ulaşılacaktır. 12000 Japon Yeni için, ISO4217’de JPY para biriminin ondalık kısmı olmadığından tutar alanında 12000 değeri iletilir. \n Sıralı veri tipleri büyük küçük harfe duyarlıdır. \n Altın para birimi ISO4217’ye uygun biçimde “XAU” cinsinde ve virgülden sonra 2 basamak olacak şekilde iletilmelidir. Örneğin içerisinde "13,5 gr" altın olan hesap için bakiye 1350 gönderilmelidir. \n 3.8.\tİstemci Sertifika Yönetimi \n ÖHVPS kapsamında YÖS ve HHS’lerin güvenli bir şekilde tanımlanması amacıyla elektronik sertifikalar kullanılır. \n ÖHVPS kapsamında tarafların güvenli bir şekilde tanımlaması, uçtan uca güvenli iletişim, mesaj şifreleme ve mesaj imzalama işlevleri 15/1/2004 tarihli ve 5070 sayılı Elektronik İmza Kanunu’nda açıklanan elektronik sertifikalar kullanılarak sağlanır. Elektronik sertifikada Türkiye Cumhuriyet Merkez Bankası tarafından verilen kuruluş kodu ve kuruluşun türüne dair bilgiler bulunur. \n BKM API Geçidi üzerinden yapılan erişimlerde YÖS ve HHS’lere önceden dağıtılmış olan istemci sertifikaları kullanılarak tarafların (sunucu) kimliklerinin doğrulanması sağlanacaktır. İstemci sertifikaları hem test hem de üretim ortamında kullanılacaktır. Sertifikaların işlevselliği ve geçerliliği sertifikasyon sürecinde de sınanacaktır. Söz konusu sertifikaların dağıtım prosedürleri ve kullanımlara yönelik açıklamalar EK-3’te yer verilmiştir. \n 3.9.\tYetkilendirme Türleri \n BKM API Geçidi üzerinden yapılan çağrılarda iki temel yetkilendirme türü kullanılır: \n 1.\tİstemci Kimlik Bilgileri:  Müşteri onayının gerekmediği, sadece YÖS’ün tanımlanıp doğrulandığı API çağrılarında kullanılır. YÖS’ün yetkilendirilmiş olduğu ve faaliyet izninin yaptığı hizmet çağrısına uygun olduğu kontrol edilir.  Bu amaçla, YÖS’lere clientId ve clientSecret tahsis edilecektir. YÖS’ler ilgili clientId ve clientSecret ile sadece yetkilendirilmiş oldukları servislere erişebileceklerdir. YÖS’ler kendilerine BKM tarafından sunulacak API’yi, kendi clientID ve clientSecret değerleri ile sorgulayarak “İstemci Kimlik Bilgileri” belirtecini (access token) elde edeceklerdir.\nHHS’ler de BKM API geçidi üzerindeki YÖS API’sini sorgulama maksadı ile BKM API Geçidine geldiklerinde, kendilerine atanmış olan clientID ve clientSecret bilgileri ile yetki kontrolleri yapılır.\nHHS’ler kendilerinden alınacak username ve password değerleri kullanılarak oluşturulacak basic authentication metodu ile servislerini sunacaklardır. \n 2.\tYetkilendirme Kodu:  YÖS’ün doğrulanmasının yanısıra müşterinin GKD ile doğrulanması gereken API çağrılarında kullanılır. Müşteri doğrulanarak yetkilendirme kodu oluşturulması HHS’nin yetkilendirme arayüzüne yönlendirilir. GKD’nin başarıyla tamamlanması sonrasında yetkilendirme kodu YÖS’e dönülür. YÖS daha sonra HHS’nin  erişim belirteci  (access token) erişim adresini (EK-3: POST /erisim-belirteci) çağırmak suretiyle yetkilendirme kodunu bir erişim belirteci (access token) ile değiştirerek ilgili kaynakları kullanabilir. \n Ödeme emri başlatma ve hesap bilgisi hizmetlerinde hangi yetkilendirme türlerinin kullanılacağı bilgisi, ilgili başlıklardaki erişim adresleri (endpoints) tablolarında yer almaktadır. \n erisim-belirteci  erisim noktasından elde edilen  erisimBelirteci  ilişkilendirildiği nesne veya işlem için gönderilen POST isteği başlığında  x-access-token  alanında iletilir.\nBelirli bir süre için tanımlanan erişim belirteci (access token) değerinin yenileme belirteci (refresh token) ile yenilenmesi gerekir. \n Erişim adreslerinde kullanılan yetkilendirme türü ilgili erişim adresi tablolarında belirtilmiştir. \n 3.10. İstek/Cevap Mesajlarında Kullanılan Nesne Yapıları \n İstek ve Cevap mesajlarında kullanılacak olan nesneler tüm elemanlarını kapsayacak şekilde Ek-1 de listelenmiştir. Tüm listelenen elemanlar açısından (Uç nokta mesaj yapılarının belirtildiği tablolarda belirtildiği üzere) alanın Zorunlu (z) veya İsteğe Bağlı (İ) olma durumlarına göre bazı alanlar gönderilebilir veya gönderilmeyebilir. \n 3.11. Sayfalandırma ve Filtreleme \n Sayfalandırma \n Çağrıya dönülen kaynak nesnesi içerisindeki kayıtlar bir sayfalandırma yapısı ile çağrılacak şekilde istek oluşturulur. \n Oluşturulacak isteğin içerisinde parametreler ile filtreleme, sayfa başına gösterilecek kayıt sayısı ve hangi sayfanın önyüzde gösterileceği bilgileri erişim noktasına iletilir ve ilgili kayıtlar cevap olarak alınır. \n Filtreleme \n HHS, birden çok kayıt dönülmesi gereken GET çağrılarında sınırlı filtreleme desteği sağlamalıdır. Filtre parametreleri her zaman kaynak nesnesinin belirli alanlarına özgüdür ve nesne için tanımlanan kurallara uymalıdır. \n 3.12. Mesaj İmzalama \n Elektronik imzalar, ÖHVPS API’de gerçekleştirilen işlemlerin ve taşınan verilerin bütünlük ve inkâr edilemezliğini destekler. İmzaların kaynak bazında hangi istek ve yanıtlara uygulandığı belirlidir. \n API yalnızca TLS\'ye dayanırsa, dijital kayıtları ve inkâr edilemezlik kanıtlarını tutmak zor olur. Bu nedenle, TLS\'ye dayanmayan bir inkâr edilemezlik çözümü olarak API isteğinin HTTP başlığında bir JWS kullanılarak sağlanabilir. \n HTTP isteğinin gövdesinin hash fonksiyonu (SHA256) ile özeti alınacaktır. Elde edilen özet, asimetrik anahtarları destekleyen bir algoritma kullanılarak imzalanacak ve JWS elde edilecektir. \n Bir istek, YÖS\'nin özel anahtarı ile imzalanacak ve bu isteğe karşılık gelen yanıt, HHS\'nin özel anahtarı tarafından imzalanacaktır. \n Tüm API istekleri ve yanıtları imzalanmaz. Mesaj imzalamanın zorunlu olup olmadığı, desteklenip desteklenmediği her API özelinde belirlenir. \n Anahtar Deposu \n HHS\'ler ve YÖS\'ler tarafından güvenilen bir Güven Otoritesi (Trust Anchor), taraflar için bir genel anahtar deposu sağlamaktan sorumludur. \n Güven Otoritesi, taraflardan herhangi birisinin oluşturduğu bir anahtar çiftinin açık bölümünü saklayan merkezi bir dizin (BKM tarafından tutulan merkezi kayıt sistemi vb.) olacaktır. \n Mesajları doğrulamak için tarafların genel anahtarlarının paylaşılması için BKM bir servis sağlayacaktır. HHS API olarak adlandırılımış olan bu servis ile HHS ve YÖS listelerine ulaşılabildiği gibi doğrulama işlemi için ihtiyaç duyulacak olan genel anahtarlara da bu servis üzerinden erişilebilinecektir. \n İlgili Mesaj şifreleme için genel akış, Ek-5 bölümünde detaylarıyla paylaşılmaktadır. \n 3.13. Durum Kodu \n API’ler, iki farklı amaca hizmet eden iki durum kodu kullanır: \n \n HTTP Durum Kodu, API çağrısının (kaynaktaki HTTP işlemi) sonucunu yansıtır. \n Bazı kaynak payload’larındaki Durum alanı, kaynakların durumunu yansıtır. \n 3.14. Gereksinimlerinin Sınıflandırılması \n Erişim adreslerinin ve alanların kullanımı Zorunlu(Z), İsteğe Bağlı(İ) veya Koşullu(K) olabilir. Kullanımlara ilişkin durumlar ve kullanımın (K) koşullu olduğu duruma ilişkin açıklamalar ilgili tablolarda belirtilmiştir. \n İstek ve yanıtta kullanılacak başlık isimleri, ilgili RFC dokümanlarında ve aşağıdaki tabloda yer aldığı şekilde kullanılacaktır.  Uygulamaya özelleşmiş başlıklar "X-" ile başlayacaktır. Başlık isimlerinde yer alacak kısaltmalar (örn. PSU, ASPSP gibi) tamamı büyük harfle yazılacak şekilde tanımlanacaktır. Başlık isimleri büyük – küçük harfe duyarlı olmamalıdır. Örneğin x-request-id ya da X-Request-ID olarak gönderilmiş olan bir istek başlığı değişkeni, sunucu tarafında hata vermeyecek şekilde işlenebilmelidir. \n 3.15. İstek Başlığı \n Tablo 2: İstek Başlığında Yer Alan Veriler \n \n \n \n Başlık İsimleri \n Format \n Notlar \n POST \n GET \n DELETE \n \n \n \n \n X-Request-ID \n AN1..36 \n İsteği başlatan YÖS tarafından belirlenen çağrıya özgü talep kimliği. İstek numarası.   Örnek: Ödeme emri başlatma iş akışının her adımda farklı “x-request-id” değeri kullanılır.   Çağrıların aynı yanıtı dönmesinin beklendiği durumlarda (idempotent işlemlerde) aynı değer ile çağrı yapılır. \n Z \n Z \n Z \n \n \n X-Group-ID \n AN1..36 \n İsteği başlatan YÖS tarafından belirlenen işlem akışına özgü talep kimliği. İşlem grup numarası.  Aynı rıza no’ya ait tüm isteklerde aynı x-group-id bilgisi değeri gönderilmelidir. Örnek: Ödeme emri başlatma/hesap bilgisi iş akışının her adımında aynı “x-group-id” değeri kullanılır. \n Z \n Z \n Z \n \n \n Content-Type \n AN1..20 \n Standart HTTP Başlığı; Talepte sağlanan payload’ın biçimini temsil eder: application/json  (Başka bir değere ayarlanırsa, HHS, 415 Desteklenmeyen Ortam Türü (Unsupported Media Type) ile yanıt vermelidir) \n İ \n - \n - \n \n \n X-ASPSP-Code \n AN4 \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n Z \n Z \n Z \n \n \n X-TPP-Code \n AN4 \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur \n Z \n Z \n Z \n \n \n PSU-Auth-Date \n ISODateTime \n ÖHK’nın YÖS üzerinde en son oturum açtığı saat. [RFC7231] Örneğin:  auth-date: Tue, 11 Sep 2012 19:43:31 GMT \n İ \n İ \n İ \n \n \n PSU-IP-Adress \n AN7..15 \n ÖHK YÖS üzerinde oturum açmışsa, işlemi başlattığı cihazın IP adresi. \n İ \n İ \n İ \n \n \n PSU-IP-Port \n AN1..5 \n ÖHK YÖS üzerinde oturum açmışsa, işlemi başlattığı cihazın Port adresi. \n İ \n İ \n İ \n \n \n PSU-GEO-Location \n AN1..36 \n ÖHK’nın işlemi başlattığı cihazın konum bilgisi. RFC2426 standartına uygun olarak paylaşılmalıdır. Örneğin  GEO:"<enlem >, <boylam>GEO:52.506931,13.144558 \n İ \n İ \n İ \n \n \n PSU-User-Agent \n AN 1.. 255 \n ÖHK’nın işlemi başlattığı cihazın sağladığı user-agent bilgisi. (Tarayıcı, versiyon, işletim sistemi bilgileri) \n İ \n İ \n İ \n \n \n PSU-Timestamp \n ISODateTime \n ÖHK’nın işlemi başlattığı cihazın tarih saat içeren zaman bilgisi. \n İ \n İ \n İ \n \n \n PSU-Device-ID \n AN5..40 \n ÖHK işlemi mobil uygulama aracılığıyla başlattıysa, kullanılan mobil uygulama ilk yüklendiğinde oluşturulan tekil cihaz veya uygulama belirteci. ÖHK cihazının UUID değeri kullanılabilir. \n İ \n İ \n İ \n \n \n PSU-Device-Data \n AN1..1024 \n ÖHK’nın işlemi başlattığı mobil cihaza ait veriler.  Örnek alanlar:   - Platform - (Android, iOS, Windows 10 Mobile)  - Device Model   - OS Name   - OS Version - Locale - Time zone \n İ \n İ \n İ \n \n \n PSU-Initiated \n AN1 \n İşlemin ÖHK tarafından başlatılması durumunda E , sistem tarafından başlatıldığı durumda H değerini alması beklenir.   İşlemler servisinde yapılacak sistemsel sorgulardaki işlem limitlerini kontrol amacıyla kullanılır. \n Z \n Z \n Z \n \n \n Authorization \n AN1..4096 \n YÖS ile BKM API Gateway arasındaki otorizasyon için kullanılan token bilgisidir.  Yekilendirme türlerinden İstemci Kimlik Bilgileri’ni adresler. \n Z \n Z \n Z \n \n \n X-Access-Token \n AN1..4096 \n ÖHK’nın GKD sürecinde doğrulanması sonrasında kullanılan erişim simgesi. Yetkilendirme türlerinden Yetkilendirme Kodu (GKD)’nu adresler. \n İ \n İ \n İ \n \n \n X-JWS-Signature \n AN1..4096 \n Payload gövdesinin ayrılmış bir JWS imzasını içeren üstbilgi.  Bu başlığın ne zaman belirtilmesi gerektiği hususu ilgili endpoint için belirtilmiştir. \n K (Kullanılan API ve methoda göre kullanılır.) \n K \n K \n 3.16. Yanıt Başlığı \n Tablo 3: Yanıt Başlığında Yer Alan Veriler \n \n \n \n Başlık İsimleri \n Format \n Notlar \n Kullanım Durumu \n \n \n \n \n X-Request-ID \n AN1..36 \n İsteği başlatan YÖS tarafından belirlenen çağrıya özgü talep kimliği. İstek numarası    İlgili istek başlığındaki bilgi geri dönülür. \n Z \n \n \n X-Group-ID \n AN1..36 \n İsteği başlatan YÖS tarafından belirlenen işlem akışına özgü talep kimliği. İşlem grup numarası. İlgili istek başlığındaki bu değer geri dönülür. \n Z \n \n \n X-ASPSP-Code \n AN4 \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n Z \n \n \n X-TPP-Code \n AN4 \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur \n Z \n \n \n Content-Type \n AN1..20 \n Standart HTTP Başlığı; Talepte sağlanan payload’ın biçimini temsil eder:  application/json \n İ \n \n \n X-JWS-Signature \n AN1..4096 \n JWS imzasını içeren üstbilgi. Bu başlığın hangi yanıtlar için kullanılması gerektiği ilgili endpoint için belirtilmiştir. \n K \n \n \n Retry-After \n AN 1..255 \n YÖS’ün bir isteği yeniden denemeden önce beklemesi gereken süreyi (saniye cinsinden) gösterir. HHS, 429 HTTP durum kodu (Too Many Requests) ile döndüğü yanıtların başlığında bu bilgiyi dönmelidir. \n K \n \n \n x-total-count \n N 1..18 \n Hesaplar, İşlemler ve Bakiye servislerinde sayfalama kullanıldığı durumda, sorgu sonucu dönecek toplam kayıt sayısı bilgisi, bu alanda HHS isteğine bağlı olarak gönderilebilir. \n İ \n \n \n Link \n 1..4096 \n “Link” alanının çoklu sayfa yapısı olması durumunda gönderilmesi zorunludur.  Sayfalama yapısı kullanıldığında gelen yanıtta birden fazla sayfa var ise; önceki, sonraki, ilk, son sayfalara gitmek için gerekli referanslar link headerında aşağıdaki örnekteki gibi doldurulabilir.  x-total-count alanının gönderimi isteğe bağlı olduğu için; Link içerisindeki son sayfa bilgisi  (last) isteğe bağlı hale getirilmiştir. “Önceki”( prev) ve “Sonraki” (next) adımlarının uygun olan her durumda yer alması zorunludur. İlk sayfada “Önceki” seçeneği olmamalı, son sayfada ise “Sonraki” seçeneği olmamalıdır.    </ohvps/hbh/s1.0/hesaplar/hspref/islemler?hesapIslemBslTrh=2022-01-01T00:00:00+03:00&hesapIslemBtsTrh=2023-12-12T23:59:59+03:00&srlmKrtr=islGrckZaman&srlmYon=Y&syfNo=6&syfKytSayi=100>; rel="next",  </ohvps/hbh/s1.0/hesaplar/hspref/islemler?hesapIslemBslTrh=2022-01-01T00:00:00+03:00&hesapIslemBtsTrh=2023-12-12T23:59:59+03:00&srlmKrtr=islGrckZaman&srlmYon=Y&syfNo=4&syfKytSayi=100>; rel="prev",  </ohvps/hbh/s1.0/hesaplar/hspref/islemler?hesapIslemBslTrh=2022-01-01T00:00:00+03:00&hesapIslemBtsTrh=2023-12-12T23:59:59+03:00&srlmKrtr=islGrckZaman&srlmYon=Y&syfNo=14&syfKytSayi=100>; rel="last",  </ohvps/hbh/s1.0/hesaplar/hspref/islemler?hesapIslemBslTrh=2022-01-01T00:00:00+03:00&hesapIslemBtsTrh=2023-12-12T23:59:59+03:00&srlmKrtr=islGrckZaman&srlmYon=Y&syfNo=0&syfKytSayi=100>; rel="first" \n K \n 3.17. Idempotency Kuralları \n YÖS’ün aşağıdaki durumlarda aynı istek numarası (x-request-id) ve aynı veri gövdesiyle çağrıyı tekrarlaması; HHS’nin de bu durumlarda aynı yanıtı dönmesi gereklidir. \n \n HHS’nin yanıtı kesinti/arıza nedeniyle YÖS’e ulaşmaz ve zaman aşımı söz konusu olması, \n ÖHK, YÖS uygulaması üzerinden çift tıklama ile mükerrer defa HHS API’lerini çağırılması,\n(API kontrollerinden önce YÖS uygulamasının, çift tıklama kontrolü yapması önerilmektedir.) \n YÖS, yanıt almasına rağmen işleyemeden kaybedilmesi, \n \n durumlarında HHS aşağıdaki kuralları işletir: \n \n HHS gelen istek numarasını ve veri gövdesini birleştirerek checksum değeri üretir. \nchesksum değeri x-request-id|request.body ‘nin hash algoritmalarından (CRC32,MD5 vb)  geçirilerek üretilebilir. \n HHS bu checksum değeri ile YÖS’e dönmüş olduğu yanıtı 5 dk boyunca saklar.  Saklama yöntemi olarak veri tabanı veya önbellek araçları kullanılabilir. \n YÖS aynı istek numarası ve aynı veri gövdesi ile yeni bir çağrı yaptığında, aynı checksum değeri üretileceği için 5dk boyunca bu değere karşılık gelen yanıtı döner. \n 5 dk sonrasında istek numarası veya veri gövdesi değişmemiş olsa dahi bu HHS tarafından yeni istek olarak kabul edilir. \n \n Aşağıdaki Public Post işlemleri için bu kural setinin işletilmesi gerekmektedir: \n 1- Ödeme emri rızası oluşturma \n2- Erişim belirteci oluşturma \n3- Ödeme emri \n4- Hesap bilgisi rızası oluşturma \n 3.18. HTTP Durum Kodları \n RFC 2616\'da belirlenmiş olan durum kodları (status code) gönderilen isteğin durumunu YÖS’a standart bir şekilde ifade eder. Eğer bir hata varsa hatayı, gönderilen istek başarılı bir şekilde işlem gördüyse ona ilişkin durumu aktarır. Durum kodları genel olarak 5 kategoridedir. \n \n 1xx Bilgi \n 2xx Başarılı \n 3xx Yönlendirme \n 4xx İstemci Hatası \n 5xx Sunucu Hatası \n \n Sıralı (Enumarated) Hata Tipleri: \n \n TR.OHVPS.Resource \n \n ⇨\tInvalidFormat \n ⇨\tConsentMismatch \n ⇨\tNotFound \n ⇨\tInvalidSignature \n ⇨\tMissingSignature \n ⇨\tMethodNotAllowed \n ⇨\tNotAcceptable \n ⇨\tUnsupportedMediaType \n ⇨\tConsentRevoked \n \n \n \n TR.OHVPS.Business \n \n ⇨\tInvalidContent \n ⇨\tInvalidAccount \n \n \n \n TR.OHVPS.Connection \n \n ⇨\tInvalidCertificate \n ⇨\tExceededRate \n ⇨\tInvalidTPP \n ⇨\tInvalidASPSP \n ⇨\tInvalidToken \n ⇨\tInvalidTPPRole \n \n \n \n TR.OHVPS.Server \n \n ⇨\tInternalError \n ⇨\tServiceUnavailable \n \n \n TR.OHVPS.Resource.InvalidFormat hatası alındığı durumda; fieldErrors nesnesi içerisinde verilecek hata kodları : \n \n TR.OHVPS.Field \n \n ⇨\tMissing \n ⇨\tInvalid \n \n \n Veri Tipi Örneği: \n { \n   "id" :   "2b5f0fb2-730b-11e8-adc0-fa7ae01bbebc" , \n   "path" :   "/ohvps/s1.1/obh/odeme-emri-rizasi" , \n   "timestamp" :   "2020-06-13T18:24:38" , \n   "httpCode" :   400 , \n   "httpMessage" :   "Bad Request" , \n   "moreInformation" :   "Resource Schema validation error" , \n   "moreInformationTr" :   "Şema kontrolleri başarısız" , \n    "errorCode" :   "TR.OHVPS.Resource.InvalidFormat" , \n   \n   "fieldErrors" :   [ \n            { \n                  "objectName" :   "odemeEmriRizasi" , \n                  "field" :   "kmlkNo" , \n                  "messageTr" :   "boyut \'6\' ile \'30\' arasında olmalı" , \n                  "message" :   "size must be between \'6\' and \'30\'" , \n                  "code" :   "TR.OHVPS.Field.Invalid" \n               } , \n               { \n                  "objectName" :   "odemeEmriRizasi" , \n                   "field" :   "prBrm" , \n                   "messageTr" :   "boş değer olamaz" , \n                   "message" :   "must not be null" , \n                   "code" :   "TR.OHVPS.Field.Missing" \n               } ] \n } \n \n Veri Tipi Örneği: \n Zorunlu header alanlarından biri ya da birkaçı eksik olarak gönderilirse aşağıdaki gibi bir hata dönüşü gerçekleşebilir. \n \n { \n     "httpCode" :   "400" , \n     "httpMessage" :   "Bad Request" , \n     "moreInformation" :   "One or more required API parameters are missing in the API request." \n } \n\n \n Tablo 4: HTTP Durum Kodları \n \n \n \n HTTP Durum \n İstek Sonucu ve Açıklamalar \n POST \n GET \n DELETE \n \n \n \n \n 200 OK \n İstek Başarıyla Tamamlandı. Kaynak güncellemek için yapılan (örneğin, PUT) ve başarıyla tamamlanan isteklerinde kullanılır. \n H \n H \n H \n \n \n 201 Created \n İstek Başarılı Oldu. Kaynak yaratma isteği (örneğin, POST /ödeme-emri-rizasi) başarıyla sonuçlandı. \n E \n H \n H \n \n \n 204 No Content \n Silme işlemi başarıyla tamamlandı. Kaynak silme isteği (örneğin,  DELETE /hesap-rizasi/{RizaNo} ) başarıyla sonuçlandı. \n H \n H \n E \n \n \n 400 Bad Request \n İstekte bozuk, eksik veya uyumlu olmayan JSON gövdesi, URL parametreleri veya başlık alanları var.  İstekle başlatılan işlem yapısal bozukluk, eksik veya tutarsız veri veya HHS tarafındaki kontrollerin hatalı sonuçlanması nedeniyle hata ile sonuçlanır ve hataya ilişkin veriler hata nesnesi içerisinde dönülür. \n E \n E \n E \n \n \n 401 Unauthorized \n Yetkilendirme başlığı eksik, hatalı veya geçersiz olduğundan istek yetkilendirilmediğinde ve erişim reddedildiğinde http 401 kodu dönülmelidir. \n E \n E \n E \n \n \n 403 Forbidden \n Erişim belirtecinin veya rızanın kapsamı uyuşmuyor. YÖS bir hesaba/işlem kaynağına erişmeye çalışır ve YÖS, istenen kaynağa erişmek için geçerli izinlere sahip bir rızası yoktur.  Örneğin; hesap bilgisi rızası bakiye izni almamıştır ancak /bakiyeler adresinden istekte bulunmuştur. \n \n \n \n \n \n 404 Not Found \n **HHS geçerli bir API erişim adresini sağlamıyorsa, o URL\'ye gelen istekler için 404 (Bulunamadı) ile yanıt vermelidir.**YÖS, uygulama esaslarında tanımlanmayan bir kaynak için bir URL\'ye erişmeye çalışırsa (örneğin, GET /yurtdisi-odeme), HHS, 404 (Bulunamadı) ile yanıt vermeyi seçebilir. \n E \n E \n E \n \n \n 405 Method Not Allowed \n YÖS, desteklenmeyen bir yöntemle kaynağa erişmeye çalıştı. \n E \n E \n E \n \n \n 406 Not Acceptable \n İstek, geçersiz bir karakter kümesi içeriyor. \n E \n E \n E \n \n \n 415 Unsupported Media Type \n İstek gövdesi hedef kaynakta bu yöntem tarafından desteklenmeyen bir biçimde oluşturulduğu için işlem reddedildi \n E \n H \n H \n \n \n 429 Too Many Requests \n Belirli bir süre içinde çok fazla talepte bulunulduğu için işlem reddedildi.  HHS’ler adil kullanım politikalarını aşan talepleri kısıtlayabilir. \n E \n E \n E \n \n \n 500 Internal Server Error \n API sunucu / servis katmanında sorun oluştu. İşlem başarısız. \n E \n E \n E \n \n \n 503 Service Unavailable \n Hizmet sürümü kullanımdan kaldırıldı.  Bir API\'nin kullanımdan kaldırıldığı ve artık bir HHS tarafından operasyonel olarak desteklenmediği durumlarda, URI yolu hala etkin olabilir ve API isteklerini kabul edebilir.  Bu durumda, YÖS\'ün API sürümünün çevrimdışı olduğunun farkında olması için 503 Hizmet Kullanılamıyor dönmesi önerilir. \n E \n E \n E \n \n \n \n Hata Örnekleri: \n 400 Bad Request \n TR.OHVPS.Business.InvalidContent  hatası HHS tarafından yapılacak iş kuralı kontrollerinin başarısız olduğu durumda verilmelidir. \n TR.OHVPS.Resource.InvalidFormat  hatası şema validasyonu, alan uzunluk ve varlık kontrollerinin başarısız olduğu durumda verilmelidir. \n httpCode :   400 \nhttpMessage :  “Bad Request”\nmoreInformation :  “Resource Schema validation error”\nmoreInformationTr :  “Şema Kontrolleri Başarısız” \nerrorCode :   "TR.OHVPS.Resource.InvalidFormat" \n\nfieldErrors :   \n         code :   { "TR.OHVPS.Field.Invalid" , \n                     "TR.OHVPS.Field.Missing" } \n\n \n Örn; GET /odeme-emri/22289 çağrısı durumunda 22289 geçerli bir ödeme kaynağı değilse, HHS, 400 koduyla cevap vermelidir. \n { \n   "id" :   "2b5f0fb2-730b-11e8-adc0-fa7ae01bbebc" , \n   "path" :   "/ohvps/s1.1/obh/odeme-emri-rizasi" , \n   "timestamp" :   "2020-06-13T18:24:38" , \n   "httpCode" :   400 , \n   "httpMessage" :   "Bad Request" , \n   "moreInformation" :   "Resource Schema validation error" , \n   "moreInformationTr" :   "Şema kontrolleri başarısız" , \n    "errorCode" :   "TR.OHVPS.Resource.InvalidFormat" , \n   \n   "fieldErrors" :   [ \n { \n "objectName" :   "odemeEmriRizasi" , \n "field" :   "kmlkNo" , \n "messageTr" :   "boyut \'6\' ile \'30\' arasında olmalı" , \n "message" :   "size must be between \'6\' and \'30\'" , \n "code" :   "TR.OHVPS.Field.Invalid" \n } , \n { \n "objectName" :   "odemeEmriRizasi" , \n  "field" :   "prBrm" , \n  "messageTr" :   "boş değer olamaz" , \n  "message" :   "must not be null" , \n  "code" :   "TR.OHVPS.Field.Missing" \n } \n ] \n } \n\n\nerrorCode :   "TR.OHVPS.Connection.InvalidTPP" \nmoreInformation :  “Invalid TPP Code”\nmoreInformationTr :  “Geçersiz Yös Kodu” \n\nerrorCode :   "TR.OHVPS.Connection.InvalidASPSP" \nmoreInformation :  “Invalid ASPSP Code”\nmoreInformationTr :  “Geçersiz HHS Kodu” \n\nerrorCode :   "TR.OHVPS.Connection. InvalidTPPRole" \nmoreInformation :  “Invalid TPP Role” \nmoreInformationTr :  “Hatalı Yös Rolü” \n \n 401 Unauthorized \n YÖS, süresi dolmuş bir erişim belirteci kullandığında, HHS 401 (Yetkisiz) http kodu ile aşağıdaki hata kodunu dönmelidir.  Aşağıdaki nedenlerden herhangi biri nedeniyle bir Erişim Belirtecinin süresi dolduğunda bu durum ortaya çıkabilir: \n \n Rızanın süresi doldu (Son Kullanma Tarihi geçti) \n Erişim Belirtecinin şüpheli kullanımı veya sahtekarlık şüphesi \n Rızada belirlenen gün sayısının aşımı\nBu hata, müşteriden doğru izinlerle yeniden kimlik doğrulaması isteyerek çözülebilir. \n \n errorCode :   " TR.OHVPS.Connection.InvalidToken " \nmoreInformation :  “Invalid Token”\nmoreInformationTr :  “Geçersiz Token” \n \n 403 Forbidden \n httpCode :   403 \nhttpMessage :  “Forbidden”\n\nerrorCode :   "TR.OHVPS.Resource.Forbidden" \nmoreInformation :  “Insufficient rights”\nmoreInformationTr :  “İzin verilmedi.”\n \n 404 Not Found \n httpCode :   404 \nhttpMessage :  “Not Found”\n\nerrorCode :   "TR.OHVPS.Resource.NotFound" \nmoreInformation :  “Resource not found”\nmoreInformationTr :  “Kayıt bulunamadı”\n \n 405 Method Not Allowed \n httpCode :   405 \nhttpMessage :  “Method  Not Found”\n\nerrorCode :   "TR.OHVPS.Resource.MethodNotAllowed" \nmoreInformation :  “Method Not Allowed”\nmoreInformationTr :  “İstek yapılan URL için izin verilmeyen metot” \n \n 406 Not Acceptable \n httpCode :   406 \nhttpMessage :  “Not Acceptable”\n\nerrorCode :   " TR.OHVPS.Resource.NotAcceptable" \nmoreInformation :  “Accept Headers not supported”\nmoreInformationTr :  “Desteklenmeyen kabul başlıkları” \n \n 415 Unsupported Media Type \n httpCode :   415 \nhttpMessage :  “Unsupported Media Type”\n\nerrorCode :   " TR.OHVPS.Resource.UnsupportedMediaType" \nmoreInformation :  “Content type not supported”\nmoreInformationTr :  “Desteklenmeyen içerik tipi” \n \n 429 Too Many Requests \n httpCode :   429 \nhttpMessage :  “Too Many Requests”\n\nerrorCode :   " TR.OHVPS.Connection.ExceededRate" \nmoreInformation :  “The rate limit has been exceeded for the plan or operation being used”\nmoreInformationTr :  “Planda tanımlanmış olan çağrı limiti aşıldı”\n \n 500 Internal Server Error \n httpCode :   500 \nhttpMessage :  “Internal Server Error”\n\nerrorCode :   "TR.OHVPS.Server.InternalError" \nmoreInformation :  “Unexpected condition was encountered”\nmoreInformationTr :  “Beklenmedik bir durumla karşılaşıldı.” \n \n 503 Service Unavailable \n httpCode :   503 \nhttpMessage :  “Service Unavailable”\n\nerrorCode :   "TR.OHVPS.Server.ServiceUnavailable " \nmoreInformation :  “API is currently unable to handle the request”\nmoreInformationTr :  “API şu anda isteği işleyemiyor” \n 3.19. Maskeleme Kuralları \n Maskeli olarak iletilmesi gereken verilerin maskeleme kuralları şu şekildedir: \n \n IBAN verileri Hesap Numarası : İlk 4 ve son 4 karakteri açık, diğer karakterler maskeli olmalıdır. Örnek: TR54******************4812 \n Ad-Soyadı / Ticari Unvan : Her kelimenin ilk 2 karakteri açık, sonraki karakterler yerine 4 adet ‘ ’ karakteri konumlandırılmalıdır.\nÖrneğin: “FATİH SERKAN EREN” ifadesi “FA *** SE**** ER****” şeklinde gösterilmelidir. \n Tabela Unvanı : Her kelimenin ilk 2 karakteri açık, sonraki karakterler yerine 4 adet ‘ ’ karakteri konumlandırılmalıdır. Örneğin “BANKALARARASI KART MERKEZİ ANONİM ŞİRKETİ” ifadesi “BA *** KA**** ME**** AN**** Şİ****” şeklinde gösterilmelidir. \n YÖS’ten girilen unvan ve iban bilgileri ödeme emri rızası ve ödeme emri yanıtında açık dönülür, Kolas akışında ödeme emri rızası yanıtı ve ödeme emri istek ve yanıtında maskeli taşınır. \n 3.20. Fonksiyonel Olmayan Gereksinimler \n \n \n HHS’lerin sunuyor oldukları servisleri en fazla 3000 ms içinde yanıt dönecek şekilde tasarlamalıdır. \n \n \n YÖS tarafından kullanıcının başlatmadığı otomatize sorgular için aşağıdaki limitler belirlenmiştir. \n \n YÖS, Bireysel ÖHK’lar için hesap bazında günde en fazla 4 adet sorgulama yapabilir. \n YÖS, Kurumsal ÖHK’lar için hesap bazında saatte en fazla 12 adet sorgulama yapabilir \nDiğer taraftan kullanıcının başlattığı Hesap Bilgisi Hizmeti kapsamındaki sorgular HHS tarafından belirlenen üst rate limitler dahilinde tanımlanabilir. \n \n \n \n HHS’lerin sunuyor oldukları servislere sistemin güvenlik ve sürekliliğini sağlamak adına rate limit koyma ihtiyaçları olur ise, standartlar ve ihtiyaçlara uygun şekilde bir konfigürasyon yapabilirler. Ör: YÖS - Kullanıcı bazında günde X sorgu v.b.\nİsteğin kullanıcı tarafından başlatıldığı Request Header içerisinde yer alan Payment Service User (PSU) alanlarından anlaşılabilir. \n \n \n HHS’ler aynı zamanda servislerin ayakta olup olmadığına yönelik olarak bir healthcheck servisi kurmalıdır.  HHS’lerin bu servis ile tüm network ve veritabanı ya da servislerinin ihtiyaç duydukları altyapısal erişimleri modellemeli ve bu servisi BKM ile paylaşmaları beklenmektedir. Bu servis düzenli olarak BKM tarafından çağırılarak servislerin ayakta olup olmadıklarının kontrolünün sağlanması planlanmaktadır. \n \n \n Sunulan her API için /health endpointi ile aşağıdaki bilgileri vermeleri beklenmektedir. \n GET /{api ismi}/{versiyon}/health \n Örnek: \n GET /obh/s1.0/health \n GET /hbh/s1.0/health \n GET /gkd/s1.0/health \n HHS ve YÖS API için health servisleri aşağıdaki servislerle kontrol edilebilir. \n GET /hhs-api/s1.0/health \n GET /yos-api/s1.0/health \n Başarılı yanıtta Http 200 kodu dönülmelidir. \nBaşarılı Yanıt: \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Koşullu  / İsteğe Bağlı \n Açıklama \n \n \n \n \n status \n status \n AN2..20 \n Z \n “UP”, “DOWN” değerlerini alabilir. \n \n \n \n Health servisinden yanıt alınamaması, hata alması ya da status DOWN gelmesi durumunda API Gatewayden istek HHS tarafına iletilmeyecektir. \n \n \n ÖHVPS servisleri ile ilgili olarak HHS’ler, BKM tarafından düzenli olarak sorgulanacaktır, erişilebilirlik ve kullanım oranları takip edilecektir. \n \n \n HHS’lerin servislerini erişim yüzdeleri açısından yıl bazında %99.75 oranında ayakta olmalarını sağlayacak şekilde kurgulamaları gerekmektedir. \n \n \n'},{title:"EK-1: İstek/Cevap Mesajlarında Kullanılacak Nesne Yapıları",frontmatter:{},regularPath:"/v1.0.2/contents/ekler.html",relativePath:"v1.0.2/contents/ekler.md",key:"v-bc107546",path:"/v1.0.2/contents/ekler.html",headers:[{level:2,title:"EK-1: İstek/Cevap Mesajlarında Kullanılacak Nesne Yapıları",slug:"ek-1-istek-cevap-mesajlarında-kullanılacak-nesne-yapıları"},{level:2,title:"EK-2: Sıralı Veri Türleri",slug:"ek-2-sıralı-veri-turleri"},{level:2,title:"EK-3: İstemci Sertifikalarının Tanım ve Yönetimi",slug:"ek-3-istemci-sertifikalarının-tanım-ve-yonetimi"},{level:2,title:"EK-4: Sunucu Sertifikaları",slug:"ek-4-sunucu-sertifikaları"},{level:2,title:"EK-5: Mesaj İmzalama Akışı",slug:"ek-5-mesaj-imzalama-akısı"},{level:3,title:"İmzalama Kuralları (YÖS)",slug:"imzalama-kuralları-yos"},{level:2,title:"EK-6: HHS/YÖS API Mimarisi",slug:"ek-6-hhs-yos-api-mimarisi"}],content:' EK-1: İstek/Cevap Mesajlarında Kullanılacak Nesne Yapıları \n Açık Bankacılık simülatör uygulaması üzerinde swagger dökümanlarının güncel sürümlerine erişim sağlanabilir. \n EK-2: Sıralı Veri Türleri \n \n \n \n Kod \n Açıklama \n \n \n \n \n TR.OHVPS.DataCode.KimlikTur \n Kod, Tip, Format K , TCKN , N11 M , MNO , AN1..30 (HHS’ye özel bireysel veya kurum müşteri numarası) Y , YKN , N11 P , PNO , AN7..9 \n \n \n TR.OHVPS.DataCode.KurumKimlikTur \n Kod, Tip, Format K , TCKN , N11 M , MNO , AN1..30 (HHS’ye özel bireysel veya kurum müşteri numarası) V , VKN , AN10 \n \n \n TR.OHVPS.DataCode.OhkTur \n Kod: B: Bireysel  K: Kurumsal \n \n \n TR.OHVPS.DataCode.KolasTur \n Müşterinin sorgulama istediği Kolay Adres Tipi değeridir. Alabileceği değerler BKM “Kolay Adresleme Sistemi Uygulama Kuralları” belgesinde tanımlıdır: T: Telefon Numarası E: E-Posta K: TCKN V: VKN Y: YKN P: Pasaport Numarası \n \n \n TR.OHVPS.DataCode.KareKodAksTur \n Karekod Akış Türü Karekod ödemesinin hangi akışla gerçekleştirildiğini gösterir.  01: FAST katılımcısından dinamik doğrulamalı hizmet alınan işyeri ödemesi 02: FAST katılımcısından statik doğrulamalı işyeri ödemesi 03: Kişiden kişiye ödemeler \n \n \n TR.OHVPS.DataCode.OdemeKaynak \n I: İnternet bankacılığından gönderilen ödemelerde kullanılır. A: Otomatik para makineleri (ATM) ile gönderilen ödemelerde kullanılır. T: Telefon bankacılığı ile gönderilen ödemelerde kullanılır. K: Kiosklar aracılığıyla gönderilen ödemelerde kullanılır. S: Şubeden girilen ödemelerde kullanılır. M: Mobil uygulamadan gönderilen ödemelerde kullanılır. D: Yukarıdakiler dışındaki ödeme kaynaklarından gönderilen ödemelerde kullanılır.  O: Açık bankacılık aracılığı ile gönderilen ödemelerde kullanılır. \n \n \n TR.OHVPS.DataCode.OdemeAmaci \n Ödemenin Amacına yönelik olarak aşağıdaki değerlerden birini alır: 01: Konut Kirası Ödemesi 02: İş yeri Kirası Ödemesi 03: Diğer Kira Ödemesi 04: E-Ticaret Ödemesi: Elektronik ticaret işlem amaçlı aktarımlar 05: Çalışan Ödemesi: Maaş, harcırah, prim gibi çalışan ödemeleri 06: Ticari ödeme: Ticari işletmelerin birbirlerine, kendi hesaplarına veya müşterilerine ödemeleri, borç, ithalat, ihracat, şirket satın alma, vb. kapsamında ödemeler 07: Bireysel Ödeme: Özel amaçlı (aile bireylerine, hediye, bağış, borç, alışveriş vs.) ödemeler 08: Yatırım: Mevduat, menkul kıymet, döviz, gayrı menkul, taşıt, varlık alımı, temettü ödeme, tahsilat vb. gibi yatırım amaçlı ödemeler 09: Finansal: Kredi, depo, repo, türev, finansal varlık alım/satımı vb. ödemeler 10: Eğitim ödemesi 11: Aidat ödemesi \n \n \n TR.OHVPS.DataCode.OdemeDurumu \n Ödemenin durumunu gösterir. Alabileceği değerler: 01: Gerçekleşti (Ödeme ilgili ödeme sistemine iletildi ve alıcı hesabına ulaştı.)  02: Gönderildi (Ödeme ilgili ödeme sistemine iletildi ancak alıcı hesabına ulaştığına dair teyit alınmadı.)İşlemin son durumunun teyidi için YÖS sorgulama yapmalıdır. 03- Gerçekleşmedi (Ödemenin ilgili ödeme sistemine işletiminde veya işlenmesi sırasında hata, zaman aşımı, sistemin gün sonu işlemlerine başlaması vb. durum oluştu ve ödeme gereçeklemedi veya iade edildi.) 04- Onayda bekliyor (Ödeme emri alındı. Çoklu onay akışının tamamlanması bekleniyor.) 05- İşleme Alındı ( Ödeme emri alındı. ) YÖS tarafından müşteriye gösterilmeyen bir koddur. Bu kod dönüldüğünde YÖS uygulamasında ÖHK’ya ödeme durumu 02-Gönderildi  olarak gösterilir. İşlemin son durumunun teyidi için YÖS sorgulama yapmalıdır. \n \n \n TR.OHVPS.DataCode.IslemAmaci \n Ödemenin Amacına yönelik olarak aşağıdaki değerlerden birini alır: 01: Konut Kirası Ödemesi 02: İş yeri Kirası Ödemesi 03: Diğer Kira Ödemesi 04: E-Ticaret Ödemesi: Elektronik ticaret işlem amaçlı aktarımlar 05: Çalışan Ödemesi: Maaş, harcırah, prim gibi çalışan ödemeleri 06: Ticari ödeme: Ticari işletmelerin birbirlerine, kendi hesaplarına veya müşterilerine ödemeleri, borç, ithalat, ihracat, şirket satın alma, vb. kapsamında ödemeler 07: Bireysel Ödeme: Özel amaçlı (aile bireylerine, hediye, bağış, borç, alışveriş vs.) ödemeler 08: Yatırım: Mevduat, menkul kıymet, döviz, gayrı menkul, taşıt, varlık alımı, temettü ödeme, tahsilat vb. gibi yatırım amaçlı ödemeler 09: Finansal: Kredi, depo, repo, türev, finansal varlık alım/satımı vb. ödemeler 10: Eğitim ödemesi 11: Aidat ödemesi 12: Diğer \n \n \n TR.OHVPS.DataCode.RizaDurumu \n B: Yetki Bekleniyor Y: Yetkilendirildi K: Yetki Kullanıldı E: Yetki Ödeme Emrine Dönüştü S: Yetki Sonlandırıldı I :Yetki Iptal \n \n \n TR.OHVPS.DataCode.GkdTur \n GKD yapılmasını gerekli bulduğu durumda HHS, YÖS’ün belirlediği yöntemi dikkate alarak kendi belirlediği GKD yöntemini bildirir: Y: Yönlendirmeli GKD A: Ayrık GKD \n \n \n TR.OHVPS.DataCode.RizaTip \n H: Hesap Bilgisi Rızası O: Ödeme Emri Rızası \n \n \n TR.OHVPS.DataCode.IzinTur \n 01: Temel Hesap Bilgisi 02: Ayrıntılı Hesap Bilgisi 03: Bakiye Bilgisi 04: Temel İşlem (Hesap Hareketleri) Bilgisi 05: Ayrıntılı İşlem Bilgisi \n \n \n TR.OHVPS.DataCode.OdemeSistemi \n İşlemin yönlendirildiği Ödeme Sistemine göre aşağıdaki değerlerden birini alabilir: H: Havale F: FAST E: EFT (PÖS) değerlerinden birini alabilir. \n \n \n TR.OHVPS.DataCode.IslemTuru \n Hesap hareketleri (işlemler) sorgusunda dönülen İşlem Türü (islTur) parametresi aşağıdaki değerlerden birini alabilir: HAVALE EFT FAST PARA_YATIRMA PARA_CEKME YABANCI_PARA_HAVALE YATIRIM_HESABINA_AKTARIM YATIRIM_HESABINDAN_AKTARIM KURUM_FATURA_ODEMESI CEK SENET SIGORTA_ODEMESI UCRET_KOMISYON_FAIZ SGK_ODEMESI VERGI_ODEMESI DOVIZ_ALIM DOVIZ_SATIM KREDI_ODEMESI KREDI_KULLANIM KK_ODEMESI KK_NAKIT_AVANS SANS_OYUNU UYE_ISYERI_ISLEMLERI HGS_OGS_ISLEMLERI DOGRUDAN_BORCLANDIRMA_SISTEMI DIGER \n \n \n TR.OHVPS.DataCode.HspTur \n Hesabın bireysel veya ticari nitelikte olduğunu belirtir: B: Bireysel T: Ticari \n \n \n TR.OHVPS.DataCode.KolasHspTur \n Hesabın bireysel veya ticari nitelikte olduğunu belirtir: B: Bireysel T: Ticari \n \n \n TR.OHVPS.DataCode.HspTip \n Hesap çeşidini belirtir: VADESIZ VADELI KREDILI_MEVDUAT_HESABI POS CEK YATIRIM \n \n \n TR.OHVPS.DataCode.HspDrm \n Hesabın durumunu belirtir: AKTIF PASIF KAPALI \n \n \n TR.OHVPS.DataCode.YetTip \n Alabileceği değerlere göre hangi belirtecin döneceğine karar verilir. yet_kod yenileme_belirteci \n \n \n TR.OHVPS.DataCode.BrcAlc \n İşlemin hesabı borçlandırdığı ya da alacaklandırdığı bilgisidir. B : Borç A : Alacak \n \n \n TR.OHVPS.DataCode.RizaIptDtyKod \n ‘01’ :Yeni Rıza Talebi ile İptal ‘02’ :Kullanıcı İsteği ile HHS üzerinden İptal ‘03’ :Kullanıcı İsteği ile YÖS üzerinden İptal ‘04’ :Süre Aşımı : Yetki Bekleniyor ‘05’ :Süre Aşımı : Yetkilendirildi ‘06’ :Süre Aşımı : Yetki Ödemeye Dönüşmedi ‘07’ :GKD iptali : Aynı rıza no ile mükerrer çağrımı ‘08’ :GKD iptali : Rızano ile TCKN uyuşmaması ‘09’ :GKD iptali : Uygun ürünü bulunmuyor ‘10’ :GKD iptali : HHS Açık Bankacılık kanalı işleme kapalı ’11’ :GKD iptali : Hesap Yetki Sorunu ‘12’ :GKD iptali : ÖHK HHS kontrollerini aşamadı ‘13’ :GKD iptali : ÖHK isteği ile GKD’den vazgeçildi ‘14’ :GKD iptali : Fraud Şüphesi ‘99’ :GKD iptali : Diğer \n \n \n TR.OHVPS.DataCode.PSUInitiated \n ‘E’ : Evet ‘H’ : Hayır \n \n \n TR.OHVPS.DataCode.HHSYOSSrlmKrtr \n ‘kod’ : Kod,‘unv’ : Unvan \n \n \n TR.OHVPS.DataCode.SrlmYon \n ‘A’: Azalan değerle sıralama ‘Y’: Artan değerle sıralama \n \n \n TR.OHVPS.DataCode.ZmnAralik \n 0 : Kayıt Yok  1 : 0-2 saat 2 : 2-24 saat  3 : 1-3 gün   4 : 3-15 gün\t  5 : 15 gün ve üstü \n \n \n TR.OHVPS.DataCode.VarYok \n 0 : Kayıt Yok   1 : Kayıt Var \n \n \n TR.OHVPS.DataCode.HHSDurumu \n A : Açık. Üretim Ortamında HHS’nin aktif bir şekilde hizmet vermesi durumu.  Y : Yaygınlaştırma. Üretim Ortamında HHS’nin kendisi tarafından tanımlanmış kısıtlı ÖHK’ya hizmet vermesi durumu.    G : Geçici Hizmet Veremiyor. HHS servislerinde teknik bir sorun olması nedeniyle HHS’nin hizmet verememesi durumu.  K: Kapalı. HHS’nin hizmet vermeme durumu. \n EK-3: İstemci Sertifikalarının Tanım ve Yönetimi \n Tüm katılımcıların BKM API Geçidine erişebilmesi için, BKM tarafından yapılan istemci sertifika doğrulamasından geçmesi gerekmektedir. İstemci sertifikası üretilmeden önce katılımcıların CSR üretme akışını tamamlaması gerekmektedir. \n OpenSSL ile CSR (Certificate Signing Request) Oluşturma \nAşağıdaki komut ile 2048-bit RSA private key ve CSR oluşturulur. \nopenssl req -new -newkey rsa:2048 -nodes -keyout PRIVATEKEY.key -out CSR.csr \n CSR ile ilgili detay bilgilerin girişinde; \nCommon Name (CN) olarak 4 karakterli hhsKod ya da yosKod değeri ile, \ndiğer alanlar için de kurum bilgileriniz ile giriş yapılır. \n Tüm bilgilerin girilmesinden sonra oluşan private key dosyası kurumunuzda saklanır.\nCSR dosyası ise istemci sertifika üretmek üzere kullanılır. Bu aşamada takip edilmesi gereken adımlar şu şekildedir: \n Katılımcıların, TRIP ortamı üzerinden, BKM Tarafından yetki verilmiş kullanıcılarının görebileceği "İstemci Sertifika Talebi" menü adımına giriş yapmaları beklenir. Açılan ekranda,"CSR Dosyası Yükleme" alanı içerisine, katılımcının üretmiş olduğu csr dosyası yüklenir. Yaklaşık 1 dakika içerisinde kuruma özel olarak üretilmiş olan client sertifikası indirilmeye hazır hale gelecektir. "İndir" butonu ile client sertifika indirilir. İstemci tarafında web isteğinin ilgili sertifika ile ilişkilendirilerek oluşturulması gerekmektedir. \n Uzun dönemli olarak hazırlanacak olan sertifikalar sertifikasyon ve üretim ortamlarında kullanılacaktır. Sertifikaların işlevselliği ve geçerliliği bu aşamalarda sınanacaktır. \n BKM API Geçidi çözümünün test ve üretim ortamları ayrımında istemci sertifikaları, HHS Listeleme API erişimleri ve Sertifikasyon bağlantıları Şekil 15-HHS/YÖS API Mimarisi Diagramında resmedilmiştir. \n EK-4: Sunucu Sertifikaları \n Sunucu sertifikalarının endpoint bilgisini (Fqdn) içerecek ve global bir Certification Authority tarafından imzalanmış olarak sunulması gerekmektedir.\nÖrneğin; entegrasyon formu içerinde yer alan URL bilgisinin (test.xbank.com.tr) sertifika içerisinde tanımlı olması ve bu sertifikanın global bir CA örneğin Verisign tarafından imzalanmış olarak sunulması gerekmektedir. \n Hizmet sağlayıcı olan HHS\'ler tarafından sunucu sertifikaları uygulanmalıdır. \n EK-5: Mesaj İmzalama Akışı \n Dijital imzalama yapısı, ÖHVPS API’de gerçekleştirilen işlemlerin ve taşınan verilerin bütünlük ve inkâr edilemezliğini sağlamak amacıyla kurgulanmıştır.\nBu kapsamda imzalama akışı aşağıdaki gibi olmalıdır: \n \n HHS ya da YÖS öncelikle özel ve açık anahtarlarını oluşturmalıdır. Bu anahtarları oluşturmak için aşağıda “openssl” kullanılarak oluşturma örneği paylaşılmıştır.  Bu anahtarlardan özel olan anahtar mesajı imzalamak için kullanılacak olup, açık anahtar ise mesajı doğrulamak amacıyla mesajın alıcısı tarafından kullanılacaktır. \n \n private_key.pem ve public_key.pem dosyasinin içerikleri kod tarafında kullanılacaktır. \n --private.pem => Özel anahtarın ismi\nopenssl genrsa -out private.pem 2048 \n --public_key.pem => Açık anahtarın ismi\nopenssl rsa -in private.pem -pubout -outform PEM -out public_key.pem \n --private_key.pem => Özel anahtarın PCKS8 formatına çevrilmesi (Java açısından PCKS8 formatında olma ihtiyacı nedeniyle) openssl pkcs8 -topk8 -inform PEM -in private.pem -out private_key.pem -nocrypt \n \n \n Açık ve Özel anahtarlar oluşturulduktan sonra Açık Anahtar BKM ile paylaşılır. BKM bu açık anahtarı diğer katılımcıların ulaşabilmesi ve alabilmesi için bir Anahtar Deposu yaklaşımı ile bünyesinde tutar. İlgili anahtarı iletebilmek ve alabilmek için kullanılacak HHS/YOS API ye erişim detayları EK-6 bölümünde detaylı olarak paylaşılmıştır.  Eğer kurumun ilgili anahtar çiftinin yenilenme durumu söz konusu ise yenilemenin hemen ardından açık anahtar yeni bir imzalama yapılmadan önce mutlaka BKM ile paylaşılmalıdır. \n \n \n İmzalı mesajı açacak olan kurum mesajı imzalayan kurumun açık anahtarını her sorguda yeniden almak durumunda değildir. Belirli periyodlarda kendi ortamındaki anahtarı yenileyerek sistemi işletebilir. Ancak imzalayan kurum anahtar çifti yenilemesi yaptığında BKM ile açık anahtarını paylaşsa dahi imzalı mesajı doğrulayacak taraf eski açık anahtar ile doğrulama yapmaya çalıştığı için hata alacaktır. Bu ilk hata durumunda hızlıca BKM üzerinden yeni anahtarı alıp mesajı tekrar doğrulamayı denemelidir. Eğer yine hata alıyor ise doğrulama işlemini hata statüsüne almalıdır. Bu sebeple anahtar yenileyen kurum yeni açık anahtarını yeni bir mesaj imzalama yapmadan önce mutlaka BKM ile paylaşmalıdır. \n \n \n PSU-Fraud-Check alanı için de JWT formatında çıktı hazırlanması beklenmektedir. Örnek bir PSU-Fraud-Check payload değeri aşağıdaki gibidir; \n {"AnomalyFlag": "0", \n"LastPasswordChangeFlag": "1", \n"FirstLoginFlag": "1", \n"DeviceFirstLoginFlag": "1", \n"BlacklistFlag": "0", \n"MalwareFlag": "0", \n"UnsafeAccountFlag": "0", \n"exp": 1663424479, \n"iat": 1663338079, \n"iss": "[https://apigw.bkm.com.tr|https://apigw.bkm.com.tr/]" } \n İmzalama Kuralları (YÖS) \n Bir YÖS üzerinden başlayan akış örnek olarak paylaşılmıştır. \n \n \n YÖS, mesaj imzalama gerektiren her API isteğinin HTTP gövdesini (request body) kendi özel anahtarı ile şifreleyerek imza bilgisini oluşturur. \n \n \n Ardından bu imza verisini, göndereceği mesajın istek başlığında yer alan X-JWS-Signature alanında göndermelidir. \n \n \n X-JWS-Signature alanında gönderilecek olan bilgi aşağıdaki yöntem ile oluşturulmalıdır. \n \n \n Bu alana yazılacak olan bilgi JWT formatında oluşturulmalıdır. \n \n \n Bir JWT, header-payload-signature alanlarından oluşmaktadır. \n \n Header alanında JWT’yi imzalamak için kullanılacak algoritma belirtilmelidir.  Standartlar kapsamında RS256 kullanılacaktır. \n Payload kısmında özel olarak oluşturulacak olan “body” claim alanına istek gövdesi (request body) verisinin SHA256 hash değeri karşılığı yazılmalıdır. \n JSON payload oluşturulurken RFC 7519 baz alınmalıdır. "iss" (Issuer) Claim, "exp" (Expiration Time) Claim, "iat" (Issued At) Claim, “body” Claim alanlarının gönderilmesi zorunludur. ^RFC7519 \na.\t"iss" (Issuer) Claim : Kurumunuza özel bilgidir. \nb.\t"exp" (Expiration Time) Claim: Saniye cinsinden (Unix time) imzanın son geçerli olduğu tarih. Bu tarih  mevcut sunucu saatinizden 60 dakika sonra olacak şekilde kullanılmalıdır. \nc.\t"iat" (Issued At) Claim : Saniye cinsinden (Unix time) imzanın oluşturulduğu tarih. Bu tarih  mevcut sunucu saatinizden 5 dakika önce olacak şekilde kullanılmalıdır. \nd.\t“body” Claim : istek gövdesi (request body) verisinin SHA256 hash değeri karşılığı. \n Signature alanında da özel anahtar ile imzalanmış olan imza içeriği yer alacaktır. \n \n X-JWS-Signature:   JWS imzasını içeren üstbilgi. Bu başlığın ne zaman belirtilmesi gerektiği hususu ilgili endpoint için belirtilmiştir. \n Örnek X-JWS-Signature Payload Değeri \n { \n"iss": "https://apigw.bkm.com.tr", \n"exp": 1646832405, \n"iat": 1646746005, \n"body": "c543072f97a761a1d891dc81acc380bc1e6f61ca6541bd93ebfdece338457922" \n} \n \n \n \n \n YÖS, isteği gönderir. Sadece mesajın bütünlüğünü ve doğruluğunu teyit amacı ile istek gövdesi (request body) SHA256 hash değeri imzalanarak X-JWS-Signature alanında bu imza iletilir. İsteğin gövde (request body) kısmı açık ve şifresiz olarak gönderilmektedir. \n \n \n HHS, isteği alır, talebi gerçekleştirmeden önce aldığı API isteklerinin imzasını doğrulamalıdır. X-JWS-Signature alanındaki JWT aşağıdaki adımlarla doğrulanmalıdır. \n \n Header kısmındaki algoritmanin RS256 olduğu kontrol edilir. \n Gönderen kurumun açık anahtarı ile JWT verify (doğrulama) işlemi yapılır. \n Yukarıdaki işlemlerin doğruluğunun ardından JWT’nin payload kısmındaki “body” claim alanındaki bilginin, isteğin gövde verisinin SHA256 hash değerlerinin aynı olduğu kontrol edilir. \n Örnek checksum değeri   "a64b19f95eeb1fb0a0a3e2dbbc6e3d8472c52184d4543417ddc6d156fc5c5571" veya   "A64B19F95EEB1FB0A0A3E2DBBC6E3D8472C52184D4543417DDC6D156FC5C5571" şeklinde olabilir. İki hali de aynı değere sahiptir. Kontrollerde buna dikkat edilmesi gerekmektedir. \n \n \n \n Yukarıdaki işlemler ile doğruluğu teyit edilmiş olan isteğin talebi gerçekleştirir. \n \n \n Eğer istek doğrulanamıyor ise gönderen kurumun açık ve özel anahtar çifti yenilenmiş olabilir. \n \n \n BKM HHS API  üzerinden ilgili kurumun bilgilerini (kurum kodu vs) kullanarak kurumun detay bilgileri çeker ve kendi ortamında yeniler. \n \n \n Ardından imzayı tekrar açık anahtar ile doğrulayarak kontroller gerçekleştirilir. (Eğer halen doğrulama işlemi başarısız ise bu istek için hata akışı çalıştırılır.  TR.OHVPS.Resource.InvalidSignature  kodu ile hata üretilebilir.) \n \n \n İmza bilgisinin beklendiği (x-jws-signature) servislerde, bu bilginin iletilmediği durumlarda  TR.OHVPS.Resource.MissingSignature  hatası üretilebilir. \n \n \n HHS isteği işledikten sonra cevabı oluştururken de yukarıdaki akışlar ile göndereceği cevabı imzalamalıdır. \n \n \n İstek yanıt gövdesinin SHA256 checksum değeri için hexadecimal çıktı kullanılacaktır. Oluşacak çıktının 64 karakter olması beklenmektedir. Kontrol için "^[A-Fa-f0-9]{64}$" RegEx tarifini kullanabilirsiniz. \n \n \n Örnek bir gövde: \n {"katilimciBlg":{"hhsKod":"8000","yosKod":"8000"},"gkd":{"yetYntm":"Y","yonAdr":"https://boss-test.bkm.com.tr/boss/ab/yosSimulator/8000?drmKod=6021de9f-55e7-454a-94be-2044866b22e1"},"kmlk":{"kmlkTur":"M","kmlkVrs":"123456","ohkTur":"B"},"hspBlg":{"iznBlg":{"iznTur":["01","02","03","04","05"],"erisimIzniSonTrh":"2022-10-12T23:59:59+03:00","hesapIslemBslZmn":"2021-10-10T00:00:00+03:00","hesapIslemBtsZmn":"2023-10-10T23:59:59+03:00"}}}\n \n Bu gövdenin checksum\'ı: \n a64b19f95eeb1fb0a0a3e2dbbc6e3d8472c52184d4543417ddc6d156fc5c5571\n \n Bu checksum\'ın iletildiği x-jws-signature başlık değeri: \n eyJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJodHRwczovL2FwaWd3LmJrbS5jb20udHIiLCJleHAiOjE2NjU0NzU1NjIsImlhdCI6MTY2NTM4OTE2MiwiYm9keSI6ImE2NGIxOWY5NWVlYjFmYjBhMGEzZTJkYmJjNmUzZDg0NzJjNTIxODRkNDU0MzQxN2RkYzZkMTU2ZmM1YzU1NzEifQ.Q65PI_1fTEzzBMirvmJvXgVX3orhhZ4_UqujtGdHkU7me-1ymIjvPrzy3kfyER1pedFb7HDCBuPvYoqjX8eUnpiiZsxfzCiEa0McIhoFeUOggq-O8VihItp8bLr2DWwQ9JHN1-WXB2mL31KAKFAL1VY9-DXuAdT-RfE_SLYsl2ycmNy4ti4XvfDvvlE56ZsieFZ727VuwR8wi7F0kKDc6UhjaMF9xcUeAM1fxX-bmcOaOo1NZGC0vvgjNZKz_OJrN-q8VhWYnQPiJ7wY7S9IG8bHIkBImKSVf8LuOEvl8u0BZzADLH1iOBd9x2l1plyI_NLPTrnOqhWhKlljkkJBCg\n \n Eğer PSU-Fraud-Check için başlık gönderilecekse, yine JWT formatında imza üretilmelidir. Örnek bir psu-fraud-check başlık değeri: \n eyJhbGciOiJSUzI1NiJ9.eyJBbm9tYWx5RmxhZyI6IjAiLCJMYXN0UGFzc3dvcmRDaGFuZ2VGbGFnIjoiMSIsIkZpcnN0TG9naW5GbGFnIjoiMSIsIkRldmljZUZpcnN0TG9naW5GbGFnIjoiMSIsIkJsYWNrbGlzdEZsYWciOiIwIiwiTWFsd2FyZUZsYWciOiIwIiwiVW5zYWZlQWNjb3VudEZsYWciOiIwIiwiZXhwIjoxNjY1NDc1NTU2LCJpYXQiOjE2NjUzODkxNTYsImlzcyI6Imh0dHBzOi8vYXBpZ3cuYmttLmNvbS50ciJ9.DhUh_nsXDuNIrvsQ3KOhOXdVcJg6fTDVW8K1oea8kLtmb7n-_hJHY3mWX5zzobu-Vh2VvFzIxPhHtol6gLHFktmIMiQ9TDHb_mRZFXgJB4ToNfqc3Fy9mi5bS8By2IYi1HxDaCStstaZDaunzXfHCtqybfZXyk6teDrf-iIf6lqX9Keo7GZO-Y7mP7C13-c_QwyNKrZK4TZwUQbecRqXYn1DcEHM7kukQHTar_hKBWkXPmNpScY0J2rKksr4ejR1uLhdQm-Pdwoe9y6qrNEB79vMLBkRNtbuV0vc1GYHp_YKkzBKBI_58uuB2GD9877CsrcRnHMQb88xpxiPKh6-ew\n EK-6: HHS/YÖS API Mimarisi \n HHS/YÖS API Uygulama Mimarisinde Test ve Üretim ortamlarında aşağıdaki alanda yer almaktadır. \n \n Şekil 15: HHS/YÖS API Mimarisi \n'},{title:"POST /erisim-belirteci",frontmatter:{},regularPath:"/v1.0.2/contents/erisim-belirteci.html",relativePath:"v1.0.2/contents/erisim-belirteci.md",key:"v-485bbe8d",path:"/v1.0.2/contents/erisim-belirteci.html",content:" POST /erisim-belirteci \n İSTEK: \n YÖS erisim-belirteci erişim adresini 2 amaçla kullanır: \n \n \n Bir önceki adımdan aldığı rizaNo, rizaTip (ödeme emri başlatma hizmetinde “O”, hesap bilgisi hizmetinde “H”) ve GKD sonrası dönülen yetKod bilgilerini kullanarak HHS nezdinde ErisimBelirteci nesnesi oluşturmak üzere istekte bulunur. YÖS’ün istekte bulunabilmesi için GKD adımının başarılı bir şekilde tamamlanması rizaDrm bilgisinin ‘yetkilendirildi’ olması gerekir. Erişim Belirteci nesnesi ile rızası nesnesi (Ödeme Emri Rızası veya Hesap Bilgisi Rızası) arasındaki ilişki rıza numarası üzerinden sağlanır. \n \n \n Aldığı erişim belirtecinin Geçerlilik Süresinin dolduğu durumda, yenileme belirteci karşılığında yeni bir erişim belirteci alması gerekmektedir. \n \n \n POST /erisim-belirteci isteğinin (REQUEST) gövdesinde (BODY)  “ErisimBelirteciIstegi” nesnesi (Tablo-23) kullanılır. İstek başarıyla sonuçlanırsa HHS kaynak sunucusunda “ErisimBelirteci” nesnesi (Tablo 24) oluşturulur veya (Yenileme Belirteci için) güncellenir. Rıza durumu “Yetki Kullanıldı” olarak güncellenir. \n Erişim Belirteci POST işlemi sonucunda HTTP 200 dönülmesi gerekmektedir. \n Tablo 23: “ErisimBelirteciIstegi” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format:Veri modeli İsmi \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n RızaNo \n rizaNo \n AN1..128 \n Z \n Rıza nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n Rıza Tipi \n rizaTip \n AN1 \n Z \n O veya H (TR.OHVPS.DataCode.RizaTip) \n \n \n Yetki Tipi \n yetTip \n AN1..50 \n Z \n “yet_kod” yada “yenileme_belirteci” değerini alabilir.  (TR.OHVPS.DataCode.YetTip) \n \n \n Yetki Kodu \n yetKod \n AN1..255 \n K \n GKD işleminden dönen yetkilendirme kodudur. Tek kullanımlık olup, aynı yetKod ile birden fazla token alınamaz. yetKod Parametresinin yaşam ömrü 5 dakika olmalıdır. yetTip = “yet_kod” ise zorunludur. \n \n \n Yenilenme Belirteci \n yenilemeBelirteci \n AN1..4096 \n K \n Erişim belirtecinin yenilenmesi amacıyla kullanılır. yetTip = “yenileme_belirteci” ise kullanımı zorunludur. \n \n \n \n BAŞARILI YANIT: \n POST işleminin RESPONSE gövdesini (BODY) oluşturan “erisimBelirteci” nesnesinde (Tablo-19) bulunan erişim belirteci değeri ödeme emrinin başlatılması esnasında kullanılır. \n Tablo 24: \"ErisimBelirteci\" nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format:Veri modeli İsmi \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Erişim Belirteci \n erisimBelirteci \n AN1..4096 \n Z \n Yetkilendirme Kodu karşılığında HHS tarafından dönülen ve sonraki hesap bilgisi ve ödeme emri servislerine erişimde kullanılan bilgidir. \n \n \n Geçerlilik Süresi \n gecerlilikSuresi \n N1..9 \n Z \n Erişim Belirtecini saniye cinsinden geçerlilik süresidir.  Erişim belirteci geçerli olduğu son tarih ; Hesap Bilgisi Rızası için en fazla 30 gün olmalıdır. Erişimin Geçerli Olduğu Son Tarih(erisimIzniSonTrh); Erişim Belirteci Geçerlilik Süresi'nden küçük ise Erişimin Geçerli Olduğu Son Tarih değeri ile sınırlıdır. Ödeme Başlatma Rızası için 5 dakika olmalıdır. \n \n \n Yenileme Belirteci \n yenilemeBelirteci \n AN1..4096 \n Z \n Erişim belirtecinin yenilenmesi amacıyla kullanılır. \n \n \n Yenileme Belirteci Geçerlik Süresi \n yenilemeBelirteciGecerlilikSuresi \n N1..9 \n Z \n Yenileme belirtecinin saniye cinsinden geçerlilik süresidir. Yenileme belirtecinin geçerli olduğu son tarih ; Hesap Bilgisi için Erişimin Geçerli Olduğu Son Tarih ile sınırlı olmalıdır. Bu tarih geldiği zaman Hesap Bilgisi Rıza Durumunu ”Yetki Sonlandırıldı” statüsüne çekilmesi gerekir. Ödeme Başlatma için Rıza Oluşturma Zamanından 15 gün sonrası olmalıdır. 15 gün süresi sorgulama servislerinin çağrımını destekleyecek şekilde uzun tutulmuştur. İleri vadeli işlemler bu kapsamda değildir.  Ödeme emri 5 dakika içinde gerçekleştirilmelidir. Gerçekleşmediğinde 4.2.8 bölümünde aktarılan rıza statü güncellemesi yapılmalıdır. \n \n \n \n erisim-belirteci erisim noktasından elde edilen erisimBelirteci, ilişkilendirildiği nesne veya işlem için gönderilen POST isteği başlığında x-access-token alanında iletilir. \n Yenilenme Belirteci (refreshToken) kullanılarak Erişim Belirteci (accessToken) alındığında, dönen yanıttaki Yenileme Belirteci Geçerlik Süresi (yenilemeBelirteciGecerlilikSuresi) geçen süre eksiltilerek, kalan zamanın saniye cinsinden hesaplanmasıyla iletilmelidir. \n Yenileme Belirteci ile Erişim Belirteci güncellendiğinde, HHS'den dönen yenilemeBelirteci değeri değişebilir, YÖS bu güncel anahtarı saklamalı ve sonraki erisimBelirteci isteğini yenilenmiş olan yenilemeBelirteci ile yapmalıdır. \n Erişim Belirteci API çağrımı sırasında rıza durumları kontrol edilmelidir. Bu kontrollerin nasıl yapılması gerektiği 4-Rıza Durumları bölümünde aktarılmıştır. \n Yenileme belirteci karşılığında yeni bir erişim belirteci alınması sırasında hata alınması durumunda, HHS'nin döndüğü hata yanıtında httpCode = 401 ve errorCode = \"TR.OHVPS.Connection.InvalidToken\" geldiği durumda, YÖS tarafından HHS'ye ilgili rıza için sistemsel olarak iptal isteği gönderilmelidir. \n"},{title:"5.\tGüçlü Kimlik Doğrulama",frontmatter:{},regularPath:"/v1.0.2/contents/gkd.html",relativePath:"v1.0.2/contents/gkd.md",key:"v-d80dcb06",path:"/v1.0.2/contents/gkd.html",headers:[{level:2,title:"5.1.\tYönlendirmeli Güçlü Kimlik Doğrulama",slug:"_5-1-yonlendirmeli-guclu-kimlik-dogrulama"},{level:2,title:"5.2.\tAyrık Güçlü Kimlik Doğrulama",slug:"_5-2-ayrık-guclu-kimlik-dogrulama"},{level:2,title:"5.3.\tYönlendirme/Bildirim Adresleri ve Durum Kodu Parametresi",slug:"_5-3-yonlendirme-bildirim-adresleri-ve-durum-kodu-parametresi"},{level:2,title:"5.4\tHealthcheck API",slug:"_5-4healthcheck-api"},{level:2,title:"5.5  Güçlü Kimlik Doğrulama Kontrolleri",slug:"_5-5-guclu-kimlik-dogrulama-kontrolleri"}],content:" 5.\tGüçlü Kimlik Doğrulama \n Müşteri için güçlü kimlik doğrulama, ÖHK’nın (müşterinin) kimliğinin doğrulamada kullanılan ve bir bileşenin ele geçirilmesinin diğer bileşenin güvenliğini tehlikeye atmayacağı en az iki bileşenden oluşan, bu iki bileşenin de müşterinin “bildiği”, “sahip olduğu” veya “biyometrik bir karakteristiği olan” bileşen sınıflarından farklı ikisine ait olacak şekilde seçildiği yöntemi tanımlar. \n Ödeme ve Elektronik Para Kuruluşlarının Bilgi Sistemleri ile Ödeme Hizmeti Sağlayıcılarının Ödeme Hizmetleri Alanındaki Veri Paylaşım Servislerine İlişkin Tebliğ uyarınca hesap bilgisi hizmetinde müşterinin onayının alınması esnasında ve ödeme emri başlatma hizmetinde her bir ödeme emri başlatma işleminde  HHS tarafından müşteriye güçlü kimlik doğrulama (GKD) uygulanması esastır.  Buna göre: \n \n \n Hesap bilgisi hizmetinde ÖHK’nın onayının alınması esnasında  Tebliğin 26 ncı maddesinin 1 inci fıkrası uyarınca  HHS tarafından ÖHK’ya GKD uygulanır. \n \n \n Ödeme emri başlatma hizmetinde,  Tebliğin 26 ncı maddesinin 2 nci fıkrası uyarınca  HHS tarafından ÖHK’ya güçlü kimlik doğrulama uygulanır ve işlem doğrulama kodu ile ÖHK’nın onayı alınır. \n \n \n Ödeme emri başlatma hizmetinde,  Tebliğin 26 ncı maddesinin 3 nci fıkrası uyarınca  HHS tarafından ÖHK’ya güçlü kimlik doğrulama uygulanmasına ilişkin istisna veya ilave güvenlik önlemleri işbu API İlke ve Kuralları belgesinde tanımlanır. \n \n \n HHS, güçlü kimlik doğrulama sürecinde ÖHK’nin sahip olduğu bileşen sınıfı olarak SMS OTP ya da SMS ile işlem doğrulama kodu kullanabilir. \n \n \n HHS, aşağıdaki hallerde veya  Tebliğin 10 uncu maddesinin ikinci fıkrasında  belirtilen risk değerlendirmesi sonucuna göre tek bileşen ile kimlik doğrulama yapabilir. \n \n Ödemenin göndereni ve alıcısının aynı olması, \n Daha önce tanımlanmış güvenli alıcılar listesine ödeme yapılması, \n ÖHK’nin talimatına istinaden gerçekleştirilen düzenli bir ödeme olması. \n \n \n \n Tek bileşen ile kimlik doğrulama yapılan bu işlemlerle ilgili olarak gerçekleştirilen işlemin müşteri tarafından yapıldığını ispat etme yükümlülüğü HHS’ye ait olur. \n \n \n İşlem Doğrulamada  Tebliğin 3 üncü maddesinin birinci fıkrası ğğ bendindeki  işlem bilgisi tanımına uygun olarak aşağıdaki bilgiler ile  Tebliğin 3 üncü maddesinin birinci fıkrası hh bendinde  tanımlanan işleme özel üretilmiş işlem doğrulama kodu birlikte kullanılır. \n \n Alıcı Unvan (Kolas akışında maskeli olarak)  (ödeme emri başlatma hizmeti) \n Tutar (ödeme emri başlatma hizmeti) \n Referans bilgisi (8 karakterden küçük ise alanın tüm değeri, büyük ise ilk 4 ve son 4 hanesi) \n \n İşleme ait yukarıdaki bilgilerden en az biri değiştiği zaman  Tebliğin 3 üncü maddesinin birinci fıkrası hh bendinde  belirtildiği gibi yeni bir işlem doğrulama kodu üretilecek şekilde akış kurgulanmalıdır. \n \n \n İşlem doğrulama kodunun gönderilmesinden HHS sorumludur. HHS,  Tebliğin 10 uncu maddesinin ikinci fıkrasında  belirtilen risk değerlendirmesi sonucuna göre işlem doğrulama kodu kullanmaksızın ÖHK’nın onayını alabilir. İşlem doğrulama kodu kullanılmayan işlemlerle ilgili olarak gerçekleştirilen işlemin ÖHK tarafından yapıldığını ispat etme yükümlülüğü HHS’ye aittir. \n \n \n ÖHVPS API standartı kapsamında iki adet Güçlü Kimlik Doğrulama (GKD) yöntemi kullanılacaktır: \n \n Yönlendirmeli (Redirect) GKD Yöntemi \n Ayrık (Decoupled) GKD Yöntemi \n \n \n \n HHS asgari olarak tarayıcı tabanlı Yönlendirmeli GKD yöntemini desteklemek zorundadır. \n \n \n Çerçeve sözleşme kapsamında olmayan tek seferlik ödeme işlemleri sadece Yönlendirmeli GKD yöntemi ile gerçekleştirilebilir. \n 5.1.\tYönlendirmeli Güçlü Kimlik Doğrulama \n Yönlendirmeli GKD Yönteminde, müşteri kimlik doğrulama için YÖS tarafından HHS arayüzüne yönlendirilir. \n Müşteri HHS’ye (uygulama veya web arayüzü vasıtasıyla) yönlendirildikten sonra müşterinin güçlü kimlik doğrulaması adım adım ve doğrudan HHS ile müşteri arasında yürütülür. GKD’nin tamamlanmasından sonra müşteri tekrar YÖS uygulamasına yönlendirilir.Yönlendirmenin aynı sayfada HTTP 302 yanıt koduyla yapılması gerekmektedir. \n Yönlendirmeli GKD Yöntemi için üst düzey örnek iş akışı aşağıdaki adımlardan oluşur: \n \n YÖS, GKD için HHS tarafından tanımlanan arayüze (tarayıcı ya da uygulama) yönlendirme yapar. \n Müşteri, YÖS arayüzünden ayrılır, yönlendirildiği HHS arayüzü üzerinde kimlik doğrulama işlemlerini gerçekleştirir. \n GKD tamamlandıktan sonra müşteri, YÖS arayüzüne tekrar yönlendirilir ve işlem sonucu görüntülenir. \n \n Yönlendirmeli GKD için temel gereklilikler şunlardır: \n \n Ödeme hizmeti (hesap bilgisi veya ödeme emri başlatma hizmeti) tarayıcı ya da uygulama tabanlı bir şekilde sunulabilir. Bu nedenle,  YÖS ve HHS’lerin Yönlendirmeli GKD için asgari olarak tarayıcı tabanlı yönlendirme akışını desteklemeleri gerekmektedir. \n Çerçeve sözleşme (ÇS) kapsamında olmayan tek seferlik ödeme işlemleri sadece Yönlendirmeli GKD yöntemi ile gerçekleştirilebilir. \n \n Tarayıcı Tabanlı Yönlendirme \n HHS’nin web arayüzüne, \n \n HHS’nin mobil uygulamasının olmadığı, \n ÖHK’nın ödeme hizmetini (hesap bilgisi veya ödeme emri başlatma hizmeti) sunduğu mobil cihazda HHS uygulamasının yüklü olmadığı, \ndurumlarda yönlendirme yapılır. \n \n YÖS’ün mobil uygulaması varsa mobil cihazda uygulamadan tarayıcıya, YÖS’ün mobil uygulaması yoksa ödeme hizmetinin sunduğu cihazda (Kişisel Bilgisayar veya Mobil Cihaz) tarayıcı üzerinden yönlendirme yapılır. \n Uygulama Tabanlı Yönlendirme \n ÖHK’nın ödeme hizmetini (hesap bilgisi veya ödeme emri başlatma hizmeti) YÖS’ün mobil uygulaması ile kullanıyorsa, aynı mobil cihazda HHS’nin mobil uygulamasının yüklenmiş olması durumunda, ÖHK doğrulamasının HHS mobil uygulaması tarafından yapılması için uygulama tabanlı yönlendirme yapılır. Böylece ÖHK, ödeme hizmetine erişim için HHS’nin mobil kanalına erişim sırasında kullandığı doğrulama yöntemini ile doğrulanabilir. \n Tablo 5: Yönlendirmeli Güçlü Kimlik Doğrulama Kanalları \n \n \n \n Doğrulama Yöntemi \n YÖS Olası Ortam \n HHS Olası Ortam \n \n \n \n \n Tarayıcı Tabanlı Yönlendirme \n Kişisel Bilgisayar (masaüstü, dizüstü)/Mobil Cihaz \n Kişisel Bilgisayar (masaüstü, dizüstü) / Mobil Cihaz \n \n \n Uygulama Tabanlı Yönlendirme \n Mobil Cihaz \n Mobil Cihaz \n 5.2.\tAyrık Güçlü Kimlik Doğrulama \n Ayrık GKD Yöntemi iş akışı, Yönlendirmeli GKD Yönteminin işlem akışına benzer. Fark, HHS'nin, çevrimiçi arayüzünden bağımsız olan herhangi bir uygulama veya cihaz aracılığıyla ödeme işlemi ayrıntılarını içeren bir anlık bildirim (push notification) göndererek müşteriden kimlik doğrulaması istemesidir. Ayrık GKD Yöntemine dayalı bir işlem için (çok basitleştirilmiş) üst düzey örnek bilgi akışı şu şekildedir: \n \n Müşteri, YÖS arayüzünde işlemini başlatır. \n YÖS, talebini müşteriye ait TCKN, VKN, YKN gibi tekil tanımlayıcı kimlik numarası bilgisi içerecek şekilde HHS’ye iletilir. \n HHS tekil tanımlayıcı bilgisini kullanarak farklı bir cihaz veya uygulama üzerinden müşteriye anlık bildirim gönderir ve doğrulama yapılmasını sağlar. Bu şekilde HHS kendi mobil uygulamasına erişim için kullanılan doğrulama yöntemini aynen kullanabilecektir. \n YÖS, herhangi bir yere yönlendirme yapmadan işlemin sonucunu bekler, müşteri YÖS arayüzünden ayrılmaz (arayüz aynı kalır). \n Kimlik doğrulama sonrası, YÖS arayüzünde işlem sonucu görüntülenir. \n 5.3.\tYönlendirme/Bildirim Adresleri ve Durum Kodu Parametresi \n CSRF Ataklarından korunmak için ve YÖS uygulamasının bir önceki durumunu restore edebilmesi için; YÖS tarafından iletilen yönlendirme ve bildirim adreslerine , Oauth2 standartlarındaki state parametresine eşdeğer,   durum kodu (drmKod)  parametresinin eklenmesi gerekmektedir. Durum kodu parametresi YÖS tarafından üretilen, tekil ve kolay tahmin edilemeyen bir değer olmalıdır. Rıza isteği gönderimi aşamasında oluşturulmalıdır. YÖS uygulamasında uygun bir yerde saklanmalıdır (cookie, session, local storage gibi) . \n Durum kodu, rıza isteğindeki yönlendirme adresine parametre olarak eklenir.  GKD süreci sonrasında yetki kodu ile birlikte bu bilgi, HHS tarafından YÖS’e iletilir. YÖS sakladığı değer ile parametre olarak gelen değerin eşitliğini kontrol eder. Aynı ise erişim belirteci almak üzere akışı ilerletir. Farklı ise işlemi keser. \n 5.4\tHealthcheck API \n GET /health \n HHS’lerin sunacağı bu servis, düzenli olarak BKM tarafından çağırılarak servislerin ayakta olup olmadıklarının kontrolünün sağlanması planlanmaktadır. \n Başarılı yanıtta Http 200 kodu dönülmelidir. \nBaşarılı Yanıt: \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Koşullu  / İsteğe Bağlı \n Açıklama \n \n \n \n \n status \n status \n AN2..20 \n Z \n “UP”, “DOWN” değerlerini alabilir. \n 5.5  Güçlü Kimlik Doğrulama Kontrolleri \n ÖHK, GKD için HHS uygulamasına yönlendirildiğinde, HHS’nin çeşitli kontroller yaparak işlemin doğruluğunu teyit etmesi gerekmektedir.\nYapılması gereken kontrollere ait temel senaryolar aşağıdaki tabloda belirtilmiştir. Bu senaryolar baz alınarak HHS’ler tarafından zenginleştirilebilir. \n Aşağıdaki tabloda yer alan 07-13 arası Rıza İptal Detay Kodlarının oluştuğu senaryolar, HHS uygulamasında yapılan kullanıcı doğrulama öncesi ve sonrası olarak iki adımda incelenmelidir. \n HHS tarafında, kullanıcı doğrulama öncesinde yapılan kontroller neticesinde verilemeyen rızalar için ‘04’ : Süre Aşımı : Yetki Bekleniyor iptal kodu atanır. HHS'nin YÖS uygulamasına 04 kodunu iletmesi beklenmez. YÖS zaman aşımı neticesinde rıza statüsünü sorgulayarak öğrenir. \nKullanıcı doğrulandıktan sonra rıza verilemiyorsa ilgili hata kodunun YÖS'e iletilmesi beklenmektedir. Kullanıcı doğrulama sonrası YÖS'e iletilen rıza iptal detay kodu ile HHS veri modelinde tutulan rıza ile ilişkili rıza iptal detay kodu, aynı değeri alacak şekilde güncellenmelidir. YÖS, HHS tarafından kendine iletilen rıza iptal detay kodunu kendi veri modelinde güncellemelidir. \n Zorunlu olarak belirtilen hata durumlarının HHS’ler tarafından gerçeklenmesi ve uygun hata kodlarının YÖS’e iletilmesi; ileride oluşabilecek mutabakatlaşma sorunlarını ortadan kaldırabilecek, yapılacak raporlamalar kapsamında sistem ve süreç iyileştirmelerine katkı sağlayacak, son kullanıcı açısından da alınan hataya yönelik bilgilendirici içerik sağlayacaktır. \n Hata açıklamaları; hata koduna uygun ya da uyumlu olmak kaydıyla, HHS ve YÖS tarafından farklı şekillerde sunulabilir. \n GKD Sırasında yapılması gereken kontroller \n \n \n \n Rıza İptal Detay Kodu \n HHS hata açıklaması* \n Yös ekranında listelenecek örnek mesaj metni* \n Örnek Senaryo \n Zorunlu / Opsiyonel \n \n \n \n \n 07 \n Rıza mevcut ve durumu \"Yetkilendirildi\" veya \"Yetki Kullanıldı\" \n Yetki Hatası \n ÖHK,  kullanıcı doğrulama işlemi tamamlandıktan sonra  YÖS ekranında ileri - geri yaparak ya da ÖHK'nın yönlendirme adresini kopyalayarak tarayıcıya yapıştırması ile tekrar HHS'ye yönlendirir. Bu durumda HHS bu rıza iptal detay kodunu iletir. HHS ve YÖS'ler veri modellerini bu bilgi doğrultusunda güncellemelidir. \n Zorunlu \n \n \n 08 \n Rızano ile kimlik bilgileri uyuşmazlığı. \n İşlem gerçekleştirilememiştir. \n YÖS tarafından başlatılan rıza içerisinde yer alan kimlik bilgisi (örn:TCKN) ile HHS'de başarılı kimlik doğrulama yapılan ÖHK'nın bilgilerinin uyuşmadığı durumda  HHS ve YÖS'ler veri modellerini bu bilgi doğrultusunda güncellemelidir. \n Zorunlu \n \n \n 09 \n ÖHK'nın HHS'de ilgili ürününün olmadığı durum (hesap/kart) \n Gösterilebilecek hesap/kart bulunamamıştır. \n HHS, kullanıcı doğrulama yaptıktan sonra, ÖHK'nın uygun statülü hesabının olmadığı durumda  HHS ve YÖS'ler veri modellerini bu bilgi doğrultusunda güncellemelidir. \n Zorunlu \n \n \n 10 \n ÖHK'nın Açık Bankacılık kanalı işleme kapalı \n ÖHK'nın Açık Bankacılık kanalı işleme kapalı \n Açık bankacılığı ayrı bir kanal olarak tanımlamış HHS'lerde,  ÖHK kullanıcı doğrulama yaptıktan sonra yapılan kontrollerde, ÖHK'nın işlemlerini AB kanalına kapatmış olması durumunda   HHS ve YÖS'ler veri modellerini bu bilgi doğrultusunda güncellemelidir. \n Opsiyonel \n \n \n 11 \n ÖHK'nın HHS'deki hesaplarında yeterli yetkisinin olmaması \n Yetki hatası \n 1- Kurumsal firma kullanıcılarının hesaplar üzerinde işlem yetkisinin olmaması durumunda   2- Bireysel ortak hesaplarda hesap kısıtı bulunuyorsa (para çıkışına izin verilmediği durum)  HHS ve YÖS'ler veri modellerini bu bilgi doğrultusunda güncellemelidir. \n Zorunlu \n \n \n 12 \n HHS’nin,  ÖHK özelinde yaptığı kontrollerin başarısız olması \n Yetki hatası \n HHS'nin, kullanıcı doğrulama sonrası ÖHK için iç sistemlerinde yaptığı kontrollerin başarısız olması. Örneğin: Müşterinin henüz bankacılık hizmet sözleşmesi gibi Internet şubesi üzerinde işlem yapmasını engelleyen eksikleri olması durumunda veya kurumsal kullanıcıda vekalet süresinin dolması/eksik doküman olması durumunda kanal üzerinde işlem yapamadığı durum  HHS ve YÖS'ler veri modellerini bu bilgi doğrultusunda güncellemelidir. \n Opsiyonel \n \n \n 13 \n ÖHK isteği ile GKD’den vazgeçilmesi \n Müşteri işlemden vazgeçmiştir. \n HHS ekranında yer alan VAZGEÇ butonuna basılması durumu (ÖHK,HHS uygulamasında kullanıcı doğrulama yaptıktan sonra VAZGEÇ butonu olabilir.) \n Zorunlu \n \n \n 14 \n GKD İptali: Fraud Şüphesi \n İşlem gerçekleştirilememiştir. \n HHS Fraud şüphesi nedeniyle işlemin devamına izin vermez. HHS'nin, fraud kontrollerinin ödeme başlatma hizmeti için yapması ve “14- GKD İptali: Fraud Şüphesi” ile rıza iptalini gerçekleştirmelidir. HBH servislerinde HHS'nin rıza iptal kodu 14 ile işlemi kesmesi HHS'nin kendi insiyatifindedir yani opsiyoneldir. \n Koşullu \n \n \n 99 \n Diğer \n İşlem gerçekleştirilememiştir. \n Oluşabilecek diğer senaryolar. \n Zorunlu \n \n \n \n GKD sırasında iletilen rıza no eğer HHS’nin sisteminde bulunamazsa durumu güncellenecek bir rıza no da olmayacaktır. HHS kendi önyüzünde bu duruma uygun bir mesaj gösterebilir. YÖS’e de Diğer hata kodu ile bu durumu iletebilir. \n"},{title:"HHS ve YÖS API",frontmatter:{},regularPath:"/v1.0.2/contents/hhs-yos-api.html",relativePath:"v1.0.2/contents/hhs-yos-api.md",key:"v-0ec6f57d",path:"/v1.0.2/contents/hhs-yos-api.html",headers:[{level:2,title:"HHS API",slug:"hhs-api"},{level:2,title:"YOS API",slug:"yos-api"},{level:2,title:"Healthcheck API",slug:"healthcheck-api"}],content:' HHS ve YÖS API \n HHS API, HHS’lerin detay bilgilerini sunan servistir. Bu servis ile aşağıdaki istek/yanıt yapıları ile ihtiyaç duyulabilecek ilgili bilgiler temin edilebilir. HHS API için “hhs_read” scope bilgisi kullanılır. \n Production ortamında HHS / YOS API içerisinde sisteme dahil olmuş, sertifikasyonu başarı ile tamamlamış paydaşlar listelenecektir. HHS tarafından desteklenen API sürümleri listelenecektir. \n YÖS’ler HHS API’sini sorgulayabilir ancak YÖS API’sini sorgulayamazlar. \nBenzer şekilde HHS’ler YÖS API’sini sorgulayabilir, HHS API’sini sorgulayamazlar. \n HHS API \n GET /hhs/{hhsKod} \n İşlem Sorgu Örneği =  /hhs  ⇨  bu sorgu yöntemi ile tüm HHS’lerin dizi şeklinde verileri listelenir. \nİşlem Sorgu Örneği =  /hhs/2001   ⇨ bu sorgu yöntemi ile gönderilmiş olan hhsKodu’na ait bilgiler listelenir. Ya da “404 Not Found” hatası alır. \nHHS ve YÖS API Tablo 20’deki istek parametrelerine göre sorgulanabilir. \nİşlem Sorgu Örneği (Belirli Bir Hesap) =  /hhs?srlmKrtr=kod&srlmYon=A \n Tablo 20: HHS ve YÖS API Sorgulama İsteği Sorgu Parametreleri \n \n \n \n Alan Adı \n Parametre Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n HHS tarafından yapılması gereken kontrol ve işlemler \n \n \n \n \n Sıralama Kriteri \n srlmKrtr \n AN3..50 \n İ \n Cevapta dönülecek işlemlerin sıralama kriterini belirtir. Alabileceği değerler: {“kod”, “unv”} \n Bu veri gönderildiği durumda, HHS işlemler listesini bu kritere göre sıralayarak gönderir. Gönderilmediğinde, sıralama kriteri “unv” olarak belirlenmelidir. \n \n \n Sıralama Yönü \n srlmYon \n AN1 \n İ \n Cevapta dönülecek işlemlerin sıralama yönünü belirtir. Alabileceği değerler: A: Azalan değerle sıralama Y: Artan değerle sıralama {“A”,”Y”} \n Bu veri gönderildiği durumda, HHS işlemler listesini bu yöne göre sıralayarak gönderir. Gönderilmediğinde, HHS sıralama yönünü Azalan olarak belirler. \n \n \n \n Tablo 21: HHS Bilgileri Sorgulama Yanıtı “Hhs” nesnesi \n \n \n \n Alan Adı \n Parametre Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n hhs kodu \n kod \n AN4 \n Z \n HHS nin kod bilgisi \n \n \n hhs unvanı \n unv \n AN3..140 \n Z \n HHS nin unvan bilgisi \n \n \n hhs markası \n marka \n AN1..140 \n Z \n ÖHK\'nın kolaylıkla algılayabileceği kısa unvan bilgisi. HHS tarafından belirlenecektir. \n \n \n Açık anahtar \n acikAnahtar \n AN1..1024 \n Z \n HHS’nin mesaj imzalama için paylaştığı açık anahtar \n \n \n HHS Api Bilgileri \n apiBilgileri \n Kompleks: HhsApiBilgi[Array][0..N] \n Z \n Desteklenen Api ve sürüm bilgileri dönülecektir. \n \n \n > api \n api \n AN1..20 \n Z \n Api İsmi Örnek :obh, hbh,gkd \n \n \n > surum \n surum \n AN1..10 \n Z \n Api Sürüm Kodu Örnek: s1.0, s2.0 s1.0 \n \n \n Logo Bilgileri \n logoBilgileri \n Kompleks: LogoBilgisi [Array][1..N] \n Z \n HHS’ye ait logo bilgileri. Logotur = Original  formatındaki logonun minimumda gönderimi zorunludur. \n \n \n >logoTur \n logoTur \n AN3..50 \n Z \n Logonun türünü belirler. TR.OHVPS.DataCode.LogoTur alabileceği değerler  ORIGINAL , WHITE_OVERLAY , BLACK_OVERLAY , GRAY_OVERLAY \n \n \n > logoAdr \n logoAdr \n AN1..255 \n Z \n HHS tarafında tutulan ve YÖS’lerle paylaşılacak olan url adres bilgisidir. \n \n \n Durum \n durum \n AN1 \n Z \n HHS\'nin durum bilgisidir.  TR.OHVPS.DataCode.HHSDurumu sıralı veri tipinde alabileceği değerler belirtilmiştir. \n \n \n \n HHS API\'de; Açık, Yaygınlaştırma, Geçici Hizmet Veremiyor, Kapalı durumlarındaki HHS\'ler listelenecektir.  \nSertifikasyon onayı alan HHS\'ler, üretim ortamına geçişte "Yaygınlaştırma" durumuna sahip olabilir.  HHS\'nin, hangi YÖS\'ler ile "Yaygınlaştırma" kontrollerini yapacağı, HHS yönetiminde olacaktır. Böylece Üretim Ortamında HHS’nin kendisi tarafından tanımlanmış kısıtlı ÖHK’ya hizmet vermesi ve servislerini test etmesi sağlanabilir olacaktır. HHS\'ler kendi kurum kontrollerini yapana kadar, "Yaygınlaştırma" durumunda kalabilirler. HHS\'nin BKM\'ye yapacağı talep ile, HHS "Yaygınlaştırma" durumundan "Açık" durumuna geçebilecektir. \nHHS\'de olası bir teknik sorun olması durumunda, BKM - HHS koordinasyonu ile HHS durumu "Geçici Hizmet Veremiyor" haline getirilecektir. Sorun giderildiğinde "Açık" durumuna geri dönecektir. \n Hem YOS hem de HHS API için geçerli olacak; logo gönderiminde dikkat edilmesi gerekenler şu şekilde tariflenmiştir: \n \n Logoların ham dosya yerine kurumun yayınlayacağı bir URL üzerinden sunulması gerekmektedir. (Örn: logoURL  =  https://kurumadi.com.tr/logo.png) Logo BKM tarafında host edilmeyecektir.) \n PNG formatında (PNG-24) olmalıdır. \n 72 DPI çözünürlükte olmalıdır. \n 500 x 500 boyutlarında, yatayda veya dikeyde taşma paysız tam oturacak, sınır boyutlarını geçmeyecek ve ortalanmış yerleşime sahip olmalıdır. \n Logo arka planı renkli olmamalı, arka plan transparan olmalıdır. \n YÖS uygulamasında gösterim esnasında logoların hızlı yüklenmesi ve düşük veri tüketmesi açısından; logo boyutu 250 KB’ın altında olmalıdır. \n Dört adet logo türü belirlenmiştir. Bu 4 tür için de logo dönülmesi zorunludur. \n Logo url’in public erişilebilir url olması gereklidir. \n \n YÖS API, YÖS statüsundeki kurumların detay bilgilerini sunan servistir. Bu servis ile aşağıdaki istek/yanıt yapıları ile ihtiyaç duyulabilecek ilgili bilgiler temin edilebilir. YÖS API için “yos_read” scope bilgisi kullanılır. \n YÖS API yanıtında, listelenen yönlendirme ve bildirim adresleri bulunmaktadır. HHS, işlem anında iletilen yonAdr ya da bldrAdr alanlarında gönderilen adreslere yetKod değerini iletmelidir. YÖS API içerisinde yer alan adresleri, rıza isteğinde gönderilen adreslerin doğruluğunu kontrol etme amacıyla kullanılmalıdır. Bu nedenle YÖS API içerisinde listelenen adreslerin hostname seviyesinde yer alması yeterlidir. \n YOS API \n YÖS API içerisinde yer alan YÖS rol bilgileri ve aktiflik/pasiflik durumları birbiriyle ilişkili değildir. \n YÖS\'ün sahip olduğu öbhs,hbhs rolleri için herhangi bir fraud ya da teknik sebeplerden ötürü geçici süreyle geri alınabilir. \n YÖS aktifliğini korurken problem çözülene kadar geçici olarak alınan roller(öbhs,hbhs) tekrardan aktif hale getirilir. \n GET /yos/{yosKod} \n İşlem Sorgu Örneği =  /yos    bu sorgu yöntemi ile tüm yos lerin dizi şeklinde verileri listelenir. \n İşlem Sorgu Örneği =  /yos/2501    bu sorgu yöntemi ile gönderilmiş olan yosKodu’na ait bilgiler listelenir ya da “404 Not Found” hatası alır.\nYÖS API Tablo 20’deki istek parametrelerine göre sorgulanabilir.\nİşlem Sorgu Örneği (Belirli Bir Hesap)=  /yos?srlmKrtr=kod&srlmYon=A \n Tablo 22: YOS Bilgileri Sorgulama Yanıtı “Yos” nesnesi \n \n \n \n Alan Adı \n Parametre Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Yös kodu \n kod \n AN4 \n Z \n YÖS\'ün kod bilgisi \n \n \n Yös unvanı \n unv \n AN3..140 \n Z \n YÖS unvan bilgisi \n \n \n Yös markası \n marka \n AN1..140 \n Z \n ÖHK\'nın kolaylıkla algılayabileceği kısa unvan bilgisi. YÖS tarafından belirlenecektir. \n \n \n YÖS rolleri \n roller \n Array[AN4] \n Z \n YÖS’un rollerini belirten değer. Örnek: [ "obhs", "hbhs" ]  - obhs - Ödeme Bilgisi Hizmet Sağlayıcı Rolü  - hbhs - Hesap Bilgisi Hizmet Sağlayıcı Rolü \n \n \n Adresler \n adresler \n Kompleks:Adres[Array] [1..N] \n Z \n --- \n \n \n > Yetkilendirme Yöntemi \n yetYntm \n AN1 \n Z \n TR.OHVPS.DataCode.GkdTur sıralı veri türü değerlerlerinden birini alır. Adres detaylarının hangi GKD türüne ait olduğunu belirtir. \n \n \n >Adres Detayları \n adresDetaylari \n adresDetaylari\tKompleks: AdresDetayi[Array] [1..N] \n Z \n \n \n \n >>Temel Adres \n tmlAdr \n AN1..1024 \n Z \n yetYntm değeri “Y” olarak iletildiğinde Yönlendirmeli GKD sürecinde HHS’nin YOS’e authorizasyon kodunu hangi url e göndereceği bilgisini tutar. yetYntm değeri “A” olarak iletildiğinde Ayrık GKD sürecinde HHS’nin YOS’e authorizasyon kodunu hangi url e göndereceği bilgisini tutar. Riza isteklerinde bu değer ile uyumluluğu kontrol edilmelidir. Örnek: https://example.com https://example2.com/path deepLink://example/test deepLink://example2/test \n \n \n >>Açıklama \n aciklama \n AN1..1024 \n İ \n YÖS’ün gönderdiği adrese yönelik vermek istediği açıklama Örnek: WEB bireysel , WEB kurumsal  , APP \n \n \n Açık anahtar \n acikAnahtar \n AN1..1024 \n Z \n YÖS’ün mesaj imzalama için paylaştığı açık anahtar \n \n \n Logo Bilgileri \n logoBilgileri \n Kompleks: LogoBilgisi [Array][1..N] \n Z \n YOS’e ait logo bilgileri. Logotur = Original formatındaki logonun minimumda gönderimi zorunludur. \n \n \n >logoTur \n logoTur \n AN3..50 \n Z \n Logonun türünü belirler. TR.OHVPS.DataCode.LogoTur alabileceği değerler  ORIGINAL , WHITE_OVERLAY , BLACK_OVERLAY , GRAY_OVERLAY \n \n \n > logoAdr \n logoAdr \n AN1..255 \n Z \n YÖS tarafında tutulan ve HHS’lerle paylaşılacak olan url adres bilgisidir. Örnek: https://via.placeholder.com/150?text=0001 \n Healthcheck API \n GET /health \n HHS ve YÖS API için health servisleri aşağıdaki servislerle kontrol edilebilir. \n Başarılı yanıtta Http 200 kodu dönülecektir\nBaşarılı Yanıt: \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n \n \n \n \n status \n status \n AN2..20 \n Z \n “UP”, “DOWN” değerlerini alabilir \n \n \n \n'},{title:"7.\tHesap Bilgisi Hizmeti",frontmatter:{},regularPath:"/v1.0.2/contents/hesap-bilgisi-hizmeti.html",relativePath:"v1.0.2/contents/hesap-bilgisi-hizmeti.md",key:"v-f0808a06",path:"/v1.0.2/contents/hesap-bilgisi-hizmeti.html",headers:[{level:2,title:"Genel Bilgiler",slug:"genel-bilgiler"},{level:2,title:"Hesap Bilgisi Hizmeti İçin Erişim Adresleri",slug:"hesap-bilgisi-hizmeti-icin-erisim-adresleri"},{level:2,title:"ADIM 0: ÖHK'nın hesap bilgilerine erişim için talepte bulunması:",slug:"adim-0-ohk-nın-hesap-bilgilerine-erisim-icin-talepte-bulunması"},{level:2,title:"7.1 ADIM 1: Hesap Bilgisi Rızasının Hazırlanması",slug:"_7-1-adim-1-hesap-bilgisi-rızasının-hazırlanması"},{level:3,title:"POST /hesap-bilgisi-rizasi",slug:"post-hesap-bilgisi-rizasi"},{level:3,title:"Başarılı İstek:",slug:"basarılı-istek"},{level:3,title:"Başarılı Yanıt:",slug:"basarılı-yanıt"},{level:2,title:"İzinler",slug:"izinler"},{level:2,title:"7.2 ADIM 2: Hesap Bilgisi Hizmeti Rızasının Tesisi",slug:"_7-2-adim-2-hesap-bilgisi-hizmeti-rızasının-tesisi"},{level:2,title:"7.3 ADIM 2.1: Hesap Bilgisi Rızasının Sorgulanması",slug:"_7-3-adim-2-1-hesap-bilgisi-rızasının-sorgulanması"},{level:2,title:"7.4 ADIM 2.2: Hesap Bilgisi Rızasının İptali",slug:"_7-4-adim-2-2-hesap-bilgisi-rızasının-iptali"},{level:2,title:"7.5 ADIM 3: Hesap Bilgilerinin Alınması",slug:"_7-5-adim-3-hesap-bilgilerinin-alınması"},{level:2,title:"7.6 ADIM 3.1 ve 3.2: Hesap Bilgilerinin Sorgulanması",slug:"_7-6-adim-3-1-ve-3-2-hesap-bilgilerinin-sorgulanması"},{level:2,title:"7.7 ADIM 3.3 ve 3.4: Hesap Bakiyesinin Sorgulanması",slug:"_7-7-adim-3-3-ve-3-4-hesap-bakiyesinin-sorgulanması"},{level:2,title:"7.8 ADIM 3.5 ve 3.6: İşlemlerin Sorgulanması",slug:"_7-8-adim-3-5-ve-3-6-islemlerin-sorgulanması"},{level:2,title:"7.9\tHealthcheck API",slug:"_7-9healthcheck-api"},{level:3,title:"Başarılı Yanıt:",slug:"basarılı-yanıt-2"}],content:" 7.\tHesap Bilgisi Hizmeti  \n Genel Bilgiler \n Hesap bilgisi sorgulama için HBHS tarafından müşteri rızası tesisinin HHS tamamlanmış olması gerekir. Müşteri rızası tesisi tamamlandıktan sonra, HBHS sorgulamak istediği hesaba ait verileri ilgili erişim adresi üzerinden sorgular. \n \n \n Şekil 10: Hesap Bilgisi Hizmeti Üst Düzey Akışı \n Şekil-10’da sunulan hesap bilgisi hizmeti 5 temel akıştan oluşur: \n 0.\tMüşterinin hesap bilgilerine erişim için talepte bulunması:  ÖHK ÖBHS mobil uygulama ya da web sitesinden hesap bilgilerine erişim işlemini başlatır. \n 1.\tHesap Bilgisi müşteri rızasının hazırlanması: \n HBHS, “hesap bilgilerine erişim” için müşteri rızası tesisi amacıyla HHS’deki hesap bilgisi rızası erişim adresine bir POST isteğinde bulunur ve bir hesap bilgisi rızası nesnesi oluşturur. HHS hesap bilgisi rızası nesnesi için biricik tanımlayacı döner (RızaNo). Hesap bilgisi rızası, müşterinin HBHS’nin hesap bilgilerine erişim izin verdiği alanları içerir: \n \n İzinler - erişim için izin verilen veri kümelerinin listesi. \n Erişimin Geçerli Olduğu Son Tarih - HBHS'nin müşterinin hesap bilgilerine erişebileceği isteğe bağlı seçilebilen son tarih. \n İşlem Sorgulama Başlangıç Zamanı – Müşteri rızasının tesisinden itibaren geriye dönük olarak HBHS’nin hesap bilgilerine erişebileceği süreyi \n İşlem Sorgulama Bitiş Zamanı - Müşteri rızasının tesisinden itibaren ileriye dönük olarak HBHS’nin hesap bilgilerine erişebileceği süreyi \n \n 2.\tHesap bilgisi hizmeti müşteri rızasının tesisi: \n HHS, Hesap Bilgisi Rızası servisi ile ÖHK özelinde “Yetki bekleniyor” statüsünde bir rıza nesnesi hazırlar. HHS, GKD’nin başarıyla tamamlanması sonrasında hesap bilgisi rızası nesnesinin yetkilendirildiğini belirtmek için Rıza Durumunu “Rıza Yetkilendirildi” olarak günceller. Nesne yetkilendirildikten sonra HHS nesne ile bir erişim belirteci (access token) ilişkilendirir, Rıza Durumunu “Yetki Kullanıldı” yapar ve bu belirteci HBHS’ye geri döner.  Böylece müşteri rıza tesisi sağlanmış olur. \n Hesap bilgisi için müşteri rızasına ilişkin temel ilkeler şunlardır: \n \n 1 ÖHK'nın 1 YÖS için 1HHS'de Yetki Bekleniyor, Yetkilendirildi, Yetki Kullanıldı statüsünde 1 rızası olabilir. \n Müşteri rızasının ayrıntıları ÖHK ile HBHS arasında belirlenir. Bu nedenle müşteri rızasının ayrıntıları HHS ekranında değiştirilmemelidir. \n ÖHK, hesap erişim izni ayrıntılarını yalnızca bir bütün olarak yetkilendirebilir veya geri alabilir. \n Müşteri rızası tesisi esnasında, müşteri HHS arayüzünde erişim için yetkilendirecek hesapları seçer. \n \n 2.1\tHesap bilgisi rızasının sorgulanması:  Müşteri rızası  GET/hesap-bilgisi-rizasi/{RizaNo}  çağrısı yapılarak sorgulanır. \n 2.2\tHesap bilgisi müşteri rızasının iptali:  Müşteri rızası  DELETE/hesap-bilgisi-rizasi/{RizaNo}  çağrısı yapılarak iptal edilir. \n 3.\tHesap bilgilerinin alınması:  Hesap bilgileri ilgili kaynağa (hesaplar, bakiye, işlemler) GET isteği yapılarak gerçekleştirilir. HBHS, müşteri rızasının tesisinden sonrasında (geçerli bir erişim belirticine sahip olduğunda) öncelikle  GET/hesaplar  çağrısı yapacaktır. \n Hesap Bilgisi Hizmeti İçin Erişim Adresleri \n Etki Alanı (Scope) =“hesap_bilgisi” \n \n \n \n No \n Kaynak \n HTTP işlemi \n Erişim Adresi \n Zorunlu / İsteğe Bağlı \n Yetkilendirme Türü \n İmzalama \n Parametre \n İstem Nesnesi \n Yanıt Nesnesi \n \n \n \n \n 1 \n hesap-bilgisi-rizasi \n POST \n /hesap-bilgisi-rizasi \n Z \n İstemci Kimlik Bilgileri \n İmzalı İstek ve Yanıt \n \n HesapBilgisiRizasiIstegi \n HesapBilgisiRizasi \n \n \n 2 \n erisim-belirteci  (GKD için) \n POST \n /erisim-belirteci \n Z \n İstemci Kimlik Bilgileri \n İmzalı İstek ve Yanıt \n \n ErisimBelirteciIstegi \n ErisimBelirteci \n \n \n 2.1 \n hesap-bilgisi-rizasi \n GET \n /hesap-bilgisi-rizasi/{RizaNo} \n Z \n İstemci Kimlik Bilgileri \n İmzalı Yanıt \n \n \n HesapBilgisiRizasi \n \n \n 2.2 \n hesap-bilgisi-rizasi \n DELETE \n /hesap-bilgisi-rizasi/{RizaNo} \n Z \n İstemci Kimlik Bilgileri \n \n \n \n \n \n \n 3.1 \n hesaplar \n GET \n /hesaplar \n Z \n İstemci Kimlik Bilgileri ve Yetkilendirme Kodu (GKD) \n \n Sayfalama \n \n HesapBilgileri(birden çok hesap) \n \n \n 3.2 \n hesaplar \n GET \n /hesaplar/{hspRef} \n Z \n İstemci Kimlik Bilgileri ve Yetkilendirme Kodu (GKD) \n \n \n \n HesapBilgileri(tek  hesap) \n \n \n 3.3 \n bakiye \n GET \n /hesaplar/{hspRef}/bakiye \n Z \n İstemci Kimlik Bilgileri ve Yetkilendirme Kodu (GKD) \n \n \n \n BakiyeBilgileri(tek  hesap) \n \n \n 3.4 \n bakiye \n GET \n /bakiye \n İ \n İstemci Kimlik Bilgileri ve Yetkilendirme Kodu (GKD) \n \n Sayfalama \n \n BakiyeBilgileri(birden çok hesap) \n \n \n 3.5 \n islemler \n GET \n /hesaplar/{hspRef}/işlemler \n Z \n İstemci Kimlik Bilgileri ve Yetkilendirme Kodu (GKD) \n \n Sayfalama Filtreleme \n \n IslemBilgileri (tek hesap) \n \n \n \n Tablo 11: Hesap Bilgisi Hizmeti İçin Erişim Adresleri \n ADIM 0: ÖHK'nın hesap bilgilerine erişim için talepte bulunması: \n ÖHK, HBHS uygulamasında (web arayüzü/mobil uygulama) hesap bilgilerine erişim için talepte bulunur. \n 7.1 ADIM 1: Hesap Bilgisi Rızasının Hazırlanması \n Bu API çağrısı HBHS'nin HHS'de yeni bir “HesapBilgisiRizasi” nesnesi oluşturmasını ve nesneye erişmek için benzersiz bir rıza numarası ({RizaNo}) dönülmesini sağlar. \n API çağrısının başarıyla sonuçlanması için HBHS'nin istemci kimlik bilgileri yetkisi kullanması yeterlidir.\nBaşarıyla oluşturulan hesap bilgisi rıza kaynağının rıza durumu “Yetki Bekleniyor” olarak düzenlenir.\nÖHK daha önce aldığı rızaya ilişkin erişim tarihleri, izin türlerini ve hesap bilgilerini güncellemek isterse, HBHS önce HHS nezdindeki rızayı iptal etmeli ve sonrasında yeni bir rıza talebinde bulunmalıdır.\n \n \n Şekil 11: Hesap Bilgisi Müşteri Rızasının Hazırlanması \n \n POST /hesap-bilgisi-rizasi isteğinin (REQUEST) gövdesinde (BODY)  “HesapBilgisiRizasıIstegi” nesnesi (Tablo-12) kullanılır. İstek başarıyla sonuçlanırsa HHS kaynak sunucusunda “HesapBilgisiRizasi” (Tablo-13) nesnesi oluşturulur. \n  POST /hesap-bilgisi-rizasi \n Başarılı İstek: \n İSTEK: \n HBHS, bu API erişim adresinden HHS’ye yeni bir HesapBilgisiRizasi oluşturulması için istekte bulunur: \n \n HBHS, ÖHK’nın hesap bilgilerine yönelik rıza başlatma isteği olduğunu HHS’ye bildirir. \n HBHS, ÖHK’nın, HBHS arayüzünden verdiği rızanın (“Ön Onay”) bir kopyasının HHS nezdinde müşteri tarafından onaylanması için HHS’ye gönderilmesini sağlar. \n HHS; istek mesajında yer alan alanların API dökümanında belirtilen şartları sağlayacak şekilde zorunluluk ve uzunluk kontrollerini yapar. (Zorunlu) \n HHS; YÖS API ile alınan HBHS bilgilerinin içerisinde yer alan yönlendirme ve bildirim adresleri ile ödeme emri rızası nesnesi request mesajında paylaşılan adreslerin uyumlu olup olmadığının kontrollerini yapar. (Zorunlu) \n HHS; kimlik bilgileri nesnesinde iletilen kimlik bilgileri ile ÖHK’nın HHS müşterisi olup olmadığının kontrollerini yapar. Bu kontrol hem bireysel hem de kurumsal ÖHK’lar için yapılmalıdır.  (Zorunlu) \n Erişimin Geçerli Olduğu Son Tarih, İşlem Sorgulama Başlangıç Zamanı, İşlem Sorgulama Bitiş Zamanı alanları ile ilgili Tablo 12’de belirtilen kontroller yapılmalıdır. (Zorunlu) \n HHS, benzersiz “RizaNo” ile “HesapBilgisiRizasi” nesnesi oluşturur ve HBHS’ye döner. \n HHS, HesapBilgisiRizasi oluşturduğu anda durumunu “Yetki Bekleniyor” olarak düzenler. \n \n Erişimin Geçerli Olduğu Son Tarih, İşlem Sorgulama Başlangıç Zamanı, İşlem Sorgulama Bitiş Zamanı alanlarında zaman aralıkları müşteri deneyimi penceresinden değerlendirilerek ay cinsinden belirtilmiştir. Bu konuda aşağıdaki gibi oluşabilecek uç örneklere dikkat edilmesi gerekmektedir. \n Bugün : 31.08.2019 \nBugün + 6 Ay : 29.02.2020 \nBugün : 30.08.2020 \nBugün + 6 Ay : 28.02.2021\nBugün : 30.09.2022 \nBugün + 3 Ay : 30.12.2022\nBugün : 14.07.2022 \nBugün + 3 Ay : 14.10.2022 \n Tablo 12: “HesapBilgisiRizasiIstegi” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n HHS tarafından yapılması gereken kontrol ve işlemler \n \n \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n HHS, hhsKod’un kendisine ait olduğunu ve istek başlığındaki x-aspsp-code değeri ile aynı olduğunu kontrol eder. Hata durumunda TR.OHVPS.Connection.InvalidASPSP hata kodunu döner. \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur \n HHS, yosKod’un geçerli bir Ödeme Hizmeti Sağlayıcısı Kodu olduğunu ve istek başlığındaki x-tpp-code değeri ile aynı olduğunu kontrol eder.  Hata durumunda TR.OHVPS.Connection.InvalidTPP hata kodunu döner. \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n \n >Yetkilendirme Yöntemi \n yetYntm \n AN1 \n İ \n TR.OHVPS.DataCode.GkdTur sıralı veri türü değerlerinden birini alır.   Yetkilendirme yöntemi, HBHS tarafından belirtilmeyebilir. \n HHS, HBHS’nin belirlediği yöntemi dikkate alarak kendi belirlediği yöntemi kullanır. \n \n \n > Yönlenme Adresi \n yonAdr \n AN1..1024 \n K \n Yönlendirmeli güçlü kimlik doğrulama için zorunludur.  YÖS Yönlendirmeli GKD yöntemi ile akışı destekliyorsa, yetYntm değişkeninden bağımsız olarak yönlendirme adresini iletmelidir. Durum kodu(drmKod), yönlendirme adresine parametre olarak eklenmelidir. \n HHS, müşteri uygulama / tarayıcısını bu alanda belirtilen adrese yönlendirir. \n \n \n > Bildirim Adresi \n bldAdr \n AN1..1024 \n K \n Ayrık güçlü kimlik doğrulama için zorunludur.  YÖS Ayrık GKD yöntemi ile akışı destekliyorsa, yetYntm değişkeninden bağımsız olarak bildirim adresini iletmelidir.  Durum kodu(drmKod), yönlendirme adresine parametre olarak eklenmelidir. \n HHS, ayrık GKD sonrası bu alanda belirtilen adrese otorizasyon kodunu (authentication code) iletir. \n \n \n Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n \n > Kimlik Türü \n kmlkTur \n AN1 \n Z \n TR.OHVPS.DataCode.KimlikTur sıralı veri türü değerlerinden birini alır.   Kurum adına yapılan(ticari) işlemlerde kurum kullanıcısının bilgisi iletilmelidir. \n \n \n \n > Kimlik Verisi \n kmlkVrs \n AN1..30 \n Z \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır.   TR.OHVPS.DataCode.KimlikTur değerine göre uzunluk ve formatı değişir.   Kurum adına yapılan(ticari) işlemlerde kurum kullanıcısının bilgisi iletilmelidir. \n \n \n \n > Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n K \n ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür.  TR.OHVPS.DataCode.KurumKimlikTur sıralı veri türü değerlerinden birini alır. \n \n \n \n > Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n K \n ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.  TR.OHVPS.DataCode.KurumKimlikTur değerine göre uzunluk ve formatı değişir. \n \n \n \n > Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur sıralı veri türü değerlerinden birini alır (B: Bireysel, K:Kurumsal) \n \n \n \n Hesap Bilgisi \n hspBlg \n Kompleks: HesapBilgisi \n Z \n \n \n \n \n >İzin Bilgisi \n iznBlg \n Kompleks: IzinBilgisi \n Z \n \n \n \n \n >> İzin Türü \n iznTur \n Array[AN2] \n Z \n ÖHK tarafından HHS önyüzünde belirlenen izin tipleridir. Bir istekte birden fazla değer bulunabilir, TR.OHVPS.DataCode.IzinTur sıralı veri türü değerlerinden birini alır. \n \n \n \n >> Erişimin Geçerli Olduğu Son Tarih \n erisimIzniSonTrh \n ISODateTime \n Z \n Hesap bilgisi rızasının geçerli olduğu son tarih.   Müşteri YÖS ekranından bu değeri belirleyebilir.   Varsayılan değer : Rıza verilen tarih + 6 ay   Alabileceği maksimum değer : Rıza tarihi + 6 ay    Alabileceği minimum değer : Rıza tarihi + 1 gün   Örneğin 23/09/2021’de minimum 24/09/2021 seçilebilir. Bu durumda izin 24/09/2021 23:59:59’da bitecek şekilde olmalıdır. \n Bu alanda bir değer bulunmadığı durumda HHS hata dönmelidir. \n \n \n >> İşlem Sorgulama Başlangıç Zamanı \n hesapIslemBslZmn \n ISODateTime \n K \n Hesap bilgisi rızası verilmesinden geçmişe dönük en fazla 12 ay olabilir, daha eski olmaması gerekir.   Varsayılan değeri rıza verilen tarih (işlem zamanı) – 12 aydır.   ÖHK bu alana bir değer girişi sağlamamış ise ÖBHS varsayılan değerlerle bu alanı doldurarak, HHS’ye iletir.   Minimum tarihi : Rızanın veriliş tarihi  - 12 ay    Maksimum tarih: Rızanın veriliş tarihi +  12 ay    İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçildiğinde bu alanların doldurulması zorunludur.  İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçilmemiş ise gönderilmemelidir. \n ÖHK tarafından izin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçilmemiş ve  İşlem Sorgulama Başlangıç Zamanı ÖBHS tarafından dolu olarak gönderilmiş ise HHS tarafından işlemin devamına izin verilmez. İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçilmiş ise; HHS bu alanın alabileceği minimum ve maksimum değerlerin sınırlar içerisinde olduğunu kontrol eder. \n \n \n >> İşlem Sorgulama Bitiş Zamanı \n hesapIslemBtsZmn \n ISODateTime \n K \n Hesap bilgisi rızası verilmesinden geleceğe dönük en fazla 12 ay sonrası olabilir, daha ileri bir tarih olmaması gerekir.   Varsayılan değeri: Rıza verilen tarih + 12 aydır.  ÖHK bu alana bir değer girişi sağlamamış ise ÖBHS varsayılan değerlerle bu alanı doldurarak, HHS’ye iletir.  Minimum tarihi : Rızanın veriliş tarihi  – 12 ay  Maksimum tarihi :  Rızanın veriliş tarihi + 12 ay   İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçildiğinde bu alanların doldurulması zorunludur.  İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçilmemiş ise gönderilmemelidir. Eğer dolu gönderilirse HHS tarafından uygun hata mesajı iletilmelidir. \n ÖHK tarafından izin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçilmemiş ve İşlem Sorgulama Bitiş Zamanı ÖBHS tarafından dolu olarak gönderilmiş ise HHS tarafından işlemin devamına izin verilmez.   İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçilmiş ise; HHS bu alanın alabileceği minimum ve maksimum değerlerin sınırlar içerisinde olduğunu kontrol eder. \n Başarılı Yanıt: \n Tablo 13: HesapBilgisiRizasi nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Riza Bilgileri \n rzBlg \n Kompleks: RizaBilgileri \n Z \n \n \n \n > Rıza No \n rizaNo \n AN1..128 \n Z \n HesapBilgisiRızasi nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n > Oluşturma Zamanı \n olusZmn \n ISODateTime \n Z \n HesapBilgisiRızası nesnesinin oluşturulma zamanı \n \n \n > Güncellenme Zamanı \n gnclZmn \n ISODateTime \n Z \n HesapBilgisiRızası nesnesinin güncellenme zamanı \n \n \n > Rıza Durumu \n rizaDrm \n AN1 \n Z \n TR.OHVPS.DataCode.RizaDurumu sıralı veri tipini değerlerinden birini alır. Örn; hesap bilgi rızasının tesisine dair ilk istek mesajına dönüşte “B: Yetki Bekleniyor” değerini alması beklenir. \n \n \n > Rıza Iptal Detay Kodu \n rizaIptDtyKod \n AN2 \n K \n Rıza durumunun iptal olduğu durumda zorunludur. \n \n \n Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n > Kimlik Türü \n kmlkTur \n AN1 \n Z \n TR.OHVPS.DataCode.KimlikTur sıralı veri türü değerlerinden birini alır. \n \n \n > Kimlik Verisi \n kmlkVrs \n AN1..30 \n Z \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır. TR.OHVPS.DataCode.KimlikTur değerine göre uzunluk ve formatı değişir. \n \n \n > Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n K \n ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür.  TR.OHVPS.DataCode.KurumKimlikTur sıralı veri türü değerlerinden birini alır. \n \n \n > Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n K \n ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.  TR.OHVPS.DataCode.KurumKimlikTur değerine göre uzunluk ve formatı değişir. \n \n \n > Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur sıralı veri türü değerlerinden birini alır (B: Bireysel, K:Kurumsal) \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n > Yetkilendirme Yöntemi \n yetYntm \n AN1 \n K \n HHS, HBHS’nin belirlediği yöntemi dikkate alarak kendi belirlediği yöntemi kullanır.  TR.OHVPS.DataCode.GkdTur sıralı veri türü değerlerinden birini alır. \n \n \n > Yönlenme Adresi \n yonAdr \n AN1..1024 \n K \n HHS, müşteri uygulama / tarayıcısını bu alanda belirtilen YÖS adresine yönlendirir. \n \n \n > Bildirim Adresi \n bldAdr \n AN1..1024 \n K \n HHS, ayrık GKD sonrası bu alanda belirtilen YÖS adresine otorizasyon kodunu (authentication code) iletir. \n \n \n > HHS Yönlenme Adresi \n hhsYonAdr \n AN1..1024 \n K \n GKD doğrulama bilgilerinin girilebilmesi için uygulamadan açılacak yönlendirme sayfasının adresi. \n \n \n > Yetkilendirme Tamamlanma Zamanı \n yetTmmZmn \n ISODateTime \n Z \n Yetkilendirme akışının tamamlanması gereken son zamanı gösterir.  HHS tarafından maksimum 5 dk içinde işlem tamamlanacak şekil zaman damgası oluşturulur. Zaman aşımı olduğunda HHS’nin GKD’ye izin vermeyecek şekilde hata mesajı vermesi gerekmektedir. Rıza durumu Yetkilendirildi statüsüne geçene kadarki süredir. \n \n \n Hesap Bilgisi \n hspBlg \n Kompleks: HesapBilgisi \n Z \n \n \n \n > İzin Bilgisi \n iznBlg \n Kompleks: IzinBilgisi \n Z \n \n \n \n >> İzin Türü \n iznTur \n Array[AN2] \n Z \n ÖHK tarafından HBHS önyüzünde belirlenen izin tipleridir. Bir istekte birden fazla değer bulunabilir, TR.OHVPS.DataCode.IzinTur sıralı veri türü değerlerinden birini alır. \n \n \n >> Erişimin Geçerli Olduğu Son Tarih \n erisimIzniSonTrh \n ISODateTime \n Z \n Hesap bilgisi rızasının geçerli olduğu son tarih \n \n \n >> İşlem Sorgulama Başlangıç Zamanı \n hesapIslemBslZmn \n ISODateTime \n K \n Hesap hareketlerinin sorgunabileceği başlangıç zamanı. İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçildiğinde bu alanların doldurulması zorunludur. \n \n \n >> İşlem Sorgulama Bitiş Zamanı \n hesapIslemBtsZmn \n ISODateTime \n K \n Hesap hareketlerinin sorgunabileceği bitiş zamanı. İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçildiğinde bu alanların doldurulması zorunludur. \n \n \n > Ayrıntı Bilgi \n ayrBlg \n Kompleks: AyrintiBilgi \n İ \n \n \n \n > ÖHK Mesaj Alanı \n ohkMsj \n AN1..200 \n İ \n HHS’nin ÖHK’ya göstermek üzere ilettiği mesaj. \n İzinler \n Bir hesap bilgisi müşteri rızası kaynağı çağrısına yanıt olarak döndürülen verileri sınırlamak için izin kodları kullanılır: \n \n Temel Hesap Bilgisi \n Ayrıntılı Hesap Bilgisi \n Bakiye Bilgisi \n Temel İşlem (Hesap Hareketleri) Bilgisi \n Ayrıntılı İşlem Bilgisi \n \n ÖHK’ya sunulacak seçimler ve kuralları aşağıdaki gibi olmalıdır. \n \n \n \n Seçim \n Kural \n \n \n \n \n Temel Hesap Bilgisi \n ÖHK seçimine sunulmamalıdır. Değiştirilemez şekilde seçili gösterilmelidir. \n \n \n Ayrıntılı Hesap Bilgisi \n ÖHK seçim yapabilir. \n \n \n Bakiye Bilgisi \n ÖHK seçim yapabilir. \n \n \n Temel İşlem (Hesap Hareketleri)  Bilgisi \n ÖHK seçim yapabilir. \n \n \n Ayrıntılı İşlem Bilgisi \n ÖHK seçim yapabilir. Ayrıntılı İşlem Bilgisi seçimi Temel İşlem Bilgisi seçimini kapsar. (Ayrıntılı İşlem bilgisi seçildiğinde Temel İşlem Bilgisi de seçili olmalıdır.) \n \n \n \n Aşağıdaki durumlarda, izin kombinasyonlarına izin verilmez. HHS, bu hesap erişim onaylarını 400 (Hatalı İstek) yanıt koduyla reddetmelidir: \n \n İzin dizisinin herhangi bir izin türü içermemesi durumu, \n İzin dizisinde HHS tarafından desteklenmeyen bir izin kodunun yer alması durumu \n 7.2 ADIM 2: Hesap Bilgisi Hizmeti Rızasının Tesisi \n \n \n Şekil 12: Hesap Bilgisi ÖHK Rızasının Tesisi \n Rıza tesisinin başarıyla sonuçlanması için HBHS'nin istemci kimlik bilgileri yetkisi kullanması ve ardından müşterinin HHS tarafından yönlendirmeli veya ayrık GKD ile doğrulanması gerekir. HHS'de oluşturulan ve rıza durumu “Yetki Bekleniyor” olan bir hesap bilgisi rızası, GKD sonrası “Yetkilendirildi” statüsüne güncellenir. HBHS, erişim sağlayacağı hesapları hesap bilgisi rızasının tesisinden önce seçer. \n \n \n Yönlendirmeli doğrulama akışında, HBHS ÖHK’yı HHS’ye yönlendirir. \n \n \n HBHS tarafından yönlendirme, bir önceki adımdaki RizaNo’yu içerir. \n \n \n HHS, ÖHK için GKD sürecini işletir. \n ÖHK’yı doğrularsa, \n \n \n ÖHK HBHS üzerinden işlem yapılmasına izin vereceği hesap seçimini yapar. HBHS üzerinden ÖHK’nın verdiği izin bilgilerini ve erişim izninin bitiş tarihi bilgilerini, HHS bilgilendirme amaçlı ÖHK’ya gösterir. \n \n \n HHS hesap bilgisiri rıza kaynağının durumunu “Yetkilendirildi” olarak günceller. \n \n \n HHS, ÖHK’yı “olumlu yönlendirme akışı” ile HBHS tarafından tanımlanan yönlendirme adresine yönlendirir: \n yonAdr?rizaDrm=Y&yetKod=xx&rizaNo=yy&rizaTip=H&drmKod=zzz\n \n \n \n ÖHK’yı doğrulayamazsa, \n \n \n HHS, hesap bilgisi rıza kaynağının durumunu “Yetki İptal” olarak günceller. \n \n \n HHS, ÖHK’yı “olumsuz yönlendirme akışı” ile HBHS tarafından tanımlanan yönlendirme adresine yönlendirir: \n yonAdr?rizaDrm=I &rizaNo=yy&rizaTip=H&rizaIptDtyKod=11&drmKod=zzz\n \n \n \n \n \n \n \n Ayrık doğrulama akışında, HHS, ÖHK’nın hesap bilgisi hizmetini başlattığı uygulamadan farklı olabilecek bir “doğrulama” uygulamasında işlemi doğrulamasını ister. \n \n Ayrık akış HBHS’nin farklı bir kanal kullanarak yetkilendirme isteği göndermesiyle başlatılır. \n Bu yetkilendirme isteği, yetkilendirilecek hesap bilgisi rızasının eşleştirileceği ÖHK’nın bulunması için ilgili veriyi taşır. \n HHS, ödeme hizmeti kullanıcısını doğrular. \n ÖHK verdiği izin tipi dahilinde bilgileri paylaşılacak olan hesapları seçer. \n HHS, hesap bilgisi rıza kaynağının durumunu “Yetkilendirildi” olarak günceller. \n \n \n \n Başarılı GKD sonrasında (rizaDrm=’Y’) ilgili rıza nesnesi için (belirli bir rizaNo) yetkilendirme kodunun (yetKod) alınmasının ardından erişim belirteci erişim adresine POST çağrısı yapılarak yetkilendirme kodu karşılığında erişim belirteci ve yenileme belirteci alınır. POST /erişim-belirteci erişim noktası EK-3’te açıklanmıştır. \n Erişim belirteci alındıktan sonra; HHS,  hesap bilgisi rızasının durumunu “Yetki Kullanıldı” olarak günceller. Rıza tesisi sağlanmış olur. \n 7.3 ADIM 2.1: Hesap Bilgisi Rızasının Sorgulanması \n GET /hesap-bilgisi-rizasi/{RizaNo} \n ÖHK, HHS üzerinden rıza iptali yapmış olabilir veya ÖHK’nın verdiği rıza süresi dolmuş olabilir.  Bu durumlarda HBHS, rıza alma akışına başlamadan önce, daha önce oluşturulmuş bir HesapBilgisiRizasi kaynağının durumunu, isteğe bağlı olarak alabilir. \n Servis başarılı yanıtında Tablo 13’de belirtilen “HesapBilgisiRizasi” nesnesini dönmektedir. \n Durum \nHesapBilgisiRizasi kaynağı için kullanılabilecek durum göstergeleri şu şekildedir: \n \n Yetki Bekleniyor \n Yetkilendirildi \n Yetki Kullanıldı \n Yetki Sonlandırıldı \n Yetki İptal \n 7.4 ADIM 2.2: Hesap Bilgisi Rızasının İptali \n \n \n \n Şekil 13: Hesap Bilgisi Müşteri Rızasının Geri Alınması \n DELETE /hesap-bilgisi-rizasi/{RizaNo} \n DELETE /hesap-bilgisi-rizasi çağrısı, bir HBHS'nin önceden oluşturulmuş bir hesap erişim rızasını (yetkili olsun veya olmasın) silmesine izin verir. Müşteri, rızasını HHS üzerinden iptal etmek yerine, HBHS üzerinden bu rızasını kaldırmak isteyebilir. \nBu API çağrısı, müşterinin HBHS üzerinden hesap bilgisi rızasını iptal etmesine ve HHS nezdindeki hesap bilgisi rızası nesnesinin silinmesini sağlar. \nMüşterinin HBHS’nin veri erişim iznini iptal etmesi durumunda HBHS, HHS’de mevcut olan HesapBilgisiRizasi kaynağını pratik olarak mümkün olan en kısa sürede silmelidir. Bu ise, ilgili kaynağa \n DELETE /hesap-bilgisi-rizasi/{RizaNo} \nçağrısı aracılığı ile yerine getirilir. HBHS ayrıca, sisteminden Hesap Erişim İzni kaynaklarını da temizlemelidir. \nSöz konusu silme işlemi, kayıtların statüsünün pasife çekilmesi ile gerçekleştirilmelidir. Söz konusu kayıtlar, denetim izlerinin oluşturulması ve saklanmasına ilişkin ikincil düzenleme hükümleri kapsamında güvenli şekilde tutulmalıdır. \nServis istek parametresi olarak sadece path’de iletilen Rıza No bilgisine ihtiyaç duymaktadır. \nÖHK rızası başarı ile silindiğinde HTTP 204 response kodu ile işlem sonucu iletilir. Rıza tipi “I” yani “Yetki İptal” olarak güncellenir ve gnclZmn zaman damgası vurularak güncellenir. \nÖHK ile rıza iptali sırasında kurulacak iletişimde (e-posta, sms gibi) aşağıdaki alanların iletilmesi tavsiye edilmektedir: \nYÖS Adı, HHS adı, Rıza Oluşturma Zamanı, Servis Tipi Bilgisi (HBHS) \n 7.5 ADIM 3: Hesap Bilgilerinin Alınması \n    \n \n   \n Şekil 14: Hesap Bilgilerinin Alınması \n İSTEK: \nMüşteri rızası tesis edilmiş kullanıcı için HBHS API erişim adresinden HHS’ye erişilebilir hesap bilgilerini GET isteği ile sorgular: \n \n RizaDurumu “Yetki Kullanıldı” ise işleme başlanır. RizaDurumu farklı bir değerde ise “TR.OHVPS.Resource.ConsentMismatch” hatasının iletilmesi gerekir. \n GET verisinin modele göre kontrolü yapılır (Örneğin: Alan kontrolleri) \n \n GET verisinin mantıksal kontrolleri yapılır. \n 7.6 ADIM 3.1 ve 3.2: Hesap Bilgilerinin Sorgulanması \n GET /hesaplar ve GET /hesaplar/{hspRef} \n Bu erişim noktalarından tüm hesapların veya belirli bir hesabın bilgilerinin sorgulanır. Hesap bilgisi için daha önce tanımlanmış izin türüne göre (Temel Hesap Bilgisi veya Detaylı Hesap Bilgisi) yanıtında dönülen HesapBilgileri nesnesinin içeriği değişir.  Tablo 15’te HesapBilgileri nesnesinin içeriği verilmiştir. \n Hesap Bilgisi Sorgu Örneği (Tüm Hesaplar) =  /hesaplar \nHesap Bilgisi Sorgu Örneği (Belirli Bir Hesap) =  /hesaplar/{hspRef} \nİşlem Sorgu Örneği (Belirli Bir Hesap) =  /hesaplar?\nsyfKytSayi=25&\nsyfNo=1&\nsrlmKrtr= hspRef &\nsrlmYon=A \n Tablo 14: Hesap Bilgileri Sorgulama İsteği Sorgu Parametreleri \n \n \n \n Alan Adı \n Parametre Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n HHS tarafından yapılması gereken kontrol ve işlemler \n \n \n \n \n Sayfa Başına İstenen Kayıt Sayısı \n syfKytSayi \n N3 \n İ \n Sayfa başına istenen kayıt sayısı. Bu alanda iletilen değer 100’den büyük olamaz. \n Bu veri gönderildiği durumda, HHS listesini bu sayı kadar gruplandırarak gönderir. Bu veri gönderilmediğinde sayfadaki kayıt sayısı 100 olarak kullanılır. \n \n \n İstenen Sayfa Numarası \n syfNo \n N3 \n İ \n Cevapta dönecek sayfa numarası 1’den başlayarak artan değerlerle iletilmelidir. \n Bu veri gönderildiği durumda, HHS işlemler listesini bu sayfadaki kayıtları gönderir. Gönderilmediğinde, HHS ilk sayfadaki kayıtları gönderir. \n \n \n Sıralama Kriteri \n srlmKrtr \n AN3..50 \n İ \n Cevapta dönülecek kayıtların sıralama kriterini belirtir. Alabileceği değerler: { “hspRef”} \n Bu veri gönderildiği durumda, HHS listesini bu kritere göre sıralayarak gönderir. Gönderilmediğinde, HHS sıralama kriterini hspRef olarak belirler. \n \n \n Sıralama Yönü \n srlmYon \n AN1 \n İ \n Cevapta dönülecek işlemlerin sıralama yönünü belirtir. Alabileceği değerler:  A: Azalan değerle sıralama Y: Artan değerle sıralama {“A”,”Y”} \n Bu veri gönderildiği durumda, HHS listesini bu yöne göre sıralayarak gönderir. Gönderilmediğinde, HHS sıralama yönünü Azalan olarak belirler. \n \n \n \n Tablo 15: “HesapBilgileri” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Rıza No \n rizaNo \n AN1..128 \n Z \n HesapBilgisiRızası nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n Hesap Temel \n hspTml \n Kompleks: HesapTemel \n Z \n Temel Hesap Bilgileri (Temel Hesap Bilgisi varsayılan izin türü olduğundan Hesap Temel nesnesi zorunlu olarak yanıtta bulunur) \n \n \n > Hesap Referansı \n hspRef \n AN5..40 \n Z \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid). YÖS bazında farklılaşması gerekmez. \n \n \n > Hesap Numarası \n hspNo \n AN26 \n K \n Eğer varsa ödeme hesabına ait IBAN bilgisi \n \n \n > Hesap Sahibi Unvanı \n hspShb \n AN3..140 \n Z \n Hesap sahibi ya da hesap sahiplerinin ad-soyadı, ticari unvanı \n \n \n > Şube Adı \n subeAdi \n AN3..50 \n K \n Eğer varsa ödeme hesabının bağlı olduğu şubenin adı \n \n \n > Kısa Ad \n kisaAd \n AN3..50 \n K \n Eğer hesap sahibi hesaba ait bir ad tanımladıysa, tanımlanan hesap adı \n \n \n > Para Birimi \n prBrm \n AN3 \n Z \n Para Birimi. \n \n \n > Hesap Türü \n hspTur \n AN1 \n Z \n Hesabın türü (bireysel veya ticari). TR.OHVPS.DataCode.HspTur sırali veri değerlerinden birini alır. \n \n \n > Hesap Tipi \n hspTip \n AN1..32 \n Z \n Hesabın tipi (VADESİZ, KREDİLİ vb.).TR.OHVPS.DataCode.HspTip sıralı veri değerlerinden birini alır. \n \n \n >Hesap Ürün Adı \n hspUrunAdi \n AN1..140 \n İ \n HHS tarafından atanmış olan ürün adı bilgisidir. HBHS tarafından ÖHK’ya gösterilmesi kullanım kolaylığı sağlayacaktır. \n \n \n > Hesap Durumu \n hspDrm \n AN5..50 \n Z \n Hesabın durumunu belirtir. TR.OHVPS.DataCode.HspDrm sıralı veri türlerinden birini alır. \n \n \n Hesap Detay \n hspDty \n Kompleks: HesapDetay \n K \n Detay Hesap Bilgileri (Temel Hesap Bilgisine ek olarak Detay Hesap Bilgisi izin türü de seçilmişse Hesap Detay nesnesi koşullu olarak yanıtta bulunur) \n \n \n > Açılış Tarihi \n hspAclsTrh \n ISODateTime \n Z \n Belirtilen hesabın açılış tarihi. \n 7.7 ADIM 3.3 ve 3.4: Hesap Bakiyesinin Sorgulanması \n GET /bakiye ve GET /hesaplar/{hspRef}/bakiye \nBu erişim noktalarından tüm hesapların veya belirli bir hesabın bakiyesi sorgulanır. \nİstek çağrısına dönülen “BakiyeBilgileri” nesnesi Tablo 17’de verilmiştir. \n Hesap bakiyelerinin gösterilmesi sırasında aşağıda verilen örnekler gözönünde bulundurulmalıdır. \n Örnek 1 : ÖHK  Hesap Bakiye Tutarı  0 TL,  Kredili Mevduat Hesabı Bakiyesi  3000 TL. ÖHK 1000 TL para çıkışı gerçekleştirdi. Bakiye API'si yanıtı içerisinde iletilen  Kredi Dahil Göstergesi  0 değerini içeriyorsa,  Hesap Bakiye Tutarı  -1000 TL,  Kredili Mevduat Hesabı Bakiyesi  3000 TL olmalıdır. \n Örnek 2 : ÖHK  Hesap Bakiye Tutarı  0 TL,  Kredili Mevduat Hesabı Bakiyesi  3000 TL. ÖHK 1000 TL para çıkışı gerçekleştirdi. Bakiye API'si yanıtı içerisinde iletilen  Kredi Dahil Göstergesi  1 değerini içeriyorsa,  Hesap Bakiye Tutarı  2000 TL,  Kredili Mevduat Hesabı Bakiyesi  3000 TL olmalıdır. \n Örnek 3 : ÖHK  Hesap Bakiye Tutarı  1000 TL,  Kredili Mevduat Hesabı Bakiyesi  3000 TL. ÖHK 1000 TL para çıkışı gerçekleştirdi. Bakiye API'si yanıtı içerisinde iletilen  Kredi Dahil Göstergesi  0 değerini içeriyorsa,  Hesap Bakiye Tutarı  0 TL,  Kredili Mevduat Hesabı Bakiyesi  3000 TL olmalıdır. \n Örnek 4 : ÖHK  Hesap Bakiye Tutarı  1000 TL,  Kredili Mevduat Hesabı Bakiyesi  3000 TL. ÖHK 1000 TL para çıkışı gerçekleştirdi. Bakiye API'si yanıtı içerisinde iletilen  Kredi Dahil Göstergesi  1 değerini içeriyorsa,  Hesap Bakiye Tutarı  3000 TL,  Kredili Mevduat Hesabı Bakiyesi  3000 TL olmalıdır. \n İşlem Sorgu Örneği (Belirli Bir Hesap)=  /bakiye?\nsyfKytSayi=25&\nsyfNo=1&\nsrlmKrtr= hspRef &\nsrlmYon=A \n Tablo 16: “BakiyeBilgileri” Sorgulama İsteği Sorgu Parametreleri \n \n \n \n Alan Adı \n Parametre Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n HHS tarafından yapılması gereken kontrol ve işlemler \n \n \n \n \n Sayfa Başına İstenen Kayıt Sayısı \n syfKytSayi \n N3 \n İ \n Sayfa başına istenen kayıt sayısı. Bu alanda iletilen değer 100’den büyük olamaz. \n Bu veri gönderildiği durumda, HHS listesini bu sayı kadar gruplandırarak gönderir. Bu veri gönderilmediğinde sayfadaki kayıt sayısı 100 olarak kullanılır. \n \n \n İstenen Sayfa Numarasi \n syfNo \n N3 \n İ \n Cevapta dönecek sayfa numarası 1’den başlayarak artan değerlerle iletilmelidir. \n Bu veri gönderildiği durumda, HHS işlemler listesini bu sayfadaki kayıtları gönderir. Gönderilmediğinde, HHS ilk sayfadaki kayıtları gönderir. \n \n \n Sıralama Kriteri \n srlmKrtr \n AN3..50 \n İ \n Cevapta dönülecek kayıtların sıralama kriterini belirtir. Alabileceği değerler: { “hspRef”} \n Bu veri gönderildiği durumda, HHS listesini bu kritere göre sıralayarak gönderir. Gönderilmediğinde, HHS sıralama kriterini hspRef olarak belirler. \n \n \n Sıralama Yönü \n srlmYon \n AN1 \n İ \n Cevapta dönülecek işlemlerin sıralama yönünü belirtir. Alabileceği değerler:  A: Azalan değerle sıralama Y: Artan değerle sıralama {“A”,”Y”} \n Bu veri gönderildiği durumda, HHS listesini bu yöne göre sıralayarak gönderir. Gönderilmediğinde, HHS sıralama yönünü Azalan olarak belirler. \n \n \n \n Tablo 17: “BakiyeBilgileri” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Hesap Referansı \n hspRef \n AN5..40 \n Z \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid). YÖS bazında farklılaşması gerekmez. \n \n \n Bakiye \n bky \n Kompleks:Bakiye \n Z \n \n \n \n > Hesap Bakiye Tutarı \n bkyTtr \n AN1..25 \n Z \n Hesabın bakiyesi. Bloke tutar düşülmeden iletilmelidir.   Tutar alanı regex patterni şu şekildedir:  '^-?\\d{1,18}$|^-?\\d{1,18}\\.\\d{1,5}$' \n \n \n > Blokeli Tutar \n blkTtr \n AN1..24 \n K \n Varsa hesapta blokeli tutar bilgisi.     Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n \n \n > Para Birimi \n prBrm \n AN3 \n Z \n Para birimi. \n \n \n > Bakiye İletilme Zamanı \n bkyZmn \n ISODateTime \n Z \n Bakiyenin iletildiği zaman bilgisi. \n \n \n > KrediliHesap \n krdHsp \n Kompleks: KrediliHesap \n K \n \n \n \n >> Kredili Mevduat Hesabı Bakiyesi \n kulKrdTtr \n AN1..24 \n Z \n Kredili mevduat tutarı. Kredili bir hesap ise zorunlu.   Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n \n \n >> Kredi Dahil Göstergesi \n krdDhlGstr \n AN1 \n Z \n Kredili bir hesap ise zorunlu. Bakiye tutarının kredi tutarı dahil edilerek ya da edilmeden iletildiğini gösterir.   0: Kredi tutarı dahil edilmeden bakiye bilgisi iletilmesi durumu   1: Kredi tutarı dahil edilerek bakiye bilgisi iletilmesi durumu \n 7.8 ADIM 3.5 ve 3.6: İşlemlerin Sorgulanması \n GET /hesaplar/{hspRef}/islemler \n Belirli bir hesaba ilişkin işlem bilgileri Tablo 1’daki istek parametrelerine göre sorgulanır. \nİşlem bilgisi için daha önce tanımlanmış izin türüne göre yanıtta dönen IslemBilgileri nesnesinin (Temel İşlem Bilgisi veya Temel İşlem Bilgisi ve Detaylı İşlem Bilgisi) içeriği değişir. \nİşlemler servisi hem ÖHK’nın talebi ile YÖS uygulaması üzerinden çağrılabileceği gibi, YÖS’ün ÖHK’sız başlatabileceği otomatik çağrıları ile de yanıt dönebilmektedir. \nHHS, işlemin sistemsel yapılıp yapılmadığını, istek parametreleri içerisinde yer alan PSU-Initiated parametresi ile anlar. Bu parametre “E” ise ÖHK’lı, “H” ise sistemsel yapılmış bir sorgu anlamına gelmektedir.\nÖHK’nın başlattığı sorgular için HHS tarafından belirlenen üst rate limitler dahilinde çağrım yapılabilir. \nYÖS, otomatik yapacağı sorgularda; \n \n Bireysel ÖHK’lar için hesap bazında günde en fazla 4 adet başarı ile sonuçlanan sorgulama yapabilir. \n Kurumsal ÖHK’lar için hesap bazında saatte en fazla 12 adet başarı ile sonuçlanan sorgulama yapabilir. \n \n HHS, tutacağı sayaç bilgisi ile bu sayıları kontrol ederek daha fazla sorgulama yapılmasına izin vermeyebilir. \n Aynı istek parametreleri ile yapılan sorgu sonucunda dönecek toplam kayıt sayısı 100’ü aştığında, sayfalama yöntemi ile HHS’nin cevap dönmesi beklenmektedir.  Her bir sayfa için işlemler servisi tekrar çağrılsa da, bu çağrım HHS’nin tuttuğu sayaç değerini arttırmaz. HHS’nin tutacağı sayaçın kontrol parametreleri YÖS kodu, hesap numarası ya da referansı olmalıdır. Sayfa no parametresi varsa ve 1'den büyük ise işlem sayacını arttırmamalıdır. \n ÖHK’nın YÖS uygulaması üzerinden tetiklediği işlemlerde ise;\nbireysel ÖHK’lar  için en fazla 1 aylık,\nkurumsal ÖHK’lar için ise en fazla 1 haftalık bir pencere aralığında sorgulama yapılabilir. \n YÖS, otomatik yapacağı sorgularda hem bireysel hem de kurumsal ÖHK’lar için 24 saatlik bir pencere aralığında sorgulama yapabilir. \n Hesap kapalı olduğu durumda hesap hareketlerini iletmek istemeyen HHS'lerin  TR.OHVPS.Business.InvalidAccount  hatası vermeleri beklenir. \n İşlem Sorgu Örneği (Belirli Bir Hesap)=  /hesaplar/{hspRef}/islemler?\nhesapIslemBslTrh=2020-06-01T00:00:00+03:00&\nhesapIslemBtsTrh=2020-06-02T23:59:59+03:00&\nminIslTtr=0&\nmksIslTtr=100000&\nbrcAlc=A&\nsyfKytSayi=25&\nsyfNo=1&\nsrlmKrtr= islGrckZaman &\nsrlmYon=A \n Tablo 18: İşlem Listesi Sorgulama İsteği Sorgu Parametreleri \n \n \n \n Alan Adı \n Parametre Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n HHS tarafından yapılması gereken kontrol ve işlemler \n \n \n \n \n İşlem Sorgulama Başlangıç Zamanı \n hesapIslemBslTrh \n ISODateTime \n Z \n Sorgulanacak işlemlerin başlangıç tarihi. \n HHS işlemler listesi dönüşünü bu kritere göre filtreleyerek iletmek zorundadır. ÖHK tarafından tetiklenen sorgularda;hesapIslemBslTrh ve hesapIslemBtsTrh arası fark bireysel ÖHK’lar için en fazla 1 ay,kurumsal ÖHK’lar için ise en fazla 1 hafta olabilir. YÖS tarafından sistemsel yapılan sorgulamalarda hem bireysel, hem de kurumsal ÖHK’lar için;son 24 saat sorgulanabilir. Bu yüzden hesapIslemBtsTrh-24 saat’ten daha uzun bir aralık sorgulanamaz olmalıdır. İstek başlığında yer alan PSU-Initiated alanı “E” ise ÖHK’lı, “H” ise sistemsel yapılmış bir sorgu anlamına gelmektedir. \n \n \n İşlem Sorgulama Bitiş Zamanı \n hesapIslemBtsTrh \n ISODateTime \n Z \n Sorgulanacak işlemlerin bitiş tarihi. \n HHS işlemler listesi dönüşünü bu kritere göre filtreleyerek iletmek zorundadır. YÖS tarafından sistemsel yapılan sorgulamalarda hem bireysel, hem de kurumsal ÖHK’lar için;İleri vadeli işlem emirleri dahil olmadığı için; İşlem Sorgulama Bitiş Zamanı, her zaman, sorgulama zaman damgasını iletecek şekilde (datetime (now)) iletilmelidir. \n \n \n En Düşük İşlem Tutarı \n minIslTtr \n AN1..24 \n İ \n Sorgulanacak işlemlerin alabileceği en düşük işlem tutarı.      Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n Bu veri gönderildiği durumda HHS işlemler listesi dönüşünü bu kritere göre filtreleyerek iletmek zorundadır. \n \n \n En Yüksek İşlem Tutarı \n mksIslTtr \n AN1..24 \n İ \n Sorgulanacak işlemlerin alabileceği en yüksek işlem tutarı.    Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n Bu veri gönderildiği durumda HHS işlemler listesi dönüşünü bu kritere göre filtreleyerek iletmek zorundadır. \n \n \n Borç Alacak Göstergesi \n brcAlc \n AN1 \n İ \n TR.OHVPS.DataCode.BrcAlc sıralı veri tipi değerlerinden birini alır. Sorgulanacak işlemlerin borç / alacak kriteri B: Hesaba borç yaratan işlem.A: Hesaba alacak yaratan işlem.{“B”,”A”} \n Bu veri gönderildiği durumda HHS işlemler listesi dönüşünü bu kritere göre filtreleyerek iletmek zorundadır. \n \n \n Sayfa Başına İstenen Kayıt Sayısı \n syfKytSayi \n N3 \n İ \n Sayfa başına istenen kayıt sayısı. Bu alanda iletilen değer 100’den büyük olamaz. \n Bu veri gönderildiği durumda, HHS işlemler listesini bu sayı kadar gruplandırarak gönderir. Bu veri gönderilmediğinde sayfadaki kayıt sayısı 100 olarak kullanılır. \n \n \n İstenen Sayfa Numarasi \n syfNo \n N3 \n İ \n Cevapta dönecek sayfa numarası 1’den başlayarak artan değerlerle iletilmelidir. \n Bu veri gönderildiği durumda, HHS işlemler listesini bu sayfadaki kayıtları gönderir. Gönderilmediğinde, HHS ilk sayfadaki kayıtları gönderir. \n \n \n Sıralama Kriteri \n srlmKrtr \n AN3..50 \n İ \n Cevapta dönülecek işlemlerin sıralama kriterini belirtir. Alabileceği değerler: {“islGrckZaman”} \n Bu veri gönderildiği durumda, HHS işlemler listesini bu kritere göre sıralayarak gönderir. Gönderilmediğinde, HHS sıralama kriterini islGrckZaman olarak belirler. \n \n \n Sıralama Yönü \n srlmYon \n AN1 \n İ \n Cevapta dönülecek işlemlerin sıralama yönünü belirtir. Alabileceği değerler: A: Azalan değerle sıralama Y: Artan değerle sıralama {“A”,”Y”} \n Bu veri gönderildiği durumda, HHS işlemler listesini bu yöne göre sıralayarak gönderir. Gönderilmediğinde, HHS sıralama yönünü Azalan olarak belirler. \n \n \n \n Tablo 19: “IslemBilgileri” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Hesap Referans Numarası \n hspRef \n AN5..40 \n Z \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid). YÖS bazında farklılaşması gerekmez. \n \n \n Islemler \n isller \n Kompleks:Islem[Array] \n K \n Hesaba ilişkin hareketler varsa İşlemler nesnesi dizisi olarak dönülür. İşlemler nesnesi Temel İşlem Bilgileri ve Detay İşlem Bilgileri nesnesinden meydana gelir. İzin türü varsayılan olarak Temel İşlem Bilgilerini içerir. Detay İşlem Bilgileri izin türü de seçildi ise Temel İşlem Bilgilerine ek olarak Detay İşlem Bilgileri de gönderilir. \n \n \n > Temel İşlem Bilgileri \n islTml \n Kompleks:IslemTemel \n Z \n Temel İşlem Bilgileri varsayılan olarak dönülür. \n \n \n >> İşlem Numarası \n islNo \n AN3..50 \n Z \n Hesap hareketinin oluşturulması sırasında atanan ve borç (veya alacak) hareketini tekilleştiren HHS bazında tekil tanımlayıcıdır. Bu değer tek başına tekil olabileceği gibi birden fazla değerin bir araya getirilmesiyle de tekilliği sağlanmış olabilir. Bu değerin en azından hesap numarası (hesNo) bazında tekil olması beklenir. Genellikle kullanılan örnekleri; Instance_Id, Transaction_Id, Transaction_Num, Transaction_TimeStamp,dekont numarası \n \n \n >> İşlem Referans Numarası \n refNo \n AN3..50 \n Z \n İşlemi uçtan uca tanımlayan tekil tanımlayıcıdır. Borç ve alacak hareketinden oluşan bir veya birden fazla işlemler bütünü için atanmış olan ve bu bütünü tekilleştiren (bir biri ile ilişkisini tutan) değerdir.Bu değer hem YÖS’ten gelen değer olabilir (ödeme işlemlerinde kullanılan kkodRef ya da refBlg alanı) hem de HHS içinde takip edilmek için üretilmiş bir değer olabilir. HHS sisteminde 2 değerin de bulunması durumunda;refNo alanını doldurmak için, HHS’nin YÖS’ten gelen değere öncelik vermesi beklenmektedir. YÖS’ten gelen veri örneği: Sipariş Numarası, Fatura Numarası, Karekod Referansı vb. HHS’te üretilen veri örneği: Masraflı havale işleminde hem havale işleminin hem de masraf işleminin aynı referans numarasına sahip olması da örnek olarak gösterilebilir. \n \n \n >> İşlem Tutarı \n islTtr \n AN1..24 \n Z \n İşlem tutarı.    Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para birimi. \n \n \n >> İşlem Gerçekleşme Zamanı \n islGrckZaman \n ISODateTime \n Z \n İşlemin gerçekleşme zamanı. \n \n \n >> İşlem Kanalı \n kanal \n AN1 \n Z \n TR.OHVPS.DataCode.OdemeKaynak sıralı veri türü değerlerinden birini alır. \n \n \n >> Borçlandırma Alacaklandırma Göstergesi \n brcAlc \n AN1 \n Z \n TR.OHVPS.DataCode.BrcAlc sıralı veri türü değerlerinden birini alır. İşlemin hesabı borç ya da alacaklandırdığı bilgisidir. \n \n \n >> İşlem Türü \n islTur \n AN3..50 \n Z \n HHS’nin işleme ait ilişkilendirdiği işlem türü değeri. TR.OHVPS.DataCode.IslemTuru sıralı veri türü değerlerinden birini alır. \n \n \n >> İşlem Amacı \n islAmc \n AN2 \n Z \n TR.OHVPS.DataCode.IslemAmaci sırali veri değerlerinden birini alır. Karekod akışında, FAST Karekod Veri Organizasyonundaki 62-08: alanında tanımlı Ödeme Amacı verisi kullanılır. \n \n \n >> Ödeme Sistemi No \n odmStmNo \n AN10..50 \n K \n Ödeme başarılı başlatıldıysa, ödemenin başlatıldığı sistemdeki referans numarası. Gerektiğinde ilgili ödeme sisteminde/HHS’de söz konusu ödemeye karşılık gelen mesajla bağlantı kurmada kullanılır.   Ödeme Hizmeti kullanıcısına işlemin takibi için gösterilebilir.  İşlemin yönlendirildiği ödeme sistemi FAST ya da PÖS ise sistemdeki ilgili mesajın Tarih, GönderenKatilimKodu ve SorguNumarasi değerlerinin birleşiminden oluşur. Bu 3 alan mevcutta kullanıldığı formatta aralarına dikey çizgi (Unicode U+2223) işareti koyularak, birleştirmeli ve iletilmelidir. Örn : Tarih|GönderenKatilimKodu|SorguNumarasi   Ödeme Havale/Virman işlemi ise HHS’nin üretmiş olduğu havale/virman numarasını içerir. Buradaki format da Tarih|GönderenKatilimKodu|Havale-virman numarası şeklinde olmalıdır. \n \n \n > Detay İşlem Bilgileri \n islDty \n Kompleks: IslemDetay \n K \n Detay İşlem Bilgileri dizi olarak gönderilmelidir. \n \n \n >> İşlem Açıklaması \n islAcklm \n AN1..150 \n Z \n HHS tarafından atanan işlem açıklaması.HHS kendi işlem hareketlerine yansıttığı açıklamayı buraya yansıtmalıdır. \n \n \n >> Karşı Taraf \n krsTrf \n Kompleks:  KarsiTaraf \n K \n Kullanımı işlem bazında değişmektedir. Örnek: FAST işleminde karşı taraf alıcının bilgileridir. Vergi ödemesinde kurum IBAN bilgisi müşteriye gösterilemeyebileceğinden bu alanın boş gelmesi HHS insiyatifindedir. \n \n \n >>> Karşı Maskeli IBAN \n krsMskIBAN \n AN26 \n K \n İlgili hesap hareketinin karşı tarafının maskeli IBAN bilgisi. \n \n \n >>> Karşı Maskeli Unvan \n krsMskUnvan \n AN3..140 \n K \n İlgili hesap hareketinin karşı tarafının maskeli ad-soyad ya da ticari unvan bilgisi. \n 7.9\tHealthcheck API \n GET /health \n HHS’lerin sunacağı bu servis, düzenli olarak BKM tarafından çağırılarak servislerin ayakta olup olmadıklarının kontrolünün sağlanması planlanmaktadır \n Başarılı yanıtta Http 200 kodu dönülmelidir. \n Başarılı Yanıt: \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n \n \n \n \n status \n status \n AN2..20 \n Z \n “UP”, “DOWN” değerlerini alabilir \n \n \n \n"},{title:"2.Kapsam ve Dayanak",frontmatter:{},regularPath:"/v1.0.2/contents/kapsam-ve-dayanak.html",relativePath:"v1.0.2/contents/kapsam-ve-dayanak.md",key:"v-3539d41d",path:"/v1.0.2/contents/kapsam-ve-dayanak.html",content:" 2.Kapsam ve Dayanak \n 12 Kasım 2019’da güncellenen “ 6493 sayılı Ödeme ve Menkul Kıymet Mutabakat Sistemleri, Ödeme Hizmetleri ve Elektronik Para Kuruluşları Hakkında Kanun ”un (Kanun) 12’nci maddesine yeni eklenen ve  Ödeme Hizmetleri Direktifi 2 'de (Payment Services Directive 2, PSD2) bulunan iki yeni ödeme hizmeti aşağıdaki gibi tanımlanmıştır (Şekil-1: Ödeme Hizmetleri Veri Paylaşım Servisleri): \n \n Ödeme Emri Başlatma Hizmeti : ÖHK’nın isteği üzerine başka bir ödeme hizmeti sağlayıcısında bulunan  ödeme hesabıyla  ilgili sunulan ödeme emri başlatma hizmeti [Madde 12, birinci fıkra, (f) bendi] \n Hesap Bilgisi Hizmeti : ÖHK’nın onayının alınması koşuluyla, ÖHK’nın ödeme hizmeti sağlayıcıları nezdinde bulunan bir veya daha fazla  ödeme hesabına  ilişkin konsolide edilmiş bilgilerin çevrim içi platformlarda sunulması hizmeti [Madde 12, birinci fıkra, (g) bendi] \n \n   \n Şekil 1: Ödeme Hizmetleri Veri Paylaşım Servisleri (ÖHVPS)- tanıtım \n Kanunun 14/A maddesinin ikinci fıkrasına göre , Kanunun 12’nci maddesinin birinci fıkrasının (f) veya (g) bentlerinde yer alan ödeme hizmetleri ile ilgili işlemlerin yürütülmesine ilişkin usul ve esaslar ile taraflarca uyulması gereken teknik ve operasyonel gereklilikler ikincil düzenlemeler uyarınca Türkiye Cumhuriyet Merkez Bankası (TCMB) tarafından belirlenir. Kanunun 12’nci maddesinin birinci fıkrasının (f) veya (g) bentlerinde yer alan ödeme hizmetlerinde kullanılan veri paylaşım servisleri  ödeme hizmetleri veri paylaşım servisleri (ÖHVPS)  olarak adlandırılmaktadır. \n Ödeme Hizmetleri ve Elektronik Para İhracı ile Ödeme Hizmeti Sağlayıcıları Hakkında Yönetmelik’in (Yönetmelik) 59’uncu maddesinin birinci fıkrası uyarınca hazırlanan bu belgede söz konusu ödeme hizmetlerini sunacak ödeme hizmeti sağlayıcısının, ödeme hesabının bulunduğu ödeme hizmeti sağlayıcısının, varsa ilgili diğer tarafların ve bu hizmetlerin sunulması için taraflar arasında kurulacak bağlantının teknik ve operasyonel gereklilikleri açıklanmaktadır. \n Düzenlemeler kapsamında yetkilendirilen üçüncü taraf hizmet sağlayıcısı  (Yetkili Ödeme Hizmeti Sağlayıcısı, YÖS) , ödeme hizmeti kullanıcılarının  Hesap Hizmeti Sağlayıcıları (HHS)  nezdindeki ödeme hesaplarına ulaşarak ödeme emri başlatma ve hesap bilgisi sağlama hizmetlerinden (ödeme hizmetleri veri paylaşım servislerinden) faydalanmasına aracılık eder. Ödeme hizmetleri veri paylaşım servisleri kapsamında iki tip YÖS bulunmaktadır:  1) Hesap Bilgisi Hizmeti Sağlayıcısı (HBHS) ve 2) Ödeme Emri Başlatma Hizmeti Sağlayıcısı (ÖBHS). \n Hesap Bilgisi Hizmeti Sağlayıcısı (HBHS) ÖHK’nın farklı Hesap Hizmeti Sağlayıcıları (HHS) nezdindeki hesaplarının bilgilerini derleyerek çevrim içi platformlarda  toplu şekilde  sunar. Ödeme Emri Başlatma Hizmeti Sağlayıcısı (ÖBHS) ise talebi üzerine ÖHK’nın HHS’de bulunan ödeme hesabından ödeme işlemi başlatır. \n ÖHVPS’nin üst düzey gösterimi Şekil-2’de verilmiştir. \n   \n Şekil 2: Ödeme Hizmetleri Veri Paylaşım Servisleri (ÖHVPS) -üst düzey gösterim \n Ödeme Hizmetleri Veri Paylaşım Servislerinin HHS’ler tarafından  BKM API Geçidi  vasıtasıyla sunulduğu uygulama mimarisi ise Şekil-3’te sunulmuştur. \n  \n Şekil 3: ÖHVPS'nin BKM API Geçidi vasıtasıyla sunumu \n"},{frontmatter:{},regularPath:"/v1.0.2/contents/tanim-ve-kisitlamalar.html",relativePath:"v1.0.2/contents/tanim-ve-kisitlamalar.md",key:"v-3e221f7d",path:"/v1.0.2/contents/tanim-ve-kisitlamalar.html",content:"  1.\tTanım ve Kısaltmalar   \n Tablo 1: Tanım ve Kısaltmalar \n \n \n \n Kısaltma \n Tanım \n Açıklama \n İngilizce Açıklama \n İngilizce Kısaltma \n \n \n \n \n ÇS \n Çerçeve Sözleşme \n Ödeme hizmeti sağlayıcısı ile müşteri arasında tekil veya süreklilik arz eden ödeme işlemlerinin yürütülmesine ve mümkün olan durumlarda ödeme hesabının açılmasına ilişkin usul ve esasları belirleyen sözleşme \n \n \n \n \n EPK \n Elektronik Para Kuruluşu \n Kanun kapsamında elektronik para ihraç etme yetkisi verilen tüzel kişi \n Electronic Money Institution \n EMI \n \n \n FAST \n Fonların Anlık ve Sürekli Transferi \n TCMB tarafından işletilen Fonların Anlık ve Sürekli Transferi Sistemi \n \n \n \n \n FAST TR-Karekod \n FAST-TR Karekod Teknik İlke ve Kurallar Rehberi \n TR Karekod’un FAST Sistemi aracılığıyla gerçekleşecek işlemlerde kullanılmasına ilişkin detaylı teknik ilke ve kurallarını içeren doküman \n \n \n \n \n GKD \n Güçlü Kimlik Doğrulama \n Kimlik doğrulamada kullanılan ve bir bileşenin ele geçirilmesinin diğer bileşenin güvenliğini tehlikeye atmayacağı en az iki bileşenden oluşan, bu iki bileşenin de müşterinin bildiği, sahip olduğu veya biyometrik bir karakteristiği olan bileşen sınıflarından farklı ikisine ait olacak şekilde seçildiği yöntem \n Strong Customer Authentication \n SCA \n \n \n İB \n İşlem Bilgisi \n Gerçekleştirilen işleme ilişkin işlem zamanını, işlemin niteliğini ve ödeme işlemi için ödeme emrinin masraf, komisyon ve ücretler de dahil hesabın borçlandırılacağı toplam tutarını ve ödemenin göndereni ile alıcısını veya toplu ödeme emrinin masraf, komisyon ve ücretler de dahil hesabın borçlandırılacağı toplam tutarını ve göndereni ile alıcılarını içeren bilgi \n \n \n \n \n İDK \n İşlem Doğrulama Kodu \n Kimlik doğrulama yöntemlerinden biriyle kendisini sisteme tanıtan bir müşterinin gerçekleştirmek istediği işleme özgü olmak ve belirli bir geçerlilik süresi içinde işlem onayında kullanılmak üzere oluşturulan, finansal sonuç doğrunan işlemlerde kişiye onay anında ilgili işlem bilgisi (İB) ile birlikte gösterilen, alıcı veya tutarın değişmesiyle geçersiz hale gelen bilgi \n Authentication Code \n AC \n \n \n KOLAS \n Kolay Adresleme Servisi \n Fon transferlerinde hesap numarası ile ad soyad yerine kullanılan ve belirli bir hesap ile eşleştirilmiş telefon numarası, e-posta adresi, T.C. Kimlik Numarası (TCKN), Vergi Kimlik Numarası (VKN), Yabancı Kimlik Numarası veya Pasaport Numarası gibi Kolay Adres bilgilerinin kaydedilmesini, güncellenmesini ve sorgulamasını sağlayan katman servis \n \n \n \n \n HBHS \n Hesap Bilgisi Hizmeti Sağlayıcısı \n Kanunun 12 inci maddesinin birinci fıkrasının (g) bendinde tanımlanan ödeme hizmetini (hesap bilgisi hizmetini) sunan tüzel kişi \n Account Information Service Provider \n AISP \n \n \n HHS \n Hesap Hizmeti Sağlayıcısı \n Nezdinde ödeme hesabı bulunan ödeme hizmeti sağlayıcısı \n Account Servicing Payment Service Provider \n ASPSP \n \n \n ÖBHS \n Ödeme Emri Başlatma Hizmeti Sağlayıcısı \n Kanunun 12 inci maddesinin birinci fıkrasının (f) bendinde tanımlanan ödeme hizmetini (ödeme emri başlatma hizmetini) sunan tüzel kişi \n Payment Initiation Service Provider \n PISP \n \n \n ÖDK \n Ödeme Kuruluşu \n Ödeme hizmeti sağlamak ve gerçekleştirmek için Kanun kapsamında yetkilendirilmiş tüzel kişi \n Payment Institution \n PI \n \n \n ÖH \n Ödeme Hesabı \n Ödeme hizmeti kullanıcısı adına açılan ve ödeme işleminin yürütülmesinde kullanılan hesap \n Payment Account \n PA \n \n \n ÖHK \n Ödeme Hizmeti Kullanıcısı (Müşteri) \n Gönderen, alıcı veya her ikisi sıfatıyla belirli bir ödeme hizmetinden faydalanan gerçek veya tüzel kişi \n Payment Service User \n PSU \n \n \n ÖHS \n Ödeme Hizmeti Sağlayıcısı \n 5411 sayılı Kanun kapsamındaki bankalar, EPK, ÖDK ve Posta ve Telgraf Teşkilatı Anonim Şirketi(PTT) \n Payment Service Provider \n PSP \n \n \n ÖHVPS \n Ödeme Hizmetleri Veri Paylaşım Servisleri \n Kanunun 12’nci maddesinin birinci fıkrasının (f) veya (g) bentlerinde yer alan ödeme hizmetlerinde kullanılan veri paylaşım servisleri \n \n \n \n \n PÖS \n Perakende Ödeme Sistemi \n TCMB tarafından işletilen, işlemlerin Türk Lirası üzerinden gerçekleştiği Müşteriler Arası Türk Lirası Aktarım Sistemi \n \n \n \n \n TR-Karekod \n TR-Karekod İlke ve Kuralları \n Ulusal karekod (TR Karekod) ilke ve kurallarının belirlendiği belge \n \n \n \n \n YÖS \n Yetkili Ödeme Hizmeti Sağlayıcısı \n Ödeme emri başlatma hizmeti ve/veya hesap bilgisi hizmeti sunan tüzel kişi \n Third Party Payment Service Providers \n TPP \n \n \n \n"},{title:"3. Temel Prensipler",frontmatter:{},regularPath:"/v1.0.2/contents/temel-prensipler.html",relativePath:"v1.0.2/contents/temel-prensipler.md",key:"v-03088e53",path:"/v1.0.2/contents/temel-prensipler.html",headers:[{level:2,title:"3.1 Genel",slug:"_3-1-genel"},{level:2,title:"3.2.\tİstem (Çağrı) ve Oturum",slug:"_3-2-istem-cagrı-ve-oturum"},{level:2,title:"3.3.\tRESTful API",slug:"_3-3-restful-api"},{level:2,title:"3.4.\tSürüm Yönetimi",slug:"_3-4-surum-yonetimi"},{level:2,title:"3.5.\tKaynak URI Yol Yapısı",slug:"_3-5-kaynak-uri-yol-yapısı"},{level:2,title:"3.6.\tKarakter Kodlama",slug:"_3-6-karakter-kodlama"},{level:2,title:"3.7.\tVeri Formatı",slug:"_3-7-veri-formatı"},{level:2,title:"3.8.\tİstemci Sertifika Yönetimi",slug:"_3-8-istemci-sertifika-yonetimi"},{level:2,title:"3.9.\tYetkilendirme Türleri",slug:"_3-9-yetkilendirme-turleri"},{level:2,title:"3.10. İstek/Cevap Mesajlarında Kullanılan Nesne Yapıları",slug:"_3-10-istek-cevap-mesajlarında-kullanılan-nesne-yapıları"},{level:2,title:"3.11. Sayfalandırma ve Filtreleme",slug:"_3-11-sayfalandırma-ve-filtreleme"},{level:2,title:"3.12. Mesaj İmzalama",slug:"_3-12-mesaj-imzalama"},{level:2,title:"3.13. Durum Kodu",slug:"_3-13-durum-kodu"},{level:2,title:"3.14. Gereksinimlerinin Sınıflandırılması",slug:"_3-14-gereksinimlerinin-sınıflandırılması"},{level:2,title:"3.15. İstek Başlığı",slug:"_3-15-istek-baslıgı"},{level:2,title:"3.16. Yanıt Başlığı",slug:"_3-16-yanıt-baslıgı"},{level:2,title:"3.17. Idempotency Kuralları",slug:"_3-17-idempotency-kuralları"},{level:2,title:"3.18. HTTP Durum Kodları",slug:"_3-18-http-durum-kodları"},{level:2,title:"3.19. Maskeleme Kuralları",slug:"_3-19-maskeleme-kuralları"},{level:2,title:"3.20. Fonksiyonel Olmayan Gereksinimler",slug:"_3-20-fonksiyonel-olmayan-gereksinimler"},{level:2,title:"3.21. Otomatik Sorgular",slug:"_3-21-otomatik-sorgular"}],content:' 3. Temel Prensipler  \n Bu bölümde Ödeme Hizmetleri Veri Paylaşım Servisleri (Hesap Bilgisi Hizmeti, Ödeme Emri Başlatma Hizmeti) için tanımlanan temel prensipler açıklanmaktadır. \n 3.1 Genel \n \n \n HHS’ler Yönetmeliğin 59. maddesinin beşinci fıkrası ve Ödeme ve Elektronik Para Kuruluşlarının Bilgi Sistemleri ile Ödeme Hizmeti Sağlayıcılarının Ödeme Hizmetleri Alanındaki Veri Paylaşım Servislerine İlişkin Tebliğin (Tebliğ) 23. maddesinin birinci fıkrası uyarınca, ödeme hizmetleri veri paylaşım servislerini BKM API Geçidi aracılığıyla HBHS ve ÖBHS’ye sunmakla yükümlüdür. \n \n \n Tebliğin 23. maddesinin ikinci fıkrası uyarınca ödeme emri başlatma hizmetinde açık iletişim servisinin tarafları ÖBHS ile HHS’dir. \n \n \n Tebliğin 23. maddesinin üçüncü fıkrası uyarınca hesap bilgisi hizmetinde açık iletişim servisinin tarafları HBHS ile HHS’dir. \n \n \n Yönetmeliğin 60. maddesinin birinci fıkrası uyarınca müşteri, ödeme emri başlatma hizmetini  ödeme hesabının çevrim içi olarak erişilebilir olduğu durumlarda , kullanmayı tercih edebilir. \n \n \n Yönetmeliğin 61. maddesinin birinci fıkrası uyarınca müşteri, hesap bilgisi hizmetini  ödeme hesabının çevrim içi olarak erişilebilir olduğu durumlarda , kullanmayı tercih edebilir. \n \n \n Tebliğin 25. maddesi uyarınca HHS ve YÖS (ÖBHS ve HBHS) arasında bağlantı uçtan uca güvenli bir şekilde sağlanır. Bu amaçla iletim katmanında TLS (asgari 1.2 sürümü) ile şifreli iletişim sağlanır. \n \n \n Tebliğin 23. maddesinin dördüncü fıkrası uyarınca HHS tarafından sunulan ödeme hizmetleri veri paylaşım servislerini kullanan yetkilendirilmiş ödeme hizmeti sağlayıcılarının TCMB tarafından ilgili ödeme hizmeti için yetkilendirilmiş olduğu kontrol edilir. \n \n \n Tebliğin 25. maddesinin beşinci fıkrası uyarınca zaman damgası, 15/1/2004 tarihli 5070 sayılı Elektronik İmza Kanunu kapsamında tanımlanan zaman damgasına dayanır. \n \n \n API alan isimleri Türkçe olarak tanımlanmıştır. Ancak API başlığı (header) alanındaki alan isimleri özelinde, API Geçitleri tarafından otomatik olarak tanınabilmesi gözetilerek, İngilizce isimlendirme tercih edilmiştir. \n \n \n ÖHK halihazırda ödeme hesaplarına, çevrim içi (mobil bankacılık, internet bankacılığı vb.) erişebilir durumda ise, HHS\'nin varsa Açık Bankacılık kanal veya yetki tanımını varsayılan değeri AÇIK olacak şekilde sunması gerekmektedir. HHS’nin, Bireysel/Kurumsal/Ticari müşteri ayrımı yapmaksızın tüm müşterileri için, çevrim içi kanallarda hesap hareketlerine erişim ve ödeme yapabilme yetkisi bulunması durumunda, yine aynı şekilde Açık Bankacılık kanal veya yetki tanımını da varsayılan değeri AÇIK olacak şekilde sunması gerekmektedir. \n 3.2.\tİstem (Çağrı) ve Oturum \n \n \n Her istek tekil istek numarası ve ÖHK’lı işlemler için zaman damgası (PSU-Timestamp) içerir. Birden fazla istek içeren işlem YÖS tarafından belirlenen çağrıya özgü talep kimliği (istek numarası: X-Request-ID) ve rıza sürecine özgü talep kimliği (işlem grup numarası: X-Group-ID) değerleri kullanılmalıdır. Aynı rıza no’ya ait tüm isteklerde aynı X-Group-ID bilgisi değeri gönderilmelidir. \n \n \n Oturum takibi ise PSU-Session-ID ile yapılır. Oturum numarası (PSU-Session-ID) ÖHK’lı işlemler için zaman damgası (PSU-Timestamp) ile birlikte ilgili tüm işlem verilerini içerecek şekilde kayıt altına alınır. \n \n \n Örneğin, bir ödeme emri başlatma işlemi birden fazla istekten oluşur. Her istek yukarıda belirtildiği gibi biricik istek numarası ve ÖHK’lı işlemler için zaman damgası (PSU-Timestamp) içerir. Ancak işlemin oturum bütünlüğü PSU-Session-ID ile sağlanır. \n \n \n Taraflar açtıkları oturumu işlem bütünlüğünü sağlayacak süre içerisinde açık tutar ve işlem biter bitmez kapatır. \n 3.3.\tRESTful API \n API’ler, dünya ölçeğinde yaygın bir şekilde kullanılan Temsili Durum Transferi (Representational State Transfer, REST) mimari tarzı ve JavaScript Nesne Notasyonu (JavaScript Object Notation, JSON) veri formatlarına uygun olarak geliştirilir. En üst seviye Veri Tanımlama Dili (Data Description Language) ve en iyi uygulama örnekleri için  ^JSON Şeması  temel alınır. \n İstek ve yanıt mesajlarında, isteğe bağlı veya koşullu bir alan, değer içermiyorsa, bu alan JSON payloadunda yer almamalıdır. \n Örnek kod bloğu. \n "rzBlg":{\n         "rizaNo":"aa9bd7e7-0ccd-4edc-9639-5a358dbf2335",\n         "olusZmn":"2022-11-28T12:00:21+03:00",\n         "gnclZmn":null,    --\x3e hatalı\n         "rizaDrm":"K",\n         "rizaIptDtyKod":"" --\x3e hatalı \n      },\n \n Örnek kod bloğu: \n \n         "alc":{\n            "hspNo": "TR800800004162387689546019",\n            "unv": "AHMET YILMAZ", \n            "kolas":{}  --\x3e nesne gönderimi hatalı\n         },\n 3.4.\tSürüm Yönetimi \n API sonraki aşamalarda doğabilecek gereksinimleri ve daha karmaşık kullanım durumlarını karşılamak için sürümler halinde geliştirilir ve bu durum tasarım sırasında göz önünde bulundurulur. \n API v1.0 sürümünde ; \n \n Kapsamdaki ödeme hesapları : Vadesiz TL, yabancı para hesapları (gerçek ve tüzel kişilere ait ödeme hesapları), Kredili Mevduat Hesabı \n Tekil ödeme (Virman/Havale/FAST/Müşterilerarası TL Aktarım Sistemi)\n \n Virman ve havale işlemleri kapsamında yabancı para transferi yapılabilir. \n \n \n Hesap bilgisi hizmetleri\n \n Temel veya ayrıntılı hesap bilgisi \n Bakiye \n Gerçekleşen işlemler için Hesap hareketleri \n \n \n Karekodlu ödemelerdeki 01, 02 ve 03 akış türleri\nyer almaktadır. \n \n Her sürüm değişikliğinde bir önceki sürüm belirli bir süre desteklenecektir. Diğer bir ifadeyle, sadece belirli bir süre için mevcut ve bir önceki sürüm aynı anda erişilebilir olacaktır. \n 3.5.\tKaynak URI Yol Yapısı \n YÖS’lerin başlattığı çağrılarda URI yolu aşağıdaki yapıyı takip eder: \n [hhs-yol-ön-eki]/ohvps/ [kaynak-grubu]/ [sürüm]/ [kaynak]/[kaynak-no]/[alt-kaynak] \n Bu, aşağıdaki unsurlardan oluşur: \n \n [hhs-yol-ön-eki] \nİsteğe bağlı, HHS\'ye özgü yol ön ekini ifade eder. \nBKM API geçidi üzerinden yapılan çağrılarda BKM tarafından belirlenen sistem adı ve yol ön eki kullanılır. \n ohvps \nSabit metin “ohvps” (Ödeme Hizmetleri Veri Paylaşım Servisleri kısaltması) \n [kaynak-grubu] \nKaynak grubu, API’ye erişmek için kullanılan ödeme hizmetine (HBH, ÖBH) göre erişim adresi (end point) grubunu tanımlar (“hbh” veya “obh”). \n [sürüm] \nAPI sürümünü ifade eder (“/s[ana-sürüm].[alt-sürüm]/”). \n [kaynak]/[kaynak-no] \nKaynak detaylarını ifade eder. \n [alt-kaynak] \nAlt kaynak detaylarını ifade eder. \n \n HHS, tüm kaynakları için aynı katılımcı yolu ön ekini ve sistem adını kullanmalıdır. \n BKM API’lerine erişmek isteyen uygulamaların yetkilerine göre aşağıdaki API’lere abone olmaları gerekmektedir: \n OBH: \n https://secure.api-preprod.bkm.com.tr/ohvps/obh/s1.0/odeme-emri-rizasi \n https://secure.api-preprod.bkm.com.tr/ohvps/obh/s1.0/odeme-emri \nHBH: \n https://secure.api-preprod.bkm.com.tr/ohvps/hbh/s1.0/hesap-bilgisi-rizasi \n https://secure.api-preprod.bkm.com.tr/ohvps/hbh/s1.0/hesaplar \n https://secure.api-preprod.bkm.com.tr/ohvps/hbh/s1.0/hesaplar/1234/islemler \n https://secure.api-preprod.bkm.com.tr/ohvps/hbh/s1.0/hesaplar/1234/bakiye \nGKD \n https://secure.api-preprod.bkm.com.tr/ohvps/gkd/s1.0/erisim-belirteci \nHHS – YÖS API \n https://secure.api-preprod.bkm.com.tr/hhs-api/s1.0/hhs \n https://secure.api-preprod.bkm.com.tr/hhs-api/s1.0/hhs/1234 \n https://secure.api-preprod.bkm.com.tr/yos-api/s1.0/yos \n https://secure.api-preprod.bkm.com.tr/yos-api/s1.0/yos/1234 \n HHS’lerin sağlayacakları API’lerdeki URI çevrimi örnekleri aşağıdaki gibidir. \n \n https://xbank.com.tr/api-portal/ohvps/obh/s1.0/odeme-emri \n https://secure.api-preprod.bkm.com.tr/ohvps/obh/s1.0/odeme-emri  (BKM API) \n https://xbank.com.tr/api-portal/ohvps/hbh/s1.0/hesap-bilgisi-rizasi \n https://secure.api-preprod.bkm.com.tr/ohvps/hbh/s1.0/hesap-bilgisi-rizasi  (BKM API) \n https://xbank.com.tr/api-portal/ohvps/hbh/s1.1/hesaplar \n https://secure.api-preprod.bkm.com.tr/ohvps/hbh/s1.1/hesaplar   (BKM API) \n https://xbank.com.tr/api-portal/ohvps/hbh/s1.1/hesaplar/1234 \n https://secure.api-preprod.bkm.com.tr/ohvps/hbh/s1.1/hesaplar/1234  (BKM API) \n \n BKM API Geçidi üzerinden yapılan çağrılarda, istek başlığında bulunan “x-aspsp-code” (isteğin iletildiği Hesap Hizmeti Sağlayıcısının kodu) değerine göre HHS API’de standart olarak tanımlanmış olan “basePath” bilgisine servis uzantısı eklenerek HHS’ye yönlendirme yapılır. \n Örneğin, istek başlığında  xbank ’ın kodu varsa, YÖS tarafından yapılan \n https://secure.api-preprod.bkm.com.tr/ohvps/hbh/s1.0/hesap-bilgisi-rizasi \nçağrısı BKM API Geçidi tarafından karşılanarak \n https://xbank.com.tr/api-portal/ohvps/hbh/s1.0/hesap-bilgisi-rizasi \nadresine yönlendirilir. \n Bu örnekte,  https://xbank.com.tr/api-portal  basePath bilgisi HHS tarafından HHS API’ye girilen değerdir. \n 3.6.\tKarakter Kodlama \n API istekleri ve yanıtlarında UTF-8 karakter kodlaması kullanılır. Bu, JSON için varsayılan karakter kodlamasıdır. \n Ancak, bir HHS\'nin kendi uygulamaları ve ödeme başlattığı ödeme sistemi (FAST vb.)  bazı UTF-8 karakterlerini kabul etmeyebilir. HHS, UTF-8 kodlaması içeren bir mesajı işleyemez ve reddederse, HTTP 400 (Hatalı İstek) durum kodu ile yanıt vermelidir. \n 3.7.\tVeri Formatı \n \n Açık bankacılık kapsamındaki zaman damgası, ISO 8601 standartına uygun olarak yerel saat bilgisini ve timezone bilgisini de içerecek şekilde " yyyy-MM-dd’T’HH:mm:ssXXX " formattaki haliyle hazırlanmalıdır. \n \n Örnek:  "timestamp": "2021-05-30T20:34:15+03:00" \nyyyy : 4 hane yıl \nMM : Başa ‘0’ eklenmiş, toplam 2 hane ay \ndd    : Başa ‘0’ eklenmiş, toplam 2 hane gün \nHH    : Başa ‘0’ eklenmiş, toplam 2 hane saat (0-23 arası değer alabilir.) \nmm : Başa ‘0’ eklenmiş, toplam 2 hane dakika \nss    : Başa ‘0’ eklenmiş, toplam 2 hane saniye \nXXX : ISO 8601 Time zone \n \n \n JWT veri paketlerinde kullanılan zaman damgaları, 1 Ocak 1970 Saat 00:00:00 (UTC) anından itibaren geçen saniye sayısı değerini (Unix Time) kullanmalıdır. \n \n \n Bir HHS, tarihi yanlış biçimlendirilmiş bir istek aldığında, 400 (Hatalı İstek) durum kodu ve ilgili hata kodu ile yanıt vermelidir. \n \n \n ISO 4217 Standartında para birimleri ve kaç basamak ondalık değer içerebilecekleri belirlenmiştir. \n https://www.iso.org/iso-4217-currency-codes.html   adresinden ücretsiz olarak listeye erişilebilir.  \nAPI Standartlarında da para birimleri  ISO 4217’de tanımlanmış olan 3 harfli kodlarla iletilir.   Tüm tutar alanları ISO 4217\'de tanımlanmış para birimlerinin ondalık basamak değerleri de göz önünde bulundurularak iletilmelidir. Tutar alanları artı ya da eksi değer alabileceği için API deseninde tanımlanmış regular expressionlar dikkate alınmalıdır. \nÖrneğin; Bakiye API\'sindeki "Kredili Mevduat Hesabı Bakiyesi" alanı "-100.25" ve "Para Birimi" alanı "TRY" olarak iletildiğinde 25 değerinin kuruş olduğu anlaşılmalıdır. \nÖdeme Emri Rızası API\'sinde yer alan "İşlem Tutarı" alanı "104.75" TRY olarak iletildiğinde "75" değerinin kuruş olduğu anlaşılmalıdır. \n"12000" Japon Yeni için, ISO 4217’de JPY para biriminin ondalık kısmı olmadığından "İşlem Tutarı" alanında "12000" ve "Para Birimi" alanında "JPY" değeri  iletilmelidir. \n \n \n Altın para birimi özelinde ISO 4217’ye uygun olarak "XAU" cinsinde ve 2 basamak ondalık rakam içerecek şekilde iletilmelidir. Örneğin içerisinde "13,50 gr" altın olan hesap için bakiye "13.50", para birimi "XAU" olarak gönderilmelidir. \n \n \n Diğer madenlerde ondalık basamak ISO 4217 standartında tanımlandığı gibi olmalıdır. \n \n \n Sıralı veri tipleri büyük küçük harfe duyarlı olmalıdır. \n 3.8.\tİstemci Sertifika Yönetimi \n ÖHVPS kapsamında YÖS ve HHS’lerin güvenli bir şekilde tanımlanması amacıyla elektronik sertifikalar kullanılır. \n ÖHVPS kapsamında tarafların güvenli bir şekilde tanımlaması, uçtan uca güvenli iletişim, mesaj şifreleme ve mesaj imzalama işlevleri 15/1/2004 tarihli ve 5070 sayılı Elektronik İmza Kanunu’nda açıklanan elektronik sertifikalar kullanılarak sağlanır. Elektronik sertifikada Türkiye Cumhuriyet Merkez Bankası tarafından verilen kuruluş kodu ve kuruluşun türüne dair bilgiler bulunur. \n BKM API Geçidi üzerinden yapılan erişimlerde YÖS ve HHS’lere önceden dağıtılmış olan istemci sertifikaları kullanılarak tarafların (sunucu) kimliklerinin doğrulanması sağlanacaktır. İstemci sertifikaları hem test hem de üretim ortamında kullanılacaktır. Sertifikaların işlevselliği ve geçerliliği sertifikasyon sürecinde de sınanacaktır. Söz konusu sertifikaların dağıtım prosedürleri ve kullanımlara yönelik açıklamalar EK-3’te yer verilmiştir. \n 3.9.\tYetkilendirme Türleri \n BKM API Geçidi üzerinden yapılan çağrılarda iki temel yetkilendirme türü kullanılır: \n 1.\tİstemci Kimlik Bilgileri:  Müşteri onayının gerekmediği, sadece YÖS’ün tanımlanıp doğrulandığı API çağrılarında kullanılır. YÖS’ün yetkilendirilmiş olduğu ve faaliyet izninin yaptığı hizmet çağrısına uygun olduğu kontrol edilir.  Bu amaçla, YÖS’lere clientId ve clientSecret tahsis edilecektir. YÖS’ler ilgili clientId ve clientSecret ile sadece yetkilendirilmiş oldukları servislere erişebileceklerdir. YÖS’ler kendilerine BKM tarafından sunulacak API’yi, kendi clientID ve clientSecret değerleri ile sorgulayarak “İstemci Kimlik Bilgileri” belirtecini (access token) elde edeceklerdir.\nHHS’ler de BKM API geçidi üzerindeki YÖS API’sini sorgulama maksadı ile BKM API Geçidine geldiklerinde, kendilerine atanmış olan clientID ve clientSecret bilgileri ile yetki kontrolleri yapılır.\nHHS’ler kendilerinden alınacak username ve password değerleri kullanılarak oluşturulacak basic authentication metodu ile servislerini sunacaklardır. \n 2.\tYetkilendirme Kodu:  YÖS’ün doğrulanmasının yanısıra müşterinin GKD ile doğrulanması gereken API çağrılarında kullanılır. Müşteri doğrulanarak yetkilendirme kodu oluşturulması HHS’nin yetkilendirme arayüzüne yönlendirilir. GKD’nin başarıyla tamamlanması sonrasında yetkilendirme kodu YÖS’e dönülür. YÖS daha sonra HHS’nin  erişim belirteci  (access token) erişim adresini (EK-3: POST /erisim-belirteci) çağırmak suretiyle yetkilendirme kodunu bir erişim belirteci (access token) ile değiştirerek ilgili kaynakları kullanabilir. \n Ödeme emri başlatma ve hesap bilgisi hizmetlerinde hangi yetkilendirme türlerinin kullanılacağı bilgisi, ilgili başlıklardaki erişim adresleri (endpoints) tablolarında yer almaktadır. \n erisim-belirteci  erisim noktasından elde edilen  erisimBelirteci  ilişkilendirildiği nesne veya işlem için gönderilen POST isteği başlığında  x-access-token  alanında iletilir.\nBelirli bir süre için tanımlanan erişim belirteci (access token) değerinin yenileme belirteci (refresh token) ile yenilenmesi gerekir. \n Erişim adreslerinde kullanılan yetkilendirme türü ilgili erişim adresi tablolarında belirtilmiştir. \n 3.10. İstek/Cevap Mesajlarında Kullanılan Nesne Yapıları \n İstek ve Cevap mesajlarında kullanılacak olan nesneler tüm elemanlarını kapsayacak şekilde Ek-1 de listelenmiştir. Tüm listelenen elemanlar açısından (Uç nokta mesaj yapılarının belirtildiği tablolarda belirtildiği üzere) alanın Zorunlu (z) veya İsteğe Bağlı (İ) olma durumlarına göre bazı alanlar gönderilebilir veya gönderilmeyebilir. \n 3.11. Sayfalandırma ve Filtreleme \n Sayfalandırma \n Çağrıya dönülen kaynak nesnesi içerisindeki kayıtlar bir sayfalandırma yapısı ile çağrılacak şekilde istek oluşturulur. \n Oluşturulacak isteğin içerisinde parametreler ile filtreleme, sayfa başına gösterilecek kayıt sayısı ve hangi sayfanın önyüzde gösterileceği bilgileri erişim noktasına iletilir ve ilgili kayıtlar cevap olarak alınır. \n Filtreleme \n HHS, birden çok kayıt dönülmesi gereken GET çağrılarında sınırlı filtreleme desteği sağlamalıdır. Filtre parametreleri her zaman kaynak nesnesinin belirli alanlarına özgüdür ve nesne için tanımlanan kurallara uymalıdır. \n 3.12. Mesaj İmzalama \n Elektronik imzalar, ÖHVPS API’de gerçekleştirilen işlemlerin ve taşınan verilerin bütünlük ve inkâr edilemezliğini destekler. İmzaların kaynak bazında hangi istek ve yanıtlara uygulandığı belirlidir. \n API yalnızca TLS\'ye dayanırsa, dijital kayıtları ve inkâr edilemezlik kanıtlarını tutmak zor olur. Bu nedenle, TLS\'ye dayanmayan bir inkâr edilemezlik çözümü olarak API isteğinin HTTP başlığında bir JWS kullanılarak sağlanabilir. \n HTTP isteğinin gövdesinin hash fonksiyonu (SHA256) ile özeti alınacaktır. Elde edilen özet, asimetrik anahtarları destekleyen bir algoritma kullanılarak imzalanacak ve JWS elde edilecektir. \n Bir istek, YÖS\'nin özel anahtarı ile imzalanacak ve bu isteğe karşılık gelen yanıt, HHS\'nin özel anahtarı tarafından imzalanacaktır. \n Tüm API istekleri ve yanıtları imzalanmaz. Mesaj imzalamanın zorunlu olup olmadığı, desteklenip desteklenmediği her API özelinde belirlenir. \n Anahtar Deposu \n HHS\'ler ve YÖS\'ler tarafından güvenilen bir Güven Otoritesi (Trust Anchor), taraflar için bir genel anahtar deposu sağlamaktan sorumludur. \n Güven Otoritesi, taraflardan herhangi birisinin oluşturduğu bir anahtar çiftinin açık bölümünü saklayan merkezi bir dizin (BKM tarafından tutulan merkezi kayıt sistemi vb.) olacaktır. \n Mesajları doğrulamak için tarafların genel anahtarlarının paylaşılması için BKM bir servis sağlayacaktır. HHS API olarak adlandırılımış olan bu servis ile HHS ve YÖS listelerine ulaşılabildiği gibi doğrulama işlemi için ihtiyaç duyulacak olan genel anahtarlara da bu servis üzerinden erişilebilinecektir. \n İlgili Mesaj şifreleme için genel akış, Ek-5 bölümünde detaylarıyla paylaşılmaktadır. \n 3.13. Durum Kodu \n API’ler, iki farklı amaca hizmet eden iki durum kodu kullanır: \n \n HTTP Durum Kodu, API çağrısının (kaynaktaki HTTP işlemi) sonucunu yansıtır. \n Bazı kaynak payload’larındaki Durum alanı, kaynakların durumunu yansıtır. \n 3.14. Gereksinimlerinin Sınıflandırılması \n Erişim adreslerinin ve alanların kullanımı Zorunlu(Z), İsteğe Bağlı(İ) veya Koşullu(K) olabilir. Kullanımlara ilişkin durumlar ve kullanımın (K) koşullu olduğu duruma ilişkin açıklamalar ilgili tablolarda belirtilmiştir. \n ÖHVPS API\'lerinin (HBH,ÖBH,GKD) istek ve yanıtta kullanılacak başlık isimleri, ilgili RFC dokümanlarında ve aşağıdaki tabloda yer aldığı şekilde kullanılacaktır.  Uygulamaya özelleşmiş başlıklar "X-" ile başlayacaktır. Başlık isimlerinde yer alacak kısaltmalar (örn. PSU, ASPSP gibi) tamamı büyük harfle yazılacak şekilde tanımlanacaktır. Başlık isimleri büyük – küçük harfe duyarlı olmamalıdır. Örneğin x-request-id ya da X-Request-ID olarak gönderilmiş olan bir istek başlığı değişkeni, sunucu tarafında hata vermeyecek şekilde işlenebilmelidir. \n 3.15. İstek Başlığı \n \n "Başlık isimleri" yorumlanırken küçük büyük harfe duyarlı olmamalıdır. Örneğin "x-ReQuEsT-Id" geçerli bir başlık ismidir. \n "Başlık değerleri" yorumlanırken ise küçük büyük harf duyarlılığı olmalıdır. Örneğin "xyz123" ile "XYZ123" değerleri farklıdır. \n Başlık değerlerinde ISO-8859-1 standartında yer alan karakter kümesi kullanılmalıdır. Örneğin "PSU-Device-Data" değerinde "İOS12" yazmak, büyük "İ" harfinin ISO-8859-1 içerisinde yer almamasından dolayı, hataya yol açacaktır. \n \n Tablo 2: İstek Başlığında Yer Alan Veriler \n \n \n \n Başlık İsimleri \n Format \n Notlar \n POST \n GET \n DELETE \n \n \n \n \n X-Request-ID \n AN1..36 \n İsteği başlatan YÖS tarafından belirlenen çağrıya özgü talep kimliği. İstek numarası.   Örnek: Ödeme emri başlatma iş akışının her adımda farklı “x-request-id” değeri kullanılır.   Çağrıların aynı yanıtı dönmesinin beklendiği durumlarda (idempotent işlemlerde) aynı değer ile çağrı yapılır. \n Z \n Z \n Z \n \n \n X-Group-ID \n AN1..36 \n İsteği başlatan YÖS tarafından belirlenen işlem akışına özgü talep kimliği. İşlem grup numarası.  Aynı rıza no’ya ait tüm isteklerde aynı x-group-id bilgisi değeri gönderilmelidir. Örnek: Ödeme emri başlatma/hesap bilgisi iş akışının her adımında aynı “x-group-id” değeri kullanılır. \n Z \n Z \n Z \n \n \n Content-Type \n AN1..20 \n Standart HTTP Başlığı; Talepte sağlanan payload’ın biçimini temsil eder. Bu değerin application/json olarak gönderilmesi gerekmektedir.  (Başka bir değere ayarlanırsa, HHS, 415 Desteklenmeyen Ortam Türü (Unsupported Media Type) ile yanıt vermelidir) \n Z \n - \n - \n \n \n X-ASPSP-Code \n AN4 \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n Z \n Z \n Z \n \n \n X-TPP-Code \n AN4 \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur \n Z \n Z \n Z \n \n \n PSU-Auth-Date \n ISODateTime \n ÖHK’nın YÖS üzerinde en son oturum açtığı saat. [RFC7231] Örneğin:  auth-date: Tue, 11 Sep 2012 19:43:31 GMT \n İ \n İ \n İ \n \n \n PSU-IP-Adress \n AN7..15 \n ÖHK YÖS üzerinde oturum açmışsa, işlemi başlattığı cihazın IP adresi. \n İ \n İ \n İ \n \n \n PSU-IP-Port \n AN1..5 \n ÖHK YÖS üzerinde oturum açmışsa, işlemi başlattığı cihazın Port adresi. \n İ \n İ \n İ \n \n \n PSU-GEO-Location \n AN1..36 \n ÖHK’nın işlemi başlattığı cihazın konum bilgisi. RFC2426 standartına uygun olarak paylaşılmalıdır. Örneğin  GEO:"<enlem >, <boylam>GEO:52.506931,13.144558 \n İ \n İ \n İ \n \n \n PSU-User-Agent \n AN 1.. 255 \n ÖHK’nın işlemi başlattığı cihazın sağladığı user-agent bilgisi. (Tarayıcı, versiyon, işletim sistemi bilgileri) \n İ \n İ \n İ \n \n \n PSU-Timestamp \n ISODateTime \n ÖHK’nın işlemi başlattığı cihazın tarih saat içeren zaman bilgisi. \n İ \n İ \n İ \n \n \n PSU-Device-ID \n AN5..40 \n ÖHK işlemi mobil uygulama aracılığıyla başlattıysa, kullanılan mobil uygulama ilk yüklendiğinde oluşturulan tekil cihaz veya uygulama belirteci. ÖHK cihazının UUID değeri kullanılabilir. \n İ \n İ \n İ \n \n \n PSU-Device-Data \n AN1..1024 \n ÖHK’nın işlemi başlattığı mobil cihaza ait veriler.  Örnek alanlar:   - Platform - (Android, iOS, Windows 10 Mobile)  - Device Model   - OS Name   - OS Version - Locale - Time zone \n İ \n İ \n İ \n \n \n PSU-Fraud-Check \n AN1..4096 \n YÖS\'lerin çeşitli güvenlik kontrollerini gerçekleştirerek, önemli görülen aşağıdaki bilgileri HHS\'ler ile paylaşmaları gerekmektedir. Bu bilgiler ışığında müşterinin profili oluşturulmasına katkı sağlanacaktır.   ÖHK’lı işlemlerde (PSU-Initiated = E gönderildiği durumlarda) gönderilmesi zorunludur.  Sistemsel yapılan API çağrımlarımda ve HHS-YÖS API çağrımlarında gönderilmesine gerek bulunmamaktadır.  Paylaşılacak bilgiler şu şekildedir.   FirstLoginFlag  : ÖHK\'nın, müşterilik ömründe ilgili YÖS sistemine (mobil ya da web uygulaması) ilk login olma süresini ifade eden değer. ÖHK\'nın ilk yaptığı HBH ya da ÖBH işlemi değil, YÖS sisteminde kendini aktifleştirme tarih aralığı bilgisidir.   YÖS, kullanıcının ilk login bilgisini tutarak sonraki işlemlerinde bu bilgiyi belirlenen format ile HHS\'ye aktaracaktır. Örneğin; YÖS\'ün 7 aydır müşterisi olan bir kullanıcı için bu alan "5" olarak YÖS tarafından beslenecektir. Burada amaç; ilgili kullanıcının YÖS\'ün eski bir müşterisi mi, yoksa yeni bir müşterisi mi olup olmadığını anlamaktır.   Gönderilmesi Zorunlu alandır. TR.OHVPS.DataCode.ZmnAralik sıralı veri tipinin alabileceği değerleri alabilir.   DeviceFirstLoginFlag  : ÖHK\'nın, müşterilik ömründe işlem anında kullandığı cihazla YÖS uygulamasına (web ya da uygulama tabanlı) ilk login olma süresini ifade eden değer. ÖHK cihaz değişikliği yaparsa FirstLoginFlag değeri sabit kalmalı  ancak DeviceFirstLoginFlag değeri değişmelidir.  FirstloginFlag değeri ile ÖHK’nın YÖS uygulamasına ilk login tarih bilgisi ile ilgili bilgi verilirken, DeviceFirstLoginFlag ile de ÖHK’nın YÖS uygulamasına farklı bir cihaz aracılığı ile ilk login tarihinin bilgisi verilmektedir.  Örneğin; ÖHK 7 aydır YÖS\'ün müşterisi olabilir, böyle bir durumda FirstLoginFlag değeri "5" olacaktır. Ancak son işlemini daha önce hiç kullanmadığı bir cihazdan yapmıştır. Yeni cihazdaki login süre aralığı 0-2 saat aralığında  olduğu için DeviceFirstLoginFlag değeri "1" olacaktır.FirstLoginFlag değeri yine "5" olarak kalmaya devam edecektir.Bu bilgi ile YÖS, ilgili HHS\'ye ilk kez geliyor olsa bile; HHS, müşterinin YÖS\'ü uzun süredir kullandığını ama yeni bir cihazla işlemlerine devam ettiğini anlayabilecektir. Bir ÖHK, farklı cihazlar veya platformlar üzerinden YÖS ile etkileşime girebilir.  Kullanıcı ve YÖS arasında bir oturum başlatılmış ise YÖS’ün tutarlı ve kalıcı bir kimlik (device id) ataması beklenmektedir.  Device ID: Web sitesi veya mobil uygulama kullanıcıları için üretilen, tarayıcı ya da mobil uygulama tabanlı benzersiz (tekil) tanımlayıcı değer. Mobil uygulamalar için ÖHK’nın ilk defa ilgili cihaza aktivasyon yaptığı tarih bilgisi alınmalıdır.   Device ID bilgileri YÖS uygulama ortamı (web ya da uygulama tabanlı) ve ÖHK cihazı bazında tutulmalıdır. YÖS’ten başlatılan işlem hangi uygulama ortamına ait ise ilgili ortamala ilişkili tutulan Device ID’nin ilk login tarihine bakılarak güncel flag değeri hesaplanmalıdır.  Gönderilmesi Zorunlu alandır. TR.OHVPS.DataCode.ZmnAralik sıralı veri tipinin alabileceği değerleri alabilir.   LastPasswordChangeFlag  : ÖHK\'nın, YÖS (cihaz bağımsız)  uygulamasına login olduğu şifre bilgisinin en son değiştirildiği süreyi ifade eden değer. Müşterinin en son ne zaman şifre değişikliği yaptığını anlamak için kullanılan alandır. Yeni müşteri ve hiç şifre değişikliği yapmamış olabilir, böyle bir durumda ilgili alan "0" olarak beslenecektir.   Gönderilmesi Zorunlu alandır. TR.OHVPS.DataCode.ZmnAralik sıralı veri tipinin alabileceği değerleri alabilir.   BlacklistFlag  : ÖHK\'nın herhangi bir sebeple YÖS\'ün sakıncalı müşteriler listesinde bulunup bulunmadığını ifade eden değer.   Burada amaç herhangi bir sebeple YÖS tarafında yasaklı olarak kayıtlı olan ÖHK bilgisinin, dolandırıcılığı önceden tespit etmek amaçlı HHS\'ye aktarılması olarak açıklanabilir. Örneğin, YÖS tarafından tespit edilen dolandırıcı kullancılara ait device id bilgisi, bu kara listede tutulur daha sonra aynı cihazla başka bir ÖHK işlem yapacak olsa bile bu alanda ilgili bilgi "1" değeri ile HHS\'ye aktarılır. HHS\'de olmayıp YÖS tarafında olan bu örnekteki sakıncalı müşteri/cihaz bilgisinin, dolaylı yoldan HHS\'ye aktarılması amaçlanmaktadır.  Gönderilmesi Opsiyonel alandır. TR.OHVPS.DataCode.VarYok sıralı veri tipinin alabileceği değerleri alabilir.   MalwareFlag  : YÖS uygulamasının çalıştığı cihaz üzerindeki son 21 güne ait zararlı yazılım tespit bilgisini ifade eden değer. Örneğin ÖHK\'nın cihazında zararlı yazılım olduğu ayın 1\'inde YÖS tarafından tespit edildi. Zararlı yazılım tespitinden 2 saat sonra YÖS üzerinden login olan ÖHK\'nın durumu,  "1" olarak iletilecektir. Bir gün sonra ayın 2\'sinde, yeni bir zararlı yazılım tespiti yok ancak mevcut zararlı yazılım aktifse alan "2" değeri ile iletilecektir. Süreler artarak 21 güne kadar TR.OHVPS.DataCode.ZmnAralik değerlerine göre iletilecektir.Son 21 gün içinde yeni bir tespit yoksa ayın 22\'sinden itibaren ilgili alan  "0" değeri ile beslenecektir. Not: Zararlı yazılım, bankacılık işlemlerinin yapıldığı uygulamalara girişte kullanılan bilgilerin (şifre, kullanıcı kodu gibi) ele geçirilmesi amacıyla kullanılan bir uygulama ya da kod parçacığı olabilir. Bu amaçlar dışında kullanılan (bankacılığa yönelik bir zararlı yazılım olmayan) yazılım tespitleri iletilmemelidir. YÖS kanallarına her bir loginde, kullanılan cihazda bir zararlı yazılım var mı yok mu kontrolü yapılmalıdır.   Gönderilmesi Opsiyonel alandır. TR.OHVPS.DataCode.ZmnAralik sıralı veri tipinin alabileceği değerleri alabilir.   AnomallyFlag  : Diğer şüpheli durumların varlığını ifade eden değer. Gönderilmesi Opsiyonel alandır. TR.OHVPS.DataCode.VarYok sıralı veri tipinin alabileceği değerleri alabilir.   UnsafeAccountFlag : HHS tarafından aktarılan bilgi ile son 21 gün içinde ÖHK\'nın dolandırıcılık mağduru olması durumunu ifade eden değer. Örneğin; HHS 1, ayın 1\'inde süphe veya sahtekarlık nedeniyle bir ödeme işlemine izin vermediği durumda, bu bilgiyi rıza iptal detay kodu ile YÖS\'e aktarmış olur. Bu bilgiyi tutan YÖS, ilgili müşterinin 15 dakika sonra HHS 2\'de yaptığı işlem için ilgili alanı "1" değeri ile besler. Böylece HHS 2, ÖHK\'nın farklı bir HHS\'de son 15 dakika içinde şüpheli veya sahte bir işlemi olduğunu anlayabilecektir. Ayın 22\'sinde yeni bir tespit/kayıt yoksa bu alan YÖS tarafından "0" olarak beslenecektir. Gönderilmesi Opsiyonel alandır.TR.OHVPS.DataCode.ZmnAralik sıralı veri tipinin alabileceği değerleri alabilir.     Flaglar JWT claims içine key value şeklinde eklenerek gönderilecektir. EK-5: Mesaj İmzalama Akışı\'nda belirtilen yöntemle imzalanarak oluşturulan JWT PSU-Fraud-Check alanına konularak YÖS\'ler tarafından HHS\'ye iletilmelidir. \n K \n K \n Z \n \n \n PSU-Initiated \n AN1 \n İşlemin ÖHK tarafından başlatılması durumunda E , sistem tarafından başlatıldığı durumda H değerini alması beklenir.   İşlemler servisinde yapılacak sistemsel sorgulardaki işlem limitlerini kontrol amacıyla kullanılır. \n Z \n Z \n Z \n \n \n PSU-Session-ID \n AN1..100 \n İsteği başlatan YÖS tarafından belirlenen oturuma özgü talep kimliği. ÖHK\'nın YÖS uygulaması üzerinden kimlik doğrulama mekanizması ile bilgi sistemlerine dâhil olmalarından işlemlerini tamamlayıp sistemden ayrılmalarına kadar geçecek tüm süreci kapsayacak şekilde aynı değeri almalıdır. Tek seferlik ödeme gibi ÖHK’nın tanınmadan başlatıldığı işlemlerde bu değer boş olarak iletilmelidir. \n İ \n İ \n İ \n \n \n Authorization \n AN1..4096 \n YÖS ile BKM API Gateway arasındaki otorizasyon için kullanılan token bilgisidir.  Yekilendirme türlerinden İstemci Kimlik Bilgileri’ni adresler. \n Z \n Z \n Z \n \n \n X-Access-Token \n AN1..4096 \n ÖHK’nın GKD sürecinde doğrulanması sonrasında kullanılan erişim simgesi. Yetkilendirme türlerinden Yetkilendirme Kodu (GKD)’nu adresler. \n İ \n İ \n İ \n \n \n X-JWS-Signature \n AN1..4096 \n Payload gövdesinin ayrılmış bir JWS imzasını içeren üstbilgi.  Bu başlığın ne zaman belirtilmesi gerektiği hususu ilgili endpoint için belirtilmiştir. \n K (Kullanılan API ve methoda göre kullanılır.) \n K \n K \n 3.16. Yanıt Başlığı \n \n "Başlık isimleri" yorumlanırken küçük büyük harfe duyarlı olmamalıdır. Örneğin "x-ReQuEsT-Id" geçerli bir başlık ismidir. \n "Başlık değerleri" yorumlanırken ise küçük büyük harf duyarlılığı olmalıdır. Örneğin "xyz123" ile "XYZ123" değerleri farklıdır. \n Başlık değerlerinde ISO-8859-1 standartında yer alan karakter kümesi kullanılmalıdır. Örneğin "Link" değerinde "İOS12" yazmak, büyük "İ" harfinin ISO-8859-1 içerisinde yer almamasından dolayı, hataya yol açacaktır. \n \n Tablo 3: Yanıt Başlığında Yer Alan Veriler \n \n \n \n Başlık İsimleri \n Format \n Notlar \n Kullanım Durumu \n \n \n \n \n X-Request-ID \n AN1..36 \n İsteği başlatan YÖS tarafından belirlenen çağrıya özgü talep kimliği. İstek numarası    İlgili istek başlığındaki bilgi geri dönülür. \n Z \n \n \n X-Group-ID \n AN1..36 \n İsteği başlatan YÖS tarafından belirlenen işlem akışına özgü talep kimliği. İşlem grup numarası. İlgili istek başlığındaki bu değer geri dönülür. \n Z \n \n \n X-ASPSP-Code \n AN4 \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n Z \n \n \n X-TPP-Code \n AN4 \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur \n Z \n \n \n Content-Type \n AN1..20 \n Standart HTTP Başlığı; Talepte sağlanan payload’ın biçimini temsil eder:  application/json \n Z \n \n \n X-JWS-Signature \n AN1..4096 \n JWS imzasını içeren üstbilgi. Bu başlığın hangi yanıtlar için kullanılması gerektiği ilgili endpoint için belirtilmiştir.  Hata durumlarında, yanıt gövdesi değeri dönülüyor ise imzalanmalı ve imza bilgisi x-jws-signature alanında iletilmelidir.  Ancak uygulama katmanı tarafından yakalanamayan dolayısı ile imzalanamayan hata durumlarında x-jws-signature alanı HHS\'ler tarafından boş gönderilebilir. \n K \n \n \n X-RateLimit-Limit \n N 1..18 \n İstek kısıtı uygulanan servislerde en fazla kaç adet istek yapılabileceğini gösterir. Kısıt uygulanan servislerde bu başlığın dönmesi zorunludur. \n K \n \n \n X-RateLimit-Remaining \n N 1..18 \n İstek kısıtı uygulanan servislerde kaç adet istek hakkı kaldığını gösterir. Kısıt uygulanan servislerde bu başlığın dönmesi zorunludur. \n K \n \n \n X-RateLimit-Reset \n AN 1..255 \n İstek kısıtı uygulanan servislerde çağrım hakkı bittikten sonra yeniden denemeden önce beklemesi gereken süreyi (saniye cinsinden) gösterir. HTTP 429 durum kodu (Too Many Requests) ile dönülen yanıtların başlığında dönülmesi zorunludur.  YÖS olarak yaptığınız sistemsel sorgularda; HTTP 429 durum kodu (Too Many Requests) ile dönülen yanıt aldığınızda tekrar sorgu yapmadan önce “X-RateLimit-Reset” yanıt başlığını kontrol ederek, bu başlıktaki süre kadar bekledikten sonra yeniden sorgulama yapılması gerekmektedir. \n K \n \n \n x-total-count \n N 1..18 \n Hesaplar, İşlemler ve Bakiye servislerinde sayfalama kullanıldığı durumda, sorgu sonucu dönecek toplam kayıt sayısı bilgisi, bu alanda HHS isteğine bağlı olarak gönderilebilir. \n İ \n \n \n Link \n 1..4096 \n “Link” alanının çoklu sayfa yapısı olması durumunda gönderilmesi zorunludur.  Sayfalama yapısı kullanıldığında gelen yanıtta birden fazla sayfa var ise; önceki, sonraki, ilk, son sayfalara gitmek için gerekli referanslar link headerında aşağıdaki örnekteki gibi doldurulabilir.  x-total-count alanının gönderimi isteğe bağlı olduğu için; Link içerisindeki son sayfa bilgisi  (last) isteğe bağlı hale getirilmiştir. “Önceki”( prev) ve “Sonraki” (next) adımlarının uygun olan her durumda yer alması zorunludur. İlk sayfada “Önceki” seçeneği olmamalı, son sayfada ise “Sonraki” seçeneği olmamalıdır.    </ohvps/hbh/s1.0/hesaplar/hspref/islemler?hesapIslemBslTrh=2022-01-01T00:00:00+03:00&hesapIslemBtsTrh=2023-12-12T23:59:59+03:00&srlmKrtr=islGrckZaman&srlmYon=Y&syfNo=6&syfKytSayi=100>; rel="next",  </ohvps/hbh/s1.0/hesaplar/hspref/islemler?hesapIslemBslTrh=2022-01-01T00:00:00+03:00&hesapIslemBtsTrh=2023-12-12T23:59:59+03:00&srlmKrtr=islGrckZaman&srlmYon=Y&syfNo=4&syfKytSayi=100>; rel="prev",  </ohvps/hbh/s1.0/hesaplar/hspref/islemler?hesapIslemBslTrh=2022-01-01T00:00:00+03:00&hesapIslemBtsTrh=2023-12-12T23:59:59+03:00&srlmKrtr=islGrckZaman&srlmYon=Y&syfNo=14&syfKytSayi=100>; rel="last",  </ohvps/hbh/s1.0/hesaplar/hspref/islemler?hesapIslemBslTrh=2022-01-01T00:00:00+03:00&hesapIslemBtsTrh=2023-12-12T23:59:59+03:00&srlmKrtr=islGrckZaman&srlmYon=Y&syfNo=0&syfKytSayi=100>; rel="first" \n K \n 3.17. Idempotency Kuralları \n YÖS’ün aşağıdaki durumlarda aynı istek numarası (x-request-id) ve aynı veri gövdesiyle çağrıyı tekrarlaması; HHS’nin de bu durumlarda aynı yanıtı dönmesi gereklidir. \n \n HHS’nin yanıtı kesinti/arıza nedeniyle YÖS’e ulaşmaz ve zaman aşımı söz konusu olması, \n ÖHK, YÖS uygulaması üzerinden çift tıklama ile mükerrer defa HHS API’lerini çağırılması,\n(API kontrollerinden önce YÖS uygulamasının, çift tıklama kontrolü yapması önerilmektedir.) \n YÖS, yanıt almasına rağmen işleyemeden kaybedilmesi, \n \n durumlarında HHS aşağıdaki kuralları işletir: \n \n HHS gelen istek numarasını ve veri gövdesini birleştirerek checksum değeri üretir. \nchesksum değeri x-request-id|request.body ‘nin hash algoritmalarından (CRC32,MD5 vb)  geçirilerek üretilebilir. \n HHS bu checksum değeri ile YÖS’e dönmüş olduğu yanıtı 5 dk boyunca saklar.  Saklama yöntemi olarak veri tabanı veya önbellek araçları kullanılabilir. \n YÖS aynı istek numarası ve aynı veri gövdesi ile yeni bir çağrı yaptığında, aynı checksum değeri üretileceği için 5dk boyunca bu değere karşılık gelen yanıtı döner. \n 5 dk sonrasında istek numarası veya veri gövdesi değişmemiş olsa dahi bu HHS tarafından yeni istek olarak kabul edilir. \n \n Aşağıdaki Public Post işlemleri için bu kural setinin işletilmesi gerekmektedir: \n 1- Ödeme emri rızası oluşturma \n2- Erişim belirteci oluşturma \n3- Ödeme emri \n4- Hesap bilgisi rızası oluşturma \n 3.18. HTTP Durum Kodları \n RFC 2616\'da belirlenmiş olan durum kodları (status code) gönderilen isteğin durumunu YÖS’a standart bir şekilde ifade eder. Eğer bir hata varsa hatayı, gönderilen istek başarılı bir şekilde işlem gördüyse ona ilişkin durumu aktarır. Durum kodları genel olarak 5 kategoridedir. \n \n 1xx Bilgi \n 2xx Başarılı \n 3xx Yönlendirme \n 4xx İstemci Hatası \n 5xx Sunucu Hatası \n \n errorCode Alanında Kullanılabilecek Sıralı Hata Tipleri : \n \n TR.OHVPS.Resource \n \n ⇨\tInvalidFormat \n ⇨\tConsentMismatch \n ⇨\tNotFound \n ⇨\tInvalidSignature \n ⇨\tMissingSignature \n ⇨\tMethodNotAllowed \n ⇨\tNotAcceptable \n ⇨\tUnsupportedMediaType \n ⇨\tConsentRevoked \n \n \n \n TR.OHVPS.Business \n \n ⇨\tInvalidContent \n ⇨\tInvalidAccount \n \n \n \n TR.OHVPS.Connection \n \n ⇨\tInvalidCertificate \n ⇨\tExceededRate \n ⇨\tInvalidTPP \n ⇨\tInvalidASPSP \n ⇨\tInvalidToken \n ⇨\tInvalidTPPRole \n \n \n \n TR.OHVPS.Server \n \n ⇨\tInternalError \n ⇨\tServiceUnavailable \n \n \n TR.OHVPS.Resource.InvalidFormat hatası alındığı durumda; fieldErrors nesnesi içerisinde verilecek hata kodları : \n \n TR.OHVPS.Field \n \n ⇨\tMissing \n ⇨\tInvalid \n \n \n Veri Tipi Örneği: \n { \n     "path" :   "/ohvps/obh/s1.0/odeme-emri-rizasi" , \n     "id" :   "d8bd4e5f-f094-48a6-aee1-3a800e2709d9" , \n     "timestamp" :   "2022-12-22T10:33:15+03:00" , \n     "httpCode" :   400 , \n     "httpMessage" :   "Bad Request" , \n     "moreInformation" :   "Validation error" , \n     "moreInformationTr" :   "Şema kontrolleri başarısız" , \n     "fieldErrors" :   [ \n         { \n             "objectName" :   "odemeEmriRizasiIstegi" , \n             "field" :   "odmBsltm.islTtr.prBrm" , \n             "messageTr" :   "boş değer olamaz" , \n             "message" :   "must not be null" , \n             "code" :   "TR.OHVPS.Field.Missing" \n         } , \n         { \n             "objectName" :   "odemeEmriRizasiIstegi" , \n             "field" :   "odmBsltm.kmlk.kmlkVrs" , \n             "messageTr" :   "boyut \'1\' ile \'30\' arasında olmalı" , \n             "message" :   "size must be between 1 and 30" , \n             "code" :   "TR.OHVPS.Field.Invalid" \n         } \n     ] , \n     "errorCode" :   "TR.OHVPS.Resource.InvalidFormat" \n }  \n \n Tablo 4: HTTP Durum Kodları \n \n \n \n HTTP Durum \n İstek Sonucu ve Açıklamalar \n POST \n GET \n DELETE \n \n \n \n \n 200 OK \n İstek Başarıyla Tamamlandı. Kaynak güncellemek için yapılan (örneğin, GET) ve başarıyla tamamlanan isteklerinde kullanılır. \n H \n E \n H \n \n \n 201 Created \n İstek Başarılı Oldu. Kaynak yaratma isteği (örneğin, POST /ödeme-emri-rizasi) başarıyla sonuçlandı. \n E \n H \n H \n \n \n 204 No Content \n Silme işlemi başarıyla tamamlandı. Kaynak silme isteği (örneğin,  DELETE /hesap-rizasi/{RizaNo} ) başarıyla sonuçlandı. \n H \n H \n E \n \n \n 400 Bad Request \n İstekte bozuk, eksik veya uyumlu olmayan JSON gövdesi, URL parametreleri veya başlık alanları var.  İstekle başlatılan işlem yapısal bozukluk, eksik veya tutarsız veri veya HHS tarafındaki kontrollerin hatalı sonuçlanması nedeniyle hata ile sonuçlanır ve hataya ilişkin veriler hata nesnesi içerisinde dönülür. \n E \n E \n E \n \n \n 401 Unauthorized \n Yetkilendirme başlığı eksik, hatalı veya geçersiz olduğundan istek yetkilendirilmediğinde ve erişim reddedildiğinde http 401 kodu dönülmelidir. \n E \n E \n E \n \n \n 403 Forbidden \n Erişim belirtecinin veya rızanın kapsamı uyuşmuyor. YÖS bir hesaba/işlem kaynağına erişmeye çalışır ve YÖS, istenen kaynağa erişmek için geçerli izinlere sahip bir rızası yoktur.  Örneğin; hesap bilgisi rızası bakiye izni almamıştır ancak /bakiyeler adresinden istekte bulunmuştur. \n \n \n \n \n \n 404 Not Found \n **HHS geçerli bir API erişim adresini sağlamıyorsa, o URL\'ye gelen istekler için 404 (Bulunamadı) ile yanıt vermelidir.**YÖS, uygulama esaslarında tanımlanmayan bir kaynak için bir URL\'ye erişmeye çalışırsa (örneğin, GET /yurtdisi-odeme), HHS, 404 (Bulunamadı) ile yanıt vermeyi seçebilir. \n E \n E \n E \n \n \n 405 Method Not Allowed \n YÖS, desteklenmeyen bir yöntemle kaynağa erişmeye çalıştı. \n E \n E \n E \n \n \n 406 Not Acceptable \n İstek, geçersiz bir karakter kümesi içeriyor. \n E \n E \n E \n \n \n 415 Unsupported Media Type \n İstek gövdesi hedef kaynakta bu yöntem tarafından desteklenmeyen bir biçimde oluşturulduğu için işlem reddedildi \n E \n H \n H \n \n \n 429 Too Many Requests \n Belirli bir süre içinde çok fazla talepte bulunulduğu için işlem reddedildi.  HHS’ler adil kullanım politikalarını aşan talepleri kısıtlayabilir. \n E \n E \n E \n \n \n 500 Internal Server Error \n API sunucu / servis katmanında sorun oluştu. İşlem başarısız.  5XX hata durumlarında yanıt gövde değeri olmadığı için mesaj imzalama yapılamaz ve x-jws-signature alanı boş olarak iletilir.  Bu durumda x-jws-signature kontrolü yapılmamalıdır. \n E \n E \n E \n \n \n 503 Service Unavailable \n Hizmet sürümü kullanımdan kaldırıldı.  Bir API\'nin kullanımdan kaldırıldığı ve artık bir HHS tarafından operasyonel olarak desteklenmediği durumlarda, URI yolu hala etkin olabilir ve API isteklerini kabul edebilir.  Bu durumda, YÖS\'ün API sürümünün çevrimdışı olduğunun farkında olması için 503 Hizmet Kullanılamıyor dönmesi önerilir. \n E \n E \n E \n \n \n \n Hata Örnekleri: \n 400 Bad Request \n TR.OHVPS.Business.InvalidContent  hatası HHS tarafından yapılacak iş kuralı kontrollerinin başarısız olduğu durumda verilmelidir. \n TR.OHVPS.Resource.InvalidFormat  hatası şema validasyonu, alan uzunluk ve varlık kontrollerinin başarısız olduğu durumda verilmelidir. \n \n { \n     "path" :   "/ohvps/obh/s1.0/odeme-emri-rizasi" , \n     "id" :   "7f115b9c-d7c2-4a2a-bc45-5a9891c79072" , \n     "timestamp" :   "2022-12-22T10:47:57+03:00" , \n     "httpCode" :   400 , \n     "httpMessage" :   "Bad Request" , \n     "moreInformation" :   "Validation error" , \n     "moreInformationTr" :   "Şema kontrolleri başarısız" , \n     "fieldErrors" :   [ \n         { \n             "objectName" :   "odemeEmriRizasiIstegi" , \n             "field" :   "odmBsltm.alc.unv" , \n             "messageTr" :   "boyut \'3\' ile \'140\' arasında olmalı" , \n             "message" :   "size must be between 3 and 140" , \n             "code" :   "TR.OHVPS.Field.Invalid" \n         } , \n         { \n             "objectName" :   "odemeEmriRizasiIstegi" , \n             "field" :   "odmBsltm.islTtr.ttr" , \n             "messageTr" :   "boş değer olamaz" , \n             "message" :   "must not be null" , \n             "code" :   "TR.OHVPS.Field.Missing" \n         } \n     ] , \n     "errorCode" :   "TR.OHVPS.Resource.InvalidFormat" \n }  \n\n \n Zorunlu header alanlarından biri ya da birkaçı eksik olarak gönderilirse aşağıdaki gibi bir hata dönüşü gerçekleşebilir. \n HHS uygulaması tarafından dönülebilecek hata örnekleri: \n \n { \n     "path" :   "/ohvps/obh/s1.0/odeme-emri-rizasi" , \n     "id" :   "2005515d-f0e6-4a07-a439-0ef3b0f56011" , \n     "timestamp" :   "2022-12-22T10:39:26+03:00" , \n     "httpCode" :   400 , \n     "httpMessage" :   "Bad Request" , \n     "moreInformation" :   "Validation error" , \n     "moreInformationTr" :   "Şema kontrolleri başarısız" , \n     "errorCode" :   "TR.OHVPS.Resource.InvalidFormat" , \n     "fieldErrors" :   [ \n         {          \n             "field" :   "X-Request-ID" , \n             "messageTr" :   "X-Request-ID değeri boş olamaz." , \n             "message" :   "X-Request-ID cannot be null." , \n             "code" :   "TR.OHVPS.Field.Invalid" \n         } \n     ] \n }  \n\n \n Business hata örneği - 1: \n { \n     "path" :   "/ohvps/obh/s1.0/odeme-emri-rizasi" , \n     "id" :   "677cfd9d-77c1-4ea3-8bdf-74a6e9887177" , \n     "timestamp" :   "2022-12-22T11:05:59+03:00" , \n     "httpCode" :   400 , \n     "httpMessage" :   "Bad Request" , \n     "moreInformation" :   "gonUnvan wrong" , \n     "moreInformationTr" :   "Gönderen Ünvan hatalı" , \n     "errorCode" :   "TR.OHVPS.Business.InvalidContent" \n }  \n \n Business hata örneği - 2: \n { \n     "path" :   "/ohvps/obh/s1.0/odeme-emri-rizasi" , \n     "id" :   "5df3b402-3aca-4305-a35b-5af0f3184b40" , \n     "timestamp" :   "2022-12-22T11:06:47+03:00" , \n     "httpCode" :   400 , \n     "httpMessage" :   "Bad Request" , \n     "moreInformation" :   "Sender account is disabled or not found." , \n     "moreInformationTr" :   "Gonderen hesap aktif değil veya bulunamadı." , \n     "errorCode" :   "TR.OHVPS.Business.InvalidAccount" \n }  \n \n BKM API Geçidi\'nde yapılan zorunlu header kontrollerinde aşağıdaki hatalar dönebilir: \n \n { \n     "timestamp" :   "2022-12-22T10:40:28+03:00" , \n     "path" :   "/ohvps/obh/s1.0/odeme-emri-rizasi" , \n     "id" :   "d4375748-6fc7-4f7e-94f3-6411cab1d59f" , \n     "moreInformationTr" :   "Geçersiz HHS kodu." , \n     "errorCode" :   "TR.OHVPS.Connection.InvalidASPSP" , \n     "moreInformation" :   "Invalid ASPSP Code" , \n     "httpCode" :   400 , \n     "httpMessage" :   "Bad Request" \n }  \n \n BKM API Geçidi tarafından dönülecek hata örneği: \n \n { \n     "timestamp" :   "2022-12-22T10:40:28+03:00" , \n     "path" :   "/ohvps/obh/s1.0/odeme-emri-rizasi" , \n     "id" :   "d4375748-6fc7-4f7e-94f3-6411cab1d59f" , \n     "moreInformationTr" :   "Geçersiz HHS kodu." , \n     "errorCode" :   "TR.OHVPS.Connection.InvalidTPP" , \n     "moreInformation" :   "Invalid TPP Code" , \n     "httpCode" :   400 , \n     "httpMessage" :   "Bad Request" \n }  \n \n BKM API Geçidi tarafından dönülecek hata örneği: \n \n { \n     "timestamp" :   "2022-12-22T11:14:05+03:00" , \n     "path" :   "/ohvps/hbh/s1.0/hesap-bilgisi-rizasi" , \n     "id" :   "ee1e3ea7-a5e5-468b-bb02-314148f84e6a" , \n     "moreInformationTr" :   "Geçersiz yös rolü. İlgili api çağrısı için yetkisi yok." , \n     "errorCode" :   "TR.OHVPS.Connection.InvalidTPPRole" , \n     "moreInformation" :   "Invalid TPP Role" , \n     "httpCode" :   403 , \n     "httpMessage" :   "Forbidden" \n }  \n\n \n 401 Unauthorized \n YÖS, süresi dolmuş bir erişim belirteci kullandığında, HHS 401 (Yetkisiz) http kodu ile aşağıdaki hata kodunu dönmelidir.  Aşağıdaki nedenlerden herhangi biri nedeniyle bir Erişim Belirtecinin süresi dolduğunda bu durum ortaya çıkabilir: \n \n Rızanın süresi doldu (Son Kullanma Tarihi geçti) \n Erişim Belirtecinin şüpheli kullanımı veya sahtekarlık şüphesi \n Rızada belirlenen gün sayısının aşımı\nBu hata, müşteriden doğru izinlerle yeniden kimlik doğrulaması isteyerek çözülebilir. \n \n \n { \n     "path" :   "/ohvps/gkd/s1.0/erisim-belirteci" , \n     "id" :   "ed3fd667-fc58-40ad-a982-e8937faccd15" , \n     "timestamp" :   "2022-12-22T11:17:33+03:00" , \n     "httpCode" :   401 , \n     "httpMessage" :   "Unauthorized" , \n     "moreInformation" :   "Refresh token expired or not found in database" , \n     "moreInformationTr" :   "Yenileme belirteci zaman aşımına uğramış veya veri tabanında yok" , \n     "errorCode" :   "TR.OHVPS.Connection.InvalidToken" \n }  \n \n\n \n 403 Forbidden \n Örn; YÖS yetkisi olmayan rol(ÖBH/HBH) ile işlem yapmaya çalıştığı durumda 403 hatası alarak işleme devam edemez. \n { \n   "path" :   "/ohvps/hbh/s1.0/bakiye" , \n   "id" :   "3e48ea98-f889-48b9-aa6e-28aabc6cfb14" , \n   "timestamp" :   "2022-12-22T11:20:05+03:00" , \n   "httpCode" :   403 , \n   "httpMessage" :   "Forbidden" , \n   "moreInformation" :   "Forbidden" , \n   "moreInformationTr" :   "Bakiye Bilgileri için ÖHK izni bulunmamaktadır." , \n   "errorCode" :   "TR.OHVPS.Resource.Forbidden" \n }  \n \n 404 Not Found \n Örn; GET /odeme-emri-rizasi/123456 çağrısı durumunda 123456 geçerli bir ödeme kaynağı değilse, HHS, 404 koduyla cevap vermelidir. \n { \n     "path" :   "/ohvps/obh/s1.0/odeme-emri-rizasi/123456" , \n     "id" :   "22f52b2d-d442-4a6a-8f39-d23eba45a34b" , \n     "timestamp" :   "2022-12-22T10:53:53+03:00" , \n     "httpCode" :   404 , \n     "httpMessage" :   "Not Found" , \n     "moreInformation" :   "Resource not found" , \n     "errorCode" :   "TR.OHVPS.Resource.NotFound" , \n     "moreInformationTr" :   "Kaynak bulunamadı" \n }  \n\n \n 405 Method Not Allowed \n { \n     "path" :   "/ohvps/obh/s1.0/odeme-emri-rizasi" , \n     "id" :   "3e5c6b28-7ee4-4469-b541-843fb4a94eec" , \n     "timestamp" :   "2022-12-22T11:35:10+03:00" , \n     "httpCode" :   405 , \n     "httpMessage" :   "Method Not Allowed" , \n     "moreInformation" :   "Method not allowed" , \n     "errorCode" :   "TR.OHVPS.Resource.MethodNotAllowed" , \n     "moreInformationTr" :   "İstek yapılan URL için izin verilmeyen metot" \n }  \n \n 406 Not Acceptable \n { \n     "path" :   "/ohvps/obh/s1.0/odeme-emri-rizasi" , \n     "id" :   "3e5c6b28-7ee4-4469-b541-843fb4a94eec" , \n     "timestamp" :   "2022-12-22T11:35:10+03:00" , \n     "httpCode" :   406 , \n     "httpMessage" :   "Not Acceptable" , \n     "moreInformation" :   "Not Acceptable" , \n     "errorCode" :   "TR.OHVPS.Resource.NotAcceptable" , \n     "moreInformationTr" :   "Kabul edilmedi" \n }  \n \n 415 Unsupported Media Type \n İstek başlığında content-type, JSON dışında bir veri iletilirse bu hata verilebilir. \n \n { \n     "path" :   "/ohvps/obh/s1.0/odeme-emri-rizasi" , \n     "id" :   "63cc94b6-1b51-4648-9671-95e6e2e7e03d" , \n     "timestamp" :   "2022-12-22T11:37:12+03:00" , \n     "httpCode" :   415 , \n     "httpMessage" :   "Unsupported Media Type" , \n     "moreInformation" :   "Content type not supported" , \n     "errorCode" :   "TR.OHVPS.Resource.UnsupportedMediaType" , \n     "moreInformationTr" :   "Desteklenmeyen içerik tipi’" \n }  \n \n 429 Too Many Requests \n { \n   "path" :   "/ohvps/hbh/s1.0/hesaplar/aef6061f-2978-4bb4-980d-b4c634c8055b/islemler" , \n   "id" :   "20473c5f-2f4f-4b2e-8b66-7978aec442f7" , \n   "timestamp" :   "2022-12-22T00:21:07+03:00" , \n   "httpCode" :   429 , \n   "httpMessage" :   "Too Many Requests" , \n   "moreInformation" :   "Exceeded rate" , \n   "moreInformationTr" :   "Erişim sıklığı limiti aşımı" , \n   "errorCode" :   "TR.OHVPS.Connection.ExceededRate" \n }  \n \n 500 Internal Server Error \n { \n   "id" :   "1b90c6dc-0277-4755-8b05-9297ddfab743" , \n   "path" :   "/ohvps/obh/s1.0/odeme-emri-rizasi" , \n   "timestamp" :   "2022-12-22T11:41:34+03:00" , \n   "httpCode" :   500 , \n   "httpMessage" :   "Internal Server Error" , \n   "moreInformation" :   "Unexpected condition was encountered." , \n   "moreInformationTr" :   "Beklenmeyen bir durumla karşılaşıldı." , \n   "errorCode" :   "TR.OHVPS.Server.InternalError" \n }  \n\n \n 503 Service Unavailable \n \n   "timestamp" :   "2022-12-20T23:18:56+03:00" , \n   "path" :   "/ohvps/hbh/s1.0/hesap-bilgisi-rizasi/2a72678ee3d24de2be47887e4903a8c6" , \n   "id" :   "e76315b7-09f4-4295-b6d8-1f7fec632159" , \n   "moreInformationTr" :   "HHS şu anda hizmet veremiyor." , \n   "errorCode" :   "TR.OHVPS.Server.ServiceUnavailable" , \n   "moreInformation" :   "HHS is currently unavailable" , \n   "httpCode" :   503 , \n   "httpMessage" :   "Service Unavailable" \n 3.19. Maskeleme Kuralları \n Maskeli olarak iletilmesi gereken verilerin maskeleme kuralları şu şekildedir: \n \n IBAN verileri Hesap Numarası : İlk 4 ve son 4 karakteri açık, diğer karakterler maskeli olmalıdır. Örnek: TR54******************4812 \n Ad-Soyadı / Ticari Unvan : Her kelimenin ilk 2 karakteri açık, sonraki karakterler yerine 4 adet ‘ ’ karakteri konumlandırılmalıdır.\nÖrneğin: “FATİH SERKAN EREN” ifadesi “FA *** SE**** ER****” şeklinde gösterilmelidir. \n Tabela Unvanı : Her kelimenin ilk 2 karakteri açık, sonraki karakterler yerine 4 adet ‘ ’ karakteri konumlandırılmalıdır. Örneğin “BANKALARARASI KART MERKEZİ ANONİM ŞİRKETİ” ifadesi “BA *** KA**** ME**** AN**** Şİ****” şeklinde gösterilmelidir. \n YÖS’ten girilen unvan ve iban bilgileri ödeme emri rızası ve ödeme emri yanıtında açık dönülür, Kolas akışında ödeme emri rızası yanıtı ve ödeme emri istek ve yanıtında maskeli taşınır. \n 3.20. Fonksiyonel Olmayan Gereksinimler \n \n \n HHS’lerin sunuyor oldukları servisleri en fazla 3000 ms içinde yanıt dönecek şekilde tasarlamalıdır. \n \n \n HHS\'ler mevcut online işlem kanallarından sundukları erişilebilirlik ve performans kriterlerinden daha düşük bir hizmet kalitesi sunmamalıdır. \n \n \n HHS’lerin sunuyor oldukları servislere sistemin güvenlik ve sürekliliğini sağlamak adına rate limit koyma ihtiyaçları olur ise, standartlar ve ihtiyaçlara uygun şekilde bir konfigürasyon yapabilirler.  \n \n \n HHS rate limit tanımı uyguluyor ise; YÖS\'ler arasında ayrım yapmadan, adil ve makul sınırlar dahilinde uygulamalıdır.    \n \n \n YÖS tarafından kullanıcının başlatmadığı otomatik sorgu limitleri  3.21 Otomatik Sorgular  bölümünde detaylandırılmıştır. HHS\'lerin bu servisler için minimumda cevap vermesi gereken sorgu sayıları belirlenmiştir. Bu sayıların üzerinde yapılan servis çağrısına yanıt dönmek HHS inisiyatifindedir. Diğer taraftan kullanıcının başlattığı istekler için uygulanacak limitler, HHS\'nin online işlem kanallarından sunulan sorgu limitlerinden daha az olmamalıdır. \n \n \n HHS\'ler, çağrım limitlerini aşan istekler için HTTP 429 - Too Many Request hatasını dönmelidir. Örnek hata mesajı  3.18 HTTP Durum Kodları  bölümünde bulunmaktadır. Rate Limit özelinde tanımlanmış parametreler olan X-RateLimit-Limit, X-RateLimit-Remaining ve X-RateLimit-Reset alanları da   3.16 Yanıt Başlığı  bölümünde açıklanmıştır. YÖS\'ler de HHS\'nin belirlediği rate limit kurallarına uymakla yükümlüdür. \n \n \n HHS’ler aynı zamanda servislerin ayakta olup olmadığına yönelik olarak bir healthcheck servisi kurmalıdır.  HHS’lerin bu servis ile tüm network ve veritabanı ya da servislerinin ihtiyaç duydukları altyapısal erişimleri modellemeli ve bu servisi BKM ile paylaşmaları beklenmektedir. Bu servis düzenli olarak BKM tarafından çağırılarak servislerin ayakta olup olmadıklarının kontrolünün sağlanması planlanmaktadır. \n \n \n Sunulan her API için /health endpointi ile aşağıdaki bilgileri vermeleri beklenmektedir. \n GET /{api ismi}/{versiyon}/health \n Örnek: \n GET /obh/s1.0/health \n GET /hbh/s1.0/health \n GET /gkd/s1.0/health \n HHS ve YÖS API için health servisleri aşağıdaki servislerle kontrol edilebilir. \n GET /hhs-api/s1.0/health \n GET /yos-api/s1.0/health \n Başarılı yanıtta Http 200 kodu dönülmelidir. \nBaşarılı Yanıt: \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Koşullu  / İsteğe Bağlı \n Açıklama \n \n \n \n \n status \n status \n AN2..20 \n Z \n “UP”, “DOWN” değerlerini alabilir. \n \n \n \n Health servisinden yanıt alınamaması, hata alması ya da status DOWN gelmesi durumunda API Gatewayden istek HHS tarafına iletilmeyecektir. \n \n \n ÖHVPS servisleri ile ilgili olarak HHS’ler, BKM tarafından düzenli olarak sorgulanacaktır, erişilebilirlik ve kullanım oranları takip edilecektir. \n \n \n HHS’lerin servislerini erişim yüzdeleri açısından yıl bazında %99.75 oranında ayakta olmalarını sağlayacak şekilde kurgulamaları gerekmektedir. \n 3.21. Otomatik Sorgular \n YÖS uygulaması, ÖHK\'nın başlattığı işlemler neticesinde API çağrımı yapabileceği gibi, sistemsel bir şekilde otomatik API çağrımı da yapabilir. \nHHS, API çağrımının ÖHK\'lı ya da ÖHK\'sız olduğunu istek parametreleri içerisinde yer alan PSU-Initiated parametresi ile anlar. Bu parametre “E” ise ÖHK’lı, “H” ise sistemsel yapılmış bir sorgu anlamına gelmektedir. \n ÖHK YÖS uygulamasına giriş yaptığı andan çıkış yaptığı ana kadar yani ÖHK oturumu boyunca yapılan API çağrımlarında, PSU-Initiated  değerinin "E" olması gerekmektedir.  YÖS uygulamasında ÖHK oturumu boyunca,  ÖHK\'nın bilgilerinden minimumda "bakiye" bilgisinin, uygulama arayüzlerinde güncel değeri ile online sorgularla gösterimi YÖS\'ün insiyatifindedir. \n ÖHK’nın başlattığı sorgular için HHS tarafından belirlenen üst rate limitler dahilinde çağrım yapılabilir. \n YÖS, aşağıdaki API\'leri sistemsel bir şekilde çağırabilir. \nHHS\'lerin bu servisler için minimumda cevap vermesi gereken sorgu sayıları belirlenmiştir. Bu sayıların üzerinde yapılan servis çağrısına yanıt dönmek HHS inisiyatifindedir. \nHHS tarafından izin verilen sorgu sayısının üzerinde yapılan bir sorgu için HTTP 429 durum kodu (Too Many Requests) hatası dönülmelidir. Yanıt gövdesinde tekrar hata nesnesinin oluşturulması HHS inisiyatifindedir.  HHS yanıt headerı alanında iletilecek X-RateLimit-Reset (saniye cinsinden) değeri kadar süre sonunda\nYÖS\'ün tekrar sorgulama yapması beklenmektedir. \n \n \n \n No \n Kaynak \n HTTP işlemi \n Erişim Adresi \n Otomatik Sorgu Sayısı \n \n \n \n \n 1 \n erisim-belirteci \n POST \n /erisim-belirteci \n --- \n \n \n 2 \n odeme-emri-rizasi \n GET \n /odeme-emri-rizasi/{rizaNo} \n Rıza bazında günde 4 \n \n \n 3 \n odeme-emri \n GET \n /odeme-emri/{odemeEmriNo} \n Rıza bazında günde 24 \n \n \n 4 \n hesap-bilgisi-rizasi \n GET \n /hesap-bilgisi-rizasi/{RizaNo} \n Rıza bazında günde 4 \n \n \n 5 \n hesap-bilgisi-rizasi \n DELETE \n /hesap-bilgisi-rizasi/{RizaNo} \n --- \n \n \n 6 \n hesaplar \n GET \n /hesaplar \n Bireysel günde 4  Kurumsal günde 4 \n \n \n 7 \n hesaplar \n GET \n /hesaplar/{hspRef} \n Bireysel günde 4 Kurumsal günde 4 \n \n \n 8 \n bakiye \n GET \n /hesaplar/{hspRef}/bakiye \n Bireysel günde 24 Kurumsal ÖHK - günde 24 \n \n \n 9 \n bakiye \n GET \n /bakiye \n Bireysel günde 24 Kurumsal ÖHK - günde 24 \n \n \n 10 \n islemler \n GET \n /hesaplar/{hspRef}/işlemler \n Bireysel günde 4 Kurumsal ÖHK - saatte 12 \n \n \n \n YÖS ve HHS son 24 saat içerisindeki sorgu sayılarını toplayarak elde ettiği sonuçlarla limit kontrolü yapmalıdır (Pencere yöntemi). \n İşlemler servisinin çağrım detaylarına  ^Bölüm 7.8  üzerinden ulaşılabilir. \n Hesap bilgisi rızasının YÖS tarafından otomatik bir şekilde iptal edilmesi durumu  ^Bölüm 9 \'da açıklanmıştır. \n'},{title:"4. Rıza Durumları",frontmatter:{},regularPath:"/v1.0.2/contents/riza-durumlari.html",relativePath:"v1.0.2/contents/riza-durumlari.md",key:"v-1be15362",path:"/v1.0.2/contents/riza-durumlari.html",headers:[{level:2,title:"4.1.\tHesap Bilgisi Hizmeti Rıza durum değişiklikleri",slug:"_4-1-hesap-bilgisi-hizmeti-rıza-durum-degisiklikleri"},{level:2,title:"4.2.\tÖdeme Bilgisi Hizmeti Rıza Durum Değişiklikleri",slug:"_4-2-odeme-bilgisi-hizmeti-rıza-durum-degisiklikleri"}],content:" 4. Rıza Durumları \n ÖHK, Ödeme Emri Başlatma Hizmetine ya da Hesap Bilgisi Hizmetine müşteri rızasının tesisi ile başlar. ÖHK’nın YÖS uygulaması üzerinden yaptığı işlemler neticesinde rıza durumları değişebilir.\nRıza’nın alabileceği durum kodları şu şekilde belirlenmiştir. \n B: Yetki Bekleniyor  – İlk rıza talebinde \n Y: Yetkilendirildi  – Başarılı GKD sonrası yetKod üretildiğinde \n K: Yetki Kullanıldı  – Erişim Belirteci alındığında \n E: Yetki ödeme emrine dönüştü  – ÖBHS için \n S: Yetki Sonlandırıldı \n    HBHS için : Erişimin Geçerli Olduğu Son Tarih geldiğinde \n    ÖBHS için : Yenileme belirteci Son Tarihi geldiğinde \n I :Yetki İptal \nRıza iptal durumu ise gerek raporlama gerekse müşteri deneyimi perspektifinden doğru   bilgilendirmeler yapılabilmesi açısından aşağıdaki gibi detay kodları ile zenginleştirilmiştir: \n \n Rıza İptal Detay Kodu: \n \n \n \n ‘01’ :\tYeni Rıza Talebi ile İptal \n ‘02’ :\tKullanıcı İsteği ile HHS üzerinden İptal \n ‘03’ :\tKullanıcı İsteği ile YÖS üzerinden İptal \n ‘04’ :\tSüre Aşımı : Yetki Bekleniyor \n ‘05’ :\tSüre Aşımı : Yetkilendirildi \n ‘06’ :\tSüre Aşımı : Yetki Ödemeye Dönüşmedi \n ‘07’ :\tGKD iptali : Aynı rıza no ile mükerrer çağrımı \n ‘08’ :\tGKD iptali : Rızano ile TCKN uyuşmaması \n ‘09’ :\tGKD iptali : Uygun ürünü bulunmuyor \n ‘10’ :\tGKD iptali : HHS Açık Bankacılık kanalı işleme kapalı \n ’11’ :\tGKD iptali : Hesap Yetki Sorunu \n ‘12’ :\tGKD iptali : ÖHK HHS kontrollerini aşamadı \n ‘13’ :\tGKD iptali : ÖHK isteği ile GKD’den vazgeçildi \n ‘14’ :\tGKD iptali : Fraud Şüphesi \n ‘99’ :\tGKD iptali : Diğer \n \n \n 4.1 ve 4.2 bölümlerinde detaylandırılan rıza durum değişikliklerinde rıza iptal detay kodları kullanılmıştır. \n Örneğin B⇨ I/01 denildiğinde “Yetki Bekleniyor” rıza durumundan “Yetki İptal” rıza durumuna Rıza İptal Detay Kodu da ‘01’ yani ‘Yeni Rıza Talebi ile İptal’ olarak güncellenmelidir ifade edilmiştir. \n ÖHK verdiği rıza sırasında seçtiği hesaplarından biri kapatılırsa, diğer hesaplara ait bilgileri görmeye devam eder. Ancak ÖHK’nın hesabına ait bilgilerinin YÖS'e iletilmesini istemediği durumda, rızasını tamamen iptal ederek yeni hesap listesi ile yeni rıza vermesi gerekmektedir. Yani hesap kapanması nedeniyle rıza geçerliliğini yitirmez. ÖHK'nın proaktif olarak bu hesabı rızadan çıkarması durumunda rıza iptali olur. \n Rıza iptal edilmediği ve geçerli olduğu sürece kapalı hesaplar için diğer çevrimiçi kanallarda uygulanan yöntem izlenmelidir. Diğer çevrimiçi kanallarda kapalı hesaplara ilişkin bilgi dönülmüyor ise ÖHVPS'den de dönüş yapılmaz. ÖHK’nın rıza onayı verdiği açık hesaplarının tümü HHS tarafında kapatıldığı durumda, yine aynı şekilde HHS çevrimiçi kanallarında koyduğu kurallara göre bu hesaplarının YÖS uygulamasında gösterilmesine karar verir. \n Hesap kapama ve ticari kullanıcıların hesaplar üzerindeki yetki değişiklikleri HHS'nin iç sistemleri tarafından yapılan kontrollerle yönetilir. Buradaki değişiklikler ile HHS sistemsel olarak rıza iptali gerçekleştiremez. ÖHK izni ve onayı dahilinde rıza iptal gerçekleştirilmesi gerekmektedir. \n HHS'ler sunmuş oldukları Rıza İptal ekranını (sadece Hesap Bilgisi Rızası için), hangi ortamlardan GKD yapılmasına izin veriliyorsa (web/mobil) aynı ortamdan ÖHK'ya sunmalıdır.  Örneğin bir HHS bireysel müşterileri için web ve mobil, kurumsal müşteriler için web üzerinden GKD imkanı sunuyor ise, minimumda bireysel müşteriler için web ve mobil ortamlarından, kurumsal müşteriler için web ortamından Rıza İptal ekranı aracılığı ile rıza iptaline izin vermelidir. Bunun dışında çağrı merkezi ya da şube gibi ortamlardan sunacağı Rıza İptal imkanı HHS inisiyatifindedir. Bahsi geçen zorunluluk Ödeme Emri Rıza İptal ekranı için geçerli değildir. \n Benzer şekilde YÖS'ler hangi ortamlardan (web/mobil) hizmet veriyorsa, aynı ortam üzerinden Rıza İptal ekranını sunmalıdır. \n 4.1.\tHesap Bilgisi Hizmeti Rıza durum değişiklikleri \n Kural : Bir ÖHK'nın, bir YÖS için, bir HHS'de Y, K, B rıza durumlarında tek bir rızası olabilir.\nBir ÖHK hem kişisel olarak hem de bir kurumun kullanıcısı olabilir. Bu durumda kurum ve kişisel rıza aynı anda mevcut olabilmelidir. Rıza nesneleri, HHS tarafından uygun şekilde yönetilmelidir. \n \n \n Hesap Bilgisi Rızası isteği HHS’ye iletilir. \na.\tHHS ÖHK'ya ait içeride rıza var mı kontrol eder. Eğer yoksa  Yetki Bekleniyor - B  rıza durumu ile yeni rıza oluşturur. \nb.\tEğer içeride rıza varsa \n     i. Rıza durumu Yetki Bekleniyor - B ise; \n        HHS, sistemde Yetki Bekleniyor - B rıza durumuna sahip kayıt olduğu için, öncelikle eski kaydı Yetki İptal - I durumuna getirir.  Rıza İptal Detay Kodu “Yeni Rıza Talebi ile iptal” olmalıdır.  B ⇨ I / 01  Sonrasında,  Yetki Bekleniyor - B  rıza durumu ile yeni rıza oluşturur. \n      ii. Rıza durumu Yetkilendirildi - Y veya Yetki Kullanıldı - K ise; \n    ÖHK'nın halihazırda verilmiş bir rızası vardır. HHS, önce mevcut rızanın iptalinin yapılması gerektiğine dair   TR.OHVPS.Resource.ConsentMismatch  hatasını döner. YÖS, HHS ya da YÖS uygulaması üzerinden bu rızanın iptal edilmesi gerektiğine dair ÖHK'ya bilgilendirme yapar. \n      iii.\tRıza durumu Yetki Sonlandırıldı - S  ise Yetki Bekleniyor - B durumunda yeni rıza no oluşturur. \n      iv.\tRıza durumu Yetki İptal - I ise  Yetki Bekleniyor - B  durumunda yeni rıza no oluşturur. \n \n \n GKD başarılı bir şekilde tamamlandığında Rıza durumu Yetki Bekleniyor’dan Yetkilendirildi’ye güncellenir.  B ⇨ Y \n \n \n GKD'nin gerçekleşmediği durumlardan HHS haberdar olmayabilir. \n ÖHK GKD yapmadan ayrılmış olabilir. (ÖR: Tarayıcıyı kapatmış olabilir) Rıza Yetki Bekleniyor - B rıza durumunda kalır.  5 dakika içerisinde sistem tarafından Yetki Bekleniyor - B rıza durumundaki kayıtlar Yetki İptal  : Yetki Bekleniyor Süre Aşımı olarak güncellenir.   B ⇨ I / 04  Bkz. 9. Madde. \n \n \n GKD'nin gerçekleşmediği durumlardan HHS haberdardır. HHS yonlendirme adresinin query parametrelerine  rizaIptDtyKod  değerini ekleyerek bu durumu YÖS’e bildirmek zorundadır. \n \n \n Rıza durumunun  “Yetkilendirildi\" , “Yetki Kullanıldı” olduğu durum.  Yetki Bekleniyor ⇨ Yetki İptal   B ⇨  I / 07 \n \n \n Rızano ile kimlik bilgileri uyuşmazlığı.  Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 08 \n \n \n ÖHK'nın HHS'de ilgili ürününün olmadığı durum (hesap/kart) Yetki Bekleniyor ⇨ Yetki İptal   B ⇨ I / 09 \n \n \n Açık bankacılık kanalınız işleme kapalıdır.Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 10 \n \n \n Kullanıcının HHS'deki hesaplarında yeterli yetkisinin olmama durumu  Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 11 \n \n \n HHS’nin ÖHK için yaptığı kontrollerin başarısız olduğu durum Yetki Bekleniyor ⇨ Yetki İptal   B ⇨ I / 12 \n \n \n ÖHK isteği ile GKD’den vazgeçildiği durum Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 13 \n \n \n Fraud Şüphesi Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 14 \n \n \n Diğer Yetki Bekleniyor ⇨  Yetki İptal   B ⇨  I / 99 \n \n \n \n \n \n \n ÖHK, hesaplarında/izin türlerinde/Erişimin Geçerli Olduğu Son Tarih bilgilerinden bir ya da birden fazlasında güncelleme yapmak için YÖS ekranına girer. \n \n \n     a.\tYÖS önce Rıza İptal API'sini çağırır. Sonra yeni değerlerle yeni bir rıza isteğinde bulunur. Tekrar GKD gerekir. \n     b.\tYÖS rıza iptal yapmadan yeni rıza alma akışına başlarsa 1.b akışı devreye girer. \n     c.\tRıza güncelleme ilerleyen sürümlerde ele alınacaktır. \n \n \n Erişim Belirteci API \n a. Erişim Belirteci'nin yetkilendirme kodu ile çağrımı yapıldığında; \n      i. Rıza durumu Yetki İptal - I ya da Yetki Sonlandırıldı - S ise   TR.OHVPS.Resource.ConsentRevoked  hatası dönülmelidir. \n     ii. Rıza durumu Yetki Bekleniyor - B ya da Yetki Kullanıldı - K  ise  TR.OHVPS.Resource.ConsentMismatch  hatası dönülmelidir. \n     iii. Rıza durumu Yetkilendirildi - Y olduğunda erişim belirteci tahsis edilir.\nErişim belirteci alındığında rıza durumu K: Yetki Kullanıldı yapılır.  Y ⇨K \n b. Yenileme belirteci karşılığı erişim belirteci alınması sırasında; yenileme belirteci kontrolü ve sonrasında rıza kontrolü yapılmalıdır. \n      i. Öncelikle Yenileme Belirteci Geçerlik Süresi kontrolü yapılmalıdır. Geçerli bir Yenileme Belirteci olmadığı görülür ise  TR.OHVPS.Connection.InvalidToken  hatası dönülmelidir. \n     ii. Rıza durumu Yetki İptal - I  ya da Yetki Sonlandırıldı - S ise  TR.OHVPS.Resource.ConsentRevoked  hatası dönülmelidir. \n     iii. Rıza durumu Yetki Bekleniyor - B ya da Yetkilendirildi - Y  ise  TR.OHVPS.Resource.ConsentMismatch  hatası dönülmelidir. \n     iv. Rıza durumu Yetki Kullanıldı - K olduğunda, yenileme belirteci karşılığı erişim belirteci tahsis edilir. \n \n \n Sorgulama: HBHS, rıza alma akışına başlamadan önce, daha önce oluşturulmuş bir hesap bilgisi-rizasi kaynağının durumunu, isteğe bağlı olarak alabilir. Rıza numarası ile sorgulama yapılır. \n \n \n Hesap Bilgisi Rızasının İptali: HBHS üzerinden ya da HHS üzerinden yapılan rıza iptallerinde Rıza durumu  Yetki İptal - I olarak güncellenir. Rıza numarası ile iptal sağlanır. \n a. HHS üzerinden rıza iptali yapmış olabilir.  Rıza durumu sorgulanır. \n Rıza numarası Yetki Bekleniyor - B ve Yetkilendirildi - Y ve Yetki Kullanıldı - K durumlarında ise Yetki İptal durumuna getirilir. Rıza gnclzmn timestamp ile güncellenir.\nHHS, Rıza iptalinde aynı zamanda erişim belirtecini de invalid hale getirmelidir. \n B ⇨ I / 02 \n Y ⇨ I / 02 \n K ⇨ I / 02 \n b.\tYÖS üzerinden yapılacak iptal işleminde yine Y ve B ve K rıza durumlarında ise iptal edilebilir. \n B ⇨ I / 03 \n Y ⇨ I / 03 \n K ⇨ I / 03 \n Rıza durumu Yetki Sonlandırıldı - S  ise iptal gerçekleşmez. “Rıza durumunuz iptal etmeye uygun değildir.” hatası ÖHK'ya yansıtılır.  TR.OHVPS.Resource.ConsentRevoked \n \n \n ÖHK’nın verdiği rıza süresi dolmuş olabilir.\nErişimin Geçerli Olduğu Son Tarih geldiğinde Rıza durumu Yetki Kullanıldı’dan Yetki Sonlandırıldı durumuna çekilmelidir.   K ⇨ S \n \n \n Hesaplar, Bakiye ve İşlemler servislerinde erişim belirteci kontrolü ve sonrasında rıza kontrolü yapılmalıdır.\nGeçerli bir erişim belirteci yok ise  TR.OHVPS.Connection.InvalidToken  hatası dönülmelidir. \n YÖS'ün; Rıza İptal - I ya da Yetki Sonlandırıldı - S rıza durumlarında Hesaplar, Bakiye ve İşlemler servislerini çağırmaması beklenir. HHS'nin bu rıza durumları ile yapılmış çağrılar olduğunda  TR.OHVPS.Resource.ConsentRevoked  hatasını dönmesi gereklidir. \n Rıza durumu Yetki Kullanıldı - K dışında ise  TR.OHVPS.Resource.ConsentMismatch  hatası verilmelidir. \n Rıza durumu Yetki Kullanıldı - K ise servis akışlarına devam edilir. \n Rıza sorgulama API'sinde ilgili rıza kaydı bulunamaz veya sorgulayan kurumun yetkisi yoksa (örn : YÖS’ün farklı bir YÖS’e ait rıza noyu sorgulaması) \n TR.OHVPS.Resource.NotFound hatası  verilmelidir. \n \n \n HHS/YÖS tarafında rıza bilgileri belirli aralıklarla sistem kullanıcısı tarafından taranır:\n5 dakikadan uzun süredir “Yetki Bekleniyor” durumunda kalan kayıtların durumları güncellenir.\nYetki Bekleniyor  ⇨ Rıza İptal  / Süre Aşımı : Yetki Bekleniyor  B ⇨ I / 04 \n 5 dakikadan uzun süredir “Yetkilendirildi” durumunda kalan kayıtlar güncellenir.\nYetkilendirildi     ⇨ Rıza İptal / Süre Aşımı: Yetkilendirildi  B ⇨ I / 05 \nYukarıda bahsedilen, YÖS Süre Aşımı nedeniyle rıza iptal durum güncellemelerini yapmadan önce HHS’yi sorgulayarak rıza durumunu öğrenmeli ve süre aşımı dışında bir kodu varsa aynı kodla kendi sistemini güncellemelidir. \nErişimin Geçerli Olduğu Son Tarih geldiğinde rıza durumu Yetki Kullanıldı’dan Yetki Sonlandırıldı’ya güncellenir.  K ⇨ S \n 4.2.\tÖdeme Bilgisi Hizmeti Rıza Durum Değişiklikleri \n Kural : Bir ÖHK'nın bir YÖS için bir HHS'de istediği kadar rızası olabilir. \n Kurum ve kişisel rıza aynı anda mevcut olabilmelidir. Rıza nesneleri, HHS tarafından uygun şekilde yönetilmelidir. \n \n \n Ödeme Emri Rızası isteği HHS’ye iletilir. İçeride rıza olup olmamasına bakılmaksızın  Yetki Bekleniyor - B  rıza durumu ile yeni rıza no oluşturur. \n \n \n GKD başarılı bir şekilde tamamlandığında rıza durumu Yetki Bekleniyor’dan Yetkilendirildi’ye güncellenir.   B ⇨ Y \n \n \n GKD'nin gerçekleşmediği durumlardan HHS haberdar olmayabilir. \n ÖHK GKD yapmadan ayrılmış olabilir. (ÖR: Browserı kapatmış olabilir)\nRıza durumu Yetki Bekleniyor'dur. 5 dakika içerisinde sistem tarafından Yetki Bekleniyor - B durumundaki kayıtlar Rıza İptal : Yetki Bekleniyor Süre Aşımı olarak güncellenir. Bkz. 8. Madde. \n \n \n GKD'nin gerçekleşmediği durumlardan HHS haberdardır. HHS yonlendirme adresinin query parametrelerine rizaIptDtyKod değerini ekleyerek bu durumu YÖS’e bildirmek zorundadır. \n \n \n Rıza durumunun  “Yetkilendirildi\" , “Yetki Kullanıldı” olduğu durum.  Yetki Bekleniyor ⇨ Yetki İptal   B ⇨  I / 07 \n \n \n Rızano ile kimlik bilgileri uyuşmazlığı.  Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 08 \n \n \n ÖHK'nın HHS'de ilgili ürününün olmadığı durum (hesap/kart) Yetki Bekleniyor ⇨ Yetki İptal   B ⇨ I / 09 \n \n \n Açık bankacılık kanalınız işleme kapalıdır.Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 10 \n \n \n Kullanıcının HHS'deki hesaplarında yeterli yetkisinin olmama durumu  Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 11 \n \n \n HHS’nin ÖHK için yaptığı kontrollerin başarısız olduğu durum Yetki Bekleniyor ⇨ Yetki İptal   B ⇨ I / 12 \n \n \n ÖHK isteği ile GKD’den vazgeçildiği durum Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 13 \n \n \n Fraud Şüphesi Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 14 \n \n \n Diğer Yetki Bekleniyor ⇨  Yetki İptal   B ⇨  I / 99 \n \n \n \n \n \n \n GKD muafiyeti olduğunda YÖS HHS’den arka planda onay alır. Bu onay sırasında rıza durumu  Yetkilendirildi  yapılır.  B ⇨ Y \n \n \n Erişim Belirteci API \na. Erişim Belirteci'nin yetkilendirme kodu ile çağrımı yapıldığında; \n      i. Rıza durumu Yetki İptal - I  ya da Yetki Sonlandırıldı - S ise   TR.OHVPS.Resource.ConsentRevoked  hatası dönülmelidir. \n     ii. Rıza durumu Yetki Bekleniyor - B , Yetki Kullanıldı - K  ya da Yetki ödeme emrine dönüştü - E  ise  TR.OHVPS.Resource.ConsentMismatch  hatası dönülmelidir. \n     iii. Rıza durumu Yetkilendirildi - Y olduğunda erişim belirteci tahsis edilir.\nErişim belirteci alındığında rıza durumu K: Yetki Kullanıldı yapılır.  Y ⇨K \n b. Yenileme belirteci karşılığı erişim belirteci alınması sırasında; yenileme belirteci kontrolü ve sonrasında rıza kontrolü yapılmalıdır. \n      i. Öncelikle Yenileme Belirteci Geçerlik Süresi kontrolü yapılmalıdır. Geçerli bir Yenileme Belirteci olmadığı görülür ise  TR.OHVPS.Connection.InvalidToken  hatası dönülmelidir. \n     ii. Rıza durumu Yetki İptal - I  ya da Yetki Sonlandırıldı - S ise  TR.OHVPS.Resource.ConsentRevoked  hatası dönülmelidir. \n     iii. Rıza durumu Yetki Bekleniyor - B ya da Yetkilendirildi - Y  ise  TR.OHVPS.Resource.ConsentMismatch  hatası dönülmelidir. \n     iv. Rıza durumu Yetki Kullanıldı - K veya Yetki Ödeme Emrine Dönüştü – E olduğunda, yenileme belirteci karşılığı erişim belirteci tahsis edilir. \n \n \n Ödeme Başlatma API önce erişim belirteci ve sonrasında rıza kontolü yapılarak gerçekleştirilmelidir \n \n Öncelikle Erişim Belirteci kontrolü yapılmalıdır. Geçerli bir Erişim Belirteci olmadığı görülür ise  TR.OHVPS.Connection.InvalidToken  hatası dönülmelidir. \n Rıza durumu Yetki İptal - I  ya da Yetki Sonlandırıldı - S ise  TR.OHVPS.Resource.ConsentRevoked  hatası dönülmelidir. \n Rıza durumu Yetki Bekleniyor - B , Yetkilendirildi - Y, Yetki Ödeme Emrine Dönüştü - E  ise  TR.OHVPS.Resource.ConsentMismatch  hatası dönülmelidir. \n Rıza durumu Yetki Kullanıldı - K olduğunda ödeme emri gerçekleştirilir.  Rıza durumu Yetki Kullanıldı - K'dan Yetki Ödeme Emrine Dönüştü – E yapılmalıdır.   K ⇨E \n \n \n \n Sorgulama: GKD işleminin başarıyla tamamlanıp Ödeme Emri Rızasının yetkilendirilmesi esnasında, gönderen hesap seçiminin HHS ekranında yapıldığı durumlarda, ödeme emri isteğinde gönderen hesap bilgileri alanının zorunlu olması nedeniyle, ödemeEmriRizasi nesnesi sorgulanarak gönderen hesap bilgileri (hesap numarası ve/veya hesap referansı) alınmalıdır.\nRıza sorgulama, Ödeme Emri Sorgulama API'lerinde ilgili rıza kaydı bulunamaz veya sorgulayan kurumun yetkisi yoksa (örn : YÖS’ün farklı bir YÖS’e ait rıza noyu sorgulaması) \n TR.OHVPS.Resource.NotFound  hatası verilmelidir. \n \n \n Ödeme Emri Rızasının İptali bulunmamaktadır. \n \n \n HHS/YÖS tarafında rıza bilgileri belirli aralıklarla sistem kullanıcısı tarafından taranır:\n5 dakikadan uzun süredir Yetki Bekleniyor'da kalan kayıtların durumları güncellenir.\nYetki Bekleniyor ⇨ Rıza İptal / Süre Aşımı : Yetki Bekleniyor  B ⇨ I / 04 \n 5 dakikadan uzun süredir Yetkilendirildi'de kalan kayıtlar durumları güncellenir.\nYetkilendirildi     ⇨ Rıza İptal / Süre Aşımı : Yetkilendirildi  B ⇨ I / 05 \n 5 dakikadan uzun süredir Yetki kullanıldı'da kalan kayıtlar durumları güncellenir.\nYetki kullanıldı ⇨ Rıza İptal / Süre Aşımı : Yetki Ödemeye Dönüşmedi  B ⇨ I / 06 \n Yenileme belirteci Son Tarih geldiğinde rıza durumu Yetki ödeme emrine dönüştü’den Yetki Sonlandırıldı'ya güncellenir. \n E ⇨ S \n \n \n GKD muafiyeti sadece ödeme başlatma servislerinde bulunmaktadır. \n \n \n"},{title:"EK-1: İstek/Cevap Mesajlarında Kullanılacak Nesne Yapıları",frontmatter:{},regularPath:"/v1.1.0/contents/ekler.html",relativePath:"v1.1.0/contents/ekler.md",key:"v-cc5a0b86",path:"/v1.1.0/contents/ekler.html",headers:[{level:2,title:"EK-1: İstek/Cevap Mesajlarında Kullanılacak Nesne Yapıları",slug:"ek-1-istek-cevap-mesajlarında-kullanılacak-nesne-yapıları"},{level:2,title:"EK-2: Sıralı Veri Türleri",slug:"ek-2-sıralı-veri-turleri"},{level:2,title:"EK-3: İstemci Sertifikalarının Tanım ve Yönetimi",slug:"ek-3-istemci-sertifikalarının-tanım-ve-yonetimi"},{level:2,title:"EK-4: Sunucu Sertifikaları",slug:"ek-4-sunucu-sertifikaları"},{level:2,title:"EK-5: Mesaj İmzalama Akışı",slug:"ek-5-mesaj-imzalama-akısı"},{level:3,title:"İmzalama Kuralları (YÖS)",slug:"imzalama-kuralları-yos"},{level:2,title:"EK-6: HHS/YÖS API Mimarisi",slug:"ek-6-hhs-yos-api-mimarisi"}],content:' EK-1: İstek/Cevap Mesajlarında Kullanılacak Nesne Yapıları \n Açık Bankacılık simülatör uygulaması üzerinde swagger dökümanlarının güncel sürümlerine erişim sağlanabilir. \n EK-2: Sıralı Veri Türleri \n \n \n \n Kod \n Açıklama \n \n \n \n \n TR.OHVPS.DataCode.BrcAlc \n İşlemin hesabı borçlandırdığı ya da alacaklandırdığı bilgisidir. B : Borç A : Alacak \n \n \n TR.OHVPS.DataCode.EvetHayir \n E : Evet H : Hayır \n \n \n TR.OHVPS.DataCode.GkdTur \n GKD yapılmasını gerekli bulduğu durumda HHS, YÖS’ün belirlediği yöntemi dikkate alarak kendi belirlediği GKD yöntemini bildirir: Y: Yönlendirmeli GKD A: Ayrık GKD \n \n \n TR.OHVPS.DataCode.HHSDurumu \n A : Açık. Üretim Ortamında HHS’nin aktif bir şekilde hizmet vermesi durumu.  Y : Yaygınlaştırma. Üretim Ortamında HHS’nin kendisi tarafından tanımlanmış kısıtlı ÖHK’ya hizmet vermesi durumu.    G : Geçici Hizmet Veremiyor. HHS servislerinde teknik bir sorun olması nedeniyle HHS’nin hizmet verememesi durumu.  K: Kapalı. HHS’nin hizmet vermeme durumu. \n \n \n TR.OHVPS.DataCode.HHSYOSSrlmKrtr \n ‘kod’ : Kod ‘unv’ : Unvan \n \n \n TR.OHVPS.DataCode.HspDrm \n Hesabın durumunu belirtir: AKTIF PASIF KAPALI \n \n \n TR.OHVPS.DataCode.HspTip \n Hesap çeşidini belirtir: VADESIZ VADELI KREDILI_MEVDUAT_HESABI POS CEK YATIRIM \n \n \n TR.OHVPS.DataCode.HspTur \n Hesabın bireysel veya ticari nitelikte olduğunu belirtir: B: Bireysel T: Ticari \n \n \n TR.OHVPS.DataCode.IslemAmaci \n Ödemenin Amacına yönelik olarak aşağıdaki değerlerden birini alır: 01: Konut Kirası Ödemesi 02: İş yeri Kirası Ödemesi 03: Diğer Kira Ödemesi 04: E-Ticaret Ödemesi: Elektronik ticaret işlem amaçlı aktarımlar 05: Çalışan Ödemesi: Maaş, harcırah, prim gibi çalışan ödemeleri 06: Ticari ödeme: Ticari işletmelerin birbirlerine, kendi hesaplarına veya müşterilerine ödemeleri, borç, ithalat, ihracat, şirket satın alma, vb. kapsamında ödemeler 07: Bireysel Ödeme: Özel amaçlı (aile bireylerine, hediye, bağış, borç, alışveriş vs.) ödemeler 08: Yatırım: Mevduat, menkul kıymet, döviz, gayrı menkul, taşıt, varlık alımı, temettü ödeme, tahsilat vb. gibi yatırım amaçlı ödemeler 09: Finansal: Kredi, depo, repo, türev, finansal varlık alım/satımı vb. ödemeler 10: Eğitim ödemesi 11: Aidat ödemesi 12: Diğer \n \n \n TR.OHVPS.DataCode.IslemTuru \n Hesap hareketleri (işlemler) sorgusunda dönülen İşlem Türü (islTur) parametresi aşağıdaki değerlerden birini alabilir: HAVALE EFT FAST PARA_YATIRMA PARA_CEKME YABANCI_PARA_HAVALE YATIRIM_HESABINA_AKTARIM YATIRIM_HESABINDAN_AKTARIM KURUM_FATURA_ODEMESI CEK SENET SIGORTA_ODEMESI UCRET_KOMISYON_FAIZ SGK_ODEMESI VERGI_ODEMESI DOVIZ_ALIM DOVIZ_SATIM KREDI_ODEMESI KREDI_KULLANIM KK_ODEMESI KK_NAKIT_AVANS SANS_OYUNU UYE_ISYERI_ISLEMLERI HGS_OGS_ISLEMLERI DOGRUDAN_BORCLANDIRMA_SISTEMI DIGER \n \n \n TR.OHVPS.DataCode.IzinTur \n 01: Temel Hesap Bilgisi 02: Ayrıntılı Hesap Bilgisi 03: Bakiye Bilgisi 04: Temel İşlem (Hesap Hareketleri) Bilgisi 05: Ayrıntılı İşlem Bilgisi 06: Anlık Bakiye Bildirimi \n \n \n TR.OHVPS.DataCode.KareKodAksTur \n Karekod Akış Türü Karekod ödemesinin hangi akışla gerçekleştirildiğini gösterir.  01: FAST katılımcısından dinamik doğrulamalı hizmet alınan işyeri ödemesi 02: FAST katılımcısından statik doğrulamalı işyeri ödemesi 03: Kişiden kişiye ödemeler \n \n \n TR.OHVPS.DataCode.KaynakTip \n HESAP_BILGISI_RIZASI  ODEME_EMRI_RIZASI   ODEME_EMRI    BAKIYE    COKLU_ISLEM_TALEBI    HHS    YOS \n \n \n TR.OHVPS.DataCode.KimlikTur \n Kod, Tip, Format K , TCKN , N11 M , MNO , AN1..30 (HHS’ye özel bireysel veya kurum müşteri numarası) Y , YKN , N11 P , PNO , AN7..9 \n \n \n TR.OHVPS.DataCode.KolasHspTur \n Hesabın bireysel veya ticari nitelikte olduğunu belirtir: B: Bireysel T: Ticari \n \n \n TR.OHVPS.DataCode.KolasTur \n Müşterinin sorgulama istediği Kolay Adres Tipi değeridir. Alabileceği değerler BKM “Kolay Adresleme Sistemi Uygulama Kuralları” belgesinde tanımlıdır: T: Telefon Numarası E: E-Posta K: TCKN V: VKN Y: YKN P: Pasaport Numarası \n \n \n TR.OHVPS.DataCode.KurumKimlikTur \n Kod, Tip, Format K , TCKN , N11 M , MNO , AN1..30 (HHS’ye özel bireysel veya kurum müşteri numarası) V , VKN , AN10 \n \n \n TR.OHVPS.DataCode.LogoArkaPlan \n B :  Logoların arka planının beyaz olması (Erkek Logo)   K : Logoların arka planının renkli/koyu olması (Dişi Logo) \n \n \n TR.OHVPS.DataCode.LogoFormat \n SVG :  Logonun svg formatında olmasını ifade eder. Logonun 1:2 oranında olması gerekmektedir.   PNG : Logonun png formatında olmasını ifade eder. Logonun 500 X 1000 px olması gerekmektedir. \n \n \n TR.OHVPS.DataCode.LogoTur \n FULL_LOGO   : Yazı ve ikon şekillerin bir arada olduğu logo   ICON_LOGO : İkon şekillerin olduğu ( Sadece görsel olan-yazısız ) logo \n \n \n TR.OHVPS.DataCode.OdemeAmaci \n Ödemenin Amacına yönelik olarak aşağıdaki değerlerden birini alır: 01: Konut Kirası Ödemesi 02: İş yeri Kirası Ödemesi 03: Diğer Kira Ödemesi 04: E-Ticaret Ödemesi: Elektronik ticaret işlem amaçlı aktarımlar 05: Çalışan Ödemesi: Maaş, harcırah, prim gibi çalışan ödemeleri 06: Ticari ödeme: Ticari işletmelerin birbirlerine, kendi hesaplarına veya müşterilerine ödemeleri, borç, ithalat, ihracat, şirket satın alma, vb. kapsamında ödemeler 07: Bireysel Ödeme: Özel amaçlı (aile bireylerine, hediye, bağış, borç, alışveriş vs.) ödemeler 08: Yatırım: Mevduat, menkul kıymet, döviz, gayrı menkul, taşıt, varlık alımı, temettü ödeme, tahsilat vb. gibi yatırım amaçlı ödemeler 09: Finansal: Kredi, depo, repo, türev, finansal varlık alım/satımı vb. ödemeler 10: Eğitim ödemesi 11: Aidat ödemesi \n \n \n TR.OHVPS.DataCode.OdemeDurumu \n Ödemenin durumunu gösterir. Alabileceği değerler: 01: Gerçekleşti (Ödeme ilgili ödeme sistemine iletildi ve alıcı hesabına ulaştı.)  02: Gönderildi (Ödeme ilgili ödeme sistemine iletildi ancak alıcı hesabına ulaştığına dair teyit alınmadı.)İşlemin son durumunun teyidi için YÖS sorgulama yapmalıdır. 03- Gerçekleşmedi (Ödemenin ilgili ödeme sistemine işletiminde veya işlenmesi sırasında hata, zaman aşımı, sistemin gün sonu işlemlerine başlaması vb. durum oluştu ve ödeme gereçeklemedi veya iade edildi.) 04- Onayda bekliyor (Ödeme emri alındı. Çoklu onay akışının tamamlanması bekleniyor.) 05- İşleme Alındı ( Ödeme emri alındı. ) YÖS tarafından müşteriye gösterilmeyen bir koddur. Bu kod dönüldüğünde YÖS uygulamasında ÖHK’ya ödeme durumu 02-Gönderildi  olarak gösterilir. İşlemin son durumunun teyidi için YÖS sorgulama yapmalıdır. \n \n \n TR.OHVPS.DataCode.OdemeKaynak \n I: İnternet bankacılığından gönderilen ödemelerde kullanılır. A: Otomatik para makineleri (ATM) ile gönderilen ödemelerde kullanılır. T: Telefon bankacılığı ile gönderilen ödemelerde kullanılır. K: Kiosklar aracılığıyla gönderilen ödemelerde kullanılır. S: Şubeden girilen ödemelerde kullanılır. M: Mobil uygulamadan gönderilen ödemelerde kullanılır. D: Yukarıdakiler dışındaki ödeme kaynaklarından gönderilen ödemelerde kullanılır.  O: Açık bankacılık aracılığı ile gönderilen ödemelerde kullanılır. \n \n \n TR.OHVPS.DataCode.OdemeSistemi \n İşlemin yönlendirildiği Ödeme Sistemine göre aşağıdaki değerlerden birini alabilir: H: Havale F: FAST E: EFT (PÖS) değerlerinden birini alabilir. \n \n \n TR.OHVPS.DataCode.OhkTur \n B: Bireysel  K: Kurumsal \n \n \n TR.OHVPS.DataCode.OhkTanimTip \n TCKN: TCKN   (ohkTanimDeger N11 olarak gönderilmelidir.)  MNO:        HHS’ye özel bireysel veya kurum müşteri numarası (OHKTanimDeger AN1..30 olarak gönderilmelidir. )   YKN:      Yabancı Kimlik Numarası (OHKTanimDeger N11 olarak gönderilmelidir.)    PNO:      Pasaport numarsı (ohkTanimDeger AN7..9 olarak gönderilmelidir.)    GSM:       Cep telefonu numarası (ohkTanimDeger N10 olarak gönderilmelidir.)   IBAN:    IBAN numarası (OHKTanimDeger AN26 olarak gönderilmelidir.) \n \n \n TR.OHVPS.DataCode.OlayTip \n KAYNAK_GUNCELLENDI  AYRIK_GKD_BASARILI AYRIK_GKD_BASARISIZ HHS_YOS_GUNCELLENDI \n \n \n TR.OHVPS.DataCode.YOSDurumu \n A : Açık. Üretim Ortamında YÖS’ün aktif bir şekilde hizmet vermesi durumu.   G : Geçici Hizmet Veremiyor. YÖS servislerinde teknik bir sorun olması nedeniyle YÖS\'ün hizmet verememesi durumu.   K: Kapalı. YÖS\'ün hizmet vermeme durumu. \n \n \n TR.OHVPS.DataCode.PSUInitiated \n ‘E’ : Evet  ‘H’ : Hayır   ‘O’ : Olay Bildirim \n \n \n TR.OHVPS.DataCode.RizaDurumu \n B: Yetki Bekleniyor Y: Yetkilendirildi K: Yetki Kullanıldı E: Yetki Ödeme Emrine Dönüştü S: Yetki Sonlandırıldı I :Yetki Iptal \n \n \n TR.OHVPS.DataCode.RizaIptDtyKod \n ‘01’ :Yeni Rıza Talebi ile İptal ‘02’ :Kullanıcı İsteği ile HHS üzerinden İptal ‘03’ :Kullanıcı İsteği ile YÖS üzerinden İptal ‘04’ :Süre Aşımı : Yetki Bekleniyor ‘05’ :Süre Aşımı : Yetkilendirildi ‘06’ :Süre Aşımı : Yetki Ödemeye Dönüşmedi ‘07’ :GKD iptali : Aynı rıza no ile mükerrer çağrımı ‘08’ :GKD iptali : Rızano ile TCKN uyuşmaması ‘09’ :GKD iptali : Uygun ürünü bulunmuyor ‘10’ :GKD iptali : HHS Açık Bankacılık kanalı işleme kapalı ’11’ :GKD iptali : Hesap Yetki Sorunu ‘12’ :GKD iptali : ÖHK HHS kontrollerini aşamadı ‘13’ :GKD iptali : ÖHK isteği ile GKD’den vazgeçildi ‘14’ :GKD iptali : Fraud Şüphesi ‘99’ :GKD iptali : Diğer \n \n \n TR.OHVPS.DataCode.RizaTip \n H: Hesap Bilgisi Rızası O: Ödeme Emri Rızası \n \n \n TR.OHVPS.DataCode.SrlmYon \n ‘A’: Azalan değerle sıralama ‘Y’: Artan değerle sıralama \n \n \n TR.OHVPS.DataCode.VarYok \n 0 : Kayıt Yok   1 : Kayıt Var \n \n \n TR.OHVPS.DataCode.YetTip \n Alabileceği değerlere göre hangi belirtecin döneceğine karar verilir. yet_kod yenileme_belirteci \n \n \n TR.OHVPS.DataCode.ZmnAralik \n 0 : Kayıt Yok  1 : 0-2 saat 2 : 2 saat 1 dakika-24 saat  3 : 1-3 gün   4 : 4-15 gün\t  5 : 16 gün ve üstü \n EK-3: İstemci Sertifikalarının Tanım ve Yönetimi \n Tüm katılımcıların GEÇİT\'e erişebilmesi için, BKM tarafından yapılan istemci sertifika doğrulamasından geçmesi gerekmektedir. İstemci sertifikası üretilmeden önce katılımcıların CSR üretme akışını tamamlaması gerekmektedir. \n OpenSSL ile CSR (Certificate Signing Request) Oluşturma \nAşağıdaki komut ile 2048-bit RSA private key ve CSR oluşturulur. \nopenssl req -new -newkey rsa:2048 -nodes -keyout PRIVATEKEY.key -out CSR.csr \n CSR ile ilgili detay bilgilerin girişinde; \nCommon Name (CN) olarak 4 karakterli hhsKod ya da yosKod değeri ile, \ndiğer alanlar için de kurum bilgileriniz ile giriş yapılır. \n Tüm bilgilerin girilmesinden sonra oluşan private key dosyası kurumunuzda saklanır.\nCSR dosyası ise istemci sertifika üretmek üzere kullanılır. Bu aşamada takip edilmesi gereken adımlar şu şekildedir: \n Katılımcıların, TRIP ortamı üzerinden, BKM Tarafından yetki verilmiş kullanıcılarının görebileceği "İstemci Sertifika Talebi" menü adımına giriş yapmaları beklenir. Açılan ekranda,"CSR Dosyası Yükleme" alanı içerisine, katılımcının üretmiş olduğu csr dosyası yüklenir. Yaklaşık 1 dakika içerisinde kuruma özel olarak üretilmiş olan client sertifikası indirilmeye hazır hale gelecektir. "İndir" butonu ile client sertifika indirilir. İstemci tarafında web isteğinin ilgili sertifika ile ilişkilendirilerek oluşturulması gerekmektedir. \n Uzun dönemli olarak hazırlanacak olan sertifikalar sertifikasyon ve üretim ortamlarında kullanılacaktır. Sertifikaların işlevselliği ve geçerliliği bu aşamalarda sınanacaktır. \n GEÇİT\'in test ve üretim ortamları ayrımında istemci sertifikaları, HHS Listeleme API erişimleri ve Sertifikasyon bağlantıları Şekil 15-HHS/YÖS API Mimarisi Diagramında resmedilmiştir. \n EK-4: Sunucu Sertifikaları \n Sunucu sertifikalarının endpoint bilgisini (Fqdn) içerecek ve global bir Certification Authority tarafından imzalanmış olarak sunulması gerekmektedir.\nÖrneğin; entegrasyon formu içerinde yer alan URL bilgisinin (test.xbank.com.tr) sertifika içerisinde tanımlı olması ve bu sertifikanın global bir CA örneğin Verisign tarafından imzalanmış olarak sunulması gerekmektedir. \n Hizmet sağlayıcı olan HHS\'ler tarafından sunucu sertifikaları uygulanmalıdır. \n EK-5: Mesaj İmzalama Akışı \n Dijital imzalama yapısı, ÖHVPS API’de gerçekleştirilen işlemlerin ve taşınan verilerin bütünlük ve inkâr edilemezliğini sağlamak amacıyla kurgulanmıştır.\nBu kapsamda imzalama akışı aşağıdaki gibi olmalıdır: \n \n HHS ya da YÖS öncelikle özel ve açık anahtarlarını oluşturmalıdır. Bu anahtarları oluşturmak için aşağıda “openssl” kullanılarak oluşturma örneği paylaşılmıştır.  Bu anahtarlardan özel olan anahtar mesajı imzalamak için kullanılacak olup, açık anahtar ise mesajı doğrulamak amacıyla mesajın alıcısı tarafından kullanılacaktır. \n \n private_key.pem ve public_key.pem dosyasinin içerikleri kod tarafında kullanılacaktır. \n --private.pem => Özel anahtarın ismi\nopenssl genrsa -out private.pem 2048 \n --public_key.pem => Açık anahtarın ismi\nopenssl rsa -in private.pem -pubout -outform PEM -out public_key.pem \n --private_key.pem => Özel anahtarın PCKS8 formatına çevrilmesi (Java açısından PCKS8 formatında olma ihtiyacı nedeniyle) openssl pkcs8 -topk8 -inform PEM -in private.pem -out private_key.pem -nocrypt \n \n \n Açık ve Özel anahtarlar oluşturulduktan sonra Açık Anahtar BKM ile paylaşılır. BKM bu açık anahtarı diğer katılımcıların ulaşabilmesi ve alabilmesi için bir Anahtar Deposu yaklaşımı ile bünyesinde tutar. İlgili anahtarı iletebilmek ve alabilmek için kullanılacak HHS/YOS API ye erişim detayları EK-6 bölümünde detaylı olarak paylaşılmıştır.  Eğer kurumun ilgili anahtar çiftinin yenilenme durumu söz konusu ise yenilemenin hemen ardından açık anahtar yeni bir imzalama yapılmadan önce mutlaka BKM ile paylaşılmalıdır. \n \n \n İmzalı mesajı açacak olan kurum mesajı imzalayan kurumun açık anahtarını her sorguda yeniden almak durumunda değildir. Belirli periyodlarda kendi ortamındaki anahtarı yenileyerek sistemi işletebilir. Ancak imzalayan kurum anahtar çifti yenilemesi yaptığında BKM ile açık anahtarını paylaşsa dahi imzalı mesajı doğrulayacak taraf eski açık anahtar ile doğrulama yapmaya çalıştığı için hata alacaktır. Bu ilk hata durumunda hızlıca BKM üzerinden yeni anahtarı alıp mesajı tekrar doğrulamayı denemelidir. Eğer yine hata alıyor ise doğrulama işlemini hata statüsüne almalıdır. Bu sebeple anahtar yenileyen kurum yeni açık anahtarını yeni bir mesaj imzalama yapmadan önce mutlaka BKM ile paylaşmalıdır. \n \n \n PSU-Fraud-Check alanı için de JWT formatında çıktı hazırlanması beklenmektedir. Örnek bir PSU-Fraud-Check payload değeri aşağıdaki gibidir; \n {"AnomalyFlag": "0", \n"LastPasswordChangeFlag": "1", \n"FirstLoginFlag": "1", \n"DeviceFirstLoginFlag": "1", \n"BlacklistFlag": "0", \n"MalwareFlag": "0", \n"UnsafeAccountFlag": "0", \n"exp": 1663424479, \n"iat": 1663338079, \n"iss": "[https://apigw.bkm.com.tr|https://apigw.bkm.com.tr/]" } \n İmzalama Kuralları (YÖS) \n Bir YÖS üzerinden başlayan akış örnek olarak paylaşılmıştır. \n \n \n YÖS, mesaj imzalama gerektiren her API isteğinin HTTP gövdesini (request body) kendi özel anahtarı ile şifreleyerek imza bilgisini oluşturur. \n \n \n Ardından bu imza verisini, göndereceği mesajın istek başlığında yer alan X-JWS-Signature alanında göndermelidir. \n \n \n X-JWS-Signature alanında gönderilecek olan bilgi aşağıdaki yöntem ile oluşturulmalıdır. \n \n \n Bu alana yazılacak olan bilgi JWT formatında oluşturulmalıdır. \n \n \n Bir JWT, header-payload-signature alanlarından oluşmaktadır. \n \n Header alanında JWT’yi imzalamak için kullanılacak algoritma belirtilmelidir.  Standartlar kapsamında RS256 kullanılacaktır. \n Payload kısmında özel olarak oluşturulacak olan “body” claim alanına istek gövdesi (request body) verisinin SHA256 hash değeri karşılığı yazılmalıdır. \n JSON payload oluşturulurken RFC 7519 baz alınmalıdır. "iss" (Issuer) Claim, "exp" (Expiration Time) Claim, "iat" (Issued At) Claim, “body” Claim alanlarının gönderilmesi zorunludur. ^RFC7519 \na.\t"iss" (Issuer) Claim : Kurumunuza özel bilgidir. \nb.\t"exp" (Expiration Time) Claim: Saniye cinsinden (Unix time) imzanın son geçerli olduğu tarih. Bu tarih  mevcut sunucu saatinizden 60 dakika sonra olacak şekilde kullanılmalıdır. \nc.\t"iat" (Issued At) Claim : Saniye cinsinden (Unix time) imzanın oluşturulduğu tarih. Bu tarih  mevcut sunucu saatinizden 5 dakika önce olacak şekilde kullanılmalıdır. \nd.\t“body” Claim : istek gövdesi (request body) verisinin SHA256 hash değeri karşılığı. \n Signature alanında da özel anahtar ile imzalanmış olan imza içeriği yer alacaktır. \n \n X-JWS-Signature:   JWS imzasını içeren üstbilgi. Bu başlığın ne zaman belirtilmesi gerektiği hususu ilgili endpoint için belirtilmiştir. \n Örnek X-JWS-Signature Payload Değeri \n { \n"iss": "https://apigw.bkm.com.tr", \n"exp": 1646832405, \n"iat": 1646746005, \n"body": "c543072f97a761a1d891dc81acc380bc1e6f61ca6541bd93ebfdece338457922" \n} \n \n \n \n \n YÖS, isteği gönderir. Sadece mesajın bütünlüğünü ve doğruluğunu teyit amacı ile istek gövdesi (request body) SHA256 hash değeri imzalanarak X-JWS-Signature alanında bu imza iletilir. İsteğin gövde (request body) kısmı açık ve şifresiz olarak gönderilmektedir. \n \n \n HHS, isteği alır, talebi gerçekleştirmeden önce aldığı API isteklerinin imzasını doğrulamalıdır. X-JWS-Signature alanındaki JWT aşağıdaki adımlarla doğrulanmalıdır. \n \n Header kısmındaki algoritmanin RS256 olduğu kontrol edilir. \n Gönderen kurumun açık anahtarı ile JWT verify (doğrulama) işlemi yapılır. \n Yukarıdaki işlemlerin doğruluğunun ardından JWT’nin payload kısmındaki “body” claim alanındaki bilginin, isteğin gövde verisinin SHA256 hash değerlerinin aynı olduğu kontrol edilir. \n Örnek checksum değeri   "a64b19f95eeb1fb0a0a3e2dbbc6e3d8472c52184d4543417ddc6d156fc5c5571" veya   "A64B19F95EEB1FB0A0A3E2DBBC6E3D8472C52184D4543417DDC6D156FC5C5571" şeklinde olabilir. İki hali de aynı değere sahiptir. Kontrollerde buna dikkat edilmesi gerekmektedir. \n \n \n \n Yukarıdaki işlemler ile doğruluğu teyit edilmiş olan isteğin talebi gerçekleştirir. \n \n \n Eğer istek doğrulanamıyor ise gönderen kurumun açık ve özel anahtar çifti yenilenmiş olabilir. \n \n \n BKM HHS API  üzerinden ilgili kurumun bilgilerini (kurum kodu vs) kullanarak kurumun detay bilgileri çeker ve kendi ortamında yeniler. \n \n \n Ardından imzayı tekrar açık anahtar ile doğrulayarak kontroller gerçekleştirilir. (Eğer halen doğrulama işlemi başarısız ise bu istek için hata akışı çalıştırılır.  TR.OHVPS.Resource.InvalidSignature  kodu ile hata üretilebilir.) \n \n \n İmza bilgisinin beklendiği (x-jws-signature) servislerde, bu bilginin iletilmediği durumlarda  TR.OHVPS.Resource.MissingSignature  hatası üretilebilir. \n \n \n HHS isteği işledikten sonra cevabı oluştururken de yukarıdaki akışlar ile göndereceği cevabı imzalamalıdır. \n \n \n İstek yanıt gövdesinin SHA256 checksum değeri için hexadecimal çıktı kullanılacaktır. Oluşacak çıktının 64 karakter olması beklenmektedir. Kontrol için "^[A-Fa-f0-9]{64}$" RegEx tarifini kullanabilirsiniz. \n \n \n Örnek bir gövde: \n {"katilimciBlg":{"hhsKod":"8000","yosKod":"8000"},"gkd":{"yetYntm":"Y","yonAdr":"https://boss-test.bkm.com.tr/boss/ab/yosSimulator/8000?drmKod=6021de9f-55e7-454a-94be-2044866b22e1"},"kmlk":{"kmlkTur":"M","kmlkVrs":"123456","ohkTur":"B"},"hspBlg":{"iznBlg":{"iznTur":["01","02","03","04","05"],"erisimIzniSonTrh":"2022-10-12T23:59:59+03:00","hesapIslemBslZmn":"2021-10-10T00:00:00+03:00","hesapIslemBtsZmn":"2023-10-10T23:59:59+03:00"}}}\n \n Bu gövdenin checksum\'ı: \n a64b19f95eeb1fb0a0a3e2dbbc6e3d8472c52184d4543417ddc6d156fc5c5571\n \n Bu checksum\'ın iletildiği x-jws-signature başlık değeri: \n eyJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJodHRwczovL2FwaWd3LmJrbS5jb20udHIiLCJleHAiOjE2NjU0NzU1NjIsImlhdCI6MTY2NTM4OTE2MiwiYm9keSI6ImE2NGIxOWY5NWVlYjFmYjBhMGEzZTJkYmJjNmUzZDg0NzJjNTIxODRkNDU0MzQxN2RkYzZkMTU2ZmM1YzU1NzEifQ.Q65PI_1fTEzzBMirvmJvXgVX3orhhZ4_UqujtGdHkU7me-1ymIjvPrzy3kfyER1pedFb7HDCBuPvYoqjX8eUnpiiZsxfzCiEa0McIhoFeUOggq-O8VihItp8bLr2DWwQ9JHN1-WXB2mL31KAKFAL1VY9-DXuAdT-RfE_SLYsl2ycmNy4ti4XvfDvvlE56ZsieFZ727VuwR8wi7F0kKDc6UhjaMF9xcUeAM1fxX-bmcOaOo1NZGC0vvgjNZKz_OJrN-q8VhWYnQPiJ7wY7S9IG8bHIkBImKSVf8LuOEvl8u0BZzADLH1iOBd9x2l1plyI_NLPTrnOqhWhKlljkkJBCg\n \n Eğer PSU-Fraud-Check için başlık gönderilecekse, yine JWT formatında imza üretilmelidir. Örnek bir psu-fraud-check başlık değeri: \n eyJhbGciOiJSUzI1NiJ9.eyJBbm9tYWx5RmxhZyI6IjAiLCJMYXN0UGFzc3dvcmRDaGFuZ2VGbGFnIjoiMSIsIkZpcnN0TG9naW5GbGFnIjoiMSIsIkRldmljZUZpcnN0TG9naW5GbGFnIjoiMSIsIkJsYWNrbGlzdEZsYWciOiIwIiwiTWFsd2FyZUZsYWciOiIwIiwiVW5zYWZlQWNjb3VudEZsYWciOiIwIiwiZXhwIjoxNjY1NDc1NTU2LCJpYXQiOjE2NjUzODkxNTYsImlzcyI6Imh0dHBzOi8vYXBpZ3cuYmttLmNvbS50ciJ9.DhUh_nsXDuNIrvsQ3KOhOXdVcJg6fTDVW8K1oea8kLtmb7n-_hJHY3mWX5zzobu-Vh2VvFzIxPhHtol6gLHFktmIMiQ9TDHb_mRZFXgJB4ToNfqc3Fy9mi5bS8By2IYi1HxDaCStstaZDaunzXfHCtqybfZXyk6teDrf-iIf6lqX9Keo7GZO-Y7mP7C13-c_QwyNKrZK4TZwUQbecRqXYn1DcEHM7kukQHTar_hKBWkXPmNpScY0J2rKksr4ejR1uLhdQm-Pdwoe9y6qrNEB79vMLBkRNtbuV0vc1GYHp_YKkzBKBI_58uuB2GD9877CsrcRnHMQb88xpxiPKh6-ew\n EK-6: HHS/YÖS API Mimarisi \n HHS/YÖS API Uygulama Mimarisinde Test ve Üretim ortamlarında aşağıdaki alanda yer almaktadır. \n \n Şekil 15: HHS/YÖS API Mimarisi \n'},{title:"6.\tÖdeme Emri Başlatma Hizmeti",frontmatter:{},regularPath:"/v1.0.2/contents/odeme-emri-baslatma-hizmeti.html",relativePath:"v1.0.2/contents/odeme-emri-baslatma-hizmeti.md",key:"v-1ef8939d",path:"/v1.0.2/contents/odeme-emri-baslatma-hizmeti.html",headers:[{level:3,title:"Ödeme Emri Başlatma Hizmeti için Erişim Adresleri (Endpoints)",slug:"odeme-emri-baslatma-hizmeti-icin-erisim-adresleri-endpoints"},{level:2,title:"6.1.\tADIM 0 - Ödeme Emri Başlatma Isteği",slug:"_6-1-adim-0-odeme-emri-baslatma-istegi"},{level:2,title:"6.2.\tADIM 1 - Ödeme Emri Rızasının Hazırlanması",slug:"_6-2-adim-1-odeme-emri-rızasının-hazırlanması"},{level:2,title:"6.3.\tADIM 2- Ödeme Emri Rızasının Yetkilendirilmesi",slug:"_6-3-adim-2-odeme-emri-rızasının-yetkilendirilmesi"},{level:2,title:"6.4.\tADIM 2.1 – Ödeme Emri Rızasının Sorgulanması (isteğe bağlı)",slug:"_6-4-adim-2-1-odeme-emri-rızasının-sorgulanması-istege-baglı"},{level:2,title:"6.5.\tADIM 3- Ödeme Emrinin Oluşturulması",slug:"_6-5-adim-3-odeme-emrinin-olusturulması"},{level:2,title:"6.6.\tADIM 3.1- Ödeme Emri Sorgusu (İsteğe bağlı)",slug:"_6-6-adim-3-1-odeme-emri-sorgusu-istege-baglı"},{level:3,title:"GET /odeme-emri/{odemeEmriNo}",slug:"get-odeme-emri-odemeemrino"},{level:2,title:"6.7\tHealthcheck API",slug:"_6-7healthcheck-api"},{level:3,title:"GET /health",slug:"get-health"}],content:" 6.\tÖdeme Emri Başlatma Hizmeti \n Ödeme emri başlatma işlemi havale, FAST ya da PÖS ödemesiyle sonuçlanabilir. Ödeme işleminin amacı kişiden kişiye para transferi, e-ticaret ödemesi gibi farklı ödeme türleri olabilir. Ödemenin amacına göre ÖBHS’nin ileteceği veri setinde farklılaşmalar olabilir. \n Ödeme Emri Başlatma Hizmeti 5 temel akışdan oluşur: \n \n Ödeme Emri Başlatma İsteğinin tetiklenmesi:  ÖHK ÖBHS mobil uygulama ya da websitesinden ödeme emrini başlatır. \n Ödeme Emri Rıza Hazırlanması:  ÖBHS, “Ödeme Emri Başlatma” işlemi için izin oluşturulması isteğini HHS’ye iletir. \n Ödeme Emri Rızasının Yetkilendirilmesi:  HHS, gerekli gördüğü durumlarda ÖHK’yı GKD ile doğrular ve ödeme emri rızasına erişim için erişim belirteci tanımlanmasını temin eder. \n Ödeme Emrinin Başlatılması:  ÖBHS, “ödeme emri”ni HHS’ye iletir. \n Ödeme Emri Rıza Durumu, Ödeme Emri Durumu, Ödeme Emri Detayı Sorguları:  ÖBHS, Ödeme Emri Rıza Durumu, Ödeme Emri Durumu, Ödeme Emri Detayı bilgilerini isteğe bağlı olarak sorgulayabilir. \n \n \n Şekil 4: Ödeme Emri Başlatma Hizmeti Üst Düzey İş Akışı \n Ödeme Emri Başlatma Hizmeti için Erişim Adresleri (Endpoints) \n Ödeme Emri Başlatma Hizmeti İçin Erişim Adreslerinin Etki Alanı (Scope) = “odeme_emri” olarak belirtilmelidir. \n Tablo 6: Ödeme Emri Başlatma Hizmeti İçin Erişim Adresleri \n \n \n \n No \n Kaynak \n HTTP işlemi \n Erişim Adresi \n Zorunlu / İsteğe Bağlı \n Yetkilendirme Türü \n İmzalama \n İstem Nesnesi \n Yanıt Nesnesi \n \n \n \n \n 1 \n odeme-emri-rizasi \n POST \n /odeme-emri-rizasi \n Z \n İstemci Kimlik Bilgileri \n İmzalı İstek ve Yanıt \n OdemeEmriRizasiIstegi \n OdemeEmriRizasi \n \n \n 2 \n erisim-belirteci (GKD için) \n POST \n /erisim-belirteci \n Z \n İstemci Kimlik Bilgileri \n İmzalı İstek ve Yanıt \n ErisimBelirteciIstegi \n ErisimBelirteci \n \n \n 2.1 \n odeme-emri-rizasi \n GET \n /odeme-emri-rizasi/{rizaNo} \n Z \n İstemci Kimlik Bilgileri \n İmzalı Yanıt \n - \n OdemeEmriRizaYaniti \n \n \n 3 \n odeme-emri \n POST \n /odeme-emri \n Z \n İstemci Kimlik Bilgileri & Yetkilendirme Kodu (GKD) \n İmzalı İstek ve Yanıt \n OdemeEmriIstegi \n OdemeEmri \n \n \n 3.1 \n odeme-emri \n GET \n /odeme-emri/{odemeEmriNo} \n Z \n İstemci Kimlik Bilgileri & Yetkilendirme Kodu (GKD) \n İmzalı Yanıt \n - \n OdemeEmri \n 6.1.\tADIM 0 - Ödeme Emri Başlatma Isteği \n \n ÖHK, ÖBHS uygulamasında (web arayüzü/mobil uygulama) ödeme emri başlatma işlemine onay verir. \n Gönderen hesap detaylarının bu aşamada belirtilmesi zorunlu değildir. \n 6.2.\tADIM 1 - Ödeme Emri Rızasının Hazırlanması \n   \n Şekil 5: Ödeme Emri Rızasının Hazırlanması \n \n \n ÖBHS, ödeme hizmeti kullanıcı hesabının bulunduğu HHS’ye bağlanarak ödeme emri rıza kaynağının oluşturulmasını (odemeEmriRizasi) sağlar. \n \n \n POST isteği TLS protokolü tesis edilen iletişim katmanı üzerinden gerçekleştirilir. TLS için nitelikli sertifikalar kullanılır. \n \n \n POST isteğinin başlığındaki alanlar ve istemcinin sertifikasındaki özel alanlar kullanılarak istemcinin yetkilendirilmesi sağlanır: \n \n İstekte bulunan ÖBHS yetkilendirilmiş mi? \n İstekte bulunan yetkilendirilmiş ödeme hizmeti sağlayıcısı ÖBHS rolüne sahip mi? \n İstekte bulunulan HHS kodu doğru mu? \n \n \n \n POST başarılı olursa, HHS, ödeme emri için içeride rıza olup olmamasına bakılmaksızın yeni bir rıza tanımlayıcısı RizaNo içeren odemeEmriRizasi  yanıt olarak döner. \n \n \n 1 ÖHK'nın 1 YÖS için 1HHS'de istediği kadar rızası olabilir. \n \n \n HHS tarafında RizaDurumu değişkeninin durumu “Yetki Bekleniyor” olarak güncellenir. \n \n \n YÖS’ün doğrulama ekranı olarak ÖHK’ya açacağı URL adresini de ilgili rıza numarasına göre oluşturur. Burada 2 farklı yöntemle URL oluşturabilir. \n \n Statik URL  : \nHHS’nin base pathi/alt-dizin/{rızaNo} \nÖrnek hhsYonAdr : https://xbank.com.tr/ohvps/cb54834e36f742d09af3d534ece3352a \nBu adres için ilgili doğrulama sayfası önden hazırlanmalı ve ÖHK’nın doğrulama sayfasına erişimi için yayınlanmış olmalıdır (publish edilmelidir). \n Dinamik URL : \nHHS’nin base pathi/alt-dizin/GKD Karşılama Ekranı?rizano={rızano} \nÖrnek: https://xbank.com.tr/ohvps/gkd?rizano=cb54834e36f742d09af3d534ece3352a \n \n \n \n POST /odeme-emri-rizasi \n İSTEK: \n ÖBHS, bu API erişim adresinden HHS’ye yeni bir OdemeEmriRizasi oluşturulması için istekte bulunur: \n \n ÖBHS, ödeme emri başlatma isteği olduğunu HHS’ye bildirir. \n ÖBHS, ÖHK’nın, ÖBHS arayüzünden verdiği rızanın (“Ön Onay”) bir kopyasının HHS nezdinde müşteri tarafından onaylanması için HHS’ye gönderilmesini sağlar. \n HHS; istek mesajında yer alan alanların API dökümanında belirtilen şartları sağlayacak şekilde zorunluluk, uzunluk ve içerik kontrollerini yapar. (Zorunlu) \n HHS; YÖS API ile alınan ÖBHS bilgilerinin içerisinde yer alan yönlendirme ve bildirim adresleri ile ödeme emri rızası nesnesi request mesajında paylaşılan adreslerin uyumlu olup olmadığının kontrollerini yapar. (Zorunlu) \n HHS; kimlik bilgileri nesnesinde eğer kimlik bilgileri iletilmiş ise; bu veri ile ÖHK’nın HHS müşterisi olup olmadığının kontrollerini yapar. Bu kontrol hem bireysel hem de kurumsal ÖHK’lar için yapılmalıdır.  (Koşullu Zorunlu) \n HHS kimlik bilgisi ile gönderen unvanının uyumlu olduğunun kontrol eder. HHS'ler EFT/FAST işlemlerinde kabul ettikleri kontrol kriterleri ile işleme izin verebilirler. (Zorunlu) \n Gönderen Hesap Numarası ile ilgili Tablo7’de belirtilen kontroller yapılmalıdır. (Zorunlu) \n HHS, ödeme için benzersiz “RizaNo” ile “OdemeEmriRizasi” nesnesi oluşturur ve ÖBHS’ye döner. \n HHS, OdemeEmriRizasi oluşturduğu anda durumunu “Yetki Bekleniyor” olarak düzenler. \nBu aşamada ÖHK’nın HHS tarafından tanımlanmış ve isteğin veri alanında gönderen hesaba (borçlandırılacak hesaba) ilişkin bir bilgisinin olması gerekmez. \nHesap bakiye kontrolünün rıza aşamasında yapılmaması gerekmektedir. Çünkü ÖHK ödeme emri gerçekleşene kadar hesabına para eklemesi yapabilir. \n \n POST /odeme-emri-rizasi  isteğinin (REQUEST) gövdesinde (BODY)  “odemeEmriRizasiIstegi” nesnesi (Tablo-7) kullanılır. İstek başarıyla sonuçlanırsa HHS kaynak sunucusunda “odemeEmriRizasi” (Tablo-8) nesnesi oluşturulur. \n Tek Seferlik Ödeme \nTek seferlik ödeme akışı YÖS'ten HHS'ye giden istekte, gönderen kimlik bilgilerinin olmadığı durumda gerçekleşir. Gönderen kimlik bilgisi olmadığında, KOLAS sorgusu yapılamayacağından ötürü, HHS tarafından TR.OHVPS.Business.InvalidContent hatası dönülmelidir. \nTek seferlik ödeme akışı hem işyeri ödemelerinde hem de kişiden kişiye para transferlerinde kullanılabilen bir akıştır.\nAşağıdaki senaryolar tek seferlik ödemeye örnek olarak gösterilebilir. \nİşyeri Ödemesi akışı örneği: Bir e-ticaret sitesinde, üye olmadan alışveriş yapılması ve ödemenin YÖS tarafından kimlik bilgisi olmadan başlatılması \nKişiden kişiye para transferi akışı örneği: QR veya diğer yöntemler ile alıcı bilgilerinin gönderici ile paylaşılması ve YÖS üzerinden gönderici bilgileri olmadan alıcıya para transferi yapılması için rıza verilmesi \n  BAŞARILI İSTEK: \n Tablo 7: “OdemeEmriRizasiIstegi” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n HHS tarafından ödeme emri rızası oluşturulması sırasında yapılması gereken kontrol ve işlemler \n \n \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n HHS, hhsKod’un kendisine ait olduğunu ve istek başlığındaki x-aspsp-code değeri ile aynı olduğunu kontrol eder.  Hata durumunda  TR.OHVPS.Connection.InvalidASPSP  hata kodunu döner. \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n HHS, yosKod’un geçerli bir Ödeme Hizmeti Sağlayıcısı Kodu olduğunu ve istek başlığındaki x-tpp-code değeri ile aynı olduğunu kontrol eder. Hata durumunda  TR.OHVPS.Connection.InvalidTPP  hata kodunu döner. \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n \n > Yetkilendirme Yöntemi \n yetYntm \n AN1 \n İ \n TR.OHVPS.DataCode.GkdTur  sıralı veri türü değerlerinden birini alır. Yetkilendirme yöntemi, ÖBHS tarafından belirtilmeyebilir. \n HHS, ÖBHS’nin belirlediği yöntemi dikkate alarak kendi belirlediği yöntemi kullanır. \n \n \n > Yönlenme Adresi \n yonAdr \n AN1..1024 \n K \n Yönlendirmeli güçlü kimlik doğrulama için zorunlu.  YÖS’ün ileteceği adrestir.  YÖS Yönlendirmeli GKD yöntemi ile akışı destekliyorsa, yetYntm değişkeninden bağımsız olarak yönlendirme adresini iletmelidir.  Durum kodu(drmKod), yönlendirme adresine parametre olarak eklenmelidir. \n HHS, müşteri uygulama / tarayıcısını bu alanda belirtilen adrese yönlendirir. \n \n \n > Bildirim Adresi \n bldAdr \n AN1..1024 \n K \n Ayrık güçlü kimlik doğrulama için zorunlu. YÖS’ün ileteceği adrestir.  YÖS Ayrık GKD yöntemi ile akışı destekliyorsa, yetYntm değişkeninden bağımsız olarak bildirim adresini iletmelidir.  Durum kodu(drmKod), yönlendirme adresine parametre olarak eklenmelidir. \n HHS, ayrık GKD sonrası bu alanda belirtilen adrese otorizasyon kodunu (authentication code) iletir. \n \n \n Ödeme Başlatma \n odmBsltm \n Kompleks: OdemeBaslatma \n Z \n \n \n \n \n > Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n \n >> Kimlik Türü \n kmlkTur \n AN1 \n K \n TR.OHVPS.DataCode.KimlikTur  sıralı veri türü değerlerinden birini alır. \n Çerçeve sözleşme kapsamındaki ödemelerde kullanımı zorunludur. HHS geçerli bir Kimlik Numarası Türü olduğunu kontrol eder. Kurum adına yapılan (ticari) ödemelerde, kurum adına işlem yapan kullanıcının kimlik türünün bu alanda gönderilmesi zorunludur. \n \n \n >> Kimlik Verisi \n kmlkVrs \n AN1..30 \n K \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır. TR.OHVPS.DataCode.KimlikTur  değerine göre uzunluk ve formatı değişir. \n Çerçeve sözleşme kapsamındaki ödemelerde kullanımı zorunludur. HHS, ÖBHS tarafından iletilmesi durumunda Kimlik Verisi üzeriden çapraz kontroller uygulamalı ve Kimlik Verisini temel alarak GKD gerçekleştirmelidir.  Pasaport numarasına ilişkin kontroller HHS'nin halihazırda kullandığı veri, akış ve tabi olduğu diğer düzenlemelerdeki işleyiş ile aynı şekilde ele alınmalıdır.  Kurum adına yapılan (ticari) ödemelerde, kurum adına işlem yapan kullanıcının kimlik türünün bu alanda gönderilmesi zorunludur. \n \n \n >> Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür. TR.OHVPS.DataCode.KurumKimlikTur  sıralı veri türü değerlerinden birini alır. \n Kurum adına yapılan (ticari) ödemelerde kullanımı zorunludur.  HHS geçerli bir Kurum Kimlik Numarası Türü olduğunu kontrol eder. \n \n \n >> Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.   TR.OHVPS.DataCode.KurumKimlikTur  değerine göre uzunluk ve formatı değişir. \n Kurum adına yapılan (ticari) ödemelerde kullanımı zorunludur.  HHS, ÖBHS tarafından iletilmesi durumunda Kurum Kimlik Verisi üzeriden çapraz kontroller uygulamalıdır. \n \n \n >> Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur  sıralı veri türü değerlerinden birini alır  (B: Bireysel, K:Kurumsal) \n Kurum adına yapılan ödemelerde K değerini alır. Kurum Kimlik Türü ve Kurum Kimlik Verisi alanlarının girilmiş olduğu çapraz olarak kontrol edilir. \n \n \n > İşlem Tutarı \n islTtr \n Kompleks:Tutar \n Z \n \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para Birimi.  Karekod akışında, FAST Karekod Veri Organizasyonundaki  53: (Para Birimi)  alanında tanımlı Para Birimi verisi kullanılır. \n HHS geçerli bir para birimi olduğu kontrol eder. \n \n \n >> Tutar \n ttr \n AN1..24 \n Z \n ÖBHS'nin ön yüzde kullanıcıdan teyit aldığı tutar.   Karekod akışında, FAST Karekod Veri Organizasyonundaki  54: (Tutar)  alanında tanımlı Tutar verisi kullanılır.   Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n \n \n \n > Gönderen \n gon \n Kompleks:Hesap \n İ \n \n \n \n \n >> Unvan \n unv \n AN3..140 \n İ \n Gönderenin unvanıdır.  HHS, bu bilgiyi ÖBHS sisteminden gelen veri yerine FAST’a iletirken kendi sisteminden alabilir. \n HHS’nin bu veri ile kendi sistemlerindeki verinin farklı olması ve Kimlik Numarası ile eşleşmemesi durumunda ödeme emri başlatma isteği reddedilir.  ÖBHS verisi ile HHS verisinin farklılaşması durumunun ise risk değerlendirme sistemlerine girdi olarak kullanması tavsiye edilir. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n İ \n ÖBHS'nin ön yüzünden daha önce kayıt altına alınmış hesaplar arasından seçtirdiği veya müşteriye girdiği IBAN’dır.  ÖBHS tarafından iletilmediği durumda, gönderen hesap bilgisini müşteri tarafından HHS’nin dijital kanalında GKD sonrasında seçilebilir. Bu amaçla ÖBHS arayüzünde HHS seçtirilmelidir.  Hesap Referansı kullanılıyorsa Hesap Numarası kullanılmayabilir. Hesap referansı ile ödeme emri rızası başlatılacak ise HHS hesap referansı değeri ile ilişkilendirilmiş mevcut bir hesap bilgisi rızası var mı kontrol etmelidir. Eğer aktif bir rızası yok ise  TR.OHVPS.Business.InvalidContent  hatası verilmelidir. \n ÖBHS tarafından iletildiği durumda; IBAN içerisindeki HHS kodunun istek başlığındaki HHS kodu ile aynı olduğu (hesabın HHS’ye aitliğinin kontrolü), IBAN’ın doğruluğu (kontrol basamağı doğrulaması), Hesap numarasının ÖHK’ya ait olduğu, HHS’ye özel ödeme izni verilmeyen farklı statülerin bulunması durumu kontrol edilir.  Kontrol başarısız olduğunda  TR.OHVPS.Business. InvalidAccount  hatası YÖS’e iletilir. \n \n \n >> Hesap Referansı \n hspRef \n AN5..40 \n İ \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid). YÖS bazında farklılaşması gerekmez.  ÖBHS’nin aynı zamanda HBHS olduğu durumda müşteri rızası tesis edilmiş bir hesabın referansı üzerinden de ödeme başaltılabilir.  Hesap Numarası kullanılıyorsa Hesap Referansı kullanılmayabilir. \n HspRef'e bağlı IBAN değiştiğinde yeni IBAN'ın da ilgili HspRef ile ilişkilendirilmesi beklenmektedir. Bu durumda, HBHS, HspRef ile sorguya geldiğinde HHS'nin yeni IBAN ve hesap hareketlerini dönebilmesi mümkün olacaktır. HspRef’in, IBAN değiştiğinde değiştirilmemesi tavsiye edilmektedir. \n \n \n > Alıcı \n alc \n Kompleks:Hesap \n Z \n \n \n \n \n >> Unvan \n unv \n AN3..140 \n K \n Kolay Adres Sistemi  kullanılmıyorsa zorunludur.  Alıcının unvanıdır. ÖBHS ekranlarından girişi yapılabileceği gibi ÖBHS’nin kayıtlı alıcılarından yapılan seçimle de doldurup gönderebildiği bilgi olabilir.  FAST-TR Karekod Veri Organizasyonunda;  İşyeri tarafından sunulan uzun karekod yapısının  59:  alanında tanımlı İşyeri adı alanıdır, Kişiden Kişiye Ödeme Karekod Yapısının  07:  alanında tanımlı    Ödeme Alıcısının Adı ve Soyadı  alanıdır.  FAST-TR Karekod dışındaki iş yeri ödemelerinde; yine Unvan alanında işyeri adı bilgisi gönderilmelidir. \n \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n K \n Alıcının Hesap Numarası (IBAN)  alanıdır.   Kolay Adres Sistemi  kullanılmıyorsa zorunludur.  Karekod akışında, FAST Karekod Veri Organizasyonundaki  30-01:  alanında tanımlı İş Yeri IBAN verisi kullanılır.  Alıcının birden fazla hesabının kullanılabilir olduğu durumlarda (özellikle işyeri ödemelerinde HHS nezdindeki hesap (on-us havale akışı) tercih edilmelidir. \n HHS (Gönderen Katılımcı) tarafından IBAN doğrulaması (kontrol basamağı doğrulaması) yapılır. \n \n \n >> Kolay Adres \n kolas \n Kompleks:Kolas \n K \n \n Tek seferlik ödemelerde ( kimlik bilgileri boş iletildiğinde) KOLAS nesnesi dolu iletiliyorsa; HHS tarafından TR.OHVPS.Business.InvalidContent hatası dönülmelidir \n \n \n >>> Kolas Türü \n kolasTur \n AN1 \n Z \n TR.OHVPS.DataCode.KolasTur  sıralı veri türü değerlerinden birini alır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n HHS (Gönderen FAST katılımcısı) tarafından KOLAS Servisine yapılan sorguda girdi olarak kullanılır. \n \n \n >>> Kolas Değeri \n kolasDgr \n AN7..50 \n Z \n Müşterinin eklediği, HHS (FAST katılımcısı) tarafından doğrulanmış Kolay Adres değeridir. Alabileceği değerler BKM “Kolay Adresleme Sistemi Uygulama Kuralları” belgesinde tanımlıdır.  Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n HHS (Gönderen FAST katılımcısı) tarafından KOLAS Servisine yapılan sorguda girdi olarak kullanılır. \n \n \n > Karekod \n kkod \n Kompleks:Karekod \n K \n \n \n \n \n >> Akış Türü \n aksTur \n AN2 \n Z \n TR.OHVPS.DataCode.KareKodAksTur  sıralı veri değerlerinden birini alır. Kolay Adresi Sistemi ile birlikte kullanılmaz. \n \n \n \n >> Referansı \n kkodRef \n AN1..12 \n K \n Karekod referans numarasını  gösterir. Okunan karekodda referans değeri varsa kullanılması zorunludur.  Karekod ilke ve kurallar belgesinde tanımlandığı şekilde kullanılması gerekmektedir.  Kolay Adresi Sistemi ile birlikte kullanılmaz. \n \n \n \n >> Üretici Kodu \n kkodUrtcKod \n AN4 \n Z \n Karekod üreticisinin kodu.  Ödeme Hizmeti Sağlayıcıları ve TCMB tarafından uygun görülen ödeme sistemi işleticisi TR Karekod üretebilmek için BKM’ye kayıt başvurusu yaparak karekod üretici kodu alabileceklerdir. Bankalar EFT kodlarını kullanacak olup ayrıca kayıt yaptırmalarına gerek bulunmamaktadır. 4 haneden kısa değerlerin sol tarafı ’0’ karakteri ile tamamlanmalıdır. \n \n \n \n > Ödeme Ayrıntıları \n odmAyr \n Kompleks: OdemeAyrintilari \n Z \n \n \n \n \n >> Ödeme Kaynağı \n odmKynk \n AN1 \n Z \n Ödemenin başlatıldığı kaynağı belirtir.  TR.OHVPS.DataCode.OdemeKaynak  sıralı veri veri değerlerinden “O” değeri atanarak iletilmelidir. “O” değeri “Açık bankacılık aracılığı ile gönderilen ödemelerde kullanılır.” anlamını taşımaktadır. \n HHS, YÖS'ün API deseninde \"O\" kodunu ilettiğini kontrol eder. \n \n \n >> Ödeme Amacı \n odmAmc \n AN2 \n Z \n TR.OHVPS.DataCode.OdemeAmaci  sıralı veri değerlerinden birini alır. Karekod akışında, FAST Karekod Veri Organizasyonundaki 62-08: alanında tanımlı Ödeme Amacı verisi kullanılır. \n HHS geçerli bir Ödeme Amacı kodu olduğunu kontrol eder. \n \n \n >> Referans Bilgisi \n refBlg \n AN1..140 \n K \n Ödemeye özel  Referans Bilgisi  alanıdır. Karekod işlemi değil ise zorunludur.  -\tKişiden kişiye fon aktarımlarında: Gün içerisinde ÖHK özelinde, her işleme özel biricik olarak oluşturulan referans bilgisidir.  Karekod P2P akışı için referans bilgisi (Karekod referans numarası değil, işleme özel üretilecek referans bilgisidir.) YÖS tarafından atanacaktır.   -\tE-ticaret işlemlerinde sipariş/takip numarası/müşteri/abone numarası  -\tİşyeri Ödemesi Karekod akışında, FAST Karekod Veri Organizasyonundaki  -\t62-01: alanında tanımlı Fatura Numarası   -\t62-06: alanında tanımlı Müşteri Numarası   verilerinden biri kullanılır. \n YÖS bu değeri ÖHK’yı HHS’ye yönlendirmeden önceki ekranda göstermeli, ve HHS bu değeri GKD için kullandığı önyüzünde “işlem doğrulama kodunun” bir unsuru olarak yine ÖHK’ya göstermelidir. \n \n \n >> Açıklama \n odmAcklm \n AN1..50 \n İ \n ÖBHS’nin ÖHK’dan aldığı ya da kendisinin atadığı işlem açıklaması bilgisi. \n \n \n \n > ÖBHS Masraf Tutarı \n obhsMsrfTtr \n Kompleks:Tutar \n İ \n API İlke ve Kuralları 1.0 sürümünde bu nesnenin API deseninde gönderilmemesi gerekmektedir. \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para birimi (TRY, USD, EUR vb.). \n \n \n \n >> Tutar \n ttr \n AN1..24 \n Z \n ÖBHS’nin işlemle ilgili ÖHK’nın borçlandırılmasını belirttiği masraf tutarı. İşlem Tutarı ile aynı para biriminde olmalıdır.   Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n \n \n \n İşyeri Ödeme Bilgileri \n isyOdmBlg \n Kompleks:IsyeriOdemeBilgileri \n İ \n İşyeri ödemelerinde kullanılabilecek alanlardır. Karekodlu işyeri ödemesi akışında bu alanlar dolu geldiği için isteğe bağlı olarak gönderilebilir. isyOdmBlg alanlarının en az birinin dolu olması durumunda istekte yer alır.  İşyeri Ödeme Bilgileri, YÖS uygulama önyüzünde ÖHK’nın bildiği ve girişi yapılması beklenen bir bilgi olmamalıdır. YÖS tarafından sistemsel olarak doldurulması gereklidir. \n \n \n \n > İşyeri Kategori Kodu \n isyKtgKod \n AN4 \n İ \n İşlemin, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). Ödeme Amacı = ‘06’ ya da ‘04’ olan ödeme işlemleri için doldurulabilir.  4 karakterden küçük değerlerin başına 0 eklenerek iletilmesi gereklidir. \n \n \n \n > Alt İşyeri Kategori Kodu \n altIsyKtgKod \n AN4 \n İ \n İşlem alt işyerinden gerçekleştiriliyorsa, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). 4 karakterden küçük değerlerin başına 0 eklenerek iletilmesi gereklidir. \n \n \n \n >Üye İş Yeri Tekil Kimlik \n genelUyeIsyeriNo \n AN8 \n İ \n İşyeri kayıt sisteminde kayıtlı İşyeri için BKM tarafından üretilmiş olan genel işyeri numarasıdır (GlobalMerchantId) 8 haneden küçük gönderiminde başa ‘0’ eklenmelidir. Örnek değer ‘01630618’ \n  BAŞARILI YANIT: \n POST işleminin RESPONSE gövdesini (BODY) oluşturan “OdemeEmriRizasi” nesnesi Tablo-8’deki parametrelerden oluşur: \n Tablo 8: “OdemeEmriRizasi” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n \n \n \n \n Riza Bilgileri \n rzBlg \n Kompleks: RizaBilgileri \n Z \n \n \n \n > Rıza No \n rizaNo \n AN1..128 \n Z \n OdemeEmriRızasi nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n > Oluşturma Zamanı \n olusZmn \n ISODateTime \n Z \n OdemeEmriRizasi nesnesinin oluşturulma zamanı \n \n \n > Güncellenme Zamanı \n gnclZmn \n ISODateTime \n Z \n OdemeEmriRizasi nesnesinin güncellenme zamanı \n \n \n > Rıza Durumu \n rizaDrm \n AN1 \n Z \n TR.OHVPS.DataCode.RizaDurumu  sıralı veri tipini değerlerinden birini alır. \n \n \n > Rıza Iptal Detay Kodu \n rizaIptDtyKod \n AN2 \n K \n Rıza durumunun iptal olduğu durumda zorunludur. Alabileceği değerler 4. Bölümde detaylandırılmıştır. \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n > Yetkilendirme Yöntemi \n yetYntm \n AN1 \n Z \n TR.OHVPS.DataCode.GkdTur  sıralı veri türü değerlerinden birini alır. \n \n \n > Yönlenme Adresi \n yonAdr \n AN1..1024 \n K \n Yönlendirmeli güçlü kimlik doğrulama için zorunlu. \n \n \n > Bildirim Adresi \n bldAdr \n AN1..1024 \n K \n Ayrık güçlü kimlik doğrulama için zorunlu. \n \n \n > HHS Yönlenme Adresi \n hhsYonAdr \n AN1..1024 \n K \n GKD doğrulama bilgilerinin girilebilmesi için uygulamadan açılacak yönlendirme sayfasının adresi \n \n \n > Yetkilendirme Tamamlanma Zamanı \n yetTmmZmn \n ISODateTime \n Z \n Yetkilendirme akışının tamamlanması gereken son zamanı gösterir.   HHS tarafından maksimum 5 dk içinde işlem tamamlanacak şekil zaman damgası oluşturulur. Zaman aşımı olduğunda HHS’nin GKD’ye izin vermeyecek şekilde hata mesajı vermesi gerekmektedir.  Rıza durumu Yetkilendirildi statüsüne geçene kadarki süredir. \n \n \n Ödeme Başlatma \n odmBsltm \n Kompleks: OdemeBaslatma \n Z \n \n \n \n > Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n >> Kimlik Türü \n kmlkTur \n AN1 \n K \n TR.OHVPS.DataCode.KimlikTur  sıralı veri türü değerlerinden birini alır. \n \n \n >> Kimlik Verisi \n kmlkVrs \n AN1..30 \n K \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır. TR.OHVPS.DataCode.KimlikTur  değerine göre uzunluk ve formatı değişir. \n \n \n >> Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür. TR.OHVPS.DataCode.KurumKimlikTur  sıralı veri türü değerlerinden birini alır. \n \n \n >> Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.   TR.OHVPS.DataCode.KurumKimlikTur  değerine göre uzunluk ve formatı değişir. \n \n \n >> Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur  sıralı veri türü değerlerinden birini alır  (B: Bireysel, K:Kurumsal) \n \n \n > İşlem Tutarı \n islTtr \n Kompleks:Tutar \n Z \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para Birimi.  Karekod akışında, FAST Karekod Veri Organizasyonundaki  53: (Para Birimi)  alanında tanımlı Para Birimi verisi kullanılır. \n \n \n >> Tutar \n ttr \n AN1..24 \n Z \n ÖBHS'nin ön yüzde kullanıcıdan teyit aldığı tutar.   Karekod akışında, FAST Karekod Veri Organizasyonundaki  54: (Tutar)  alanında tanımlı Tutar verisi kullanılır.   Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n \n \n > Gönderen \n gon \n Kompleks:Hesap \n İ \n \n \n \n >> Unvan \n unv \n AN3..140 \n İ \n Gönderenin unvanıdır.  HHS, bu bilgiyi ÖBHS sisteminden gelen veri yerine FAST’a iletirken kendi sisteminden alabilir. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n İ \n ÖBHS'nin ön yüzünden daha önce kayıt altına alınmış hesaplar arasından seçtirdiği veya müşteriye girdiği IBAN’dır.  ÖBHS tarafından iletilmediği durumda, gönderen hesap bilgisini müşteri tarafından HHS’nin dijital kanalında GKD sonrasında seçilebilir. Bu amaçla ÖBHS arayüzünde HHS seçtirilmelidir.   GKD sonrası HHS ekranında seçilen Hesap Numarası POST işleminin yanıtında dönülemez ancak isteğe bağlı GET sorgusu ile dönülebilir.    Hesap Referansı kullanılıyorsa Hesap Numarası kullanılmayabilir. \n \n \n >> Hesap Referansı \n hspRef \n AN5..40 \n İ \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid). YÖS bazında farklılaşması gerekmez.  ÖBHS’nin aynı zamanda HBHS olduğu durumda müşteri rızası tesis edilmiş bir hesabın referansı üzerinden de ödeme başaltılabilir.   GKD sonrası HHS ekranında seçilen Hesap Referansı POST işleminin yanıtında dönülemez ancak isteğe bağlı GET sorgusu ile dönülebilir.    Hesap Numarası kullanılıyorsa Hesap Referansı kullanılmayabilir. \n \n \n > Alıcı \n alc \n Kompleks:Hesap \n Z \n \n \n \n >> Unvan \n unv \n AN3..140 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen adres kaydı yaptırmış olan alıcının maskeli ad-soyadı veya maskeli ticari unvan bilgisidir. Kolas’tan dönen “account owner” alanı kullanılmalıdır. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen unvan bilgisidir. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n Z \n ÖBHS tarafından istek mesajında iletilip doğrulanan veya Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen alıcı maskeli IBAN bilgisidir. \n \n \n >> Kolay Adres \n kolas \n Kompleks:Kolas \n K \n \n \n \n >>> Kolas Türü \n kolasTur \n AN1 \n Z \n TR.OHVPS.DataCode.KolasTur  sıralı veri türü değerlerinden birini alır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n \n \n >>> Kolas Değeri \n kolasDgr \n AN7..50 \n Z \n Müşterinin eklediği, HHS (FAST katılımcısı) tarafından doğrulanmış Kolay Adres değeridir. Alabileceği değerler BKM “Kolay Adresleme Sistemi Uygulama Kuralları” belgesinde tanımlıdır.  Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n \n \n >>> Kolas Referans Numarası \n kolasRefNo \n N12 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı KOLAS tarafından ilgili sorguya özel olarak üretilmiş referans numarasıdır. \n \n \n >>> Kolas Hesap Türü \n kolasHspTur \n AN1 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı hesap türü bilgisidir:   TR.OHVPS.DataCode.KolasHspTur  sıralı veri değerlerinden birini alır. \n \n \n > Karekod \n kkod \n Kompleks:Karekod \n K \n \n \n \n >> Akış Türü \n aksTur \n AN2 \n Z \n TR.OHVPS.DataCode.KareKodAksTur  sıralı veri değerlerinden birini alır. Kolay Adresi Sistemi ile birlikte kullanılmaz. \n \n \n >> Referansı \n kkodRef \n AN1..12 \n K \n Karekod referans numarasını  gösterir. \n \n \n >> Üretici Kodu \n kkodUrtcKod \n AN4 \n Z \n Karekod üreticisinin kodu.  Ödeme Hizmeti Sağlayıcıları ve TCMB tarafından uygun görülen ödeme sistemi işleticisi TR Karekod üretebilmek için BKM’ye kayıt başvurusu yaparak karekod üretici kodu alabileceklerdir. Bankalar EFT kodlarını kullanacak olup ayrıca kayıt yaptırmalarına gerek bulunmamaktadır. 4 haneden kısa değerlerin sol tarafı ’0’ karakteri ile tamamlanmalıdır. \n \n \n > Ödeme Ayrıntıları \n odmAyr \n Kompleks: OdemeAyrintilari \n Z \n \n \n \n >> Ödeme Kaynağı \n odmKynk \n AN1 \n Z \n Ödemenin başlatıldığı kaynağı belirtir.  TR.OHVPS.DataCode.OdemeKaynak  sıralı veri değerlerinden “O” değerini alır. “O” değeri “Açık bankacılık aracılığı ile gönderilen ödemelerde kullanılır.” anlamını taşımaktadır. \n \n \n >> Ödeme Amacı \n odmAmc \n AN2 \n Z \n TR.OHVPS.DataCode.OdemeAmaci  sıralı veri değerlerinden birini alır. Karekod akışında, FAST Karekod Veri Organizasyonundaki 62-08: alanında tanımlı Ödeme Amacı verisi kullanılır. \n \n \n >> Referans Bilgisi \n refBlg \n AN1..140 \n K \n Ödemeye özel  Referans Bilgisi  alanıdır. Karekod işlemi değil ise zorunludur.  -\tKişiden kişiye fon aktarımlarda: Gün içerisinde ÖHK özelinde, her işleme özel biricik olarak oluşturulan referans bilgisidir.  Karekod P2P akışı için referans bilgisi (Karekod referans numarası değil, işleme özel üretilecek referans bilgisidir.) YÖS tarafından atanacaktır.  -\tE-ticaret işlemlerinde sipariş/takip numarası/müşteri/abone numarası  - İşyeri Ödemesi Karekod akışında, FAST Karekod Veri Organizasyonundaki  -\t62-01: alanında tanımlı Fatura Numarası   -\t62-06: alanında tanımlı Müşteri Numarası   verilerinden biri kullanılır. \n \n \n >> Açıklama \n odmAcklm \n AN1..50 \n İ \n ÖBHS’nin ÖHK’dan aldığı ya da kendisinin atadığı işlem açıklaması bilgisi. \n \n \n >> ÖHK Mesaj Alanı \n ohkMsj \n AN1..200 \n İ \n HHS’nin ÖHK’ya göstermek üzere ilettiği mesaj. \n \n \n >> Ödeme Sistemi \n odmStm \n AN1 \n Z \n TR.OHVPS.DataCode.OdemeSistemi  sıralı veri değerlerinden birini alır. \n \n \n >> Beklenen Ödeme Zamanı \n bekOdmZmn \n ISODateTime \n K \n İşlemin yönlendirildiği ödeme sistemi PÖS ise ve PÖS işlem saatleri dışında ise işlemin yapılabileceği ilk zaman bilgisidir. Bu alan ileri vadeli ödemeler için düşünülmüştür. İlk fazda doldurulmasına gerek olmadığı düşünülmektedir. \n \n \n > ÖBHS Masraf Tutarı \n obhsMsrfTtr \n Kompleks:Tutar \n İ \n API İlke ve Kuralları 1.0 sürümünde bu nesnenin API deseninde gönderilmemesi gerekmektedir. \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para birimi (TRY, USD, EUR vb.). \n \n \n >> Tutar \n ttr \n AN1..24 \n Z \n ÖBHS’nin işlemle ilgili ÖHK’nın borçlandırılmasını belirttiği masraf tutarı. İşlem Tutarı ile aynı para biriminde olmalıdır.   Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n \n \n > HHS Masraf Tutarı \n hhsMsrfTtr \n Kompleks:Tutar \n İ \n API İlke ve Kuralları 1.0 sürümünde bu nesnenin API deseninde gönderilmemesi gerekmektedir. \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para birimi (TRY, USD, EUR vb.). \n \n \n >> Tutar \n ttr \n AN1..24 \n Z \n HHS’nin işlemle ilgili ÖHK’nın borçlandırılmasını belirttiği masraf tutarı. İşlem Tutarı ile aynı para biriminde olmalıdır.   Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n \n \n İşyeri Ödeme Bilgileri \n isyOdmBlg \n Kompleks:IsyeriOdemeBilgileri \n İ \n İşyeri ödemelerinde kullanılabilecek alanlardır. Karekodlu işyeri ödemesi akışında bu alanlar dolu geldiği için isteğe bağlı olarak gönderilebilir. isyOdmBlg alanlarının en az birinin dolu olması durumunda yanıtta yer alır. \n \n \n > İşyeri Kategori Kodu \n isyKtgKod \n AN4 \n İ \n İşlemin, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). Ödeme Amacı = ‘06’ ya da ‘04’ olan ödeme işlemleri için doldurulabilir. \n \n \n > Alt İşyeri Kategori Kodu \n altIsyKtgKod \n AN4 \n İ \n İşlem alt işyerinden gerçekleştiriliyorsa, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). \n \n \n >Üye İş Yeri Tekil Kimlik \n genelUyeIsyeriNo \n AN8 \n İ \n İşyeri kayıt sisteminde kayıtlı İşyeri için BKM tarafından üretilmiş olan genel işyeri numarasıdır (GlobalMerchantId) 8 haneden küçük gönderiminde başa ‘0’ eklenmelidir. Örnek değer ‘01630618’ \n 6.3.\tADIM 2- Ödeme Emri Rızasının Yetkilendirilmesi \n   \n Şekil 6: Ödeme Emri Rızasının Yetkilendirilmesi \n ÖBHS, ÖHK’nın ödeme emrini yetkilendirmesi isteğini iletir. Ödeme emrinin yetkilendirilmesi, HHS tarafından gerçekleştirilen Yönlendirme veya Ayrık GKD yöntemiyle yapılır. \n \n \n Yönlendirmeli doğrulama akışında , ÖBHS ÖHK’yı HHS’ye yönlendirir. \n \n ÖBHS tarafından yönlendirme, bir önceki adımdaki RizaNo’yu içerir. \n Yönlendirmenin RizaNo’yu içermesi sayesinde, HHS hangi ödeme emriyle ilişkili olarak yönlendirme yapıldığını ilişkilendirebilir. \n HHS, ÖHK için GKD sürecini işletir. \n \n ÖHK’yı doğrularsa, \n \n ÖHK -bir önceki adımda seçmediyse- borçlu hesabını seçer. \n HHS, ödeme emri rıza kaynağının durumunu “Yetkilendirildi” olarak günceller. \n HHS, ÖHK’yı “olumlu yönlendirme akışı” ile ÖBHS tarafından tanımlanan yönlendirme adresine yönlendirir: \n \n \n \n yonAdr?rizaDrm=Y&yetKod=xx&rizaNo=yy&rizaTip=O&drmKod=zzz\n \n ÖHK’yı doğrulayamazsa, \n1. HHS, ödeme emri rıza kaynağının durumunu “Yetki İptal” olarak günceller. \n2. HHS, ÖHK’yı “olumsuz yönlendirme akışı” ile ÖBHS tarafından tanımlanan yönlendirme adresine yönlendirir: \n yonAdr?rizaDrm=I&rizaNo=yy&rizaTip=O&drmKod=zzz\n \n HHS tarafında oluşabilecek bir hata durumunun YÖS’e aktarılması gerektiği durumlar olabilir. Bu durumda yonlendirme adresinde hata kodu parametresi zorunlu olarak iletilmelidir. \nHata açıklamalarının neler olabileceği ve YÖS’ün kendi uygulamasında bu hatayı ne şekilde göstereceği aşağıda tariflenmiştir. \n yonAdr?rizaDrm=I&rizaNo=yy&rizaTip=O&rizaIptDtyKod=11&drmKod=zzz\n \n URL’de iletilen “Rıza İptal Detay Kodu” Rıza durumları bölümünde (4. Bölüm) belirtilen hata kodları ile aynı olacak şekilde tasarlanmıştır. GKD sırasında yapılması gereken kontroller 5.3 bölümünde detaylandırılmıştır. \n \n Ayrık doğrulama akışında , HHS, ÖHK’nın ödeme emrini başlattığı uygulamadan farklı olabilecek bir “doğrulama” uygulamasında işlemi doğrulamasını ister.\n \n Ayrık akış ÖBHS’nin farklı bir kanal kullanarak yetkilendirme isteği göndermesiyle başlatılır. \n Bu yetkilendirme isteği, yetkilendirilecek ödeme emri rızasının eşleştirileceği ÖHK’nın bulunması için ilgili veriyi taşır. \n HHS, ÖHK’yı doğrular. \n ÖHK -bir önceki adımda seçmediyse- borçlandırılacak hesabını seçer. \n HHS, ödeme emri rıza kaynağının durumunu “Yetkilendirildi” olarak günceller. \n \n \n \n Başarılı GKD sonrasında (rizaDrm=’Y’) ilgili rıza nesnesi için (belirli bir rizaNo) yetkilendirme kodunun (yetKod) alınmasının ardından erişim belirteci erişim adresine POST çağrısı yapılarak yetkilendirme kodu karşılığında erişim belirteci ve yenileme belirteci alınır. POST /erişim-belirteci erişim noktası EK-3’te açıklanmıştır. \n Erişim belirteci alındıktan sonra; HHS, ödeme emri rıza kaynağının durumunu “Yetki Kullanıldı” olarak günceller. \n 6.4.\tADIM 2.1 – Ödeme Emri Rızasının Sorgulanması (isteğe bağlı) \n   \n Şekil 7: “odemeEmriRizasi” nesnesinin sorgulanması (isteğe bağlı) \n GKD işleminin başarıyla tamamlanıp Ödeme Emri Rızasının yetkilendirilmesi esnasında, gönderen hesap seçiminin HHS ekranında yapıldığı durumlar olabilir. Bu durumlarda ödeme emri isteğinde gönderen hesap bilgileri alanının zorunlu olması nedeniyle,  OdemeEmriRizasi  nesnesi sorgulanarak gönderen hesap bilgileri (hesap numarası ve/veya hesap referansı) alınmalıdır. HHS, “ ADIM 2 -Ödeme Emri Rızasının Yetkilendirilmesi ” akışında ÖHK’nın hesapları arasında seçim yapmasını ve seçilen hesap bilgisinin  OdemeEmriRizasi  nesnesine işler. \n GET /odeme-emri-rizasi/{RizaNo} \n ÖBHS, mevcut durumunu kontrol etmek için, oluşturulan bir  OdemeEmriRizasi  kaynağının durumunu isteğe bağlı olarak alabilir. \n Durum \n OdemeEmriRizasi  kaynağı için kullanılabilecek durum göstergeleri şu şekildedir: \n \n Yetki Bekleniyor \n Yetkilendirildi \n Yetki Kullanıldı \n Yetki Ödeme Emrine Dönüştü \n Yetki Sonlandırıldı \n Yetki İptal \n \n Ödeme emri rıza durum değişiklikleri 4.2 bölümünde detaylandırılmıştır. \n BAŞARILI YANIT: \n GET /odeme-emri-rizasi/{RizaNo}  yanıtının (RESPONSE) gövdesinde (BODY)  “OdemeEmriRizasiİstegi” nesnesi kullanılır. İstek başarıyla sonuçlanırsa HHS kaynak sunucusunda Tablo-8’de yer alan parametreleri içeren “OdemeEmriRizasi” oluşturulur. \n Gönderen Hesap Bilgisinin, ADIM 2 (Ödeme Emri Rızasının Yetkilendirilmesi) sonrasında HHS ekranından seçildiği akışta “OdemeEmriRizasi” nesnesi güncellenir ve ÖBHS  GET /odeme-emri-rizasi/{RizaNo}  isteği yaparak güncel gönderen hesap bilgisi bilgisini de içeren “OdemeEmriRizasi” nesnesini çekmelidir. \n Çerçeve sözleşme kapsamında olmayan tek seferlik ödeme işlemlerinde, Kimlik Türü ve Kimlik Verisi bilgilerinin ödeme emri rızası sırasında gönderimi zorunlu değildir. Başarılı GKD sonrası, yani erişim belirteci alındığında, ödeme emri oluşmadan önce, YÖS’ün ödeme emri rızasını sorgulayarak bu bilgileri alması ve ödeme emrini oluştururken Kimlik Türü ve Kimlik Verisi alanlarını dolu olarak göndermesi beklenmektedir.  Ancak rıza durumu “Yetki Bekleniyor - B”, “Yetkilendirildi - Y” ve “Yetki İptal - I” statülerinde ise, ödeme emri rızası sorgulamasında, HHS’nin Kimlik Türü ve Kimlik Verisi bilgisini YÖS ile paylaşmaması gerekmektedir. \n 6.5.\tADIM 3- Ödeme Emrinin Oluşturulması \n   \n Şekil 8: Ödeme Emrinin Oluşturulması \n POST /odeme-emri \n \n ÖHK’nın Güçlü Kimlik Doğrulama ile işlemi yetkilendirmesi sonrasında, ÖBHS OdemeEmri kaynağını oluşturur. \n Ödeme emri (OdemeEmri) uygun ödeme kaynağına POST isteği yapılarak başlatılır.\n \n POST HHS tarafından işlenir: RizaDurumu “Yetki Kullanıldı” ise işleme başlanır. \n POST /odeme-emri-rizasi ile POST /odeme-emri isteklerinde istek alanların aynı olması beklenmektedir. HHS tarafından kontrolü sağlanmalıdır.POST verisindeki Gönderen Hesap Numarası ve Alıcı Hesap Numarasının aynı bankaya aitse HAVALE değilse FAST veya PÖS iş akışına geçilir. \n POST verisinin modele göre kontrolü yapılır (alan kontrolleri) \n POST verisinin mantıksal kontrolleri yapılır (IBAN kontrolü, çapraz alan kontroller) \n OdemeEmriDurumu “Gerçekleşti” / “Gönderildi” / “Gerçekleşmedi” olarak güncellenir. \n \n \n POST başarılı olursa, içerisinde OdemeEmriNo ve OdemeEmriDurumu değişkenleri de bulunan OdemeEmri nesnesi ÖBHS’ye döner ve RizaDurumu değişkenin değeri “Yetki Ödeme Emrine Dönüştü” olarak güncellenir. \n \n BAŞARILI İSTEK: \n Tablo 9: “OdemeEmriIstegi” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n HHS tarafından ödeme emri oluşturulması sırasında yapılması gereken kontrol ve işlemler \n FAST A01 PÖS M01 mesaj mapping \n \n \n \n \n Riza Bilgileri \n rzBlg \n Kompleks: RizaBilgileri \n Z \n \n \n \n \n \n > Rıza No \n rizaNo \n AN1..128 \n Z \n OdemeEmriRızasi nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n \n \n > Oluşturma Zamanı \n olusZmn \n ISODateTime \n Z \n OdemeEmriRizasi nesnesinin oluşturulma zamanı \n \n \n \n \n > Rıza Durumu \n rizaDrm \n AN1 \n Z \n TR.OHVPS.DataCode.RizaDurumu  sıralı veri tipini değerlerinden birini alır. \n \n \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n HHS, hhsKod’un kendisine ait olduğunu ve istek başlığındaki x-aspsp-code değeri ile aynı olduğunu kontrol eder.  Hata durumunda  TR.OHVPS.Connection.InvalidASPSP  hata kodunu döner. \n Gönderen katılımcı kodu (yani bankanın FAST/PÖS’teki Katılımcı kodu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n HHS, yosKod’un geçerli bir Ödeme Hizmeti Sağlayıcısı Kodu olduğunu ve istek başlığındaki x-tpp-code değeri ile aynı olduğunu kontrol eder.  Hata durumunda  TR.OHVPS.Connection.InvalidTPP  hata kodunu döner. \n YosKod \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n \n \n > Yetkilendirme Yöntemi \n yetYntm \n AN1 \n Z \n TR.OHVPS.DataCode.GkdTur  sıralı veri türü değerlerinden birini alır. \n \n \n \n \n > Yönlenme Adresi \n yonAdr \n AN1..1024 \n K \n Yönlendirmeli güçlü kimlik doğrulama için zorunlu. \n \n \n \n \n > Bildirim Adresi \n bldAdr \n AN1..1024 \n K \n Ayrık güçlü kimlik doğrulama için zorunlu. \n \n \n \n \n > HHS Yönlenme Adresi \n hhsYonAdr \n AN1..1024 \n K \n GKD doğrulama bilgilerinin girilebilmesi için uygulamadan açılacak yönlendirme sayfasının adresi \n \n \n \n \n > Yetkilendirme Tamamlanma Zamanı \n yetTmmZmn \n ISODateTime \n Z \n Yetkilendirme akışının tamamlanması gereken son zamanı gösterir.   Rıza durumu Yetkilendirildi statüsüne geçene kadarki süredir. \n \n \n \n \n Ödeme Başlatma \n odmBsltm \n Kompleks: OdemeBaslatma \n Z \n \n \n \n \n \n > Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n \n \n >> Kimlik Türü \n kmlkTur \n AN1 \n Z \n TR.OHVPS.DataCode.KimlikTur  sıralı veri türü değerlerinden birini alır. \n Çerçeve sözleşme kapsamındaki ödemelerde kullanımı zorunludur. Ödeme Emri Rizası Nesnesindeki Kimlik Numarası Türü verisi ile aynı olmalıdır. Kurum adına yapılan (ticari) ödemelerde, kurum adına işlem yapan kullanıcının kimlik türünün bu alanda gönderilmesi zorunludur. \n \n \n \n >> Kimlik Verisi \n kmlkVrs \n AN1..30 \n Z \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır. TR.OHVPS.DataCode.KimlikTur  değerine göre uzunluk ve formatı değişir. \n Çerçeve sözleşme kapsamındaki ödemelerde kullanımı zorunludur. HHS, ÖBHS tarafından iletilmesi durumunda Kimlik Verisi üzeriden çapraz kontroller uygulamalı ve Kimlik Verisini temel alarak GKD gerçekleştirmelidir. Ödeme Emri Rizası Nesnesindeki Kimlik Numarası verisi ile aynı olmalıdır. Gerçek kişi tarafından yapılan ödemelerde, 1. HHS, Gönderen Adı ve Gönderen Hesap Numarasını ödeme emri isteğinde (Havale/FAST/PÖS) gönderir. - Gönderen Adı ve diğer tüm müşteri bilgileri, Kimlik Numarası üzerinden elde edillir. Pasaport numarasına ilişkin kontroller HHS'nin halihazırda kullandığı veri, akış ve tabi olduğu diğer düzenlemelerdeki işleyiş ile aynı şekilde ele alınmalıdır. Kurum adına yapılan (ticari) ödemelerde, kurum adına işlem yapan kullanıcının kimlik verisi bu alanda gönderilebilmesi zorunludur. \n GonKimN / Psp \n \n \n >> Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür. TR.OHVPS.DataCode.KurumKimlikTur  sıralı veri türü değerlerinden birini alır. \n Kurum adına yapılan (ticari) ödemelerde kullanımı zorunludur. Ödeme Emri Rizası Nesnesindeki Kurum Kimlik Türü verisi ile aynı olmalıdır. \n \n \n \n >> Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.   TR.OHVPS.DataCode.KurumKimlikTur  değerine göre uzunluk ve formatı değişir. \n Kurum adına yapılan (ticari) ödemelerde kullanımı zorunludur. Ödeme Emri Rizası Nesnesindeki Kurum Kimlik Verisi ile aynı olmalıdır. \n GonKimN / VKN \n \n \n >> Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur  sıralı veri türü değerlerinden birini alır  (B: Bireysel, K:Kurumsal) \n Kurum adına yapılan ödemelerde K değerini alır. Kurum Kimlik Türü ve Kurum Kimlik Verisi alanlarının giilmiş olduğu çapraz olarak kontrol edilir.  Ödeme Emri Rizası Nesnesindeki ÖHK Türü ile aynı olmalıdır. \n \n \n \n > İşlem Tutarı \n islTtr \n Kompleks:Tutar \n Z \n \n \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para Birimi.  Karekod akışında, FAST Karekod Veri Organizasyonundaki  53: (Para Birimi)  alanında tanımlı Para Birimi verisi kullanılır. \n Ödeme Emri Rizası Nesnesindeki Para Birimi verisi ile aynı olmalıdır. \n \n \n \n >> Tutar \n ttr \n AN1..24 \n Z \n ÖBHS'nin ön yüzde kullanıcıdan teyit aldığı tutar.   Karekod akışında, FAST Karekod Veri Organizasyonundaki  54: (Tutar)  alanında tanımlı Tutar verisi kullanılır.   Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n Ödeme Emri Rizası Nesnesindeki İşlem Tutarı verisi ile aynı olmalıdır. HHS işlem tutarı ödeme mesajında (Havale/FAST/PÖS) aynen taşınmak durumundadır. \n Ttr \n \n \n > Gönderen \n gon \n Kompleks:Hesap \n Z \n \n \n \n \n \n >> Unvan \n unv \n AN3..140 \n Z \n Gönderen kişinin ad soyad ya da ticari unvan bilgisi. \n HHS ve ÖBHS verisi tutarlı olmalıdır.  ÖBHS verisi ile HHS verisinin farklılaşması durumunun ise risk değerlendirme sistemlerine girdi olarak kullanması tavsiye edilir. \n GonAd \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n K \n ÖBHS'nin ön yüzünden seçtirdiği/kullanıcıya girdiği IBAN Hesap numarası ya da Hesap Referansı alanlarından en az birinin dolu olarak gelmesi gerekmektedir. \n Ödeme Emri Rizası Yanıtı Nesnesindeki Gönderen Hesap Numarası verisi ile aynı olmalıdır. \n GonHesN \n \n \n >> Hesap Referansı \n hspRef \n AN5..40 \n K \n ÖBHS’nin aynı zamanda HBHS olduğu durumda müşteri rızası tesis edilmiş bir hesabın referansı üzerinden de ödeme başlatılabilir. GKD sonrası HHS ekranında seçilen Hesap Referansı POST işleminin yanıtında dönülemez ancak isteğe bağlı GET sorgusu ile dönülebilir. Hesap Numarası kullanılıyorsa Hesap Referansı kullanılmayabilir. \n \n \n \n \n > Alıcı \n alc \n Kompleks:Hesap \n Z \n \n \n \n \n \n >> Unvan \n unv \n AN3..140 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen adres kaydı yaptırmış olan alıcının maskeli ad-soyadı veya maskeli ticari unvan bilgisidir. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen unvan bilgisidir. \n YÖS’ten alıcı ad soyad bilgisi geliyorsa ve HHS'nin kontrolünden başarılı bir şekilde geçti ise HHS'nin tekrar alıcı ad soyad bilgisi için giriş yaptırmasına gerek bulunmamaktadır. \n AlAd \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n Z \n Alıcının Hesap Numarası alanıdır (IBAN). Kolay Adres  sorgusunda dönülen adres kaydı yaptırmış olan alıcının maskeli IBAN bilgisidir. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen IBAN bilgisidir. Karekod akışında, FAST Karekod Veri Organizasyonundaki 30-01: alanında tanımlı İş Yeri IBAN verisi kullanılır. \n Ödeme Emri Rizası Yanıtı Nesnesindeki Alıcı Hesap Numarası verisi ile aynı olmalıdır.  Kontroller başarıyla sonuçlanırsa, bilgi FAST/PÖS AlHesN alanına doğrudan aktarır ve FAST/PÖS Alan Katılımcı Kodu (AlKK) olarak Alıcı HHS Kodu kullanılır.  KOLAS sorgusu sonucunda ödeme emrinde iletilen maskeli bilgi ile HHS’nin kendi ödeme emri rızası isteğinde tuttuğu KOLAS sorgusundan dönülen bilgi maskelenerek karşılaştırılır. Eğer aynı değilse uygun hata kodu dönülerek işlem sonlandırılır. \n AlHesN \n \n \n >> Kolay Adres \n kolas \n Kompleks:Kolas \n K \n \n \n \n \n \n >>> Kolas Türü \n kolasTur \n AN1 \n Z \n Müşterinin sorgulamak istediği Kolay Adres Tipi değeridir.  TR.OHVPS.DataCode.KolasTur  sıralı veri türü değerlerinden birini alır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n Ödeme Emri Rizası Yanıtı Nesnesindeki Kolay Adres Tipi verisi ile aynı olmalıdır. \n \n \n \n >>> Kolas Değeri \n kolasDgr \n AN7..50 \n Z \n Müşterinin eklediği, HHS (FAST katılımcısı) tarafından doğrulanmış Kolay Adres değeridir. Alabileceği değerler BKM “Kolay Adresleme Sistemi Uygulama Kuralları” belgesinde tanımlıdır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n Ödeme Emri Rizası Yanıtı Nesnesindeki Kolay Adres Değeri verisi ile aynı olmalıdır. \n FAST (KolasRef) \n \n \n >>> Kolas Referans Numarası \n kolasRefNo \n N12 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı KOLAS tarafından ilgili sorguya özel olarak üretilmiş referans numarasıdır. \n \n KolasRef ( hem FAST hem de PÖS için aynı) \n \n \n >>> Kolas Hesap Türü \n kolasHspTur \n AN1 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı hesap türü bilgisidir:   TR.OHVPS.DataCode.KolasHspTur  sıralı veri değerlerinden birini alır. \n \n \n \n \n > Karekod \n kkod \n Kompleks:Karekod \n K \n \n \n \n \n \n >> Akış Türü \n aksTur \n AN2 \n Z \n Karekod Akış Türü Karekod ödemesinin hangi akışla gerçekleştirildiğini gösterir.  Kolay Adresi Sistemi ile birlikte kullanılmaz.  01: FAST katılımcısından dinamik doğrulama hizmeti alınan işyeri ödemesi  02: FAST katılımcısından statik doğrulama hizmeti alınan işyeri ödemesi 03: Kişiden kişiye ödemeler \n Ödeme Emri Rizası Nesnesindeki Kare Kod Akış Türü verisi ile aynı olmalıdır. \n FAST: KrkdAksTur \n \n \n >> Referansı \n kkodRef \n AN1..12 \n K \n Karekod referans numarasını gösterir.  Okunan karekodda referans değeri varsa kullanılması zorunludur. Kolay Adresi Sistemi ile birlikte kullanılmaz. \n Ödeme Emri Rizası Nesnesindeki Karekod Referansı verisi ile aynı olmalıdır.  Çevrimiçi doğrulama hizmeti alınmayan statik karekodlar için Referans numarasının bulunmadığı durumlarda HHS tarafından “NONREF” ifadesi girilir. \n FAST: Karekod Referansı (KrkdRef) \n \n \n >> Üretici Kodu \n kkodUrtcKod \n AN4 \n Z \n Karekod üreticisinin kodu.  Ödeme Hizmeti Sağlayıcıları ve TCMB tarafından uygun görülen ödeme sistemi işleticisi TR Karekod üretebilmek için BKM’ye kayıt başvurusu yaparak karekod üretici kodu alabileceklerdir. Bankalar EFT kodlarını kullanacak olup ayrıca kayıt yaptırmalarına gerek bulunmamaktadır. 4 haneden kısa değerlerin sol tarafı ’0’ karakteri ile tamamlanmalıdır. \n \n \n \n \n > Ödeme Ayrıntıları \n odmAyr \n Kompleks: OdemeAyrintilari \n Z \n \n \n \n \n \n >> Ödeme Kaynağı \n odmKynk \n AN1 \n Z \n Ödemenin başlatıldığı kaynağı belirtir.  TR.OHVPS.DataCode.OdemeKaynak  sıralı veri değerlerinden “O” değeri atanarak iletilmelidir. “O” değeri “Açık bankacılık aracılığı ile gönderilen ödemelerde kullanılır.” anlamını taşımaktadır. \n Ödeme Emri Rizası Nesnesindeki Ödeme Kaynağı verisi ile aynı olmalıdır. HHS tarafından ödeme mesajında (FAST/PÖS) aynen taşınmak durumundadır. \n FAST/PÖS: OdmKynk \n \n \n >> Ödeme Amacı \n odmAmc \n AN2 \n Z \n TR.OHVPS.DataCode.OdemeAmaci  sıralı veri değerlerinden birini alır. \n Ödeme Emri Rizası Nesnesindeki Ödeme Amacı verisi ile aynı olmalıdır. HHS tarafından ödeme mesajında (FAST/PÖS) aynen taşınmak durumundadır. \n FAST (OdmAmc)/PÖS(OdmAmaci) \n \n \n >> Referans Bilgisi \n refBlg \n AN1..140 \n K \n Ödemeye özel  Referans Bilgisi  alanıdır. Karekod işlemi değil ise zorunludur.  -\tKişiden kişiye fon aktarımlarda: Gün içerisinde ÖHK özelinde, her işleme özel biricik olarak oluşturulan referans bilgisidir.  Karekod P2P akışı için referans bilgisi (Karekod referans numarası değil, işleme özel üretilecek referans bilgisidir.) YÖS tarafından atanacaktır.  -\tE-ticaret işlemlerinde sipariş/takip numarası/müşteri/abone numarası  -İşyeri Ödemesi Karekod akışında, FAST Karekod Veri Organizasyonundaki  -\t62-01: alanında tanımlı Fatura Numarası   -\t62-06: alanında tanımlı Müşteri Numarası   verilerinden biri kullanılır. \n Ödeme Emri Rizası Nesnesindeki Referans Bilgisi verisi ile aynı olmalıdır. \n RefBlg (Hem FAST hem de PÖS için aynı) \n \n \n >> Açıklama \n odmAcklm \n AN1..50 \n İ \n ÖBHS’nin ÖHK’dan aldığı ya da kendisinin atadığı işlem açıklaması bilgisi. \n \n FAST/PÖS Acklm \n \n \n >> ÖHK Mesaj Alanı \n ohkMsj \n AN1..200 \n İ \n HHS’nin ÖHK’ya göstermek üzere ilettiği mesaj. \n \n \n \n \n >> Ödeme Sistemi \n odmStm \n AN1 \n Z \n TR.OHVPS.DataCode.OdemeSistemi  sıralı veri değerlerinden birini alır. \n Ödeme Emri Rizası Nesnesindeki Ödeme Sistemi verisi ile aynı olmalıdır. \n \n \n \n >> Beklenen Ödeme Zamanı \n bekOdmZmn \n ISODateTime \n K \n İşlemin yönlendirildiği ödeme sistemi PÖS ise ve PÖS işlem saatleri dışında ise işlemin yapılabileceği ilk zaman bilgisi \n \n \n \n \n > ÖBHS Masraf Tutarı \n obhsMsrfTtr \n Kompleks:Tutar \n İ \n API İlke ve Kuralları 1.0 sürümünde bu nesnenin API deseninde gönderilmemesi gerekmektedir. \n \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para birimi (TRY, USD, EUR vb.). \n Ödeme Emri Rizası Nesnesindeki ÖBHS Masraf Para Birimi verisi ile aynı olmalıdır. \n \n \n \n >> Tutar \n ttr \n AN1..24 \n Z \n ÖBHS’nin işlemle ilgili ÖHK’nın borçlandırılmasını belirttiği masraf tutarı. İşlem Tutarı ile aynı para biriminde olmalıdır.   Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n Ödeme Emri Rizası Nesnesindeki ÖBHS Masraf Tutarı verisi ile aynı olmalıdır. \n \n \n \n > HHS Masraf Tutarı \n hhsMsrfTtr \n Kompleks:Tutar \n İ \n API İlke ve Kuralları 1.0 sürümünde bu nesnenin API deseninde gönderilmemesi gerekmektedir. \n \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para birimi (TRY, USD, EUR vb.). \n Ödeme Emri Rizası Nesnesindeki HHS Masraf Para Birimi verisi ile aynı olmalıdır. \n \n \n \n >> Tutar \n ttr \n AN1..24 \n Z \n HHS’nin işlemle ilgili ÖHK’nın borçlandırılmasını belirttiği masraf tutarı. İşlem Tutarı ile aynı para biriminde olmalıdır.   Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n Ödeme Emri Rizası Nesnesindeki HHS Masraf Tutarı verisi ile aynı olmalıdır. \n \n \n \n İşyeri Ödeme Bilgileri \n isyOdmBlg \n Kompleks:IsyeriOdemeBilgileri \n İ \n İşyeri ödemelerinde kullanılabilecek alanlardır. Karekodlu işyeri ödemesi akışında bu alanlar dolu geldiği için isteğe bağlı olarak gönderilebilir. isyOdmBlg alanlarının en az birinin dolu olması durumunda istekte yer alır.  İşyeri Ödeme Bilgileri, YÖS uygulama önyüzünde ÖHK’nın bildiği ve girişi yapılması beklenen bir bilgi olmamalıdır. YÖS tarafından sistemsel olarak doldurulması gereklidir. \n \n \n \n \n > İşyeri Kategori Kodu \n isyKtgKod \n AN4 \n İ \n İşlemin, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). Ödeme Amacı = ‘06’ ya da ‘04’ olan ödeme işlemleri için doldurulabilir. 4 karakterden küçük değerlerin başına 0 eklenerek iletilmesi gereklidir. \n \n \n \n \n > Alt İşyeri Kategori Kodu \n altIsyKtgKod \n AN4 \n İ \n İşlem alt işyerinden gerçekleştiriliyorsa, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). 4 karakterden küçük değerlerin başına 0 eklenerek iletilmesi gereklidir. \n \n \n \n \n >Üye İş Yeri Tekil Kimlik \n genelUyeIsyeriNo \n AN8 \n İ \n İşyeri kayıt sisteminde kayıtlı İşyeri için BKM tarafından üretilmiş olan genel işyeri numarasıdır (GlobalMerchantId) 8 haneden küçük gönderiminde başa ‘0’ eklenmelidir. Örnek değer ‘01630618’ \n \n \n \n \n \n BAŞARILI YANIT: \n POST işleminin RESPONSE gövdesini (BODY) oluşturan “OdemeEmri” nesnesi Tablo-10’daki parametrelerden oluşur: \n Tablo 10: “OdemeEmri” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n \n \n \n \n Riza Bilgileri \n rzBlg \n Kompleks: RizaBilgileri \n Z \n \n \n \n > Rıza No \n rizaNo \n AN1..128 \n Z \n OdemeEmriRızasi nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n > Oluşturma Zamanı \n olusZmn \n ISODateTime \n Z \n OdemeEmriRizasi nesnesinin oluşturulma zamanıdır. \n \n \n > Rıza Durumu \n rizaDrm \n AN1 \n Z \n TR.OHVPS.DataCode.RizaDurumu  sıralı veri tipini değerlerinden birini alır. \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n > Yetkilendirme Yöntemi \n yetYntm \n AN1 \n Z \n TR.OHVPS.DataCode.GkdTur  sıralı veri türü değerlerinden birini alır. \n \n \n > Yönlenme Adresi \n yonAdr \n AN1..1024 \n K \n Yönlendirmeli güçlü kimlik doğrulama için zorunlu. \n \n \n > Bildirim Adresi \n bldAdr \n AN1..1024 \n K \n Ayrık güçlü kimlik doğrulama için zorunlu. \n \n \n > HHS Yönlenme Adresi \n hhsYonAdr \n AN1..1024 \n K \n GKD doğrulama bilgilerinin girilebilmesi için uygulamadan açılacak yönlendirme sayfasının adresi \n \n \n > Yetkilendirme Tamamlanma Zamanı \n yetTmmZmn \n ISODateTime \n Z \n Yetkilendirme akışının tamamlanması gereken son zamanı gösterir.   Rıza durumu Yetkilendirildi statüsüne geçene kadarki süredir. \n \n \n Emir Bilgileri \n emrBlg \n Kompleks: EmirBilgileri \n Z \n \n \n \n > Ödeme Emri Numarası \n odmEmriNo \n AN1..128 \n Z \n odemeEmri nesnesinin UID'sidir. OdemeEmrine İlişkin sorgular bu ID üzerinden yapılır. \n \n \n > Ödeme Emri Zaman \n odmEmriZmn \n ISODateTime \n Z \n odemeEmri nesnesinin oluşturulma zamanıdır. \n \n \n Ödeme Başlatma \n odmBsltm \n Kompleks: OdemeBaslatma \n Z \n \n \n \n > Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n >> Kimlik Türü \n kmlkTur \n AN1 \n Z \n TR.OHVPS.DataCode.KimlikTur  sıralı veri türü değerlerinden birini alır. \n \n \n >> Kimlik Verisi \n kmlkVrs \n AN1..30 \n Z \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır. TR.OHVPS.DataCode.KimlikTur  değerine göre uzunluk ve formatı değişir. \n \n \n >> Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür. TR.OHVPS.DataCode.KurumKimlikTur  sıralı veri türü değerlerinden birini alır. \n \n \n >> Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.   TR.OHVPS.DataCode.KurumKimlikTur  değerine göre uzunluk ve formatı değişir. \n \n \n >> Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur  sıralı veri türü değerlerinden birini alır  (B: Bireysel, K:Kurumsal) \n \n \n > İşlem Tutarı \n islTtr \n Kompleks:Tutar \n Z \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para Birimi.  Karekod akışında, FAST Karekod Veri Organizasyonundaki  53: (Para Birimi)  alanında tanımlı Para Birimi verisi kullanılır. \n \n \n >> Tutar \n ttr \n AN1..24 \n Z \n ÖBHS'nin ön yüzde kullanıcıdan teyit aldığı tutar.   Karekod akışında, FAST Karekod Veri Organizasyonundaki  54: (Tutar)  alanında tanımlı Tutar verisi kullanılır.    Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n \n \n > Gönderen \n gon \n Kompleks:Hesap \n Z \n \n \n \n >> Unvan \n unv \n AN3..140 \n Z \n Gönderen kişinin ad soyad ya da ticari unvan bilgisi. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n K \n ÖBHS tarafından iletilip doğrulanan veya HHS ekranında seçilen Gönderen Hesap Numarası dönülür. \n \n \n >> Hesap Referansı \n hspRef \n AN5..40 \n K \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid)  YÖS bazında farklılaşması gerekmez. ÖBHS’nin aynı zamanda HBHS olduğu durumda müşteri rızası tesis edilmiş bir hesabın referansı üzerinden de ödeme başaltılabilir. GKD sonrası HHS ekranında seçilen Hesap Referansı POST işleminin yanıtında dönülemez ancak isteğe bağlı GET sorgusu ile dönülebilir. Hesap Numarası kullanılıyorsa Hesap Referansı kullanılmayabilir. \n \n \n > Alıcı \n alc \n Kompleks:Hesap \n Z \n \n \n \n >> Unvan \n unv \n AN3..140 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen adres kaydı yaptırmış olan alıcının maskeli ad-soyadı veya maskeli ticari unvan bilgisidir. Kolas’tan dönen “account owner” alanı kullanılmalıdır. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen unvan bilgisidir. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n Z \n Alıcının Hesap Numarası alanıdır (IBAN). Kolay Adres  sorgusunda dönülen adres kaydı yaptırmış olan alıcının maskeli IBAN bilgisidir. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen IBAN bilgisidir. Karekod akışında, FAST Karekod Veri Organizasyonundaki 30-01: alanında tanımlı İş Yeri IBAN verisi kullanılır. \n \n \n >> Kolay Adres \n kolas \n Kompleks:Kolas \n K \n \n \n \n >>> Kolas Türü \n kolasTur \n AN1 \n Z \n Müşterinin sorgulamak istediği Kolay Adres Tipi değeridir.  TR.OHVPS.DataCode.KolasTur  sıralı veri türü değerlerinden birini alır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n \n \n >>> Kolas Değeri \n kolasDgr \n AN7..50 \n Z \n Müşterinin eklediği, HHS (FAST katılımcısı) tarafından doğrulanmış Kolay Adres değeridir. Alabileceği değerler BKM “Kolay Adresleme Sistemi Uygulama Kuralları” belgesinde tanımlıdır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n \n \n >>> Kolas Referans Numarası \n kolasRefNo \n N12 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı KOLAS tarafından ilgili sorguya özel olarak üretilmiş referans numarasıdır. \n \n \n >>> Kolas Hesap Türü \n kolasHspTur \n AN1 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı hesap türü bilgisidir:   TR.OHVPS.DataCode.KolasHspTur  sıralı veri değerlerinden birini alır. \n \n \n > Karekod \n kkod \n Kompleks:Karekod \n K \n \n \n \n >> Akış Türü \n aksTur \n AN2 \n Z \n Karekod Akış Türü Karekod ödemesinin hangi akışla gerçekleştirildiğini gösterir.  Kolay Adresi Sistemi ile birlikte kullanılmaz.  01: FAST katılımcısından dinamik doğrulama hizmeti alınan işyeri ödemesi  02: FAST katılımcısından statik doğrulama hizmeti alınan işyeri ödemesi 03: Kişiden kişiye ödemeler \n \n \n >> Referansı \n kkodRef \n AN1..12 \n K \n Karekod referans numarasını gösterir.  Okunan karekodda referans değeri varsa kullanılması zorunludur. Kolay Adresi Sistemi ile birlikte kullanılmaz. \n \n \n >> Üretici Kodu \n kkodUrtcKod \n AN4 \n Z \n Karekod üreticisinin kodu.  Ödeme Hizmeti Sağlayıcıları ve TCMB tarafından uygun görülen ödeme sistemi işleticisi TR Karekod üretebilmek için BKM’ye kayıt başvurusu yaparak karekod üretici kodu alabileceklerdir. Bankalar EFT kodlarını kullanacak olup ayrıca kayıt yaptırmalarına gerek bulunmamaktadır. 4 haneden kısa değerlerin sol tarafı ’0’ karakteri ile tamamlanmalıdır. \n \n \n > Ödeme Ayrıntıları \n odmAyr \n Kompleks: OdemeAyrintilari \n Z \n \n \n \n >> Ödeme Kaynağı \n odmKynk \n AN1 \n Z \n Ödemenin başlatıldığı kaynağı belirtir.  TR.OHVPS.DataCode.OdemeKaynak  sıralı veri değerlerinden “O”  değerini alır. “O” değeri “Açık bankacılık aracılığı ile gönderilen ödemelerde kullanılır.” anlamını taşımaktadır. \n \n \n >> Ödeme Durumu \n odmDrm \n AN2 \n Z \n TR.OHVPS.DataCode.OdemeDurumu  sıralı veri değerlerinden birini alır.      Ödeme Durumu alanı ile ilgili olarak HHS’ler tarafından YÖS’lere  OdemeEmri servisi yanıtında 02:Gönderildi, 04:Onayda Bekliyor,05:İşleme Alındı yanıtları gönderilebilir.   05:İşleme Alındı  durumu YÖS tarafından müşteriye gösterilmeyen bir koddur. Bu kod dönüldüğünde YÖS uygulamasında ÖHK’ya ödeme durumu  02:Gönderildi  olarak gösterilir. İşlemin son durumunun teyidi için YÖS ödeme emri sorgulaması yapmalıdır.   02:Gönderildi  durumu oluştuktan sonra YÖS tarafından ödeme emri sorgulaması yapılarak ödeme durumunun güncel değeri öğrenilir. Güncel değerler  01:Gerçekleşti,03:Gerçekleşmedi  durumları olabilir. \n \n \n >> Ödeme Amacı \n odmAmc \n AN2 \n Z \n TR.OHVPS.DataCode.OdemeAmaci  sıralı veri değerlerinden birini alır. \n \n \n >> Referans Bilgisi \n refBlg \n AN1..140 \n K \n Ödemeye özel  Referans Bilgisi  alanıdır. Karekod işlemi değil ise zorunludur.  -\tKişiden kişiye fon aktarımlarda: Gün içerisinde ÖHK özelinde, her işleme özel biricik olarak oluşturulan referans bilgisidir.  Karekod P2P akışı için referans bilgisi (Karekod referans numarası değil, işleme özel üretilecek referans bilgisidir.) YÖS tarafından atanacaktır.  -\tE-ticaret işlemlerinde sipariş/takip numarası/müşteri/abone numarası  - İşyeri Ödemesi Karekod akışında, FAST Karekod Veri Organizasyonundaki  -\t62-01: alanında tanımlı Fatura Numarası   -\t62-06: alanında tanımlı Müşteri Numarası   verilerinden biri kullanılır. \n \n \n >> Açıklama \n odmAcklm \n AN1..50 \n İ \n ÖBHS’nin ÖHK’dan aldığı ya da kendisinin atadığı işlem açıklaması bilgisi. \n \n \n >> ÖHK Mesaj Alanı \n ohkMsj \n AN1..200 \n İ \n HHS’nin ÖHK’ya göstermek üzere ilettiği mesaj. \n \n \n >> Ödeme Sistemi \n odmStm \n AN1 \n Z \n TR.OHVPS.DataCode.OdemeSistemi  sıralı veri değerlerinden birini alır. \n \n \n >> Ödeme Sistem Numarası \n odmStmNo \n AN10..50 \n K \n Ödeme başarılı başlatıldıysa, ödemenin başlatıldığı sistemdeki referans numarası. Gerektiğinde ilgili ödeme sisteminde/HHS’de söz konusu ödemeye karşılık gelen mesajla bağlantı kurmada kullanılır.   Ödeme Hizmeti kullanıcısına işlemin takibi için gösterilebilir.  İşlemin yönlendirildiği ödeme sistemi FAST ya da PÖS ise sistemdeki ilgili mesajın Tarih, GönderenKatilimKodu ve SorguNumarasi değerlerinin birleşiminden oluşur. Bu 3 alan mevcutta kullanıldığı formatta aralarına dikey çizgi (Unicode U+2223) işareti koyularak, birleştirmeli ve iletilmelidir. Örn : Tarih|GönderenKatilimKodu|SorguNumarasi   Ödeme Havale/Virman işlemi ise HHS’nin üretmiş olduğu havale/virman numarasını içerir. Buradaki format da Tarih|GönderenKatilimKodu|Havale-virman numarası şeklinde olmalıdır. \n \n \n >> Beklenen Ödeme Zamanı \n bekOdmZmn \n ISODateTime \n K \n İşlemin yönlendirildiği ödeme sistemi PÖS ise ve PÖS işlem saatleri dışında ise işlemin yapılabileceği ilk zaman bilgisi \n \n \n > ÖBHS Masraf Tutarı \n obhsMsrfTtr \n Kompleks:Tutar \n İ \n API İlke ve Kuralları 1.0 sürümünde bu nesnenin API deseninde gönderilmemesi gerekmektedir. \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para birimi (TRY, USD, EUR vb.). \n \n \n >> Tutar \n ttr \n AN1..24 \n Z \n ÖBHS’nin işlemle ilgili ÖHK’nın borçlandırılmasını belirttiği masraf tutarı. İşlem Tutarı ile aynı para biriminde olmalıdır.   Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n \n \n > HHS Masraf Tutarı \n hhsMsrfTtr \n Kompleks:Tutar \n İ \n API İlke ve Kuralları 1.0 sürümünde bu nesnenin API deseninde gönderilmemesi gerekmektedir. \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para birimi (TRY, USD, EUR vb.). \n \n \n >> Tutar \n ttr \n AN1..24 \n Z \n HHS’nin işlemle ilgili ÖHK’nın borçlandırılmasını belirttiği masraf tutarı. İşlem Tutarı ile aynı para biriminde olmalıdır.   Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n \n \n İşyeri Ödeme Bilgileri \n isyOdmBlg \n Kompleks:IsyeriOdemeBilgileri \n İ \n İşyeri ödemelerinde kullanılabilecek alanlardır. Karekodlu işyeri ödemesi akışında bu alanlar dolu geldiği için isteğe bağlı olarak gönderilebilir. isyOdmBlg alanlarının en az birinin dolu olması durumunda yanıtta yer alır. \n \n \n > İşyeri Kategori Kodu \n isyKtgKod \n AN4 \n İ \n İşlemin, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). Ödeme Amacı = ‘06’ ya da ‘04’ olan ödeme işlemleri için doldurulabilir. \n \n \n > Alt İşyeri Kategori Kodu \n altIsyKtgKod \n AN4 \n İ \n İşlem alt işyerinden gerçekleştiriliyorsa, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). \n \n \n >Üye İş Yeri Tekil Kimlik \n genelUyeIsyeriNo \n AN8 \n İ \n İşyeri kayıt sisteminde kayıtlı İşyeri için BKM tarafından üretilmiş olan genel işyeri numarasıdır (GlobalMerchantId) 8 haneden küçük gönderiminde başa ‘0’ eklenmelidir. Örnek değer ‘01630618’ \n 6.6.\tADIM 3.1- Ödeme Emri Sorgusu (İsteğe bağlı) \n   \n Şekil 9: Ödeme Emri Sorgusu \n GET /odeme-emri/{odemeEmriNo} \n ÖBHS, bu erişim adresi aracılığıyla ödeme emrini sorgulayabilir. \n BAŞARILI YANIT: \n GET /odeme-emri/{odemeEmriNo} yanıtının (RESPONSE) gövdesinde (BODY)  “OdemeEmri” nesnesi bulunur. İstek başarıyla sonuçlanırsa HHS kaynak sunucusunda Tablo-10’da yer alan parametreleri içeren “OdemeEmri” nesnesi döner. \n 6.7\tHealthcheck API \n GET /health \n HHS’lerin sunacağı bu servis, düzenli olarak BKM tarafından çağırılarak servislerin ayakta olup olmadıklarının kontrolünün sağlanması planlanmaktadır \n Başarılı yanıtta Http 200 kodu dönülmelidir. \n Başarılı Yanıt: \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n \n \n \n \n status \n status \n AN2..20 \n Z \n “UP”, “DOWN” değerlerini alabilir \n \n \n \n"},{title:"Güçlü Kimlik Doğrulama",frontmatter:{},regularPath:"/v1.1.0/contents/erisim-belirteci.html",relativePath:"v1.1.0/contents/erisim-belirteci.md",key:"v-751f6acf",path:"/v1.1.0/contents/erisim-belirteci.html",headers:[{level:2,title:"Yetkilendirme Kodu API",slug:"yetkilendirme-kodu-api"},{level:2,title:"Erişim Belirteci API",slug:"erisim-belirteci-api"}],content:' Güçlü Kimlik Doğrulama  \n \n ÖHK\'nın YÖS uygulamasından HHS uygulamasına yönlendirilmesi ile başlanan güçlü kimlik doğrulama süreci,  Oauth 2.0 standartları gereği öncelikle yetkod değerinin YÖS\'e iletilmesi ile başlar ve erişim belirtecinin alınması sonucunda başarı ile sonuçlanmış olur. \n Güçlü Kimlik Doğrulama için Erişim Adresleri (Endpoints) \n Etki Alanı (Scope) =“hesap_bilgisi”  "odeme_emri" \n \n \n \n No \n Kaynak \n HTTP işlemi \n Erişim Adresi \n Zorunlu (Z)/ İsteğe Bağlı(İ) \n Yetkilendirme Türü \n İmzalama \n Parametre \n İstem Nesnesi \n Yanıt Nesnesi \n \n \n \n \n 1 \n yetkilendirme-kodu \n GET \n /yetkilendirme-kodu \n Z \n İstemci Kimlik Bilgileri \n İmzalı Yanıt \n \n \n yetkilendirmeKodu \n \n \n 2 \n erisim-belirteci \n POST \n /erisim-belirteci \n Z \n İstemci Kimlik Bilgileri \n İmzalı İstek ve Yanıt \n \n ErisimBelirteciIstegi \n ErisimBelirteci \n Yetkilendirme Kodu API \n GET /yetkilendirme-kodu \n Ayrık GKD sürecinde kullanılacak olan Yetkilendirme Kodu API\'nin  HHS tarafından sunulması gerekmektedir. \n Ayrık GKD akışında; HHS, YÖS\'ün olay dinleme servisine "AYRIK_GKD_BASARILI" olay tipi ile olay bildirimi yapar. Böylece ÖHK\'nın kendi sistemine başarı ile login olduğunu ve yetKod değerinin ÖHK ile ilişkilendirildiğinin bilgisini YÖS\'e iletmiş olur.  \nHHS olay bildirimi için retry policy süreçleri kapsamında 1 dakikada 3 kez deneme yapabilir. YÖS\'e olay bildirimi yapılmamış ise, kendisine gelmeyen olay bildirimi için yetkod\'un geçerli olduğu 5 dakika boyunca yetkilendirme-kodu endpointi ile sorgulama yaparak yetkod değerini alabilir. \n YÖS, "ODEME_EMRI_RIZASI" kaynağı için bildirim yapıldı ise; GET /yetkilendirme-kodu endpointi ile yetkod sorgusu yapılır. \nÖrnek çağrım :\n GET /yetkilendirme-kodu?rizaNo=123&rizaTip=O \n YÖS, "HESAP_BILGISI_RIZASI" kaynağı için bildirim yapıldı ise; GET /yetkilendirme-kodu endpointi ile yetkod sorgusu yapılır. \nÖrnek çağrım :\n GET /yetkilendirme-kodu?rizaNo=123&rizaTip=H \n İSTEK: \n YÖS, rıza numarasını ve isteğin ÖBH ya da HBH olmasına göre değişen rıza tipini parametre olarak istek talebine ekler. Rıza tipinin alabileceği değerler  TR.OHVPS.DataCode.RizaTip  sıralı veri tiplerinde belirtilmiştir. \n HHS\'nin, yetkilendirme yöntemi "Ayrık Gkd" ise  rıza numarası ile yetki kodu değerini dönmesi beklenmektedir. Yönlendirmeli GKD için bu endpoint "yetKod" değerini dönmemelidir. Yönlendirmeli GKD’ye ait bir rıza no ile yetkilendirme kodu API kullanılarak yet_kod alınmak istendiğinde HHS tarafından  TR.OHVPS.Resource.NotFound  hatası verilmelidir. \n YANIT: \n HHS yanıt nesnesi içerisinde, ÖHK\'ya ait yetki kodunu, rıza no ve rıza durumu ile birlikte YÖS\'e iletir. \n \n \n \n Alan Adı \n JSON Alan Adı \n Format:Veri modeli İsmi \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Yetki Kodu \n yetKod \n AN1..255 \n Z \n GKD sürecinde üretilen yetkilendirme kodudur. Tek kullanımlık olup, aynı yetKod ile birden fazla token alınamaz. yetKod Parametresinin yaşam ömrü 5 dakika olmalıdır. \n \n \n RızaNo \n rizaNo \n AN1..128 \n Z \n Rıza nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n Rıza Durumu \n rizaDrm \n AN1 \n Z \n TR.OHVPS.DataCode.RizaDurumu  sıralı veri tipini değerlerinden birini alır. \n \n \n \n Ayrık GKD sürecinde, yetkod değerini alan YÖS; erişim belirteci API ile GKD sürecini tamamlar. \n Erişim Belirteci API \n POST /erisim-belirteci \n İSTEK: \n YÖS erisim-belirteci erişim adresini 2 amaçla kullanır: \n \n \n Bir önceki adımdan aldığı rizaNo, rizaTip (ödeme emri başlatma hizmetinde “O”, hesap bilgisi hizmetinde “H”) ve GKD sonrası dönülen yetKod bilgilerini kullanarak HHS nezdinde ErisimBelirteci nesnesi oluşturmak üzere istekte bulunur. YÖS’ün istekte bulunabilmesi için GKD adımının başarılı bir şekilde tamamlanması rizaDrm bilgisinin ‘yetkilendirildi’ olması gerekir. Erişim Belirteci nesnesi ile rızası nesnesi (Ödeme Emri Rızası veya Hesap Bilgisi Rızası) arasındaki ilişki rıza numarası üzerinden sağlanır. \n \n \n Aldığı erişim belirtecinin Geçerlilik Süresinin dolduğu durumda, yenileme belirteci karşılığında yeni bir erişim belirteci alması gerekmektedir. \n \n \n POST /erisim-belirteci isteğinin (REQUEST) gövdesinde (BODY)  “ErisimBelirteciIstegi” nesnesi (Tablo-23) kullanılır. İstek başarıyla sonuçlanırsa HHS kaynak sunucusunda “ErisimBelirteci” nesnesi (Tablo 24) oluşturulur veya (Yenileme Belirteci için) güncellenir. Rıza durumu “Yetki Kullanıldı” olarak güncellenir. \n Erişim Belirteci POST işlemi sonucunda HTTP 200 dönülmesi gerekmektedir. \n “ErisimBelirteciIstegi” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format:Veri modeli İsmi \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n RızaNo \n rizaNo \n AN1..128 \n Z \n Rıza nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n Rıza Tipi \n rizaTip \n AN1 \n Z \n O veya H (TR.OHVPS.DataCode.RizaTip) \n \n \n Yetki Tipi \n yetTip \n AN1..50 \n Z \n “yet_kod” yada “yenileme_belirteci” değerini alabilir.  (TR.OHVPS.DataCode.YetTip) \n \n \n Yetki Kodu \n yetKod \n AN1..255 \n K \n GKD işleminden dönen yetkilendirme kodudur. Tek kullanımlık olup, aynı yetKod ile birden fazla token alınamaz. yetKod Parametresinin yaşam ömrü 5 dakika olmalıdır. yetTip = “yet_kod” ise zorunludur. \n \n \n Yenilenme Belirteci \n yenilemeBelirteci \n AN1..4096 \n K \n Erişim belirtecinin yenilenmesi amacıyla kullanılır. yetTip = “yenileme_belirteci” ise kullanımı zorunludur. \n \n \n \n BAŞARILI YANIT: \n POST işleminin RESPONSE gövdesini (BODY) oluşturan “erisimBelirteci” nesnesinde bulunan erişim belirteci değeri ödeme emrinin başlatılması esnasında kullanılır. \n "ErisimBelirteci" nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format:Veri modeli İsmi \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Erişim Belirteci \n erisimBelirteci \n AN1..4096 \n Z \n Yetkilendirme Kodu karşılığında HHS tarafından dönülen ve sonraki hesap bilgisi ve ödeme emri servislerine erişimde kullanılan bilgidir. Bölüm 3.6 Karakter Kodlama   bölümünde açıklanan karakter formatında gönderilmesi beklenmektedir. Yenileme belirteci ile birden fazla erişim belirteci alınması durumunda verilen tüm erişim belirteçlerinin süreleri bitene kadar geçerli olmalıdır. \n \n \n Geçerlilik Süresi \n gecerlilikSuresi \n N1..9 \n Z \n Erişim Belirtecini saniye cinsinden geçerlilik süresidir.  Erişim belirteci geçerli olduğu son tarih ; Hesap Bilgisi Rızası için en fazla 30 gün en az ise 1 gün olmalıdır.  Erişimin Geçerli Olduğu Son Tarih(erisimIzniSonTrh); Erişim Belirteci Geçerlilik Süresi\'nden küçük ise Erişimin Geçerli Olduğu Son Tarih değeri ile sınırlıdır. Ödeme Emri Rızası için 5 dakika olmalıdır. \n \n \n Yenileme Belirteci \n yenilemeBelirteci \n AN1..4096 \n Z \n Erişim belirtecinin yenilenmesi amacıyla kullanılır.   Bölüm 3.6 Karakter Kodlama  bölümünde açıklanan karakter formatında gönderilmesi beklenmektedir.  Yenileme Belirteci ile Erişim Belirteci isteği yapıldığında HHS\'nin döndüğü yanıt içerisindeki yenilemeBelirteci değerini kesinlikle değiştirmemesi gerekmektedir.Yenileme belirteci rıza süresi boyunca güncellenmemelidir. \n \n \n Yenileme Belirteci Geçerlik Süresi \n yenilemeBelirteciGecerlilikSuresi \n N1..9 \n Z \n Yenileme belirtecinin saniye cinsinden geçerlilik süresidir. Yenileme belirtecinin geçerli olduğu son tarih ; Hesap Bilgisi için Erişimin Geçerli Olduğu Son Tarih ile sınırlı olmalıdır. Bu tarih geldiği zaman Hesap Bilgisi Rıza Durumunu ”Yetki Sonlandırıldı” statüsüne çekilmesi gerekir. Ödeme Başlatma için Rıza Oluşturma Zamanından 15 gün sonrası olmalıdır. 15 gün süresi sorgulama servislerinin çağrımını destekleyecek şekilde uzun tutulmuştur. İleri vadeli işlemler bu kapsamda değildir.  Ödeme emri 5 dakika içinde gerçekleştirilmelidir. Gerçekleşmediğinde 4.2.8 bölümünde aktarılan rıza statü güncellemesi yapılmalıdır. \n \n \n \n erisim-belirteci erisim noktasından elde edilen erisimBelirteci, ilişkilendirildiği nesne veya işlem için gönderilen POST isteği başlığında x-access-token alanında iletilir. \n Yenilenme Belirteci (refreshToken) kullanılarak Erişim Belirteci (accessToken) alındığında, dönen yanıttaki Yenileme Belirteci Geçerlik Süresi (yenilemeBelirteciGecerlilikSuresi) geçen süre eksiltilerek, kalan zamanın saniye cinsinden hesaplanmasıyla iletilmelidir. \n Erişim Belirteci API çağrımı sırasında rıza durumları kontrol edilmelidir. Bu kontrollerin nasıl yapılması gerektiği 4-Rıza Durumları bölümünde aktarılmıştır. \n Yenileme belirteci karşılığında yeni bir erişim belirteci alınması sırasında HHS\'nin döndüğü hata yanıtında httpCode = 401 ve errorCode = "TR.OHVPS.Connection.InvalidToken" gelirse YÖS önce rızanın durumu sorgulamalıdır.  \nEğer geçerli bir rıza ise; HHS veya YÖS tarafında bir sorun olduğu anlaşılmalıdır. Sistem tarafından hata üretilmeli ve sorun incelenmelidir. \nEğer geçerli bir rıza değil ise YÖS tarafındaki rıza durumu güncellenmelidir. \n'},{title:"5.\tGüçlü Kimlik Doğrulama",frontmatter:{},regularPath:"/v1.1.0/contents/gkd.html",relativePath:"v1.1.0/contents/gkd.md",key:"v-8d4168c6",path:"/v1.1.0/contents/gkd.html",headers:[{level:2,title:"5.1.\tYönlendirmeli Güçlü Kimlik Doğrulama",slug:"_5-1-yonlendirmeli-guclu-kimlik-dogrulama"},{level:2,title:"5.2.\tAyrık Güçlü Kimlik Doğrulama",slug:"_5-2-ayrık-guclu-kimlik-dogrulama"},{level:3,title:"5.2.1\tStatik Model",slug:"_5-2-1statik-model"},{level:2,title:"5.3.\tYönlendirme/Bildirim Adresleri ve Durum Kodu Parametresi",slug:"_5-3-yonlendirme-bildirim-adresleri-ve-durum-kodu-parametresi"},{level:2,title:"5.4  Güçlü Kimlik Doğrulama Kontrolleri",slug:"_5-4-guclu-kimlik-dogrulama-kontrolleri"}],content:" 5.\tGüçlü Kimlik Doğrulama \n Müşteri için güçlü kimlik doğrulama, ÖHK’nın (müşterinin) kimliğinin doğrulamada kullanılan ve bir bileşenin ele geçirilmesinin diğer bileşenin güvenliğini tehlikeye atmayacağı en az iki bileşenden oluşan, bu iki bileşenin de müşterinin “bildiği”, “sahip olduğu” veya “biyometrik bir karakteristiği olan” bileşen sınıflarından farklı ikisine ait olacak şekilde seçildiği yöntemi tanımlar. \n Ödeme ve Elektronik Para Kuruluşlarının Bilgi Sistemleri ile Ödeme Hizmeti Sağlayıcılarının Ödeme Hizmetleri Alanındaki Veri Paylaşım Servislerine İlişkin Tebliğ uyarınca hesap bilgisi hizmetinde müşterinin onayının alınması esnasında ve ödeme emri başlatma hizmetinde her bir ödeme emri başlatma işleminde  HHS tarafından müşteriye güçlü kimlik doğrulama (GKD) uygulanması esastır.  Buna göre: \n \n \n Hesap bilgisi hizmetinde ÖHK’nın onayının alınması esnasında  Tebliğin 26 ncı maddesinin 1 inci fıkrası uyarınca  HHS tarafından ÖHK’ya GKD uygulanır. \n \n \n Ödeme emri başlatma hizmetinde,  Tebliğin 26 ncı maddesinin 2 nci fıkrası uyarınca  HHS tarafından ÖHK’ya güçlü kimlik doğrulama uygulanır ve işlem doğrulama kodu ile ÖHK’nın onayı alınır. \n \n \n Ödeme emri başlatma hizmetinde,  Tebliğin 26 ncı maddesinin 3 nci fıkrası uyarınca  HHS tarafından ÖHK’ya güçlü kimlik doğrulama uygulanmasına ilişkin istisna veya ilave güvenlik önlemleri işbu API İlke ve Kuralları belgesinde tanımlanır. \n \n \n HHS, güçlü kimlik doğrulama sürecinde ÖHK’nin sahip olduğu bileşen sınıfı olarak SMS OTP ya da SMS ile işlem doğrulama kodu kullanabilir. \n \n \n HHS, aşağıdaki hallerde veya  Tebliğin 10 uncu maddesinin ikinci fıkrasında  belirtilen risk değerlendirmesi sonucuna göre tek bileşen ile kimlik doğrulama yapabilir. \n \n Ödemenin göndereni ve alıcısının aynı olması, \n Daha önce tanımlanmış güvenli alıcılar listesine ödeme yapılması, \n ÖHK’nin talimatına istinaden gerçekleştirilen düzenli bir ödeme olması. \n \n \n \n Tek bileşen ile kimlik doğrulama yapılan bu işlemlerle ilgili olarak gerçekleştirilen işlemin müşteri tarafından yapıldığını ispat etme yükümlülüğü HHS’ye ait olur. \n \n \n İşlem Doğrulamada  Tebliğin 3 üncü maddesinin birinci fıkrası ğğ bendindeki  işlem bilgisi tanımına uygun olarak aşağıdaki bilgiler ile  Tebliğin 3 üncü maddesinin birinci fıkrası hh bendinde  tanımlanan işleme özel üretilmiş işlem doğrulama kodu birlikte kullanılır. \n \n Alıcı Unvan (Kolas akışında maskeli olarak)  (ödeme emri başlatma hizmeti) \n Tutar (ödeme emri başlatma hizmeti) \n Referans bilgisi (8 karakterden küçük ise alanın tüm değeri, büyük ise ilk 4 ve son 4 hanesi) \n \n İşleme ait yukarıdaki bilgilerden en az biri değiştiği zaman  Tebliğin 3 üncü maddesinin birinci fıkrası hh bendinde  belirtildiği gibi yeni bir işlem doğrulama kodu üretilecek şekilde akış kurgulanmalıdır. \n \n \n İşlem doğrulama kodunun gönderilmesinden HHS sorumludur. HHS,  Tebliğin 10 uncu maddesinin ikinci fıkrasında  belirtilen risk değerlendirmesi sonucuna göre işlem doğrulama kodu kullanmaksızın ÖHK’nın onayını alabilir. İşlem doğrulama kodu kullanılmayan işlemlerle ilgili olarak gerçekleştirilen işlemin ÖHK tarafından yapıldığını ispat etme yükümlülüğü HHS’ye aittir. \n \n \n ÖHVPS API İlke ve Kuralları kapsamında iki adet Güçlü Kimlik Doğrulama (GKD) yöntemi kullanılacaktır: \n \n Yönlendirmeli (Redirect) GKD Yöntemi \n Ayrık (Decoupled) GKD Yöntemi \n \n \n \n HHS asgari olarak tarayıcı tabanlı Yönlendirmeli GKD yöntemini desteklemek zorundadır. Hem web hem mobil uygulama hizmeti bulunan katılımcılar için her iki uygulama özelinde de yönlendirme yapılması zorunludur. Web ya da mobil uygulamalardan sadece birinin olması durumunda ilgili uygulama özelinde yönlendirme yapılması zorunludur. \n \n \n HHS’nin mobil uygulamasının bulunması durumunda tarayıcı tabanlı yönlendirmenin yanında uygulama tabanlı yönlendirme yapması zorunludur. Uygulama sahiplerinin uygulama tabanlı yönlendirme için uyumlanma son tarihleri 1 Ekim 2023’tür. \n 5.1.\tYönlendirmeli Güçlü Kimlik Doğrulama \n Yönlendirmeli GKD Yönteminde, müşteri kimlik doğrulama için YÖS tarafından HHS arayüzüne yönlendirilir. \n Müşteri HHS’ye (app veya web arayüzü vasıtasıyla) yönlendirildikten sonra müşterinin güçlü kimlik doğrulaması adım adım ve doğrudan HHS ile müşteri arasında yürütülür. GKD’nin tamamlanmasından sonra müşteri tekrar YÖS uygulamasına yönlendirilir. \n Yönlendirmeli GKD Yöntemi için üst düzey örnek iş akışı aşağıdaki adımlardan oluşur: \n \n YÖS, GKD için HHS tarafından tanımlanan arayüze (tarayıcı ya da uygulama) yönlendirme yapar. \n Müşteri, YÖS arayüzünden ayrılır, yönlendirildiği HHS arayüzü üzerinde kimlik doğrulama işlemlerini gerçekleştirir. \n GKD tamamlandıktan sonra müşteri, YÖS arayüzüne tekrar yönlendirilir ve işlem sonucu görüntülenir. \n \n Yönlendirmeli GKD için temel gereklilikler şunlardır: \n \n Ödeme hizmeti (hesap bilgisi veya ödeme emri başlatma hizmeti) tarayıcı ya da uygulama tabanlı bir şekilde sunulabilir. Bu nedenle, YÖS ve HHS’lerin Yönlendirmeli GKD için asgari olarak tarayıcı tabanlı yönlendirme akışını desteklemeleri gerekmektedir. Web ya da mobil uygulamalardan sadece birinin olması durumunda ilgili uygulama özelinde yönlendirme yapılması zorunludur. \n \n Tarayıcı Tabanlı Yönlendirme \n Yönlendirmeli GKD Yönteminde; rıza isteğine başarılı yanıt alındıktan sonra, ÖHK, kimlik doğrulama için YÖS tarafından HHS arayüzüne yönlendirilir.\nYÖS, yönlendirme akışını kendi sunucusundan karşılayacağı bir istek ile başlatmalıdır. YÖS web arayüzündeki bu yapı, 302 yanıt kodu ve yanıt başlığındaki Location değeri ile ÖHK tarayıcısını HHS adresine yönlendirmelidir. Bu sayede GKD, HHS tarafında başlayabilir. \n YÖS tarafındaki yönlendirme servisi için örnek response; \n HTTP/1.1 302 Found\nLocation: {{hhsYonAdr}}\n \n ÖHK, HHS’ye (uygulama veya web arayüzü vasıtasıyla) yönlendirildikten sonra ÖHK'nin güçlü kimlik doğrulaması HHS ile ÖHK arasında yürütülür. GKD’nin tamamlanmasından sonra ÖHK tekrar YÖS uygulamasına yönlendirilir. \n HHS, yönlendirme akışını kendi sunucusundan karşılayacağı bir istek ile başlatmalıdır. HHS web/app arayüzündeki bu yapı, ÖHK'nin oturumunu güvenli bir şekilde kapatmalıdır. Ardından 302 yanıt kodu ve yanıt başlığındaki Location değeri ile ÖHK tarayıcısını YÖS adresine yönlendirmelidir. \n HTTP/1.1 302 Found\nLocation: {{yosYonAdr}}&rizaDrm=Y&yetKod=xx&rizaNo=yy&rizaTip=O\n \n HHS’nin web arayüzüne, \n \n HHS’nin mobil uygulamasının olmadığı, \n ÖHK’nın ödeme hizmetini (hesap bilgisi veya ödeme emri başlatma hizmeti) sunduğu mobil cihazda HHS uygulamasının yüklü olmadığı, \ndurumlarda yönlendirme yapılır. \n \n YÖS’ün mobil uygulaması varsa mobil cihazda uygulamadan tarayıcıya, YÖS’ün mobil uygulaması yoksa ödeme hizmetinin sunduğu cihazda (Kişisel Bilgisayar veya Mobil Cihaz) tarayıcı üzerinden yönlendirme yapılır. \n Uygulama Tabanlı Yönlendirme \n ÖHK’nın ödeme hizmetini (hesap bilgisi veya ödeme emri başlatma hizmeti) YÖS’ün mobil uygulaması ile kullanıyorsa, aynı mobil cihazda HHS’nin mobil uygulamasının yüklenmiş olması durumunda, ÖHK doğrulamasının HHS mobil uygulaması tarafından yapılması için uygulama tabanlı yönlendirme yapılır. Böylece ÖHK, ödeme hizmetine erişim için HHS’nin mobil kanalına erişim sırasında kullandığı doğrulama yöntemini ile doğrulanabilir. \n HHS'nin mobil uygulaması olması durumunda hhsYonAdr olarak universal link kullanması gerekmektedir. \n Tablo 5: Yönlendirmeli Güçlü Kimlik Doğrulama Kanalları \n \n \n \n Doğrulama Yöntemi \n YÖS Olası Ortam \n HHS Olası Ortam \n \n \n \n \n Tarayıcı Tabanlı Yönlendirme \n Kişisel Bilgisayar (masaüstü, dizüstü)/Mobil Cihaz \n Kişisel Bilgisayar (masaüstü, dizüstü) / Mobil Cihaz \n \n \n Uygulama Tabanlı Yönlendirme \n Mobil Cihaz \n Mobil Cihaz \n 5.2.\tAyrık Güçlü Kimlik Doğrulama \n Ayrık Güçlü Kimlik Doğrulama, bir kullanıcının kimliğinin, bir işlem başlatıldıktan sonra ayrı bir şekilde doğrulandığı yönteme verilen addır. Bu GKD modelinde, kimlik doğrulama işlem sürecinden \"ayrıştırılmıştır\". Kullanıcılar, başka bir arayüze yönlendirilmek yerine ( tarayıcı veya uygulama tabanlı yönlendirme gibi), ayrı bir kanal üzerinden (telefonlarında bir uygulama bildirimi gibi) işlemi doğrulamaları için bildirim alır.\nKullanıcı, işlemi tamamen ayrı bir cihaz veya uygulama kullanarak doğrulayabilir. \n İlk fazda Ayrık GKD'de QR’lı modeller kullanılmayacaktır. \n Ayrık GKD uygulamalarının farklı örnekleri bulunmaktadır. Ancak yaygın olan yaklaşım, bir web arayüzü ve bir mobil uygulamanın kombinasyonunu kullanmayı içerir. \n Mobil uygulaması bulunan HHS'ler için Ayrık GKD desteklenmesi zorunludur.  HHS’nin web olduğu durumda Ayrık GKD akışı uygulanmayacaktır. Mobil uygulaması bulunup müşteri özelinde mobil aktiflik kontrol süreci HHS inisiyatifindedir. Ayrık GKD sürecinde HHS tarafında sadece mobil uygulama üzerinden GKD yapılmalıdır. ÖHK’nın web uygulamasına yönlendirme yapmaması gerekmektedir. \n YÖS rolünde Ayrık GKD akışının ÖHK’ya sorularak başlatılmasına gerek bulunmamakla beraber bu bilginin ÖHK’ya sorulması YÖS inisiyatifindedir. YÖS olarak, Ayrık GKD iş akışları kapsamında ÖHK’ya ayrık GKD öncesi HHS mobil uygulamasının varlığı sorularak (bildirim ayarlarının açık olması gerektiği bilgisi de verilebilir) ilerlenebilir. Aynı zamanda Ayrık GKD ile rıza sürecinin başlatılması zorunlu değildir. Rıza süreci başlatılırken yetkilendirme yöntemi YÖS inisiyatifindedir. \n Örnek bir akış şu şekildedir: \n \n İşlem Başlatma (YÖS Web/Mobil Arayüzü):  ÖHK bir işlemi YÖS’ün web/mobil arayüzünde başlatır. YÖS uygulaması, ÖHK'nın tekil bir kullanıcı kimliğini rızaya ekleyerek bir rıza başlatma işlemini HHS’ye iletir. HHS, tekil kullanıcı kimliğini kullanarak ÖHK'nın mobil uygulamasına bir bildirim gönderir. \n Kimlik Doğrulama İsteği (HHS Mobil Uygulama):  ÖHK Mobil uygulama bildirimi alır ve mobil uygulama ÖHK'ya  kimlik doğrulama isteği sunar. HHS’nin BDDK tarafından belirlenmiş GKD yöntemlerine uygun davranması beklenmektedir. \n Kimlik Doğrulama Onayı (HHS Mobil Uygulama):  Mobil uygulama, ÖHK’nın kimlik doğrulama girişimini doğrular. Başarılı olursa rıza onayı sonrası mobil uygulama, 'Ayrık Yetkilendirme Başarılı' olay bildirimini YÖS’e gönderir. \n İşlem Onayı (YÖS Web/Mobil Arayüzü):  YÖS,  HHS'den gelen 'Ayrık Yetkilendirme Başarılı' olay bildirimine konu olan rızayı kullanarak yetkilendirme koduna erişir. Bundan sonraki süreç erişim belirteci alınması servisi ile devam eder. \n \n Ayrık Güçlü Kimlik Doğrulamanın Olay Bildirim Servisleri ile olan Bağımlılıkları \n Ayrık GKD sürecinde; HHS'nin yetkilendirme kodunu YÖS'e iletmesi için gerekli önkoşul olan ÖHK doğrulaması adımının tamamlanmasını olay bildirimi ile YÖS'e yapması gerekmektedir.\nBu nedenle YÖS'lerin eğer Ayrık GKD sürecini destekleyecek ise;  /olay-dinleme endpointini açarak olay bildirimi alması zorunludur. \n Özetle: \n Yönlendirmeli GKD \n \n HHS mobil uygulaması olması durumunda yönlendirme adresi olarak universalLink kullanmalı. \n Bu link tanımı  uygulama var ise uygulamayı aç yoksa webden devam et şeklinde olmalı. \n YÖS’ün mobilden mi webden mi geldiği HHS açısından önemli değildir. HHS olarak YÖS hangi adresi yonAdr değerinde göndermiş ise yetkilendirme süreci bittiğinde o adrese yönlendirme yapılmalıdır. \n \n Ayrık GKD \n \n Mobil uygulaması bulunan HHS'ler için Ayrık GKD desteklenmesi zorunludur. HHS’nin web olduğu durumda Ayrık GKD akışı uygulanmayacaktır. Mobil uygulaması bulunup müşteri özelinde mobil aktiflik kontrol süreci HHS inisiyatifindedir. Ayrık GKD sürecinde HHS tarafında sadece mobil uygulama üzerinden GKD yapılmalıdır. ÖHK’nın web uygulamasına yönlendirme yapmaması gerekmektedir. \n ÖHK’nin Mobil uygulamasının olmadığını tespit edebildiğiniz her durum için rıza oluşturma aşamasında “TR.OHVPS.Business.CustomerMobileApplicationNotFound” hatası döülür. \n HHS, ÖHK’nın mobil uygulamasının bulunmadığı bilgisine ulaşamazsa kendisinin belirleyeceği bildirim yöntemlerinden biri ile ÖHK’ye bilgilendirme yapar. Bildirim yöntemi SMS ise ÖHK’ya mobil uygulamasını açtıracak şekilde adres iletir, Web uygulamayı açtıracak bir link iletilmemelidir. ÖHK bu bildirimi dikkate almazsa/alamazsa veya ÖHK’da mobil uygulama yok ise bu durumda rıza süre aşımından iptal olur. \n ÖHK mevcut bankacılık işlemlerinde bildirimi nasıl gönderiyorsanız (Örneğin: Anlık bildirim gönderildi, alınmadı, SMS’e dönüldü gibi.) aynı şekilde bildirim göndererek ÖHK’nin uygulama üzerinden rızayı onaylaması beklenir. Buradaki akış HHS’nin diğer ürünleri için verdiği müşteri deneyimi ile paralel olmalıdır. \n 5.2.1\tStatik Model \n YÖS'ün ÖHK'yı tanıdığı ve ÖHK'ya ait tanımlayıcı bilgileri HHS'ye aktarabildiği durumda kullanılmaktadır. Buradaki ÖHK'ya ait tanımlayıcı bilgiler TCKN, MNO , YKN, PNO, GSM, IBAN olarak belirlenmiştir. \n Akış aşağıdaki gibi kurgulanmıştır: \n   \n \n \n ÖHK, YÖS uygulaması üzerinde işlem başlatır. \n \n \n ÖHK, YÖS uygulaması içerisinde, farklı bir ortam üzerinden HHS doğrulamasını gerçekleştirmek istediğini belirtir. ÖHK'yı tanıma tip ve değerleri YÖS ÖHK'dan talep edebileceği gibi, YÖS sisteminde hali hazırda kayıtlı bilgilerle de akışı devam ettirebilir.  \n \n \n ÖHK, YÖS'ün müşterisi ve YÖS uygulamasına login ise tek seferlik ödeme akışı başlatamaz. \n \n \n YÖS tarafından başlatılan tek seferlik bir Ödeme işleminin Ayrık GKD ile onaylanacağı durumda;\nYÖS’ün ilgili kullanıcıya ait “ÖHK Tanım Değer” verisinin yanında işleme ait ve ilgili ÖHK ile eşleştirilmiş olan  ve sadece YÖS ile ÖHK’nın bilebileceği bir değerin daha ÖHK tarafından sağlanması ve YÖS tarafından kontrol edilerek eşleşen Ödeme emrinin HHS’ye iletilmesi gerekmektedir. Örneğin; bu değer YÖS tarafında yapılan tek seferlik ödeme işlemine ait fatura numarası. \n \n \n YÖS önyüzde ÖHK'dan aldığı ohkTanimTip ve ohkTanimDeger değerlerini kimlik tür ve kimlik değeri alanlarına atamamalıdır. \n \n \n YÖS, ayrık GKD ile işlem başlatabileceği HHS'lerin listesini HHS API'de yer alan \"ayrikGKD\"=\"E\" parametresi ile alabilir. \n \n \n YÖS, ÖHK bilgileri ile rıza oluşturur. Rıza nesnesi içerisinde yer alan GKD nesnesinde ilgili parametreler aşağıdaki şekilde doldurulur: \n \n \n ohkTanimTip ve ohkTanimDeger parametreleri \nBu metodda; ayrikGkd nesnesi içerisindeki \"ohkTanimTip\" parametresi TR.OHVPS.DataCode.ohkTanimTip sıralı veri tiplerinden TCKN, MNO , YKN, PNO, GSM, IBAN değerlerinden birini alabilir. ohkTanimDeger parametresi de seçilen tipe ait ÖHK'ya ait değeri içermelidir.Rıza başlatma akışı içerisinde kimlik bilgisinin olduğu durumlarda; ÖHK'ya ait kimlik verisi(kmlk.kmlkVrs) ile ayrık GKD içerisinde yer alan OHK Tanım Değer alanı (ayrikGkd.ohkTanimDeger) birebir aynı olmalıdır.Kimlik alanı içermeyen tek seferlik ödeme emri akışlarında bu kural geçerli değildir. GSM ve IBAN değerleri sadece tek seferlik ödemelerde kullanılabilir. \n YÖS'ten ohkTanimTip olarak gelen IBAN bilgisi sadece ÖHK'yı tanımak için kullanılabilir. Tanım tipi IBAN ile başlatılan bir işlemde ÖHK, başka bir IBAN ile ödeme başlatabilir. \n Kurumsal müşteriler için kmlkTur ve kmlkVrs alanları ohkTanimTip ve ohkTanimDeger alanlarında gönderilmelidir. \n \n \n yetYntm parametresi \nyetYntm parametresi  Ayrık GKD  akışını ifade eden \"A\" değerini almalıdır.  \n \n \n \n \n Örnek bir istek : \nPOST/ohvps/obh/s1.1/odeme-emri-rizasi \n RizaNesnesi \n {\n...\n  \"gkd\": {\n    \"yetYntm\": \"A\",\n     \"ayrikGkd\" :{\n         \"ohkTanimTip\" : \"TCKN\" \n         \"ohkTanimDeger\": \"11232123212\"\n     }    \n  },\n...\n}\n \n \n \n YÖS, ayrık GKD ile işlem başlatabileceği HHS'lerin listesini HHS API'de yer alan \"ayrikGKD\"=\"E\" parametresi ile alabilir.\nYÖS, ayrık GKD desteklemeyen HHS'ye Ayrık GKD yöntemiyle rıza başlatma isteği yapması durumunda HHS tarafından  TR.OHVPS.Business.DecoupledAuthenticationNotSupported  hatası iletilmelidir. YÖS ilgili işlemi “Yönlendirmeli” akışa çekip süreci ilerletebilir. \n \n \n HHS tarafında ÖHK'nın mobil uygulaması bulunmaması durumu tespit edilebildiği durumda Ayrık GKD ile başlatılan rıza akışlarında hata mesajı vermelidir. HHS tarafından  TR.OHVPS.Business.CustomerMobileApplicationNotFound  hatası iletilmelidir. YÖS ilgili işlemi “Yönlendirmeli” akışa çekip süreci ilerletebilir. HHS, ÖHK’nın mobil uygulamasının bulunmadığı bilgisine ulaşamazsa kendisinin belirleyeceği bildirim yöntemlerinden biri ile ÖHK’ye bilgilendirme yapar. Bildirim yöntemi SMS ise ÖHK’ya mobil uygulamasını açtıracak şekilde adres iletir, Web uygulamayı açtıracak bir link iletilmemelidir. \n \n \n HHS, YÖS'ün AYRIK_GKD_BASARILI ve AYRIK_GKD_BASARISIZ olay tipleri için olay aboneliğinin varlığını kontrol eder.  YÖS iki olay tipine de abone olmak zorundadır. Eğer olay aboneliği yoksa HHS tarafından  TR.OHVPS.Business.EventSubscriptionNotFound  hata kodu iletilmelidir. \n \n \n HHS \"gkd\" nesnesi için alan kontrollerini gerçekleştirir.   \"yetYntm\" = \"A\" gönderilmiş ise \"ayrikGkd\" nesnesinin dolu gönderilmesi zorunludur. Gönderilmemesi durumunda HHS tarafından  TR.OHVPS.Resource.InvalidFormat  hata kodu iletilmelidir. \n \n \n Rıza başlatma akışı içerisinde kimlik bilgisinin olduğu durumlarda; ÖHK'ya ait kimlik verisi(kmlk.kmlkVrs) ile ayrık GKD içerisinde yer alan OHK Tanım Değer alanı (ayrikGkd.ohkTanimDeger) birebir aynı olmalıdır. Aynı olmadığı durumda HHS tarafından  TR.OHVPS.Business.CustomerInfoMismatch  hatası iletilmelidir.\nKimlik alanı içermeyen tek seferlik ödeme emri akışlarında bu kural geçerli değildir. GSM ve IBAN değerleri sadece tek seferlik ödemelerde kullanılabilir. \n \n \n Tek seferlik ödeme işlemlerinde \"ohkTanimTip\" = \"GSM\"/\"IBAN\" olarak gönderilmiş ise, HHS sisteminde bu GSM/IBAN ile eşleşen müşterileri taramalıdır. GSM/IBAN bilgisi ÖHK bazında tekil bir kullanıcıya erişim imkanı sağlamaz ise  TR.OHVPS.Business.InvalidCustomerInfo  hatasını iletmelidir. \n \n \n Kontrollerin başarılı olması durumunda HHS rızayı oluşturur ve ÖHK tekil verisi ile ulaştığı ÖHK'ya bilgilendirme mesajı gönderir.      Bilgilendirme mesajı kısa mesaj ya da anlık bildirim mesajı olabilir. ÖHK’nın birden fazla cihazda aktivasyonu varsa HHS’nin iç süreçlerine göre mevcut durumda nasıl bir bildirim süreci işletiliyorsa aynı şekilde ilerlenebilir.  \n \n \n Kurumsal müşteriler için, hangi kullacıya bildirim gitmesi isteniyor ise, rıza aşamasında o kişi ayrikGkd nesnesinde gönderilir. HHS'nin rıza içerisindeki ohkTur değerine göre,  gelen bildirime verilen cevaba uygun uygulamasını açmalıdır. Kurumsal ÖHK için rıza geldi ise, kurumsal giriş sayfası; bireysel ÖHK için rıza geldi ise bireysel giriş sayfası müşterinin önüne açılmalıdır ve ilgili hesaplara erişime izin vermelidir. \n \n \n ÖHK'ya bir bildirim gelmemesi durumunda, HHS kendi sisteminde GKD sürecine devam edemez. 5 dakika sonunda rıza durumu Yetki Bekleniyor'dan Rıza İptal / Süre Aşımı (İptal kod 04) durumuna çeker. \n \n \n \n \n ÖHK, HHS sisteminden gelen bildirim mesajını alır. HHS sistemine login olduktan sonra işleme onay verilmezse veya GKD kontrolleri başarısız olursa HHS Olay Bildirim servisleri aracılığı ile GKD sürecinin sonlandığını YÖS'e iletir. Olay tipi \"AYRIK_GKD_BASARISIZ\" olacak şekilde bir POST /olay-dinleme servis çağrısı yapılır.YÖS kendisine gelen olay bildirimi ile\nrıza sorgulaması yaparak iptal detay kodunu öğrenebilir. \n \n \n ÖHK, HHS sisteminde login olduktan sonra işleme onay verirse; HHS tarafından rıza ile ilişkili yetkod değeri üretilir.HHS, YÖS'e ÖHK için \"yetkod\" değeri üretildiğinin bilgisini Olay Bildirim servisleri aracılığı ile iletir. Olay tipi \"AYRIK_GKD_BASARILI\" olacak şekilde bir POST /olay-dinleme servis çağrısı yapılır. \n \n \n YÖS kendisine gelen olay bildirimi ile \"yetkod\" değerinin HHS'de üretildiğinin bilgisini alır. \"yetkod\" değerini öğrenebilmek için HHS'yi sorgulaması gerekmektedir.  \nHHS'nin açacağı   GET /yetkilendirme-kodu endpointi   ile bu bilgiye erişebilir. \n \n \n YÖS, \"yetkod\" ile POST /erisim-belirteci endpointinden erişim belirteci alır. Böylelikle ÖHK'nın Ayrık GKD süreci tamamlanmış olur. \n 5.3.\tYönlendirme/Bildirim Adresleri ve Durum Kodu Parametresi \n CSRF Ataklarından korunmak için ve YÖS uygulamasının bir önceki durumunu restore edebilmesi için; YÖS tarafından iletilen yönlendirme ve bildirim adreslerine , Oauth2 standartlarındaki state parametresine eşdeğer,   durum kodu (drmKod)  parametresinin eklenmesi gerekmektedir. Durum kodu parametresi YÖS tarafından üretilen, tekil ve kolay tahmin edilemeyen bir değer olmalıdır. Rıza isteği gönderimi aşamasında oluşturulmalıdır. YÖS uygulamasında uygun bir yerde saklanmalıdır (cookie, session, local storage gibi) . \n Durum kodu, rıza isteğindeki yönlendirme adresine parametre olarak eklenir.  GKD süreci sonrasında yetki kodu ile birlikte bu bilgi, HHS tarafından YÖS’e iletilir. YÖS sakladığı değer ile parametre olarak gelen değerin eşitliğini kontrol eder. Aynı ise erişim belirteci almak üzere akışı ilerletir. Farklı ise işlemi keser. \n 5.4  Güçlü Kimlik Doğrulama Kontrolleri \n ÖHK, GKD için HHS uygulamasına yönlendirildiğinde, HHS’nin çeşitli kontroller yaparak işlemin doğruluğunu teyit etmesi gerekmektedir.\nYapılması gereken kontrollere ait temel senaryolar aşağıdaki tabloda belirtilmiştir. Bu senaryolar baz alınarak HHS’ler tarafından zenginleştirilebilir. \n Aşağıdaki tabloda yer alan 07-13 arası Rıza İptal Detay Kodlarının oluştuğu senaryolar, HHS uygulamasında yapılan kullanıcı doğrulama öncesi ve sonrası olarak iki adımda incelenmelidir. \n HHS tarafında, kullanıcı doğrulama öncesinde yapılan kontroller neticesinde verilemeyen rızalar için ‘04’ : Süre Aşımı : Yetki Bekleniyor iptal kodu atanır. HHS'nin YÖS uygulamasına 04 kodunu iletmesi beklenmez. YÖS zaman aşımı neticesinde rıza statüsünü sorgulayarak öğrenir. \nKullanıcı doğrulandıktan sonra rıza verilemiyorsa ilgili hata kodunun YÖS'e iletilmesi beklenmektedir. Kullanıcı doğrulama sonrası YÖS'e iletilen rıza iptal detay kodu ile HHS veri modelinde tutulan rıza ile ilişkili rıza iptal detay kodu, aynı değeri alacak şekilde güncellenmelidir. YÖS, HHS tarafından kendine iletilen rıza iptal detay kodunu kendi veri modelinde güncellemelidir. \n Zorunlu olarak belirtilen hata durumlarının HHS’ler tarafından gerçeklenmesi ve uygun hata kodlarının YÖS’e iletilmesi; ileride oluşabilecek mutabakatlaşma sorunlarını ortadan kaldırabilecek, yapılacak raporlamalar kapsamında sistem ve süreç iyileştirmelerine katkı sağlayacak, son kullanıcı açısından da alınan hataya yönelik bilgilendirici içerik sağlayacaktır. \n Hata açıklamaları; hata koduna uygun ya da uyumlu olmak kaydıyla, HHS ve YÖS tarafından farklı şekillerde sunulabilir. \n GKD Sırasında yapılması gereken kontroller \n \n \n \n Rıza İptal Detay Kodu \n HHS hata açıklaması* \n Yös ekranında listelenecek örnek mesaj metni* \n Örnek Senaryo \n Zorunlu / Opsiyonel \n \n \n \n \n 07 \n Rıza mevcut ve durumu \"Yetkilendirildi\" veya \"Yetki Kullanıldı\" \n Yetki Hatası \n ÖHK,  kullanıcı doğrulama işlemi tamamlandıktan sonra  YÖS ekranında ileri - geri yaparak ya da ÖHK'nın yönlendirme adresini kopyalayarak tarayıcıya yapıştırması ile tekrar HHS'ye yönlendirir. Bu durumda HHS bu rıza iptal detay kodunu iletir. HHS ve YÖS'ler veri modellerini bu bilgi doğrultusunda güncellemelidir. \n Zorunlu \n \n \n 08 \n Rızano ile kimlik bilgileri uyuşmazlığı. \n İşlem gerçekleştirilememiştir. \n YÖS tarafından başlatılan rıza içerisinde yer alan kimlik bilgisi (örn:TCKN) ile HHS'de başarılı kimlik doğrulama yapılan ÖHK'nın bilgilerinin uyuşmadığı durumda  HHS ve YÖS'ler veri modellerini bu bilgi doğrultusunda güncellemelidir. \n Zorunlu \n \n \n 09 \n ÖHK'nın HHS'de ilgili ürününün olmadığı durum (hesap/kart) \n Gösterilebilecek hesap/kart bulunamamıştır. \n HHS, kullanıcı doğrulama yaptıktan sonra, ÖHK'nın uygun statülü hesabının olmadığı durumda  HHS ve YÖS'ler veri modellerini bu bilgi doğrultusunda güncellemelidir. \n Zorunlu \n \n \n 10 \n ÖHK'nın Açık Bankacılık kanalı işleme kapalı \n ÖHK'nın Açık Bankacılık kanalı işleme kapalı \n Açık bankacılığı ayrı bir kanal olarak tanımlamış HHS'lerde,  ÖHK kullanıcı doğrulama yaptıktan sonra yapılan kontrollerde, ÖHK'nın işlemlerini AB kanalına kapatmış olması durumunda   HHS ve YÖS'ler veri modellerini bu bilgi doğrultusunda güncellemelidir. \n Opsiyonel \n \n \n 11 \n ÖHK'nın HHS'deki hesaplarında yeterli yetkisinin olmaması \n Yetki hatası \n 1- Kurumsal firma kullanıcılarının hesaplar üzerinde işlem yetkisinin olmaması durumunda   2- Bireysel ortak hesaplarda hesap kısıtı bulunuyorsa (para çıkışına izin verilmediği durum)  HHS ve YÖS'ler veri modellerini bu bilgi doğrultusunda güncellemelidir. \n Zorunlu \n \n \n 12 \n HHS’nin,  ÖHK özelinde yaptığı kontrollerin başarısız olması \n Yetki hatası \n HHS'nin, kullanıcı doğrulama sonrası ÖHK için iç sistemlerinde yaptığı kontrollerin başarısız olması. Örneğin: Müşterinin henüz bankacılık hizmet sözleşmesi gibi Internet şubesi üzerinde işlem yapmasını engelleyen eksikleri olması durumunda veya kurumsal kullanıcıda vekalet süresinin dolması/eksik doküman olması durumunda kanal üzerinde işlem yapamadığı durum  HHS ve YÖS'ler veri modellerini bu bilgi doğrultusunda güncellemelidir. \n Opsiyonel \n \n \n 13 \n ÖHK isteği ile GKD’den vazgeçilmesi \n Müşteri işlemden vazgeçmiştir. \n HHS ekranında yer alan VAZGEÇ butonuna basılması durumu (ÖHK,HHS uygulamasında kullanıcı doğrulama yaptıktan sonra VAZGEÇ butonu olabilir.) \n Zorunlu \n \n \n 14 \n GKD İptali: Fraud Şüphesi \n İşlem gerçekleştirilememiştir. \n HHS Fraud şüphesi nedeniyle işlemin devamına izin vermez. HHS'nin, fraud kontrollerinin ödeme başlatma hizmeti için yapması ve “14- GKD İptali: Fraud Şüphesi” ile rıza iptalini gerçekleştirmelidir. HBH servislerinde HHS'nin rıza iptal kodu 14 ile işlemi kesmesi HHS'nin kendi insiyatifindedir yani opsiyoneldir. \n Koşullu \n \n \n 99 \n Diğer \n İşlem gerçekleştirilememiştir. \n Oluşabilecek diğer senaryolar. \n Zorunlu \n \n \n \n GKD sırasında iletilen rıza no eğer HHS’nin sisteminde bulunamazsa durumu güncellenecek bir rıza no da olmayacaktır. HHS kendi önyüzünde bu duruma uygun bir mesaj gösterebilir. YÖS’e de Diğer hata kodu ile bu durumu iletebilir. \n"},{title:"7.\tHesap Bilgisi Hizmeti",frontmatter:{},regularPath:"/v1.1.0/contents/hesap-bilgisi-hizmeti.html",relativePath:"v1.1.0/contents/hesap-bilgisi-hizmeti.md",key:"v-553c6446",path:"/v1.1.0/contents/hesap-bilgisi-hizmeti.html",headers:[{level:2,title:"Genel Bilgiler",slug:"genel-bilgiler"},{level:2,title:"Hesap Bilgisi Hizmeti İçin Erişim Adresleri",slug:"hesap-bilgisi-hizmeti-icin-erisim-adresleri"},{level:2,title:"ADIM 0: ÖHK'nın hesap bilgilerine erişim için talepte bulunması:",slug:"adim-0-ohk-nın-hesap-bilgilerine-erisim-icin-talepte-bulunması"},{level:2,title:"7.1 ADIM 1: Hesap Bilgisi Rızasının Hazırlanması",slug:"_7-1-adim-1-hesap-bilgisi-rızasının-hazırlanması"},{level:3,title:"POST /hesap-bilgisi-rizasi",slug:"post-hesap-bilgisi-rizasi"},{level:3,title:"Başarılı İstek:",slug:"basarılı-istek"},{level:3,title:"Başarılı Yanıt:",slug:"basarılı-yanıt"},{level:2,title:"İzinler",slug:"izinler"},{level:2,title:"7.2 ADIM 2: Hesap Bilgisi Hizmeti Rızasının Tesisi",slug:"_7-2-adim-2-hesap-bilgisi-hizmeti-rızasının-tesisi"},{level:2,title:"7.3 ADIM 2.1: Hesap Bilgisi Rızasının Sorgulanması",slug:"_7-3-adim-2-1-hesap-bilgisi-rızasının-sorgulanması"},{level:2,title:"7.4 ADIM 2.2: Hesap Bilgisi Rızasının İptali",slug:"_7-4-adim-2-2-hesap-bilgisi-rızasının-iptali"},{level:2,title:"7.5 ADIM 3: Hesap Bilgilerinin Alınması",slug:"_7-5-adim-3-hesap-bilgilerinin-alınması"},{level:2,title:"7.6 ADIM 3.1 ve 3.2: Hesap Bilgilerinin Sorgulanması",slug:"_7-6-adim-3-1-ve-3-2-hesap-bilgilerinin-sorgulanması"},{level:2,title:"7.7 ADIM 3.3 ve 3.4: Hesap Bakiyesinin Sorgulanması",slug:"_7-7-adim-3-3-ve-3-4-hesap-bakiyesinin-sorgulanması"},{level:2,title:"7.8 ADIM 3.5 ve 3.6: İşlemlerin Sorgulanması",slug:"_7-8-adim-3-5-ve-3-6-islemlerin-sorgulanması"}],content:" 7.\tHesap Bilgisi Hizmeti  \n Genel Bilgiler \n Hesap bilgisi sorgulama için HBHS tarafından müşteri rızası tesisinin HHS tamamlanmış olması gerekir. Müşteri rızası tesisi tamamlandıktan sonra, HBHS sorgulamak istediği hesaba ait verileri ilgili erişim adresi üzerinden sorgular. \n \n \n Şekil 10: Hesap Bilgisi Hizmeti Üst Düzey Akışı \n Şekil-10’da sunulan hesap bilgisi hizmeti 5 temel akıştan oluşur: \n 0.\tMüşterinin hesap bilgilerine erişim için talepte bulunması:  ÖHK ÖBHS mobil uygulama ya da web sitesinden hesap bilgilerine erişim işlemini başlatır. \n 1.\tHesap Bilgisi müşteri rızasının hazırlanması: \n HBHS, “hesap bilgilerine erişim” için müşteri rızası tesisi amacıyla HHS’deki hesap bilgisi rızası erişim adresine bir POST isteğinde bulunur ve bir hesap bilgisi rızası nesnesi oluşturur. HHS hesap bilgisi rızası nesnesi için biricik tanımlayacı döner (RızaNo). Hesap bilgisi rızası, müşterinin HBHS’nin hesap bilgilerine erişim izin verdiği alanları içerir: \n \n İzinler - erişim için izin verilen veri kümelerinin listesi. \n Erişimin Geçerli Olduğu Son Tarih - HBHS'nin müşterinin hesap bilgilerine erişebileceği isteğe bağlı seçilebilen son tarih. \n İşlem Sorgulama Başlangıç Zamanı – Müşteri rızasının tesisinden itibaren geriye dönük olarak HBHS’nin hesap bilgilerine erişebileceği süreyi \n İşlem Sorgulama Bitiş Zamanı - Müşteri rızasının tesisinden itibaren ileriye dönük olarak HBHS’nin hesap bilgilerine erişebileceği süreyi \n \n 2.\tHesap bilgisi hizmeti müşteri rızasının tesisi: \n HHS, Hesap Bilgisi Rızası servisi ile ÖHK özelinde “Yetki bekleniyor” statüsünde bir rıza nesnesi hazırlar. HHS, GKD’nin başarıyla tamamlanması sonrasında hesap bilgisi rızası nesnesinin yetkilendirildiğini belirtmek için Rıza Durumunu “Rıza Yetkilendirildi” olarak günceller. Nesne yetkilendirildikten sonra HHS nesne ile bir erişim belirteci (access token) ilişkilendirir, Rıza Durumunu “Yetki Kullanıldı” yapar ve bu belirteci HBHS’ye geri döner.  Böylece müşteri rıza tesisi sağlanmış olur. \n Hesap bilgisi için müşteri rızasına ilişkin temel ilkeler şunlardır: \n \n 1 ÖHK'nın 1 YÖS için 1HHS'de Yetki Bekleniyor, Yetkilendirildi, Yetki Kullanıldı statüsünde 1 rızası olabilir. \n Müşteri rızasının ayrıntıları ÖHK ile HBHS arasında belirlenir. Bu nedenle müşteri rızasının ayrıntıları HHS ekranında değiştirilmemelidir. \n ÖHK, hesap erişim izni ayrıntılarını yalnızca bir bütün olarak yetkilendirebilir veya geri alabilir. \n Müşteri rızası tesisi esnasında, müşteri HHS arayüzünde erişim için yetkilendirecek hesapları seçer. \n Ödeme Sistemine doğrudan katılımcı olmayan HHS'ler, müşterilerine IBAN hizmeti sunmayabildikleri için hesap referansı ile akışlarını kurgulayabilirler. YÖS önyüzlerinde yapılan bilgilendirmelerde, IBAN harici hesap referansı ile işlem yapılabilmesine dikkat edilmelidir. \n \n 2.1\tHesap bilgisi rızasının sorgulanması:  Müşteri rızası  GET/hesap-bilgisi-rizasi/{RizaNo}  çağrısı yapılarak sorgulanır. \n 2.2\tHesap bilgisi müşteri rızasının iptali:  Müşteri rızası  DELETE/hesap-bilgisi-rizasi/{RizaNo}  çağrısı yapılarak iptal edilir. \n 3.\tHesap bilgilerinin alınması:  Hesap bilgileri ilgili kaynağa (hesaplar, bakiye, işlemler) GET isteği yapılarak gerçekleştirilir. HBHS, müşteri rızasının tesisinden sonrasında (geçerli bir erişim belirticine sahip olduğunda) öncelikle  GET/hesaplar  çağrısı yapacaktır. \n Nezdinde ödeme hesabı bulunduran hesap hizmeti sağlayıcılar(Banka, EPK, Ödeme Kuruluşları) müşterilerine ait hesapları hesap referansı ya da hesap numarası üzerinden takip etmektedir. YÖS'lerin HBH servisleri için hesap referansı veya hesap numarası üzerinden işlem yapılabileceğini bilmeleri, sistemlerini API dokümanında belirtilen akışlara göre uyumlandırmaları ve müşteri bilgilendirmesini (önyüzlerinde hesap no ve hesap referansı ayrımını gözeterek) buna paralel yapmaları beklenmektedir. \n Hesap Bilgisi Hizmeti İçin Erişim Adresleri \n Etki Alanı (Scope) =“hesap_bilgisi” \n \n \n \n No \n Kaynak \n HTTP işlemi \n Erişim Adresi \n Zorunlu / İsteğe Bağlı \n Yetkilendirme Türü \n İmzalama \n Parametre \n İstem Nesnesi \n Yanıt Nesnesi \n \n \n \n \n 1 \n hesap-bilgisi-rizasi \n POST \n /hesap-bilgisi-rizasi \n Z \n İstemci Kimlik Bilgileri \n İmzalı İstek ve Yanıt \n \n HesapBilgisiRizasiIstegi \n HesapBilgisiRizasi \n \n \n 2 \n erisim-belirteci  (GKD için) \n POST \n /erisim-belirteci \n Z \n İstemci Kimlik Bilgileri \n İmzalı İstek ve Yanıt \n \n ErisimBelirteciIstegi \n ErisimBelirteci \n \n \n 2.1 \n hesap-bilgisi-rizasi \n GET \n /hesap-bilgisi-rizasi/{RizaNo} \n Z \n İstemci Kimlik Bilgileri \n İmzalı Yanıt \n \n \n HesapBilgisiRizasi \n \n \n 2.2 \n hesap-bilgisi-rizasi \n DELETE \n /hesap-bilgisi-rizasi/{RizaNo} \n Z \n İstemci Kimlik Bilgileri \n \n \n \n \n \n \n 3.1 \n hesaplar \n GET \n /hesaplar \n Z \n İstemci Kimlik Bilgileri ve Yetkilendirme Kodu (GKD) \n \n Sayfalama \n \n HesapBilgileri(birden çok hesap) \n \n \n 3.2 \n hesaplar \n GET \n /hesaplar/{hspRef} \n Z \n İstemci Kimlik Bilgileri ve Yetkilendirme Kodu (GKD) \n \n \n \n HesapBilgileri(tek  hesap) \n \n \n 3.3 \n bakiye \n GET \n /hesaplar/{hspRef}/bakiye \n Z \n İstemci Kimlik Bilgileri ve Yetkilendirme Kodu (GKD) \n \n \n \n BakiyeBilgileri(tek  hesap) \n \n \n 3.4 \n bakiye \n GET \n /bakiye \n Z \n İstemci Kimlik Bilgileri ve Yetkilendirme Kodu (GKD) \n \n Sayfalama \n \n BakiyeBilgileri(birden çok hesap) \n \n \n 3.5 \n islemler \n GET \n /hesaplar/{hspRef}/işlemler \n Z \n İstemci Kimlik Bilgileri ve Yetkilendirme Kodu (GKD) \n \n Sayfalama Filtreleme \n \n IslemBilgileri (tek hesap) \n \n \n \n Tablo 11: Hesap Bilgisi Hizmeti İçin Erişim Adresleri \n ADIM 0: ÖHK'nın hesap bilgilerine erişim için talepte bulunması: \n ÖHK, HBHS uygulamasında (web arayüzü/mobil uygulama) hesap bilgilerine erişim için talepte bulunur. \n 7.1 ADIM 1: Hesap Bilgisi Rızasının Hazırlanması \n Bu API çağrısı HBHS'nin HHS'de yeni bir “HesapBilgisiRizasi” nesnesi oluşturmasını ve nesneye erişmek için benzersiz bir rıza numarası ({RizaNo}) dönülmesini sağlar. \n API çağrısının başarıyla sonuçlanması için HBHS'nin istemci kimlik bilgileri yetkisi kullanması yeterlidir.\nBaşarıyla oluşturulan hesap bilgisi rıza kaynağının rıza durumu “Yetki Bekleniyor” olarak düzenlenir.\nÖHK daha önce aldığı rızaya ilişkin erişim tarihleri, izin türlerini ve hesap bilgilerini güncellemek isterse, HBHS önce HHS nezdindeki rızayı iptal etmeli ve sonrasında yeni bir rıza talebinde bulunmalıdır.\n \n \n Şekil 11: Hesap Bilgisi Müşteri Rızasının Hazırlanması \n \n \n Sürüm 1.1.0 için POST /hesap-bilgisi-rizasi isteğinde 06- Anlık Bakiye Bildirimi izin türü için YÖS’ün BAKİYE kaynak tipinde olay abonelik kaydının olması gerekmektedir. BAKİYE kaynak tipinde olay abonelik kaydı olmayan YÖS kurumu ; sürüm 1.1.0 için 06 izin türünü kapsayan Hesap Bilgisi Rızası isteği gönderdiğinde HHS tarafından  TR.OHVPS.Business.EventSubscriptionNotFound  hatası verilmeli ve rıza oluşturulmamalıdır. \n \n \n POST /hesap-bilgisi-rizasi isteğinin (REQUEST) gövdesinde (BODY)  “HesapBilgisiRizasıIstegi” nesnesi (Tablo-12) kullanılır. İstek başarıyla sonuçlanırsa HHS kaynak sunucusunda “HesapBilgisiRizasi” (Tablo-13) nesnesi oluşturulur. \n  POST /hesap-bilgisi-rizasi \n Başarılı İstek: \n İSTEK: \n HBHS, bu API erişim adresinden HHS’ye yeni bir HesapBilgisiRizasi oluşturulması için istekte bulunur: \n \n HBHS, ÖHK’nın hesap bilgilerine yönelik rıza başlatma isteği olduğunu HHS’ye bildirir. \n HBHS, ÖHK’nın, HBHS arayüzünden verdiği rızanın (“Ön Onay”) bir kopyasının HHS nezdinde müşteri tarafından onaylanması için HHS’ye gönderilmesini sağlar. \n HHS; istek mesajında yer alan alanların API dökümanında belirtilen şartları sağlayacak şekilde zorunluluk ve uzunluk kontrollerini yapar. (Zorunlu) \n HHS; YÖS API ile alınan HBHS bilgilerinin içerisinde yer alan yönlendirme adresleri ile hesap bilgisi rızası nesnesi request mesajında paylaşılan adreslerin uyumlu olup olmadığının kontrollerini yapar. (Zorunlu) \n HHS; kimlik bilgileri nesnesinde iletilen kimlik bilgileri ile ÖHK’nın HHS müşterisi olup olmadığının kontrollerini yapar. Bu kontrol hem bireysel hem de kurumsal ÖHK’lar için yapılmalıdır.  (Zorunlu) \n Erişimin Geçerli Olduğu Son Tarih, İşlem Sorgulama Başlangıç Zamanı, İşlem Sorgulama Bitiş Zamanı alanları ile ilgili Tablo 12’de belirtilen kontroller yapılmalıdır. (Zorunlu) \n HHS, benzersiz “RizaNo” ile “HesapBilgisiRizasi” nesnesi oluşturur ve HBHS’ye döner. \n HHS, HesapBilgisiRizasi oluşturduğu anda durumunu “Yetki Bekleniyor” olarak düzenler. \n \n Erişimin Geçerli Olduğu Son Tarih, İşlem Sorgulama Başlangıç Zamanı, İşlem Sorgulama Bitiş Zamanı alanlarında zaman aralıkları müşteri deneyimi penceresinden değerlendirilerek ay cinsinden belirtilmiştir. Bu konuda aşağıdaki gibi oluşabilecek uç örneklere dikkat edilmesi gerekmektedir. \n Yeni günün başlangıç saatinin 00:00:00 olduğu kabul edilmiştir. \n Bugün : 31.08.2019 \nBugün + 6 Ay : 01.03.2020 00:00:00 (29.02.2020 tüm gün dahildir.) \nBugün : 30.08.2020 \nBugün + 6 Ay : 01.03.2020 00:00:00 (28.02.2021 tüm gün dahildir.) \nBugün : 30.09.2022 \nBugün + 3 Ay : 01.01.2023 00:00:00 (30.12.2022 tüm gün dahildir.) \nBugün : 14.07.2022 \nBugün + 3 Ay : 15.10.2022 00:00:00 (14.10.2022 tüm gün dahildir.) \n Tablo 12: “HesapBilgisiRizasiIstegi” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n HHS tarafından yapılması gereken kontrol ve işlemler \n \n \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n HHS, hhsKod’un kendisine ait olduğunu ve istek başlığındaki x-aspsp-code değeri ile aynı olduğunu kontrol eder. Hata durumunda TR.OHVPS.Connection.InvalidASPSP hata kodunu döner. \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur \n HHS, yosKod’un geçerli bir Ödeme Hizmeti Sağlayıcısı Kodu olduğunu ve istek başlığındaki x-tpp-code değeri ile aynı olduğunu kontrol eder.  Hata durumunda TR.OHVPS.Connection.InvalidTPP hata kodunu döner. \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n \n >Yetkilendirme Yöntemi \n yetYntm \n AN1 \n İ \n TR.OHVPS.DataCode.GkdTur sıralı veri türü değerlerinden birini alır.   Yetkilendirme yöntemi, HBHS tarafından belirtilmeyebilir. \n HHS, HBHS’nin belirlediği yöntemi dikkate alarak süreci ilgili akışa uygun olarak devam ettirir. Desteklemediği yöntem için (örn: Ayrık GKD) ayrıca hata mesajı verilmelidir. \n \n \n > Yönlenme Adresi \n yonAdr \n AN1..1024 \n K \n Yönlendirmeli güçlü kimlik doğrulama için zorunlu.  YÖS’ün ileteceği adrestir.   Durum kodu(drmKod), yönlendirme adresine parametre olarak eklenmelidir. \n HHS, müşteri uygulama / tarayıcısını bu alanda belirtilen adrese yönlendirir. \n \n \n > Ayrık GKD \n ayrikGkd \n Kompleks:AyrikGkd \n K \n Ayrık güçlü kimlik doğrulama için zorunlu. \n yetYntm = A gönderilmiş ise ayrikGkd nesnesinin dolu gönderilmesi zorunludur.   HHS, YÖS'ün AYRIK_GKD_BASARILI ve AYRIK_GKD_BASARISIZ olay tipleri için olay aboneliğinin varlığını kontrol eder.  Bknz: Ayrık GKD \n \n \n >> OHK Tanım Tip \n ohkTanimTip \n AN8 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım tipleridir.  TR.OHVPS.DataCode.OHKTanimTip  sıralı veri tiplerinden birini alır. \n \n \n \n >> OHK Tanım Değer \n ohkTanimDeger \n AN1..30 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım değeridir. ohkTanimTip'i ile uyumlu değerdir. \n \n \n \n Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n \n > Kimlik Türü \n kmlkTur \n AN1 \n Z \n TR.OHVPS.DataCode.KimlikTur sıralı veri türü değerlerinden birini alır.   Kurum adına yapılan(ticari) işlemlerde kurum kullanıcısının bilgisi iletilmelidir. \n \n \n \n > Kimlik Verisi \n kmlkVrs \n AN1..30 \n Z \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır.   TR.OHVPS.DataCode.KimlikTur değerine göre uzunluk ve formatı değişir.   Kurum adına yapılan(ticari) işlemlerde kurum kullanıcısının bilgisi iletilmelidir. \n \n \n \n > Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n K \n ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür.  TR.OHVPS.DataCode.KurumKimlikTur sıralı veri türü değerlerinden birini alır. \n \n \n \n > Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n K \n ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.  TR.OHVPS.DataCode.KurumKimlikTur değerine göre uzunluk ve formatı değişir. \n \n \n \n > Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur sıralı veri türü değerlerinden birini alır (B: Bireysel, K:Kurumsal) \n \n \n \n Hesap Bilgisi \n hspBlg \n Kompleks: HesapBilgisi \n Z \n \n \n \n \n >İzin Bilgisi \n iznBlg \n Kompleks: IzinBilgisi \n Z \n \n \n \n \n >> İzin Türü \n iznTur \n Array[AN2] \n Z \n ÖHK tarafından HHS önyüzünde belirlenen izin tipleridir. Bir istekte birden fazla değer bulunabilir, TR.OHVPS.DataCode.IzinTur sıralı veri türü değerlerinden birini alır. \n \n \n \n >> Erişimin Geçerli Olduğu Son Tarih \n erisimIzniSonTrh \n ISODateTime \n Z \n Hesap bilgisi rızasının geçerli olduğu son tarih.   Müşteri YÖS ekranından bu değeri belirleyebilir.   Varsayılan değer : Rıza verilen tarih + 6 ay   Alabileceği maksimum değer : Rıza tarihi + 6 ay    Alabileceği minimum değer : Rıza tarihi + 1 gün    Örneğin  04/02/2023’de minimum 05/02/2023 seçilebilir. Bu durumda yeni günün başlangıç saati 00:00:00 olduğu kabul edildiği için; erisimIzniSonTrh değeri 2023-02-06T00:00:00+03:00 olmalıdır.  HHS rıza onay ekranlarında YÖS'ten iletilen erişim izni son tarihi yeni günün başlangıç saati olarak iletildiğinden ÖHK'ya gösterilecek tarih erişim izninin biteceği gün olarak gösterilmelidir.  Örneğe istinaden; ÖHK YÖS’de 05/02/2023 seçmiş ise HHS rıza onay ekranında 06/02/2023 görmemeli, bu iki tarihin aynı, yani 05/02/2023 olacak şekilde gösterilmesi gerekmektedir.      Örnek rıza oluş zamanı  : 2023-02-04T21:20:20+03:00    1 günlük rıza verildiğinde erisimIzniSonTrh değeri:    2023-02-06T00:00:00+03:00 (26 saat 40 sakikalık rıza vermiş oluyor.)    7 günlük rıza verildiğinde erisimIzniSonTrh değeri:  2023-02-12T00:00:00+03:00    1 aylık rıza verildiğinde erisimIzniSonTrh değeri :   2023-03-05-T00:00:00+03:00 \n Bu alanda bir değer bulunmadığı durumda HHS hata dönmelidir. \n \n \n >> İşlem Sorgulama Başlangıç Zamanı \n hesapIslemBslZmn \n ISODateTime \n K \n Hesap bilgisi rızası verilmesinden geçmişe dönük en fazla 12 ay olabilir, daha eski olmaması gerekir.   Varsayılan değeri rıza verilen tarih (işlem zamanı) – 12 aydır.   ÖHK bu alana bir değer girişi sağlamış ise zaman bilgisi üretilirken ekrandan girilen tarihe 00:00:00 zaman bilgisi eklenmelidir. ÖHK değer girişi sağlamamış ise ÖBHS varsayılan değerlerle bu alanı doldurarak, HHS’ye iletir.   Minimum tarihi : Rızanın veriliş tarihi  - 12 ay    Maksimum tarih: Rızanın veriliş tarihi +  12 ay    İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçildiğinde bu alanların doldurulması zorunludur.  İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçilmemiş ise gönderilmemelidir. \n ÖHK tarafından izin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçilmemiş ve  İşlem Sorgulama Başlangıç Zamanı ÖBHS tarafından dolu olarak gönderilmiş ise HHS tarafından işlemin devamına izin verilmez. İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçilmiş ise; HHS bu alanın alabileceği minimum ve maksimum değerlerin sınırlar içerisinde olduğunu kontrol eder. \n \n \n >> İşlem Sorgulama Bitiş Zamanı \n hesapIslemBtsZmn \n ISODateTime \n K \n Hesap bilgisi rızası verilmesinden geleceğe dönük en fazla 12 ay sonrası olabilir, daha ileri bir tarih olmaması gerekir.   Varsayılan değeri: Rıza verilen tarih + 12 aydır. ÖHK bu alana bir değer girişi sağlamış ise girdiği tarihe 1 gün eklenir ve yeni günün ilk saati kabul edilen 00:00:00 saat bilgisini ekler.  ÖHK bu alana bir değer girişi sağlamamış ise ÖBHS varsayılan değerlerle bu alanı doldurarak, HHS’ye iletir.  Minimum tarihi : Rızanın veriliş tarihi  – 12 ay  Maksimum tarihi :  Rızanın veriliş tarihi + 12 ay   İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçildiğinde bu alanların doldurulması zorunludur.  İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçilmemiş ise gönderilmemelidir. Eğer dolu gönderilirse HHS tarafından uygun hata mesajı iletilmelidir. \n ÖHK tarafından izin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçilmemiş ve İşlem Sorgulama Bitiş Zamanı ÖBHS tarafından dolu olarak gönderilmiş ise HHS tarafından işlemin devamına izin verilmez.   İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçilmiş ise; HHS bu alanın alabileceği minimum ve maksimum değerlerin sınırlar içerisinde olduğunu kontrol eder. \n Başarılı Yanıt: \n Tablo 13: HesapBilgisiRizasi nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Riza Bilgileri \n rzBlg \n Kompleks: RizaBilgileri \n Z \n \n \n \n > Rıza No \n rizaNo \n AN1..128 \n Z \n HesapBilgisiRızasi nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n > Oluşturma Zamanı \n olusZmn \n ISODateTime \n Z \n HesapBilgisiRızası nesnesinin oluşturulma zamanı \n \n \n > Güncellenme Zamanı \n gnclZmn \n ISODateTime \n Z \n HesapBilgisiRızası nesnesinin güncellenme zamanı \n \n \n > Rıza Durumu \n rizaDrm \n AN1 \n Z \n TR.OHVPS.DataCode.RizaDurumu sıralı veri tipini değerlerinden birini alır. Örn; hesap bilgi rızasının tesisine dair ilk istek mesajına dönüşte “B: Yetki Bekleniyor” değerini alması beklenir. \n \n \n > Rıza Iptal Detay Kodu \n rizaIptDtyKod \n AN2 \n K \n Rıza durumunun iptal olduğu durumda zorunludur. \n \n \n Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n > Kimlik Türü \n kmlkTur \n AN1 \n Z \n TR.OHVPS.DataCode.KimlikTur sıralı veri türü değerlerinden birini alır. \n \n \n > Kimlik Verisi \n kmlkVrs \n AN1..30 \n Z \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır. TR.OHVPS.DataCode.KimlikTur değerine göre uzunluk ve formatı değişir. \n \n \n > Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n K \n ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür.  TR.OHVPS.DataCode.KurumKimlikTur sıralı veri türü değerlerinden birini alır. \n \n \n > Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n K \n ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.  TR.OHVPS.DataCode.KurumKimlikTur değerine göre uzunluk ve formatı değişir. \n \n \n > Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur sıralı veri türü değerlerinden birini alır (B: Bireysel, K:Kurumsal) \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n > Yetkilendirme Yöntemi \n yetYntm \n AN1 \n Z \n HHS, HBHS’nin belirlediği yöntemi dikkate alarak süreci ilgili akışa uygun olarak devam ettirir. Desteklemediği yöntem için (örn: Ayrık GKD) ayrıca hata mesajı verilmelidir.  TR.OHVPS.DataCode.GkdTur sıralı veri türü değerlerinden birini alır. \n \n \n > Yönlenme Adresi \n yonAdr \n AN1..1024 \n K \n HHS, müşteri uygulama / tarayıcısını yönlendirmeli akışta bu alanda belirtilen YÖS adresine yönlendirir. \n \n \n > Ayrık GKD \n ayrikGkd \n Kompleks:AyrikGkd \n K \n Ayrık güçlü kimlik doğrulama için zorunlu. \n \n \n >> OHK Tanım Tip \n ohkTanimTip \n AN8 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım tipleridir. İstek içerisindeki veri değiştirilmeden iletilir. \n \n \n >> OHK Tanım Değer \n ohkTanimDeger \n AN1..30 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım değeridir. ohkTanimTip'i ile uyumlu değerdir.  İstek içerisindeki veri değiştirilmeden iletilir. \n \n \n > HHS Yönlenme Adresi \n hhsYonAdr \n AN1..1024 \n K \n Yönlendirmeli akış türünde\tGKD doğrulama bilgilerinin girilebilmesi için uygulamadan açılacak yönlendirme sayfasının adresi. Ayrık GKD akışında bu alan dönülmemelidir. \n \n \n > Yetkilendirme Tamamlanma Zamanı \n yetTmmZmn \n ISODateTime \n Z \n Yetkilendirme akışının tamamlanması gereken son zamanı gösterir.  HHS tarafından maksimum 5 dk içinde işlem tamamlanacak şekil zaman damgası oluşturulur. Zaman aşımı olduğunda HHS’nin GKD’ye izin vermeyecek şekilde hata mesajı vermesi gerekmektedir. Rıza durumu Yetkilendirildi statüsüne geçene kadarki süredir. \n \n \n Hesap Bilgisi \n hspBlg \n Kompleks: HesapBilgisi \n Z \n \n \n \n > İzin Bilgisi \n iznBlg \n Kompleks: IzinBilgisi \n Z \n \n \n \n >> İzin Türü \n iznTur \n Array[AN2] \n Z \n ÖHK tarafından HBHS önyüzünde belirlenen izin tipleridir. Bir istekte birden fazla değer bulunabilir, TR.OHVPS.DataCode.IzinTur sıralı veri türü değerlerinden birini alır. \n \n \n >> Erişimin Geçerli Olduğu Son Tarih \n erisimIzniSonTrh \n ISODateTime \n Z \n Hesap bilgisi rızasının geçerli olduğu son tarih \n \n \n >> İşlem Sorgulama Başlangıç Zamanı \n hesapIslemBslZmn \n ISODateTime \n K \n Hesap hareketlerinin sorgunabileceği başlangıç zamanı. İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçildiğinde bu alanların doldurulması zorunludur. \n \n \n >> İşlem Sorgulama Bitiş Zamanı \n hesapIslemBtsZmn \n ISODateTime \n K \n Hesap hareketlerinin sorgunabileceği bitiş zamanı. İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçildiğinde bu alanların doldurulması zorunludur. \n \n \n > Ayrıntı Bilgi \n ayrBlg \n Kompleks: AyrintiBilgi \n İ \n \n \n \n > ÖHK Mesaj Alanı \n ohkMsj \n AN1..200 \n İ \n HHS’nin ÖHK’ya göstermek üzere ilettiği mesaj. \n İzinler \n Bir hesap bilgisi müşteri rızası kaynağı çağrısına yanıt olarak döndürülen verileri sınırlamak için izin kodları kullanılır: \n \n Temel Hesap Bilgisi \n Ayrıntılı Hesap Bilgisi \n Bakiye Bilgisi \n Temel İşlem (Hesap Hareketleri) Bilgisi \n Ayrıntılı İşlem Bilgisi \n Anlık Bakiye Bildirimi \n \n ÖHK’ya sunulacak seçimler ve kuralları aşağıdaki gibi olmalıdır. \n \n \n \n Seçim \n Kural \n \n \n \n \n Temel Hesap Bilgisi \n ÖHK seçimine sunulmamalıdır. Değiştirilemez şekilde seçili gösterilmelidir. \n \n \n Ayrıntılı Hesap Bilgisi \n ÖHK seçim yapabilir. \n \n \n Bakiye Bilgisi \n ÖHK seçim yapabilir. \n \n \n Temel İşlem (Hesap Hareketleri)  Bilgisi \n ÖHK seçim yapabilir. \n \n \n Ayrıntılı İşlem Bilgisi \n ÖHK seçim yapabilir. Ayrıntılı İşlem Bilgisi seçimi Temel İşlem Bilgisi seçimini kapsar. (Ayrıntılı İşlem bilgisi seçildiğinde Temel İşlem Bilgisi de seçili olmalıdır.) \n \n \n Anlık Bakiye Bildirimi \n Bakiye Bilgisi izin türü ile birlikte seçilmesi gereklidir. ÖHK, HHS'de olacak bakiye değişikliklerinden anlık haberdar olmak istiyor ise bu izin türü seçimi ile rıza başlatması gereklidir. \n \n \n \n Aşağıdaki durumlarda, izin kombinasyonlarına izin verilmez. HHS, bu hesap erişim onaylarını 400 (Hatalı İstek) yanıt koduyla reddetmelidir: \n \n İzin dizisinin herhangi bir izin türü içermemesi durumu, \n İzin dizisinde HHS tarafından desteklenmeyen bir izin kodunun yer alması durumu \n 7.2 ADIM 2: Hesap Bilgisi Hizmeti Rızasının Tesisi \n \n \n Şekil 12: Hesap Bilgisi ÖHK Rızasının Tesisi \n Rıza tesisinin başarıyla sonuçlanması için HBHS'nin istemci kimlik bilgileri yetkisi kullanması ve ardından müşterinin HHS tarafından yönlendirmeli veya ayrık GKD ile doğrulanması gerekir. HHS'de oluşturulan ve rıza durumu “Yetki Bekleniyor” olan bir hesap bilgisi rızası, GKD sonrası “Yetkilendirildi” statüsüne güncellenir. HBHS, erişim sağlayacağı hesapları hesap bilgisi rızasının tesisinden önce seçer. \n \n \n Yönlendirmeli doğrulama akışında, HBHS ÖHK’yı HHS’ye yönlendirir. \n \n \n HBHS tarafından yönlendirme, bir önceki adımdaki RizaNo’yu içerir. \n \n \n HHS, ÖHK için GKD sürecini işletir. \n ÖHK’yı doğrularsa, \n \n \n ÖHK HBHS üzerinden işlem yapılmasına izin vereceği hesap seçimini, hesap numarası ya da hesap referansı bilgisi ile yapar. HBHS üzerinden ÖHK’nın verdiği izin bilgilerini ve erişim izninin bitiş tarihi bilgilerini, HHS bilgilendirme amaçlı ÖHK’ya gösterir. \n \n \n HHS hesap bilgisiri rıza kaynağının durumunu “Yetkilendirildi” olarak günceller. \n \n \n HHS, ÖHK’yı “olumlu yönlendirme akışı” ile HBHS tarafından tanımlanan yönlendirme adresine yönlendirir: \n yonAdr?rizaDrm=Y&yetKod=xx&rizaNo=yy&rizaTip=H&drmKod=zzz\n \n \n \n ÖHK’yı doğrulayamazsa, \n \n \n HHS, hesap bilgisi rıza kaynağının durumunu “Yetki İptal” olarak günceller. \n \n \n HHS, ÖHK’yı “olumsuz yönlendirme akışı” ile HBHS tarafından tanımlanan yönlendirme adresine yönlendirir: \n yonAdr?rizaDrm=I &rizaNo=yy&rizaTip=H&rizaIptDtyKod=11&drmKod=zzz\n \n \n \n \n \n \n \n Ayrık doğrulama akışında, HHS, ÖHK’nın hesap bilgisi hizmetini başlattığı uygulamadan farklı olabilecek bir “doğrulama” uygulamasında işlemi doğrulamasını ister. \n \n Ayrık akış HBHS’nin farklı bir kanal kullanarak yetkilendirme isteği göndermesiyle başlatılır. \n Bu yetkilendirme isteği, yetkilendirilecek hesap bilgisi rızasının eşleştirileceği ÖHK’nın bulunması için ilgili veriyi taşır. \n HHS, ödeme hizmeti kullanıcısını doğrular. \n ÖHK verdiği izin tipi dahilinde bilgileri paylaşılacak olan hesapları seçer. \n HHS, hesap bilgisi rıza kaynağının durumunu “Yetkilendirildi” olarak günceller. \n \n \n \n Başarılı GKD sonrasında (rizaDrm=’Y’) ilgili rıza nesnesi için (belirli bir rizaNo) yetkilendirme kodunun (yetKod) alınmasının ardından erişim belirteci erişim adresine POST çağrısı yapılarak yetkilendirme kodu karşılığında erişim belirteci ve yenileme belirteci alınır. POST /erişim-belirteci erişim noktası EK-3’te açıklanmıştır. \n Erişim belirteci alındıktan sonra; HHS,  hesap bilgisi rızasının durumunu “Yetki Kullanıldı” olarak günceller. Rıza tesisi sağlanmış olur. \n 7.3 ADIM 2.1: Hesap Bilgisi Rızasının Sorgulanması \n GET /hesap-bilgisi-rizasi/{RizaNo} \n ÖHK, HHS üzerinden rıza iptali yapmış olabilir veya ÖHK’nın verdiği rıza süresi dolmuş olabilir.  Bu durumlarda HBHS, rıza alma akışına başlamadan önce, daha önce oluşturulmuş bir HesapBilgisiRizasi kaynağının durumunu, isteğe bağlı olarak alabilir. \n Servis başarılı yanıtında Tablo 13’de belirtilen “HesapBilgisiRizasi” nesnesini dönmektedir. \n Durum \nHesapBilgisiRizasi kaynağı için kullanılabilecek durum göstergeleri şu şekildedir: \n \n \n Yetki Bekleniyor \n \n \n Yetkilendirildi \n \n \n Yetki Kullanıldı \n \n \n Yetki Sonlandırıldı \n \n \n Yetki İptal \n \n \n Hesap bilgisi rızası sonlandırıldı ve iptal statüsünde olan rıza'ların güncellenme zamanından(gnclZmn) 6 ay sonrasına kadar sorgulanabilir olması beklenmektedir. HHS'ler ilgili süre sonrasında yapılacak rıza sorgularına TR.OHVPS.Resource.NotFound uyarısı verebilir. YÖS'ler tarafından iptal ve sonlandırıldı statüsünde olan rızalar için sorgulama yapmamalıdır. \n 7.4 ADIM 2.2: Hesap Bilgisi Rızasının İptali \n \n \n \n Şekil 13: Hesap Bilgisi Müşteri Rızasının Geri Alınması \n DELETE /hesap-bilgisi-rizasi/{RizaNo} \n DELETE /hesap-bilgisi-rizasi çağrısı, bir HBHS'nin önceden oluşturulmuş bir hesap erişim rızasını (yetkili olsun veya olmasın) silmesine izin verir. Müşteri, rızasını HHS üzerinden iptal etmek yerine, HBHS üzerinden bu rızasını kaldırmak isteyebilir. \nBu API çağrısı, müşterinin HBHS üzerinden hesap bilgisi rızasını iptal etmesine ve HHS nezdindeki hesap bilgisi rızası nesnesinin silinmesini sağlar. \nMüşterinin HBHS’nin veri erişim iznini iptal etmesi durumunda HBHS, HHS’de mevcut olan HesapBilgisiRizasi kaynağını pratik olarak mümkün olan en kısa sürede silmelidir. Bu ise, ilgili kaynağa \n DELETE /hesap-bilgisi-rizasi/{RizaNo} \nçağrısı aracılığı ile yerine getirilir. HBHS ayrıca, sisteminden Hesap Erişim İzni kaynaklarını da temizlemelidir. \nSöz konusu silme işlemi, kayıtların statüsünün pasife çekilmesi ile gerçekleştirilmelidir. Söz konusu kayıtlar, denetim izlerinin oluşturulması ve saklanmasına ilişkin ikincil düzenleme hükümleri kapsamında güvenli şekilde tutulmalıdır. \nServis istek parametresi olarak sadece path’de iletilen Rıza No bilgisine ihtiyaç duymaktadır. \nÖHK rızası başarı ile silindiğinde HTTP 204 response kodu ile işlem sonucu iletilir. Rıza tipi “I” yani “Yetki İptal” olarak güncellenir ve gnclZmn zaman damgası vurularak güncellenir. \nÖHK ile rıza iptali sırasında kurulacak iletişimde (e-posta, sms gibi) aşağıdaki alanların iletilmesi tavsiye edilmektedir: \nYÖS Adı, HHS adı, Rıza Oluşturma Zamanı, Servis Tipi Bilgisi (HBHS) \n 7.5 ADIM 3: Hesap Bilgilerinin Alınması \n    \n \n   \n Şekil 14: Hesap Bilgilerinin Alınması \n İSTEK: \nMüşteri rızası tesis edilmiş kullanıcı için HBHS API erişim adresinden HHS’ye erişilebilir hesap bilgilerini GET isteği ile sorgular: \n \n RizaDurumu “Yetki Kullanıldı” ise işleme başlanır. RizaDurumu farklı bir değerde ise “TR.OHVPS.Resource.ConsentMismatch” hatasının iletilmesi gerekir. \n GET verisinin modele göre kontrolü yapılır (Örneğin: Alan kontrolleri) \n \n GET verisinin mantıksal kontrolleri yapılır. \n \n \n Hesap bilgisi rızası alınmış ve erişim izni devam eden hesaplar içerisinden herhangi bir hesabın kapatılması ya da pasife alınması durumunda YÖS tarafından yapılan hesap isteğine HHS tarafından hesap bilgisi dönülmelidir. \n \n \n Kapalı hesap için TR.OHVPS.DataCode.HspDrm veri türünden KAPALI değeri ile, pasif hesap için TR.OHVPS.DataCode.HspDrm veri türünden PASIF değeri ile dönülmelidir. \n 7.6 ADIM 3.1 ve 3.2: Hesap Bilgilerinin Sorgulanması \n GET /hesaplar ve GET /hesaplar/{hspRef} \n Bu erişim noktalarından tüm hesapların veya belirli bir hesabın bilgilerinin sorgulanır. Hesap bilgisi için daha önce tanımlanmış izin türüne göre (Temel Hesap Bilgisi veya Detaylı Hesap Bilgisi) yanıtında dönülen HesapBilgileri nesnesinin içeriği değişir.  Tablo 15’te HesapBilgileri nesnesinin içeriği verilmiştir. \n Hesap Bilgisi Sorgu Örneği (Tüm Hesaplar) =  /hesaplar \nHesap Bilgisi Sorgu Örneği (Belirli Bir Hesap) =  /hesaplar/{hspRef} \nİşlem Sorgu Örneği (Belirli Bir Hesap) =  /hesaplar?\nsyfKytSayi=25&\nsyfNo=1&\nsrlmKrtr= hspRef &\nsrlmYon=A \n Tablo 14: Hesap Bilgileri Sorgulama İsteği Sorgu Parametreleri \n \n \n \n Alan Adı \n Parametre Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n HHS tarafından yapılması gereken kontrol ve işlemler \n \n \n \n \n Sayfa Başına İstenen Kayıt Sayısı \n syfKytSayi \n N3 \n İ \n Sayfa başına istenen kayıt sayısı. Bu alanda iletilen değer 100’den büyük olamaz. \n Bu veri gönderildiği durumda, HHS listesini bu sayı kadar gruplandırarak gönderir. Bu veri gönderilmediğinde sayfadaki kayıt sayısı 100 olarak kullanılır. \n \n \n İstenen Sayfa Numarası \n syfNo \n N3 \n İ \n Cevapta dönecek sayfa numarası 1’den başlayarak artan değerlerle iletilmelidir. \n Bu veri gönderildiği durumda, HHS işlemler listesini bu sayfadaki kayıtları gönderir. Gönderilmediğinde, HHS ilk sayfadaki kayıtları gönderir. \n \n \n Sıralama Kriteri \n srlmKrtr \n AN3..50 \n İ \n Cevapta dönülecek kayıtların sıralama kriterini belirtir. Alabileceği değerler: { “hspRef”} \n Bu veri gönderildiği durumda, HHS listesini bu kritere göre sıralayarak gönderir. Gönderilmediğinde, HHS sıralama kriterini hspRef olarak belirler. \n \n \n Sıralama Yönü \n srlmYon \n AN1 \n İ \n Cevapta dönülecek işlemlerin sıralama yönünü belirtir. Alabileceği değerler:  A: Azalan değerle sıralama Y: Artan değerle sıralama {“A”,”Y”} \n Bu veri gönderildiği durumda, HHS listesini bu yöne göre sıralayarak gönderir. Gönderilmediğinde, HHS sıralama yönünü Azalan olarak belirler. \n \n \n \n Tablo 15: “HesapBilgileri” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Rıza No \n rizaNo \n AN1..128 \n Z \n HesapBilgisiRızası nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n Hesap Temel \n hspTml \n Kompleks: HesapTemel \n Z \n Temel Hesap Bilgileri (Temel Hesap Bilgisi varsayılan izin türü olduğundan Hesap Temel nesnesi zorunlu olarak yanıtta bulunur) \n \n \n > Hesap Referansı \n hspRef \n AN5..40 \n Z \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid). YÖS bazında farklılaşması gerekmez. Bir hesap (IBAN) tek bir hspRef'e karşılık gelmelidir, benzer şekilde bir hspRef tek bir IBAN'a karşılık gelmelidir. Aynı hesap için alınan tüm rızalarda hesap referans bilgisinin değişmemesi gerekmektedir. \n \n \n > Hesap Numarası \n hspNo \n AN26 \n K \n Eğer varsa ödeme hesabına ait IBAN bilgisi \n \n \n > Hesap Sahibi Unvanı \n hspShb \n AN3..140 \n Z \n Hesap sahibi ya da hesap sahiplerinin ad-soyadı, ticari unvanı \n \n \n > Şube Adı \n subeAdi \n AN3..50 \n K \n Eğer varsa ödeme hesabının bağlı olduğu şubenin adı \n \n \n > Kısa Ad \n kisaAd \n AN3..50 \n K \n Eğer hesap sahibi hesaba ait bir ad tanımladıysa, tanımlanan hesap adı \n \n \n > Para Birimi \n prBrm \n AN3 \n Z \n Para Birimi. \n \n \n > Hesap Türü \n hspTur \n AN1 \n Z \n Hesabın türü (bireysel veya ticari). TR.OHVPS.DataCode.HspTur sırali veri değerlerinden birini alır. \n \n \n > Hesap Tipi \n hspTip \n AN1..32 \n Z \n Hesabın tipi (VADESİZ, KREDİLİ vb.).TR.OHVPS.DataCode.HspTip sıralı veri değerlerinden birini alır. \n \n \n >Hesap Ürün Adı \n hspUrunAdi \n AN1..140 \n İ \n HHS tarafından atanmış olan ürün adı bilgisidir. HBHS tarafından ÖHK’ya gösterilmesi kullanım kolaylığı sağlayacaktır. \n \n \n > Hesap Durumu \n hspDrm \n AN5..50 \n Z \n Hesabın durumunu belirtir. TR.OHVPS.DataCode.HspDrm sıralı veri türlerinden birini alır. \n \n \n Hesap Detay \n hspDty \n Kompleks: HesapDetay \n K \n Detay Hesap Bilgileri (Temel Hesap Bilgisine ek olarak Detay Hesap Bilgisi izin türü de seçilmişse Hesap Detay nesnesi koşullu olarak yanıtta bulunur) \n \n \n > Açılış Tarihi \n hspAclsTrh \n ISODateTime \n Z \n Belirtilen hesabın açılış tarihi. \n 7.7 ADIM 3.3 ve 3.4: Hesap Bakiyesinin Sorgulanması \n GET /bakiye ve GET /hesaplar/{hspRef}/bakiye \nBu erişim noktalarından tüm hesapların veya belirli bir hesabın bakiyesi sorgulanır. \nİstek çağrısına dönülen “BakiyeBilgileri” nesnesi Tablo 17’de verilmiştir. \n Hesap Bilgisi Rızası alınmış ve erişim izni devam eden hesaplar içerisinde yer alan hesaplardan kapatılmış ya da pasif duruma alınmış olan hesaplar için bakiye isteği yapıldığında HHS tarafından bakiye bilgisi dönülmelidir. \n Hesap bakiyelerinin gösterilmesi sırasında aşağıda verilen örnekler gözönünde bulundurulmalıdır. \n Örnek 1 : ÖHK  Hesap Bakiye Tutarı  0 TL,  Kredili Mevduat Hesabı Bakiyesi  3000 TL. ÖHK 1000 TL para çıkışı gerçekleştirdi. Bakiye API'si yanıtı içerisinde iletilen  Kredi Dahil Göstergesi  0 değerini içeriyorsa,  Hesap Bakiye Tutarı  -1000 TL,  Kredili Mevduat Hesabı Bakiyesi  3000 TL olmalıdır. \n Örnek 2 : ÖHK  Hesap Bakiye Tutarı  0 TL,  Kredili Mevduat Hesabı Bakiyesi  3000 TL. ÖHK 1000 TL para çıkışı gerçekleştirdi. Bakiye API'si yanıtı içerisinde iletilen  Kredi Dahil Göstergesi  1 değerini içeriyorsa,  Hesap Bakiye Tutarı  2000 TL,  Kredili Mevduat Hesabı Bakiyesi  3000 TL olmalıdır. \n Örnek 3 : ÖHK  Hesap Bakiye Tutarı  1000 TL,  Kredili Mevduat Hesabı Bakiyesi  3000 TL. ÖHK 1000 TL para çıkışı gerçekleştirdi. Bakiye API'si yanıtı içerisinde iletilen  Kredi Dahil Göstergesi  0 değerini içeriyorsa,  Hesap Bakiye Tutarı  0 TL,  Kredili Mevduat Hesabı Bakiyesi  3000 TL olmalıdır. \n Örnek 4 : ÖHK  Hesap Bakiye Tutarı  1000 TL,  Kredili Mevduat Hesabı Bakiyesi  3000 TL. ÖHK 1000 TL para çıkışı gerçekleştirdi. Bakiye API'si yanıtı içerisinde iletilen  Kredi Dahil Göstergesi  1 değerini içeriyorsa,  Hesap Bakiye Tutarı  3000 TL,  Kredili Mevduat Hesabı Bakiyesi  3000 TL olmalıdır. \n İşlem Sorgu Örneği (Belirli Bir Hesap)=  /bakiye?\nsyfKytSayi=25&\nsyfNo=1&\nsrlmKrtr= hspRef &\nsrlmYon=A \n Tablo 16: “BakiyeBilgileri” Sorgulama İsteği Sorgu Parametreleri \n \n \n \n Alan Adı \n Parametre Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n HHS tarafından yapılması gereken kontrol ve işlemler \n \n \n \n \n Sayfa Başına İstenen Kayıt Sayısı \n syfKytSayi \n N3 \n İ \n Sayfa başına istenen kayıt sayısı. Bu alanda iletilen değer 100’den büyük olamaz. \n Bu veri gönderildiği durumda, HHS listesini bu sayı kadar gruplandırarak gönderir. Bu veri gönderilmediğinde sayfadaki kayıt sayısı 100 olarak kullanılır. \n \n \n İstenen Sayfa Numarasi \n syfNo \n N3 \n İ \n Cevapta dönecek sayfa numarası 1’den başlayarak artan değerlerle iletilmelidir. \n Bu veri gönderildiği durumda, HHS işlemler listesini bu sayfadaki kayıtları gönderir. Gönderilmediğinde, HHS ilk sayfadaki kayıtları gönderir. \n \n \n Sıralama Kriteri \n srlmKrtr \n AN3..50 \n İ \n Cevapta dönülecek kayıtların sıralama kriterini belirtir. Alabileceği değerler: { “hspRef”} \n Bu veri gönderildiği durumda, HHS listesini bu kritere göre sıralayarak gönderir. Gönderilmediğinde, HHS sıralama kriterini hspRef olarak belirler. \n \n \n Sıralama Yönü \n srlmYon \n AN1 \n İ \n Cevapta dönülecek işlemlerin sıralama yönünü belirtir. Alabileceği değerler:  A: Azalan değerle sıralama Y: Artan değerle sıralama {“A”,”Y”} \n Bu veri gönderildiği durumda, HHS listesini bu yöne göre sıralayarak gönderir. Gönderilmediğinde, HHS sıralama yönünü Azalan olarak belirler. \n \n \n \n Tablo 17: “BakiyeBilgileri” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Hesap Referansı \n hspRef \n AN5..40 \n Z \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid). YÖS bazında farklılaşması gerekmez. Bir hesap (IBAN) tek bir hspRef'e karşılık gelmelidir, benzer şekilde bir hspRef tek bir IBAN'a karşılık gelmelidir. Aynı hesap için alınan tüm rızalarda hesap referans bilgisinin değişmemesi gerekmektedir. \n \n \n Bakiye \n bky \n Kompleks:Bakiye \n Z \n \n \n \n > Hesap Bakiye Tutarı \n bkyTtr \n AN1..25 \n Z \n Hesabın bakiyesi. Bloke tutar düşülmeden iletilmelidir.   Tutar alanı regex patterni şu şekildedir:  '^-?\\d{1,18}$|^-?\\d{1,18}\\.\\d{1,5}$' \n \n \n > Blokeli Tutar \n blkTtr \n AN1..24 \n K \n Varsa hesapta blokeli tutar bilgisi.     Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n \n \n > Para Birimi \n prBrm \n AN3 \n Z \n Para birimi. \n \n \n > Bakiye İletilme Zamanı \n bkyZmn \n ISODateTime \n Z \n Bakiyenin iletildiği zaman bilgisi. \n \n \n > KrediliHesap \n krdHsp \n Kompleks: KrediliHesap \n K \n \n \n \n >> Kredili Mevduat Hesabı Bakiyesi \n kulKrdTtr \n AN1..24 \n Z \n Kredili mevduat tutarı. Kredili bir hesap ise zorunlu.   Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n \n \n >> Kredi Dahil Göstergesi \n krdDhlGstr \n AN1 \n Z \n Kredili bir hesap ise zorunlu. Bakiye tutarının kredi tutarı dahil edilerek ya da edilmeden iletildiğini gösterir.   0: Kredi tutarı dahil edilmeden bakiye bilgisi iletilmesi durumu   1: Kredi tutarı dahil edilerek bakiye bilgisi iletilmesi durumu \n 7.8 ADIM 3.5 ve 3.6: İşlemlerin Sorgulanması \n GET /hesaplar/{hspRef}/islemler \n Belirli bir hesaba ilişkin işlem bilgileri Tablo 1’daki istek parametrelerine göre sorgulanır. \nHesap Bilgisi Rızası alınmış ve erişim izni devam eden hesaplar içerisinde yer alan hesaplardan kapatılmış ya da pasif duruma alınmış olan hesaplar için işlemler isteği yapıldığında HHS tarafından işlemler bilgisi dönülmelidir. \nİşlem bilgisi için daha önce tanımlanmış izin türüne göre yanıtta dönen IslemBilgileri nesnesinin (Temel İşlem Bilgisi veya Temel İşlem Bilgisi ve Detaylı İşlem Bilgisi) içeriği değişir. \nİşlemler servisi hem ÖHK’nın talebi ile YÖS uygulaması üzerinden çağrılabileceği gibi, YÖS’ün ÖHK’sız başlatabileceği otomatik çağrıları ile de yanıt dönebilmektedir. \nHHS, işlemin sistemsel yapılıp yapılmadığını, istek parametreleri içerisinde yer alan PSU-Initiated parametresi ile anlar. Bu parametre “E” ise ÖHK’lı, “H” ise sistemsel yapılmış bir sorgu anlamına gelmektedir.\nÖHK’nın başlattığı sorgular için HHS tarafından belirlenen üst rate limitler dahilinde çağrım yapılabilir. \nYÖS, otomatik yapacağı sorgularda; \n \n Bireysel ÖHK’lar için hesap bazında günde en fazla 4 adet başarı ile sonuçlanan sorgulama yapabilir. \n Kurumsal ÖHK’lar için hesap bazında saatte en fazla 12 adet başarı ile sonuçlanan sorgulama yapabilir. \n \n HHS, tutacağı sayaç bilgisi ile bu sayıları kontrol ederek daha fazla sorgulama yapılmasına izin vermeyebilir. \n Aynı istek parametreleri ile yapılan sorgu sonucunda dönecek toplam kayıt sayısı 100’ü aştığında, sayfalama yöntemi ile HHS’nin cevap dönmesi beklenmektedir.  Her bir sayfa için işlemler servisi tekrar çağrılsa da, bu çağrım HHS’nin tuttuğu sayaç değerini arttırmaz. HHS’nin tutacağı sayaçın kontrol parametreleri YÖS kodu, hesap numarası ya da referansı olmalıdır. Sayfa no parametresi varsa ve 1'den büyük ise işlem sayacını arttırmamalıdır. \n ÖHK’nın YÖS uygulaması üzerinden tetiklediği işlemlerde ise;\nbireysel ÖHK’lar  için en fazla 1 aylık,\nkurumsal ÖHK’lar için ise en fazla 1 haftalık bir pencere aralığında sorgulama yapılabilir. \n YÖS, otomatik yapacağı sorgularda hem bireysel hem de kurumsal ÖHK’lar için 24 saatlik bir pencere aralığında sorgulama yapabilir. \n Yeni günün başlangıç saatinin 00:00:00 olduğu kabul edilmiştir. \n Sorgu örnekleri aşağıdaki gibidir:  \n 1 günlük İşlem Sorgu Örneği (Belirli Bir Hesap) =  /hesaplar/{hspRef}/islemler?\nhesapIslemBslTrh=2020-06-01T00:00:00+03:00&\nhesapIslemBtsTrh=2020-06-02T00:00:00+03:00&\nminIslTtr=0&\nmksIslTtr=100000&\nbrcAlc=A&\nsyfKytSayi=25&\nsyfNo=1&\nsrlmKrtr= islGrckZaman &\nsrlmYon=A\n \n \n 1 haftalık İşlem Sorgu Örneği (Belirli Bir Hesap) =  /hesaplar/{hspRef}/islemler?\nhesapIslemBslTrh=2020-06-01T00:00:00+03:00&\nhesapIslemBtsTrh=2020-06-08T00:00:00+03:00&\nminIslTtr=0&\nmksIslTtr=100000&\nbrcAlc=A&\nsyfKytSayi=25&\nsyfNo=1&\nsrlmKrtr= islGrckZaman &\nsrlmYon=A\n \n \n 1 Aylık İşlem Sorgu Örneği (Belirli Bir Hesap) =  /hesaplar/{hspRef}/islemler?\nhesapIslemBslTrh=2020-02-01T00:00:00+03:00&\nhesapIslemBtsTrh=2020-03-01T00:00:00+03:00&\nminIslTtr=0&\nmksIslTtr=100000&\nbrcAlc=A&\nsyfKytSayi=25&\nsyfNo=1&\nsrlmKrtr= islGrckZaman &\nsrlmYon=A\n \n 1 Aylık İşlem Sorgu Örneği (Belirli Bir Hesap) =  /hesaplar/{hspRef}/islemler?\nhesapIslemBslTrh=2020-01-31T00:00:00+03:00&\nhesapIslemBtsTrh=2020-02-28T00:00:00+03:00&\nminIslTtr=0&\nmksIslTtr=100000&\nbrcAlc=A&\nsyfKytSayi=25&\nsyfNo=1&\nsrlmKrtr= islGrckZaman &\nsrlmYon=A\n \n 1 Aylık İşlem Sorgu Örneği (Belirli Bir Hesap) =  /hesaplar/{hspRef}/islemler?\nhesapIslemBslTrh=2020-02-28T00:00:00+03:00&\nhesapIslemBtsTrh=2020-03-28T00:00:00+03:00&\nminIslTtr=0&\nmksIslTtr=100000&\nbrcAlc=A&\nsyfKytSayi=25&\nsyfNo=1&\nsrlmKrtr= islGrckZaman &\nsrlmYon=A\n \n 24 saatlik pencerede yapacağı sistemsel sorgu örneği (Son sorgusunun üzerine 24 saat eklenmesi)  =\n/hesaplar/{hspRef}/islemler?\nhesapIslemBslTrh=2020-06-01T14:10:08+03:00&\nhesapIslemBtsTrh=2020-06-02T14:10:08+03:00&\nminIslTtr=0&\nmksIslTtr=100000&\nbrcAlc=A&\nsyfKytSayi=25&\nsyfNo=1&\nsrlmKrtr= islGrckZaman &\nsrlmYon=A\n \n Önyüzden alınan sorgu parametreleri ile oluşturulan sorgu örneği (Örnek sorgu tarih aralığı 20.02.2023- 25.02.2023 arasındadır)  =\n/hesaplar/{hspRef}/islemler?\nhesapIslemBslTrh=2023-02-20T00:00:00+03:00&\nhesapIslemBtsTrh=2023-02-26T00:00:00+03:00&\nminIslTtr=0&\nmksIslTtr=100000&\nbrcAlc=A&\nsyfKytSayi=25&\nsyfNo=1&\nsrlmKrtr= islGrckZaman &\nsrlmYon=A\n \n Tablo 18: İşlem Listesi Sorgulama İsteği Sorgu Parametreleri \n \n \n \n Alan Adı \n Parametre Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n HHS tarafından yapılması gereken kontrol ve işlemler \n \n \n \n \n İşlem Sorgulama Başlangıç Zamanı \n hesapIslemBslTrh \n ISODateTime \n Z \n Sorgulanacak işlemlerin başlangıç tarihi. \n HHS işlemler listesi dönüşünü bu kritere göre filtreleyerek iletmek zorundadır. ÖHK tarafından tetiklenen sorgularda;hesapIslemBslTrh ve hesapIslemBtsTrh arası fark bireysel ÖHK’lar için en fazla 1 ay,kurumsal ÖHK’lar için ise en fazla 1 hafta olabilir. YÖS tarafından sistemsel yapılan sorgulamalarda hem bireysel, hem de kurumsal ÖHK’lar için;son 24 saat sorgulanabilir. Bu yüzden hesapIslemBtsTrh-24 saat’ten daha uzun bir aralık sorgulanamaz olmalıdır. İstek başlığında yer alan PSU-Initiated alanı “E” ise ÖHK’lı, “H” ise sistemsel yapılmış bir sorgu anlamına gelmektedir. \n \n \n İşlem Sorgulama Bitiş Zamanı \n hesapIslemBtsTrh \n ISODateTime \n Z \n Sorgulanacak işlemlerin bitiş tarihi. \n HHS işlemler listesi dönüşünü bu kritere göre filtreleyerek iletmek zorundadır. YÖS tarafından sistemsel yapılan sorgulamalarda hem bireysel, hem de kurumsal ÖHK’lar için;İleri vadeli işlem emirleri dahil olmadığı için (Sürüm 1.0.2 kapsamında); İşlem Sorgulama Bitiş Zamanı, her zaman, sorgulama zaman damgasını iletecek şekilde (datetime (now)) iletilebilir. \n \n \n En Düşük İşlem Tutarı \n minIslTtr \n AN1..24 \n İ \n Sorgulanacak işlemlerin alabileceği en düşük işlem tutarı.      Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n Bu veri gönderildiği durumda HHS işlemler listesi dönüşünü bu kritere göre filtreleyerek iletmek zorundadır. \n \n \n En Yüksek İşlem Tutarı \n mksIslTtr \n AN1..24 \n İ \n Sorgulanacak işlemlerin alabileceği en yüksek işlem tutarı.    Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n Bu veri gönderildiği durumda HHS işlemler listesi dönüşünü bu kritere göre filtreleyerek iletmek zorundadır. \n \n \n Borç Alacak Göstergesi \n brcAlc \n AN1 \n İ \n TR.OHVPS.DataCode.BrcAlc sıralı veri tipi değerlerinden birini alır. Sorgulanacak işlemlerin borç / alacak kriteri B: Hesaba borç yaratan işlem.A: Hesaba alacak yaratan işlem.{“B”,”A”} \n Bu veri gönderildiği durumda HHS işlemler listesi dönüşünü bu kritere göre filtreleyerek iletmek zorundadır. \n \n \n Sayfa Başına İstenen Kayıt Sayısı \n syfKytSayi \n N3 \n İ \n Sayfa başına istenen kayıt sayısı. Bu alanda iletilen değer 100’den büyük olamaz. \n Bu veri gönderildiği durumda, HHS işlemler listesini bu sayı kadar gruplandırarak gönderir. Bu veri gönderilmediğinde sayfadaki kayıt sayısı 100 olarak kullanılır. \n \n \n İstenen Sayfa Numarasi \n syfNo \n N3 \n İ \n Cevapta dönecek sayfa numarası 1’den başlayarak artan değerlerle iletilmelidir. \n Bu veri gönderildiği durumda, HHS işlemler listesini bu sayfadaki kayıtları gönderir. Gönderilmediğinde, HHS ilk sayfadaki kayıtları gönderir. \n \n \n Sıralama Kriteri \n srlmKrtr \n AN3..50 \n İ \n Cevapta dönülecek işlemlerin sıralama kriterini belirtir. Alabileceği değerler: {“islGrckZaman”} \n Bu veri gönderildiği durumda, HHS işlemler listesini bu kritere göre sıralayarak gönderir. Gönderilmediğinde, HHS sıralama kriterini islGrckZaman olarak belirler. \n \n \n Sıralama Yönü \n srlmYon \n AN1 \n İ \n Cevapta dönülecek işlemlerin sıralama yönünü belirtir. Alabileceği değerler: A: Azalan değerle sıralama Y: Artan değerle sıralama {“A”,”Y”} \n Bu veri gönderildiği durumda, HHS işlemler listesini bu yöne göre sıralayarak gönderir. Gönderilmediğinde, HHS sıralama yönünü Azalan olarak belirler. \n \n \n \n Tablo 19: “IslemBilgileri” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Hesap Referans Numarası \n hspRef \n AN5..40 \n Z \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid). YÖS bazında farklılaşması gerekmez. Bir hesap (IBAN) tek bir hspRef'e karşılık gelmelidir, benzer şekilde bir hspRef tek bir IBAN'a karşılık gelmelidir. Aynı hesap için alınan tüm rızalarda hesap referans bilgisinin değişmemesi gerekmektedir. \n \n \n Islemler \n isller \n Kompleks:Islem[Array] \n K \n Hesaba ilişkin hareketler varsa İşlemler nesnesi dizisi olarak dönülür. İşlemler nesnesi Temel İşlem Bilgileri ve Detay İşlem Bilgileri nesnesinden meydana gelir. İzin türü varsayılan olarak Temel İşlem Bilgilerini içerir. Detay İşlem Bilgileri izin türü de seçildi ise Temel İşlem Bilgilerine ek olarak Detay İşlem Bilgileri de gönderilir. \n \n \n > Temel İşlem Bilgileri \n islTml \n Kompleks:IslemTemel \n Z \n Temel İşlem Bilgileri varsayılan olarak dönülür. \n \n \n >> İşlem Numarası \n islNo \n AN3..50 \n Z \n Hesap hareketinin oluşturulması sırasında atanan ve borç (veya alacak) hareketini tekilleştiren HHS bazında tekil tanımlayıcıdır. Bu değer tek başına tekil olabileceği gibi birden fazla değerin bir araya getirilmesiyle de tekilliği sağlanmış olabilir. Bu değerin en azından hesap numarası (hesNo) bazında tekil olması beklenir. Genellikle kullanılan örnekleri; Instance_Id, Transaction_Id, Transaction_Num, Transaction_TimeStamp,dekont numarası \n \n \n >> İşlem Referans Numarası \n refNo \n AN3..50 \n Z \n İşlemi uçtan uca tanımlayan tekil tanımlayıcıdır. Borç ve alacak hareketinden oluşan bir veya birden fazla işlemler bütünü için atanmış olan ve bu bütünü tekilleştiren (bir biri ile ilişkisini tutan) değerdir.Bu değer hem YÖS’ten gelen değer olabilir (ödeme işlemlerinde kullanılan kkodRef ya da refBlg alanı) hem de HHS içinde takip edilmek için üretilmiş bir değer olabilir. HHS sisteminde 2 değerin de bulunması durumunda;refNo alanını doldurmak için, HHS’nin YÖS’ten gelen değere öncelik vermesi beklenmektedir. YÖS’ten gelen veri örneği: Sipariş Numarası, Fatura Numarası, Karekod Referansı vb. HHS’te üretilen veri örneği: Masraflı havale işleminde hem havale işleminin hem de masraf işleminin aynı referans numarasına sahip olması da örnek olarak gösterilebilir. \n \n \n >> İşlem Tutarı \n islTtr \n AN1..24 \n Z \n İşlem tutarı.    Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n \n \n >> Güncel Bakiye Tutarı \n gnclBky \n AN1..25 \n Z \n İşlem sonrası güncel bakiye bilgisi tutarı.   Tutar alanı regex patterni şu şekildedir: ' ^[\\-\\+]?\\d{1,18}$|^[\\-\\+]?\\d{1,18}\\.\\d{1,5}$ ' \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para birimi. \n \n \n >> İşlem Gerçekleşme Zamanı \n islGrckZaman \n ISODateTime \n Z \n İşlemin gerçekleşme zamanı. \n \n \n >> İşlem Kanalı \n kanal \n AN1 \n Z \n TR.OHVPS.DataCode.OdemeKaynak sıralı veri türü değerlerinden birini alır. \n \n \n >> Borçlandırma Alacaklandırma Göstergesi \n brcAlc \n AN1 \n Z \n TR.OHVPS.DataCode.BrcAlc sıralı veri türü değerlerinden birini alır. İşlemin hesabı borç ya da alacaklandırdığı bilgisidir. \n \n \n >> İşlem Türü \n islTur \n AN3..50 \n Z \n HHS’nin işleme ait ilişkilendirdiği işlem türü değeri. TR.OHVPS.DataCode.IslemTuru sıralı veri türü değerlerinden birini alır. \n \n \n >> İşlem Amacı \n islAmc \n AN2 \n Z \n TR.OHVPS.DataCode.IslemAmaci sırali veri değerlerinden birini alır. Karekod akışında, FAST Karekod Veri Organizasyonundaki 62-08: alanında tanımlı Ödeme Amacı verisi kullanılır. \n \n \n >> Ödeme Sistemi No \n odmStmNo \n AN10..50 \n K \n Ödeme başarılı başlatıldıysa, ödemenin başlatıldığı sistemdeki referans numarası. Gerektiğinde ilgili ödeme sisteminde/HHS’de söz konusu ödemeye karşılık gelen mesajla bağlantı kurmada kullanılır.   Ödeme Hizmeti kullanıcısına işlemin takibi için gösterilebilir.  İşlemin yönlendirildiği ödeme sistemi FAST ya da PÖS ise sistemdeki ilgili mesajın Tarih, GönderenKatilimKodu ve SorguNumarasi değerlerinin birleşiminden oluşur. Bu 3 alan mevcutta kullanıldığı formatta aralarına dikey çizgi (Unicode U+2223) işareti koyularak, birleştirmeli ve iletilmelidir. Örn : Tarih|GönderenKatilimKodu|SorguNumarasi   Ödeme Havale/Virman işlemi ise HHS’nin üretmiş olduğu havale/virman numarasını içerir. Buradaki format da Tarih|GönderenKatilimKodu|Havale-virman numarası şeklinde olmalıdır. Havale/FAST/PÖS  ödeme yöntemleri için tarih alanı yyyy-aa-gg formatında 10 karakter olarak iletilmelidir. \n \n \n > Detay İşlem Bilgileri \n islDty \n Kompleks: IslemDetay \n K \n Detay İşlem Bilgileri dizi olarak gönderilmelidir. \n \n \n >> İşlem Açıklaması \n islAcklm \n AN1..200 \n Z \n HHS tarafından atanan işlem açıklaması. HHS kendi işlem hareketlerine yansıttığı açıklamayı buraya yansıtmalıdır. HHS'ler tüm hesap hareketlerini YÖS'ler ile paylaşmakla yükümlü olup, hassas veri içeren(örn: faiz, komisyon bilgisi içeren vb.) işlem hareketleri de bu kapsamda değerlendirilerek işlem açıklamasının maskeli olarak iletilmesi sağlanır. Kelimelerin ilk 3 hanesi maskeli olacak şekilde, ancak sakıncalı bulunan kelimeler varsa; (örn: faiz, komiyon vb.) kelimelerin tamamı maskeli olacak şekilde gösterilebilir. \n \n \n >> Karşı Taraf \n krsTrf \n Kompleks:  KarsiTaraf \n K \n Kullanımı işlem bazında değişmektedir. Örnek: FAST işleminde karşı taraf alıcının bilgileridir. Vergi ödemesinde kurum IBAN bilgisi müşteriye gösterilemeyebileceğinden bu alanın boş gelmesi HHS insiyatifindedir. \n \n \n >>> Karşı Maskeli IBAN \n krsMskIBAN \n AN26 \n K \n İlgili hesap hareketinin karşı tarafının maskeli IBAN bilgisi. \n \n \n >>> Karşı Unvan \n krsMskUnvan \n AN3..140 \n K \n İlgili hesap hareketinin karşı tarafının ad-soyad ya da ticari unvan bilgisi.Unvan bilgisi maskelenmeden iletilmelidir. \n \n \n >>> Karşı Taraf Kimlik Bilgisi \n krsKimlikVrs \n AN1..11 \n İ \n HHS sorumluluğunda YÖS ile paylaşılan Karşı Taraf Kimlik Bilgisi(Kimlik/Kurum Kimlik - TCKN/VKN) \n \n \n \n"},{title:"2.Kapsam ve Dayanak",frontmatter:{},regularPath:"/v1.1.0/contents/kapsam-ve-dayanak.html",relativePath:"v1.1.0/contents/kapsam-ve-dayanak.md",key:"v-9e25e106",path:"/v1.1.0/contents/kapsam-ve-dayanak.html",content:" 2.Kapsam ve Dayanak \n 12 Kasım 2019’da güncellenen “ 6493 sayılı Ödeme ve Menkul Kıymet Mutabakat Sistemleri, Ödeme Hizmetleri ve Elektronik Para Kuruluşları Hakkında Kanun ”un (Kanun) 12’nci maddesine yeni eklenen ve  Ödeme Hizmetleri Direktifi 2 'de (Payment Services Directive 2, PSD2) bulunan iki yeni ödeme hizmeti aşağıdaki gibi tanımlanmıştır (Şekil-1: Ödeme Hizmetleri Veri Paylaşım Servisleri): \n \n Ödeme Emri Başlatma Hizmeti : ÖHK’nın isteği üzerine başka bir ödeme hizmeti sağlayıcısında bulunan  ödeme hesabıyla  ilgili sunulan ödeme emri başlatma hizmeti [Madde 12, birinci fıkra, (f) bendi] \n Hesap Bilgisi Hizmeti : ÖHK’nın onayının alınması koşuluyla, ÖHK’nın ödeme hizmeti sağlayıcıları nezdinde bulunan bir veya daha fazla  ödeme hesabına  ilişkin konsolide edilmiş bilgilerin çevrim içi platformlarda sunulması hizmeti [Madde 12, birinci fıkra, (g) bendi] \n \n   \n Şekil 1: Ödeme Hizmetleri Veri Paylaşım Servisleri (ÖHVPS)- tanıtım \n Kanunun 14/A maddesinin ikinci fıkrasına göre , Kanunun 12’nci maddesinin birinci fıkrasının (f) veya (g) bentlerinde yer alan ödeme hizmetleri ile ilgili işlemlerin yürütülmesine ilişkin usul ve esaslar ile taraflarca uyulması gereken teknik ve operasyonel gereklilikler ikincil düzenlemeler uyarınca Türkiye Cumhuriyet Merkez Bankası (TCMB) tarafından belirlenir. Kanunun 12’nci maddesinin birinci fıkrasının (f) veya (g) bentlerinde yer alan ödeme hizmetlerinde kullanılan veri paylaşım servisleri  ödeme hizmetleri veri paylaşım servisleri (ÖHVPS)  olarak adlandırılmaktadır. \n Ödeme Hizmetleri ve Elektronik Para İhracı ile Ödeme Hizmeti Sağlayıcıları Hakkında Yönetmelik’in (Yönetmelik) 59’uncu maddesinin birinci fıkrası uyarınca hazırlanan bu belgede söz konusu ödeme hizmetlerini sunacak ödeme hizmeti sağlayıcısının, ödeme hesabının bulunduğu ödeme hizmeti sağlayıcısının, varsa ilgili diğer tarafların ve bu hizmetlerin sunulması için taraflar arasında kurulacak bağlantının teknik ve operasyonel gereklilikleri açıklanmaktadır. \n Düzenlemeler kapsamında yetkilendirilen üçüncü taraf hizmet sağlayıcısı  (Yetkili Ödeme Hizmeti Sağlayıcısı, YÖS) , ödeme hizmeti kullanıcılarının  Hesap Hizmeti Sağlayıcıları (HHS)  nezdindeki ödeme hesaplarına ulaşarak ödeme emri başlatma ve hesap bilgisi sağlama hizmetlerinden (ödeme hizmetleri veri paylaşım servislerinden) faydalanmasına aracılık eder. Ödeme hizmetleri veri paylaşım servisleri kapsamında iki tip YÖS bulunmaktadır:  1) Hesap Bilgisi Hizmeti Sağlayıcısı (HBHS) ve 2) Ödeme Emri Başlatma Hizmeti Sağlayıcısı (ÖBHS). \n Hesap Bilgisi Hizmeti Sağlayıcısı (HBHS) ÖHK’nın farklı Hesap Hizmeti Sağlayıcıları (HHS) nezdindeki hesaplarının bilgilerini derleyerek çevrim içi platformlarda  toplu şekilde  sunar. Ödeme Emri Başlatma Hizmeti Sağlayıcısı (ÖBHS) ise talebi üzerine ÖHK’nın HHS’de bulunan ödeme hesabından ödeme işlemi başlatır. \n ÖHVPS’nin üst düzey gösterimi Şekil-2’de verilmiştir. \n   \n Şekil 2: Ödeme Hizmetleri Veri Paylaşım Servisleri (ÖHVPS) -üst düzey gösterim \n Ödeme Hizmetleri Veri Paylaşım Servislerinin HHS’ler tarafından  GEÇİT  vasıtasıyla sunulduğu uygulama mimarisi ise Şekil-3’te sunulmuştur. \n  \n Şekil 3: ÖHVPS'nin GEÇİT vasıtasıyla sunumu \n"},{title:"HHS ve YÖS API",frontmatter:{},regularPath:"/v1.1.0/contents/hhs-yos-api.html",relativePath:"v1.1.0/contents/hhs-yos-api.md",key:"v-9cc354c6",path:"/v1.1.0/contents/hhs-yos-api.html",headers:[{level:2,title:"HHS API",slug:"hhs-api"},{level:2,title:"YOS API",slug:"yos-api"}],content:" HHS ve YÖS API \n HHS API, HHS’lerin detay bilgilerini sunan servistir. Bu servis ile aşağıdaki istek/yanıt yapıları ile ihtiyaç duyulabilecek ilgili bilgiler temin edilebilir. HHS API için “hhs_read” scope bilgisi kullanılır. \n Production ortamında HHS / YOS API içerisinde sisteme dahil olmuş, sertifikasyonu başarı ile tamamlamış paydaşlar listelenecektir. HHS tarafından desteklenen API sürümleri listelenecektir. \n YÖS’ler HHS API’sini sorgulayabilir ancak YÖS API’sini sorgulayamazlar. \nBenzer şekilde HHS’ler YÖS API’sini sorgulayabilir, HHS API’sini sorgulayamazlar. \n HHS API \n GET /hhs/{hhsKod} \n İşlem Sorgu Örneği =  /hhs  ⇨  bu sorgu yöntemi ile tüm HHS’lerin dizi şeklinde verileri listelenir. \nİşlem Sorgu Örneği =  /hhs/2001   ⇨ bu sorgu yöntemi ile gönderilmiş olan hhsKodu’na ait bilgiler listelenir. Ya da “404 Not Found” hatası alır. \nHHS ve YÖS API Tablo 20’deki istek parametrelerine göre sorgulanabilir. \nİşlem Sorgu Örneği (Belirli Bir Hesap) =  /hhs?srlmKrtr=kod&srlmYon=A \n Tablo 20: HHS ve YÖS API Sorgulama İsteği Sorgu Parametreleri \n \n \n \n Alan Adı \n Parametre Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n HHS tarafından yapılması gereken kontrol ve işlemler \n \n \n \n \n Sıralama Kriteri \n srlmKrtr \n AN3..50 \n İ \n Cevapta dönülecek işlemlerin sıralama kriterini belirtir. Alabileceği değerler: {“kod”, “unv”} \n Bu veri gönderildiği durumda, HHS işlemler listesini bu kritere göre sıralayarak gönderir. Gönderilmediğinde, sıralama kriteri “unv” olarak belirlenmelidir. \n \n \n Sıralama Yönü \n srlmYon \n AN1 \n İ \n Cevapta dönülecek işlemlerin sıralama yönünü belirtir. Alabileceği değerler: A: Azalan değerle sıralama Y: Artan değerle sıralama {“A”,”Y”} \n Bu veri gönderildiği durumda, HHS işlemler listesini bu yöne göre sıralayarak gönderir. Gönderilmediğinde, HHS sıralama yönünü Azalan olarak belirler. \n \n \n \n Tablo 21: HHS Bilgileri Sorgulama Yanıtı “Hhs” nesnesi \n \n \n \n Alan Adı \n Parametre Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n hhs kodu \n kod \n AN4 \n Z \n HHS nin kod bilgisi \n \n \n hhs unvanı \n unv \n AN3..140 \n Z \n HHS nin unvan bilgisi \n \n \n hhs markası \n marka \n AN1..140 \n Z \n ÖHK'nın kolaylıkla algılayabileceği kısa unvan bilgisi. HHS tarafından belirlenecektir. \n \n \n Açık anahtar \n acikAnahtar \n AN1..1024 \n Z \n HHS’nin mesaj imzalama için paylaştığı açık anahtar \n \n \n HHS Api Bilgileri \n apiBilgileri \n Kompleks: HhsApiBilgi[Array][0..N] \n Z \n Desteklenen Api ve sürüm bilgileri dönülecektir. \n \n \n > api \n api \n AN1..20 \n Z \n Api İsmi Örnek :obh, hbh,gkd \n \n \n > surum \n surum \n AN1..10 \n Z \n Api Sürüm Kodu Örnek: s1.0, s2.0 s1.0 \n \n \n Logo Bilgileri \n logoBilgileri \n Kompleks: LogoBilgisi [Array][1..N] \n Z \n HHS'ye ait logo bilgileri. \n \n \n > logoTur \n logoTur \n AN3..50 \n Z \n Logonun türünü belirler. TR.OHVPS.DataCode.LogoTur sıralı veri türü değerlerlerinden birini alır. \n \n \n > logoAdr \n logoAdr \n AN1..255 \n Z \n HHS tarafında tutulan ve YÖS'lerle paylaşılacak olan url adres bilgisidir.  Örnek: https://via.placeholder.com/150?text=0001 \n \n \n > logoArkaPlan \n logoArkaPlan \n AN1 \n Z \n TR.OHVPS.DataCode.LogoArkaPlan sıralı veri türü değerlerlerinden birini alır. \n \n \n > logoFormat \n logoFormat \n AN3 \n Z \n TR.OHVPS.DataCode.LogoFormat sıralı veri türü değerlerlerinden birini alır. \n \n \n Ayrık GKD \n ayrikGKD \n AN1 \n Z \n HHS'nin Ayrık GKD desteklediğini BKM'ye bildirmesi ile bu alan E değerini alır.  TR.OHVPS.DataCode.EvetHayir sıralı veri tiplerinden birini alır. \n \n \n Durum \n durum \n AN1 \n Z \n HHS'nin durum bilgisidir.  TR.OHVPS.DataCode.HHSDurumu sıralı veri tipinde alabileceği değerler belirtilmiştir. \n \n \n \n HHS API'de; Açık, Yaygınlaştırma, Geçici Hizmet Veremiyor, Kapalı durumlarındaki HHS'ler listelenecektir.  \nSertifikasyon onayı alan HHS'ler, üretim ortamına geçişte \"Yaygınlaştırma\" durumuna sahip olabilir.  HHS'nin, hangi YÖS'ler ile \"Yaygınlaştırma\" kontrollerini yapacağı, HHS yönetiminde olacaktır. Böylece Üretim Ortamında HHS’nin kendisi tarafından tanımlanmış kısıtlı ÖHK’ya hizmet vermesi ve servislerini test etmesi sağlanabilir olacaktır. HHS'ler kendi kurum kontrollerini yapana kadar, \"Yaygınlaştırma\" durumunda kalabilirler. HHS'nin BKM'ye yapacağı talep ile, HHS \"Yaygınlaştırma\" durumundan \"Açık\" durumuna geçebilecektir. \n Aşağıdaki durumlarda HHS'nin statüsü Geçici Kapalı olarak güncellenebilecektir: \n \n HHS'nin talebi ile uzun süreli (minimum 1 saati aşan) yaşanan teknik sorunlarda G statüsüne alınabilecektir. G statüsüne alınma talebinin HHS tarafından ohvps@bkm.com.tr ye mail atarak iletilmesi beklenmektedir. \n İlgili resmi kurumlardan gelen talep üzerine HHS G statüsüne alınabilir. \n \n YÖS'ler hem A hem G statüsünde olan HHS'leri listeleyebilir. Ancak YÖS uygulamasında G statüsünde olan bir HHS müşteri tarafından seçilirse müşteriye gerekli hata mesajının verilmesi ve ilgili HHS'ye istek atılmaması sağlanmalıdır. \n Hem YOS hem de HHS API için geçerli olacak; logo gönderiminde dikkat edilmesi gerekenler şu şekilde tariflenmiştir: \n \n Logoların ham dosya yerine kurumun yayınlayacağı bir URL üzerinden sunulması gerekmektedir. (Örn: logoURL = https://kurumadi.com.tr/logo.png) Logo BKM tarafında host edilmeyecektir. \n Logo url’in public erişilebilir url olması gereklidir. \n Logo, yatayda veya dikeyde taşma paysız tam oturacak, sınır boyutlarını geçmeyecek ve ortalanmış yerleşime sahip olmalıdır. \n YÖS uygulamasında gösterim esnasında logoların hızlı yüklenmesi ve düşük veri tüketmesi açısından; logo boyutu 250 KB’ın altında olmalıdır. \n HHS ve YÖS’lerin tüm logo türlerini (8 farklı tipte logoyu) zorunlu olarak dönmesi beklenmektedir. \n Circle logo kullanılması gerektiğinde ICON_LOGO logo türü kullanılmalıdır. \n Logolarını güncellemek isteyen kurumların en az 3 iş günü öncesinde BKM’ye bu değişikliği GEÇİT Test/Üretim Ortamı Entegrasyon formu ile bildirmesi gereklidir.  BKM de katılımcılara HHS/YÖS API aracılığı ile güncel logonun çekilmesi gerektiğine dair bilgilendirme yapar. \n Logoları anlık çeken katılımcıların, herhangi bir teknik nedenden dolayı güncel logoyu alamadığı durum olabilir. Bu durumda sistemlerine kaydetmiş olduğu kuruma ait ikon logoyu göstermesi gereklidir. \n HHS ve YÖS’ler API aracılığı ile almış oldukları logoların formatı üzerinde değişiklik (kare, yuvarlak hale getirip resize etmek gibi) yapabilirler. Ancak logonun görsel ve yazılarını etkileyecek bir  değişiklik yapmamalıdırlar. \n YÖS/HHS mobil uygulamasındaki dark mode ve light mode kullanımlarında, hangi logonun kullanılacağına uygulama sahibi karar verecektir. \n YOS API \n YÖS API, YÖS statüsundeki kurumların detay bilgilerini sunan servistir. Bu servis ile aşağıdaki istek/yanıt yapıları ile ihtiyaç duyulabilecek ilgili bilgiler temin edilebilir. YÖS API için “yos_read” scope bilgisi kullanılır. \n YÖS API yanıtında, listelenen yönlendirme ve bildirim adresleri bulunmaktadır. HHS, işlem anında iletilen yonAdr ya da bldrAdr alanlarında gönderilen adreslere yetKod değerini iletmelidir. YÖS API içerisinde yer alan adresleri, rıza isteğinde gönderilen adreslerin doğruluğunu kontrol etme amacıyla kullanılmalıdır. Bu nedenle YÖS API içerisinde listelenen adreslerin hostname seviyesinde yer alması yeterlidir. \n YÖS API içerisinde yer alan YÖS rol bilgileri ve aktiflik/pasiflik durumları birbiriyle ilişkili değildir. \n YÖS'ün sahip olduğu öbhs,hbhs rolleri için herhangi bir fraud ya da teknik sebeplerden ötürü geçici süreyle geri alınabilir. \n YÖS'lerin hizmet verememesi durumunda rollerinin geri alınması yapılmayacaktır. YÖS rolleri sadece ilgili resmi kurumlardan gelen talep üzerine alınabilecektir. \n YÖS aktifliğini korurken problem çözülene kadar geçici olarak alınan roller(öbhs,hbhs) tekrardan aktif hale getirilir. \n GET /yos/{yosKod} \n İşlem Sorgu Örneği =  /yos  ⇨  bu sorgu yöntemi ile tüm YÖS'lerin dizi şeklinde verileri listelenir. \n İşlem Sorgu Örneği =  /yos/2501  ⇨  bu sorgu yöntemi ile gönderilmiş olan yosKodu’na ait bilgiler listelenir ya da “404 Not Found” hatası alır.\nYÖS API Tablo 20’deki istek parametrelerine göre sorgulanabilir.\nİşlem Sorgu Örneği (Belirli Bir Hesap)=  /yos?srlmKrtr=kod&srlmYon=A \n Tablo 22: YOS Bilgileri Sorgulama Yanıtı “Yos” nesnesi \n \n \n \n Alan Adı \n Parametre Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Yös kodu \n kod \n AN4 \n Z \n YÖS'ün kod bilgisi \n \n \n Yös unvanı \n unv \n AN3..140 \n Z \n YÖS unvan bilgisi \n \n \n Yös markası \n marka \n AN1..140 \n Z \n ÖHK'nın kolaylıkla algılayabileceği kısa unvan bilgisi. YÖS tarafından belirlenecektir. \n \n \n YÖS rolleri \n roller \n Array[AN4] \n Z \n YÖS’un rollerini belirten değer. Örnek: [ \"obhs\", \"hbhs\" ]  - obhs - Ödeme Bilgisi Hizmet Sağlayıcı Rolü  - hbhs - Hesap Bilgisi Hizmet Sağlayıcı Rolü \n \n \n Adresler \n adresler \n Kompleks:Adres[Array] [1..N] \n Z \n --- \n \n \n > Yetkilendirme Yöntemi \n yetYntm \n AN1 \n Z \n TR.OHVPS.DataCode.GkdTur sıralı veri türü değerlerlerinden birini alır. Adres detaylarının hangi GKD türüne ait olduğunu belirtir. \n \n \n > Adres Detayları \n adresDetaylari \n adresDetaylari\tKompleks: AdresDetayi[Array] [1..N] \n Z \n \n \n \n >> Temel Adres \n tmlAdr \n AN1..1024 \n Z \n yetYntm değeri “Y” olarak iletildiğinde Yönlendirmeli GKD sürecinde HHS’nin YOS’e authorizasyon kodunu hangi url e göndereceği bilgisini tutar. yetYntm değeri “A” olarak iletildiğinde Ayrık GKD sürecinde HHS’nin YOS’e authorizasyon kodunu hangi url e göndereceği bilgisini tutar. Riza isteklerinde bu değer ile uyumluluğu kontrol edilmelidir. Örnek: https://example.com https://example2.com/path deepLink://example/test deepLink://example2/test \n \n \n >> Açıklama \n aciklama \n AN1..1024 \n İ \n YÖS’ün gönderdiği adrese yönelik vermek istediği açıklama Örnek: WEB bireysel , WEB kurumsal  , APP \n \n \n Açık anahtar \n acikAnahtar \n AN1..1024 \n Z \n YÖS’ün mesaj imzalama için paylaştığı açık anahtar \n \n \n YÖS Api Bilgileri \n apiBilgileri \n Kompleks: YosApiBilgi[Array][0..N] \n Z \n Desteklenen Api ve sürüm bilgileri dönülecektir. \n \n \n > api \n api \n AN1..20 \n Z \n Api İsmi Örnek :ods \n \n \n > surum \n surum \n AN1..10 \n Z \n Api Sürüm Kodu Örnek: s1.0, s2.0 s1.0 \n \n \n Logo Bilgileri \n logoBilgileri \n Kompleks: LogoBilgisi [Array][1..N] \n Z \n YOS’e ait logo bilgileri. \n \n \n > logoTur \n logoTur \n AN3..50 \n Z \n Logonun türünü belirler. TR.OHVPS.DataCode.LogoTur sıralı veri türü değerlerlerinden birini alır. \n \n \n > logoAdr \n logoAdr \n AN1..255 \n Z \n YÖS tarafında tutulan ve HHS’lerle paylaşılacak olan url adres bilgisidir.  Örnek: https://via.placeholder.com/150?text=0001 \n \n \n > logoArkaPlan \n logoArkaPlan \n AN1 \n Z \n TR.OHVPS.DataCode.LogoArkaPlan sıralı veri türü değerlerlerinden birini alır. \n \n \n > logoFormat \n logoFormat \n AN3 \n Z \n TR.OHVPS.DataCode.LogoFormat sıralı veri türü değerlerlerinden birini alır. \n \n \n Durum \n durum \n AN1 \n Z \n YÖS'ün durum bilgisidir.  TR.OHVPS.DataCode.YOSDurumu sıralı veri tipinde alabileceği değerler belirtilmiştir. \n \n \n \n"},{title:"6.\tÖdeme Emri Başlatma Hizmeti",frontmatter:{},regularPath:"/v1.1.0/contents/odeme-emri-baslatma-hizmeti.html",relativePath:"v1.1.0/contents/odeme-emri-baslatma-hizmeti.md",key:"v-7e5b51bd",path:"/v1.1.0/contents/odeme-emri-baslatma-hizmeti.html",headers:[{level:3,title:"Ödeme Emri Başlatma Hizmeti için Erişim Adresleri (Endpoints)",slug:"odeme-emri-baslatma-hizmeti-icin-erisim-adresleri-endpoints"},{level:2,title:"6.1.\tADIM 0 - Ödeme Emri Başlatma Isteği",slug:"_6-1-adim-0-odeme-emri-baslatma-istegi"},{level:2,title:"6.2.\tADIM 1 - Ödeme Emri Rızasının Hazırlanması",slug:"_6-2-adim-1-odeme-emri-rızasının-hazırlanması"},{level:2,title:"6.3.\tADIM 2- Ödeme Emri Rızasının Yetkilendirilmesi",slug:"_6-3-adim-2-odeme-emri-rızasının-yetkilendirilmesi"},{level:2,title:"6.4.\tADIM 2.1 – Ödeme Emri Rızasının Sorgulanması (isteğe bağlı)",slug:"_6-4-adim-2-1-odeme-emri-rızasının-sorgulanması-istege-baglı"},{level:2,title:"6.5.\tADIM 3- Ödeme Emrinin Oluşturulması",slug:"_6-5-adim-3-odeme-emrinin-olusturulması"},{level:2,title:"6.6.\tADIM 3.1- Ödeme Emri Sorgusu (İsteğe bağlı)",slug:"_6-6-adim-3-1-odeme-emri-sorgusu-istege-baglı"},{level:3,title:"GET /odeme-emri/{odemeEmriNo}",slug:"get-odeme-emri-odemeemrino"}],content:" 6.\tÖdeme Emri Başlatma Hizmeti \n Ödeme emri başlatma işlemi havale, FAST ya da PÖS ödemesiyle sonuçlanabilir. Ödeme işleminin amacı kişiden kişiye para transferi, e-ticaret ödemesi gibi farklı ödeme türleri olabilir. Ödemenin amacına göre ÖBHS’nin ileteceği veri setinde farklılaşmalar olabilir. \n Ödeme Emri Başlatma Hizmeti 5 temel akışdan oluşur: \n \n Ödeme Emri Başlatma İsteğinin tetiklenmesi:  ÖHK ÖBHS mobil uygulama ya da websitesinden ödeme emrini başlatır. \n Ödeme Emri Rıza Hazırlanması:  ÖBHS, “Ödeme Emri Başlatma” işlemi için izin oluşturulması isteğini HHS’ye iletir. \n Ödeme Emri Rızasının Yetkilendirilmesi:  HHS, gerekli gördüğü durumlarda ÖHK’yı GKD ile doğrular ve ödeme emri rızasına erişim için erişim belirteci tanımlanmasını temin eder. \n Ödeme Emrinin Başlatılması:  ÖBHS, “ödeme emri”ni HHS’ye iletir. \n Ödeme Emri Rıza Durumu, Ödeme Emri Durumu, Ödeme Emri Detayı Sorguları:  ÖBHS, Ödeme Emri Rıza Durumu, Ödeme Emri Durumu, Ödeme Emri Detayı bilgilerini isteğe bağlı olarak sorgulayabilir. \n \n Nezdinde ödeme hesabı bulunduran hesap hizmeti sağlayıcılar(Banka, EPK, Ödeme Kuruluşları)  müşterilerine ait hesapları hesap referansı ya da hesap numarası üzerinden takip etmektedir. YÖS'lerin hem HBH hem de ÖBH servisleri için hesap referansı veya hesap numarası üzerinden işlem yapılabileceğini bilmeleri, sistemlerini API dokümanında belirtilen akışlara göre uyumlandırmaları ve müşteri bilgilendirmesini(önyüzlerinde hesap no ve hesap referansı ayrımını gözeterek) buna paralel yapmaları beklenmektedir. \n YÖS'ler gönderen hesap seçimini aşağıdaki yöntemlerden biri ya da birkaçı ile sağlayabilirler: \n \n YÖS, müşterisinin ödeme hesabını HHS ekranından seçtirebilir. \n YÖS, müşterisinden Hesap Bilgisi rızası alır. Rıza aldığı hesaplar üzerinden hesap referansı aracılığı ile ödeme emri başlatabilir. \n YÖS, müşterisinin ödeme hesabını elle girmesine olanak tanıyabilir. IBAN'ı olmayan HHS'ler ödeme emri rızası adımında  TR.OHVPS.Business.IBANNotSupported  hatasını vermelidir. IBAN'ı olan HHS'lerin bu akışı desteklemesi zorunludur. \n YÖS; müşterisinin hesap referansını elle girmesini sağlayabilir. Hesap Referansı bilgisi ile başlatılan ödeme emri işlemlerinde HHS seçimi zorunludur. \n \n Ödeme Sistemine doğrudan katılımcı olmayan HHS'ler, müşterilerine IBAN sunmadıkları için, YÖS'ler hesap referansı ile ödeme başlatabilirler. Bunların dışındaki HHS'lerin, gönderen IBAN veya hesap referansı ile ödeme akışını desteklemesi zorunludur. \n \n Şekil 4: Ödeme Emri Başlatma Hizmeti Üst Düzey İş Akışı \n Ödeme Emri Başlatma Hizmeti için Erişim Adresleri (Endpoints) \n Ödeme Emri Başlatma Hizmeti İçin Erişim Adreslerinin Etki Alanı (Scope) = “odeme_emri” olarak belirtilmelidir. \n Tablo 6: Ödeme Emri Başlatma Hizmeti İçin Erişim Adresleri \n \n \n \n No \n Kaynak \n HTTP işlemi \n Erişim Adresi \n Zorunlu / İsteğe Bağlı \n Yetkilendirme Türü \n İmzalama \n İstem Nesnesi \n Yanıt Nesnesi \n \n \n \n \n 1 \n odeme-emri-rizasi \n POST \n /odeme-emri-rizasi \n Z \n İstemci Kimlik Bilgileri \n İmzalı İstek ve Yanıt \n OdemeEmriRizasiIstegi \n OdemeEmriRizasi \n \n \n 2 \n erisim-belirteci (GKD için) \n POST \n /erisim-belirteci \n Z \n İstemci Kimlik Bilgileri \n İmzalı İstek ve Yanıt \n ErisimBelirteciIstegi \n ErisimBelirteci \n \n \n 2.1 \n odeme-emri-rizasi \n GET \n /odeme-emri-rizasi/{rizaNo} \n Z \n İstemci Kimlik Bilgileri \n İmzalı Yanıt \n - \n OdemeEmriRizaYaniti \n \n \n 3 \n odeme-emri \n POST \n /odeme-emri \n Z \n İstemci Kimlik Bilgileri & Yetkilendirme Kodu (GKD) \n İmzalı İstek ve Yanıt \n OdemeEmriIstegi \n OdemeEmri \n \n \n 3.1 \n odeme-emri \n GET \n /odeme-emri/{odemeEmriNo} \n Z \n İstemci Kimlik Bilgileri & Yetkilendirme Kodu (GKD) \n İmzalı Yanıt \n - \n OdemeEmri \n 6.1.\tADIM 0 - Ödeme Emri Başlatma Isteği \n \n ÖHK, ÖBHS uygulamasında (web arayüzü/mobil uygulama) ödeme emri başlatma işlemine onay verir. \n Gönderen hesap detaylarının bu aşamada belirtilmesi zorunlu değildir. \n 6.2.\tADIM 1 - Ödeme Emri Rızasının Hazırlanması \n   \n Şekil 5: Ödeme Emri Rızasının Hazırlanması \n \n \n ÖBHS, ödeme hizmeti kullanıcı hesabının bulunduğu HHS’ye bağlanarak ödeme emri rıza kaynağının oluşturulmasını (odemeEmriRizasi) sağlar. \n \n \n POST isteği TLS protokolü tesis edilen iletişim katmanı üzerinden gerçekleştirilir. TLS için nitelikli sertifikalar kullanılır. \n \n \n POST isteğinin başlığındaki alanlar ve istemcinin sertifikasındaki özel alanlar kullanılarak istemcinin yetkilendirilmesi sağlanır: \n \n İstekte bulunan ÖBHS yetkilendirilmiş mi? \n İstekte bulunan yetkilendirilmiş ödeme hizmeti sağlayıcısı ÖBHS rolüne sahip mi? \n İstekte bulunulan HHS kodu doğru mu? \n \n \n \n POST başarılı olursa, HHS, ödeme emri için içeride rıza olup olmamasına bakılmaksızın yeni bir rıza tanımlayıcısı RizaNo içeren odemeEmriRizasi  yanıt olarak döner. \n \n \n 1 ÖHK'nın 1 YÖS için 1HHS'de istediği kadar rızası olabilir. \n \n \n HHS tarafında RizaDurumu değişkeninin durumu “Yetki Bekleniyor” olarak güncellenir. \n \n \n YÖS’ün doğrulama ekranı olarak ÖHK’ya açacağı URL adresini de ilgili rıza numarasına göre oluşturur. Burada 2 farklı yöntemle URL oluşturabilir. \n \n Statik URL  : \nHHS’nin base pathi/alt-dizin/{rızaNo} \nÖrnek hhsYonAdr : https://xbank.com.tr/ohvps/cb54834e36f742d09af3d534ece3352a \nBu adres için ilgili doğrulama sayfası önden hazırlanmalı ve ÖHK’nın doğrulama sayfasına erişimi için yayınlanmış olmalıdır (publish edilmelidir). \n Dinamik URL : \nHHS’nin base pathi/alt-dizin/GKD Karşılama Ekranı?rizano={rızano} \nÖrnek: https://xbank.com.tr/ohvps/gkd?rizano=cb54834e36f742d09af3d534ece3352a \n \n \n \n POST /odeme-emri-rizasi \n İSTEK: \n ÖBHS, bu API erişim adresinden HHS’ye yeni bir OdemeEmriRizasi oluşturulması için istekte bulunur: \n \n ÖBHS, ödeme emri başlatma isteği olduğunu HHS’ye bildirir. \n ÖBHS, ÖHK’nın, ÖBHS arayüzünden verdiği rızanın (“Ön Onay”) bir kopyasının HHS nezdinde müşteri tarafından onaylanması için HHS’ye gönderilmesini sağlar. \n HHS; istek mesajında yer alan alanların ÖHVPS API İlke ve Kuralları dökümanında belirtilen şartları sağlayacak şekilde zorunluluk, uzunluk ve içerik kontrollerini yapar. (Zorunlu) \n HHS; YÖS API ile alınan ÖBHS bilgilerinin içerisinde yer alan yönlendirme adresleri ile ödeme emri rızası nesnesi request mesajında paylaşılan adreslerin uyumlu olup olmadığının kontrollerini yapar. (Zorunlu) \n HHS; kimlik bilgileri nesnesinde eğer kimlik bilgileri iletilmiş ise; bu veri ile ÖHK’nın HHS müşterisi olup olmadığının kontrollerini yapar. Bu kontrol hem bireysel hem de kurumsal ÖHK’lar için yapılmalıdır.  (Koşullu Zorunlu) \n HHS kimlik bilgisi ile gönderen unvanının uyumlu olduğunun kontrol eder. HHS'ler EFT/FAST işlemlerinde kabul ettikleri kontrol kriterleri ile işleme izin verebilirler. (Zorunlu) \n Gönderen Hesap Numarası ile ilgili Tablo7’de belirtilen kontroller yapılmalıdır. (Zorunlu) \n HHS, ödeme için benzersiz “RizaNo” ile “OdemeEmriRizasi” nesnesi oluşturur ve ÖBHS’ye döner. \n HHS, OdemeEmriRizasi oluşturduğu anda durumunu “Yetki Bekleniyor” olarak düzenler. \nBu aşamada ÖHK’nın HHS tarafından tanımlanmış ve isteğin veri alanında gönderen hesaba (borçlandırılacak hesaba) ilişkin bir bilgisinin olması gerekmez. \nHesap bakiye kontrolünün rıza aşamasında yapılmaması gerekmektedir. Çünkü ÖHK ödeme emri gerçekleşene kadar hesabına para eklemesi yapabilir. \n \n POST /odeme-emri-rizasi  isteğinin (REQUEST) gövdesinde (BODY)  “odemeEmriRizasiIstegi” nesnesi (Tablo-7) kullanılır. İstek başarıyla sonuçlanırsa HHS kaynak sunucusunda “odemeEmriRizasi” (Tablo-8) nesnesi oluşturulur. \n Tek Seferlik Ödeme \nTek seferlik ödeme akışı YÖS'ten HHS'ye giden istekte, gönderen kimlik bilgilerinin olmadığı durumda gerçekleşir. Gönderen kimlik bilgisi olmadığında, KOLAS sorgusu yapılamayacağından ötürü, HHS tarafından TR.OHVPS.Business.InvalidContent hatası dönülmelidir.  ÖHK'nın YÖS'ün müşterisi olmadığı durumda tek seferlik ödeme başlatılabilir. \nTek seferlik ödeme akışı hem işyeri ödemelerinde hem de kişiden kişiye para transferlerinde kullanılabilen bir akıştır. İşyeri tarafından başlatılan tek seferlik ödeme işlemlerinde katılımcılar gönderen ÖHK'dan ücret alınamaz.\n Tek seferlik ödeme akışı sadece bireysel müşteriler için kullanılabilir. \nTek seferlik ödeme akışında hem yönlendirmeli hem de ayrık GKD akışı ile müşteri yetkilendirmesi sağlanabilir. \n Aşağıdaki senaryolar tek seferlik ödemeye örnek olarak gösterilebilir. \n İşyeri Ödemesi akışı örneği: Bir e-ticaret sitesinde, üye olmadan alışveriş yapılması ve ödemenin YÖS tarafından kimlik bilgisi olmadan başlatılması \nKişiden kişiye para transferi akışı örneği: QR veya diğer yöntemler ile alıcı bilgilerinin gönderici ile paylaşılması ve YÖS üzerinden gönderici bilgileri olmadan alıcıya para transferi yapılması için rıza verilmesi \n  BAŞARILI İSTEK: \n Tablo 7: “OdemeEmriRizasiIstegi” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n HHS tarafından ödeme emri rızası oluşturulması sırasında yapılması gereken kontrol ve işlemler \n \n \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n HHS, hhsKod’un kendisine ait olduğunu ve istek başlığındaki x-aspsp-code değeri ile aynı olduğunu kontrol eder.  Hata durumunda  TR.OHVPS.Connection.InvalidASPSP  hata kodunu döner. \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n HHS, yosKod’un geçerli bir Ödeme Hizmeti Sağlayıcısı Kodu olduğunu ve istek başlığındaki x-tpp-code değeri ile aynı olduğunu kontrol eder. Hata durumunda  TR.OHVPS.Connection.InvalidTPP  hata kodunu döner. \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n \n > Yetkilendirme Yöntemi \n yetYntm \n AN1 \n İ \n TR.OHVPS.DataCode.GkdTur  sıralı veri türü değerlerinden birini alır. Yetkilendirme yöntemi, ÖBHS tarafından belirtilmeyebilir. \n HHS, HBHS’nin belirlediği yöntemi dikkate alarak süreci ilgili akışa uygun olarak devam ettirir. Desteklemediği yöntem için (örn: Ayrık GKD) ayrıca hata mesajı verilmelidir. \n \n \n > Yönlenme Adresi \n yonAdr \n AN1..1024 \n K \n Yönlendirmeli güçlü kimlik doğrulama için zorunlu.  YÖS’ün ileteceği adrestir.  Durum kodu(drmKod), yönlendirme adresine parametre olarak eklenmelidir. \n HHS, müşteri uygulama / tarayıcısını bu alanda belirtilen adrese yönlendirir. \n \n \n > Ayrık GKD \n ayrikGkd \n Kompleks:AyrikGkd \n K \n Ayrık güçlü kimlik doğrulama için zorunlu. \n yetYntm = A gönderilmiş ise ayrikGkd nesnesinin dolu gönderilmesi zorunludur.   HHS, YÖS'ün AYRIK_GKD_BASARILI ve AYRIK_GKD_BASARISIZ olay tipleri için olay aboneliğinin varlığını kontrol eder.  Bknz: Ayrık GKD \n \n \n >> OHK Tanım Tip \n ohkTanimTip \n AN8 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım tipleridir.  TR.OHVPS.DataCode.ohkTanimTip  sıralı veri tiplerinden birini alır. \n \n \n \n >> OHK Tanım Değer \n ohkTanimDeger \n AN1..30 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım değeridir. ohkTanimTip'i ile uyumlu değerdir. \n \n \n \n Ödeme Başlatma \n odmBsltm \n Kompleks: OdemeBaslatma \n Z \n \n \n \n \n > Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n \n >> Kimlik Türü \n kmlkTur \n AN1 \n K \n TR.OHVPS.DataCode.KimlikTur  sıralı veri türü değerlerinden birini alır. \n Çerçeve sözleşme kapsamındaki ödemelerde kullanımı zorunludur. HHS geçerli bir Kimlik Numarası Türü olduğunu kontrol eder. Kurum adına yapılan (ticari) ödemelerde, kurum adına işlem yapan kullanıcının kimlik türünün bu alanda gönderilmesi zorunludur. \n \n \n >> Kimlik Verisi \n kmlkVrs \n AN1..30 \n K \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır. TR.OHVPS.DataCode.KimlikTur  değerine göre uzunluk ve formatı değişir. \n Çerçeve sözleşme kapsamındaki ödemelerde kullanımı zorunludur. HHS, ÖBHS tarafından iletilmesi durumunda Kimlik Verisi üzeriden çapraz kontroller uygulamalı ve Kimlik Verisini temel alarak GKD gerçekleştirmelidir.  Pasaport numarasına ilişkin kontroller HHS'nin halihazırda kullandığı veri, akış ve tabi olduğu diğer düzenlemelerdeki işleyiş ile aynı şekilde ele alınmalıdır.  Kurum adına yapılan (ticari) ödemelerde, kurum adına işlem yapan kullanıcının kimlik türünün bu alanda gönderilmesi zorunludur. \n \n \n >> Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür. TR.OHVPS.DataCode.KurumKimlikTur  sıralı veri türü değerlerinden birini alır. \n Kurum adına yapılan (ticari) ödemelerde kullanımı zorunludur.  HHS geçerli bir Kurum Kimlik Numarası Türü olduğunu kontrol eder. \n \n \n >> Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.   TR.OHVPS.DataCode.KurumKimlikTur  değerine göre uzunluk ve formatı değişir. \n Kurum adına yapılan (ticari) ödemelerde kullanımı zorunludur.  HHS, ÖBHS tarafından iletilmesi durumunda Kurum Kimlik Verisi üzeriden çapraz kontroller uygulamalıdır. \n \n \n >> Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur  sıralı veri türü değerlerinden birini alır  (B: Bireysel, K:Kurumsal) \n Kurum adına yapılan ödemelerde K değerini alır. Kurum Kimlik Türü ve Kurum Kimlik Verisi alanlarının girilmiş olduğu çapraz olarak kontrol edilir. \n \n \n > İşlem Tutarı \n islTtr \n Kompleks:Tutar \n Z \n \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para Birimi.  Karekod akışında, FAST Karekod Veri Organizasyonundaki  53: (Para Birimi)  alanında tanımlı Para Birimi verisi kullanılır. \n HHS geçerli bir para birimi olduğu kontrol eder. \n \n \n >> Tutar \n ttr \n AN1..24 \n Z \n ÖBHS'nin ön yüzde kullanıcıdan teyit aldığı tutar.   Karekod akışında, FAST Karekod Veri Organizasyonundaki  54: (Tutar)  alanında tanımlı Tutar verisi kullanılır.   Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n \n \n \n > Gönderen \n gon \n Kompleks:Hesap \n İ \n \n \n \n \n >> Unvan \n unv \n AN3..140 \n K \n Gönderenin unvanıdır.  HHS, bu bilgiyi ÖBHS sisteminden gelen veri yerine FAST’a iletirken kendi sisteminden alabilir.  Tek seferlik ödeme dışında YÖS'ün gönderen unvanını göndermesi zorunludur. \n HHS’nin bu veri ile kendi sistemlerindeki verinin farklı olması ve Kimlik Numarası ile eşleşmemesi durumunda ödeme emri başlatma isteği reddedilir.  ÖBHS verisi ile HHS verisinin farklılaşması durumunun ise risk değerlendirme sistemlerine girdi olarak kullanması tavsiye edilir. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n İ \n ÖBHS'nin ön yüzünden daha önce kayıt altına alınmış hesaplar arasından seçtirdiği veya müşteriye girdiği IBAN’dır.  ÖBHS tarafından iletilmediği durumda, gönderen hesap bilgisini müşteri tarafından HHS’nin dijital kanalında GKD sonrasında seçilebilir. Bu amaçla ÖBHS arayüzünde HHS seçtirilmelidir.  Hesap Referansı kullanılıyorsa Hesap Numarası kullanılmayabilir. Hesap referansı ile ödeme emri rızası başlatılacak ise HHS hesap referansı değeri ile ilişkilendirilmiş mevcut bir hesap bilgisi rızası var mı kontrol etmelidir. Eğer aktif bir rızası yok ise  TR.OHVPS.Business.InvalidContent  hatası verilmelidir.   Ödeme Sistemine doğrudan katılımcı olmayan ÖHS'ler müşterilerine IBAN sunmadıkları için hspRef üzerinden ödeme başlatabilirler. Bu durumda hesap numarası boş olacaktır. \n ÖBHS tarafından iletildiği durumda; IBAN içerisindeki HHS kodunun istek başlığındaki HHS kodu ile aynı olduğu (hesabın HHS’ye aitliğinin kontrolü), IBAN’ın doğruluğu (kontrol basamağı doğrulaması), Hesap numarasının ÖHK’ya ait olduğu, HHS’ye özel ödeme izni verilmeyen farklı statülerin bulunması durumu kontrol edilir.  Kontrol başarısız olduğunda  TR.OHVPS.Business. InvalidAccount  hatası YÖS’e iletilir. \n \n \n >> Hesap Referansı \n hspRef \n AN5..40 \n İ \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid). YÖS bazında farklılaşması gerekmez.  ÖBHS’nin aynı zamanda HBHS olduğu durumda müşteri rızası tesis edilmiş bir hesabın referansı üzerinden de ödeme başaltılabilir.  Hesap Numarası kullanılıyorsa Hesap Referansı kullanılmayabilir.   Ödeme Sistemine doğrudan katılımcı olmayan HHS'ler müşterilerine IBAN sunmadıkları için hspRef üzerinden ödeme başlatabilirler. Bu durumda hesap numarası boş olacaktır. \n HspRef'e bağlı IBAN değiştiğinde yeni IBAN'ın da ilgili HspRef ile ilişkilendirilmesi beklenmektedir. Bu durumda, HBHS, HspRef ile sorguya geldiğinde HHS'nin yeni IBAN ve hesap hareketlerini dönebilmesi mümkün olacaktır. HspRef’in, IBAN değiştiğinde değiştirilmemesi tavsiye edilmektedir. \n \n \n > Alıcı \n alc \n Kompleks:Hesap \n Z \n \n \n \n \n >> Unvan \n unv \n AN3..140 \n K \n Kolay Adres Sistemi  kullanılmıyorsa zorunludur.  Alıcının unvanıdır. ÖBHS ekranlarından girişi yapılabileceği gibi ÖBHS’nin kayıtlı alıcılarından yapılan seçimle de doldurup gönderebildiği bilgi olabilir.  FAST-TR Karekod Veri Organizasyonunda;  İşyeri tarafından sunulan uzun karekod yapısının  59:  alanında tanımlı İşyeri adı alanıdır, Kişiden Kişiye Ödeme Karekod Yapısının  07:  alanında tanımlı    Ödeme Alıcısının Adı ve Soyadı  alanıdır.  FAST-TR Karekod dışındaki iş yeri ödemelerinde; yine Unvan alanında işyeri adı bilgisi gönderilmelidir. \n \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n K \n Alıcının Hesap Numarası (IBAN)  alanıdır.   Kolay Adres Sistemi  kullanılmıyorsa zorunludur.  Karekod akışında, FAST Karekod Veri Organizasyonundaki  30-01:  alanında tanımlı İş Yeri IBAN verisi kullanılır.  Alıcının birden fazla hesabının kullanılabilir olduğu durumlarda (özellikle işyeri ödemelerinde HHS nezdindeki hesap (on-us havale akışı) tercih edilmelidir. \n HHS (Gönderen Katılımcı) tarafından IBAN doğrulaması (kontrol basamağı doğrulaması) yapılır. \n \n \n >> Kolay Adres \n kolas \n Kompleks:Kolas \n K \n \n Tek seferlik ödemelerde ( kimlik bilgileri boş iletildiğinde) KOLAS nesnesi dolu iletiliyorsa; HHS tarafından TR.OHVPS.Business.InvalidContent hatası dönülmelidir \n \n \n >>> Kolas Türü \n kolasTur \n AN1 \n Z \n TR.OHVPS.DataCode.KolasTur  sıralı veri türü değerlerinden birini alır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n HHS (Gönderen FAST katılımcısı) tarafından KOLAS Servisine yapılan sorguda girdi olarak kullanılır. \n \n \n >>> Kolas Değeri \n kolasDgr \n AN7..50 \n Z \n Müşterinin eklediği, HHS (FAST katılımcısı) tarafından doğrulanmış Kolay Adres değeridir. Alabileceği değerler BKM “Kolay Adresleme Sistemi Uygulama Kuralları” belgesinde tanımlıdır.  Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n HHS (Gönderen FAST katılımcısı) tarafından KOLAS Servisine yapılan sorguda girdi olarak kullanılır. \n \n \n > Karekod \n kkod \n Kompleks:Karekod \n K \n \n \n \n \n >> Akış Türü \n aksTur \n AN2 \n Z \n TR.OHVPS.DataCode.KareKodAksTur  sıralı veri değerlerinden birini alır. Kolay Adresi Sistemi ile birlikte kullanılmaz. \n \n \n \n >> Referansı \n kkodRef \n AN1..12 \n K \n Karekod referans numarasını  gösterir. Okunan karekodda referans değeri varsa kullanılması zorunludur.  Karekod ilke ve kurallar belgesinde tanımlandığı şekilde kullanılması gerekmektedir.  Kolay Adresi Sistemi ile birlikte kullanılmaz. \n \n \n \n >> Üretici Kodu \n kkodUrtcKod \n AN4 \n Z \n Karekod üreticisinin kodu.  Ödeme Hizmeti Sağlayıcıları ve TCMB tarafından uygun görülen ödeme sistemi işleticisi TR Karekod üretebilmek için BKM’ye kayıt başvurusu yaparak karekod üretici kodu alabileceklerdir. Bankalar EFT kodlarını kullanacak olup ayrıca kayıt yaptırmalarına gerek bulunmamaktadır. 4 haneden kısa değerlerin sol tarafı ’0’ karakteri ile tamamlanmalıdır. \n \n \n \n > Ödeme Ayrıntıları \n odmAyr \n Kompleks: OdemeAyrintilari \n Z \n \n \n \n \n >> Ödeme Kaynağı \n odmKynk \n AN1 \n Z \n Ödemenin başlatıldığı kaynağı belirtir.  TR.OHVPS.DataCode.OdemeKaynak  sıralı veri veri değerlerinden “O” değeri atanarak iletilmelidir. “O” değeri “Açık bankacılık aracılığı ile gönderilen ödemelerde kullanılır.” anlamını taşımaktadır. \n HHS, YÖS'ün API deseninde \"O\" kodunu ilettiğini kontrol eder. \n \n \n >> Ödeme Amacı \n odmAmc \n AN2 \n Z \n TR.OHVPS.DataCode.OdemeAmaci  sıralı veri değerlerinden birini alır. Karekod akışında, FAST Karekod Veri Organizasyonundaki 62-08: alanında tanımlı Ödeme Amacı verisi kullanılır. \n HHS geçerli bir Ödeme Amacı kodu olduğunu kontrol eder. \n \n \n >> Referans Bilgisi \n refBlg \n AN1..140 \n K \n Ödemeye özel  Referans Bilgisi  alanıdır. Karekod işlemi değil ise zorunludur.  -\tKişiden kişiye fon aktarımlarında: Gün içerisinde ÖHK özelinde, her işleme özel biricik olarak oluşturulan referans bilgisidir.  Karekod P2P akışı için referans bilgisi (Karekod referans numarası değil, işleme özel üretilecek referans bilgisidir.) YÖS tarafından atanacaktır.   -\tE-ticaret işlemlerinde sipariş/takip numarası/müşteri/abone numarası  -\tİşyeri Ödemesi Karekod akışında, FAST Karekod Veri Organizasyonundaki  -\t62-01: alanında tanımlı Fatura Numarası   -\t62-06: alanında tanımlı Müşteri Numarası   verilerinden biri kullanılır. \n YÖS bu değeri ÖHK’yı HHS’ye yönlendirmeden önceki ekranda göstermeli, ve HHS bu değeri GKD için kullandığı önyüzünde “işlem doğrulama kodunun” bir unsuru olarak yine ÖHK’ya göstermelidir. \n \n \n >> Açıklama \n odmAcklm \n AN1..200 \n İ \n ÖBHS’nin ÖHK’dan aldığı ya da kendisinin atadığı işlem açıklaması bilgisi.  FAST/PÖS sistemi üzerinden yapılan ödemeler için açıklama bilgisi girilirse boşluk karakteri girilerek geçilemez. En az bir alfasayısal karakter girilmesi zorunludur. \n \n \n \n İşyeri Ödeme Bilgileri \n isyOdmBlg \n Kompleks:IsyeriOdemeBilgileri \n K \n İşyeri ödemelerinde kullanılabilecek alanlardır. Karekodlu işyeri ödemesi akışında bu alanlar dolu geldiği için isteğe bağlı olarak gönderilebilir. isyOdmBlg alanlarının en az birinin dolu olması durumunda istekte yer alır.  İşyeri Ödeme Bilgileri, YÖS uygulama önyüzünde ÖHK’nın bildiği ve girişi yapılması beklenen bir bilgi olmamalıdır. YÖS tarafından sistemsel olarak doldurulması gereklidir. \n \n \n \n > İşyeri Kategori Kodu \n isyKtgKod \n AN4 \n K \n İşlemin, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). Ödeme Amacı = ‘06’ ya da ‘04’ olan ödeme işlemleri için doldurulabilir.  4 karakterden küçük değerlerin başına 0 eklenerek iletilmesi gereklidir. \n \n \n \n > Alt İşyeri Kategori Kodu \n altIsyKtgKod \n AN4 \n K \n İşlem alt işyerinden gerçekleştiriliyorsa, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). 4 karakterden küçük değerlerin başına 0 eklenerek iletilmesi gereklidir. \n \n \n \n >Üye İş Yeri Tekil Kimlik \n genelUyeIsyeriNo \n AN8 \n K \n İşyeri kayıt sisteminde kayıtlı İşyeri için BKM tarafından üretilmiş olan genel işyeri numarasıdır (GlobalMerchantId) 8 haneden küçük gönderiminde başa ‘0’ eklenmelidir. Örnek değer ‘01630618’ \n  BAŞARILI YANIT: \n POST işleminin RESPONSE gövdesini (BODY) oluşturan “OdemeEmriRizasi” nesnesi Tablo-8’deki parametrelerden oluşur: \n Tablo 8: “OdemeEmriRizasi” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n \n \n \n \n Riza Bilgileri \n rzBlg \n Kompleks: RizaBilgileri \n Z \n \n \n \n > Rıza No \n rizaNo \n AN1..128 \n Z \n OdemeEmriRızasi nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n > Oluşturma Zamanı \n olusZmn \n ISODateTime \n Z \n OdemeEmriRizasi nesnesinin oluşturulma zamanı \n \n \n > Güncellenme Zamanı \n gnclZmn \n ISODateTime \n Z \n OdemeEmriRizasi nesnesinin güncellenme zamanı \n \n \n > Rıza Durumu \n rizaDrm \n AN1 \n Z \n TR.OHVPS.DataCode.RizaDurumu  sıralı veri tipini değerlerinden birini alır. \n \n \n > Rıza Iptal Detay Kodu \n rizaIptDtyKod \n AN2 \n K \n Rıza durumunun iptal olduğu durumda zorunludur. Alabileceği değerler 4. Bölümde detaylandırılmıştır. \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n > Yetkilendirme Yöntemi \n yetYntm \n AN1 \n Z \n TR.OHVPS.DataCode.GkdTur  sıralı veri türü değerlerinden birini alır.  HHS, ÖBHS’nin belirlediği yöntemi dikkate alarak kendi belirlediği yöntemi kullanır. \n \n \n > Yönlenme Adresi \n yonAdr \n AN1..1024 \n K \n Yönlendirmeli güçlü kimlik doğrulama için zorunlu. HHS, müşteri uygulama / tarayıcısını yönlendirmeli akışta bu alanda belirtilen YÖS adresine yönlendirir. \n \n \n \n \n \n \n \n \n \n > Ayrık GKD \n ayrikGkd \n Kompleks:AyrikGkd \n K \n Ayrık güçlü kimlik doğrulama için zorunlu. \n \n \n >> OHK Tanım Tip \n ohkTanimTip \n AN8 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım tipleridir. İstek içerisindeki veri değiştirilmeden iletilir. \n \n \n >> OHK Tanım Değer \n ohkTanimDeger \n AN1..30 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım değeridir. ohkTanimTip'i ile uyumlu değerdir.  İstek içerisindeki veri değiştirilmeden iletilir. \n \n \n > HHS Yönlenme Adresi \n hhsYonAdr \n AN1..1024 \n K \n Yönlendirmeli akış türünde GKD doğrulama bilgilerinin girilebilmesi için uygulamadan açılacak yönlendirme sayfasının adresi. Ayrık GKD akışında bu alan dönülmemelidir. \n \n \n > Yetkilendirme Tamamlanma Zamanı \n yetTmmZmn \n ISODateTime \n Z \n Yetkilendirme akışının tamamlanması gereken son zamanı gösterir.   HHS tarafından maksimum 5 dk içinde işlem tamamlanacak şekil zaman damgası oluşturulur. Zaman aşımı olduğunda HHS’nin GKD’ye izin vermeyecek şekilde hata mesajı vermesi gerekmektedir.  Rıza durumu Yetkilendirildi statüsüne geçene kadarki süredir. \n \n \n Ödeme Başlatma \n odmBsltm \n Kompleks: OdemeBaslatma \n Z \n \n \n \n > Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n >> Kimlik Türü \n kmlkTur \n AN1 \n K \n TR.OHVPS.DataCode.KimlikTur  sıralı veri türü değerlerinden birini alır. \n \n \n >> Kimlik Verisi \n kmlkVrs \n AN1..30 \n K \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır. TR.OHVPS.DataCode.KimlikTur  değerine göre uzunluk ve formatı değişir. \n \n \n >> Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür. TR.OHVPS.DataCode.KurumKimlikTur  sıralı veri türü değerlerinden birini alır. \n \n \n >> Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.   TR.OHVPS.DataCode.KurumKimlikTur  değerine göre uzunluk ve formatı değişir. \n \n \n >> Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur  sıralı veri türü değerlerinden birini alır  (B: Bireysel, K:Kurumsal) \n \n \n > İşlem Tutarı \n islTtr \n Kompleks:Tutar \n Z \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para Birimi.  Karekod akışında, FAST Karekod Veri Organizasyonundaki  53: (Para Birimi)  alanında tanımlı Para Birimi verisi kullanılır. \n \n \n >> Tutar \n ttr \n AN1..24 \n Z \n ÖBHS'nin ön yüzde kullanıcıdan teyit aldığı tutar.   Karekod akışında, FAST Karekod Veri Organizasyonundaki  54: (Tutar)  alanında tanımlı Tutar verisi kullanılır.   Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n \n \n > Gönderen \n gon \n Kompleks:Hesap \n İ \n \n \n \n >> Unvan \n unv \n AN3..140 \n K \n Gönderenin unvanıdır.  HHS, bu bilgiyi ÖBHS sisteminden gelen veri yerine FAST’a iletirken kendi sisteminden alabilir.   Tek seferlik ödeme dışında YÖS'ün gönderen unvanını göndermesi zorunludur. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n İ \n ÖBHS'nin ön yüzünden daha önce kayıt altına alınmış hesaplar arasından seçtirdiği veya müşteriye girdiği IBAN’dır.  ÖBHS tarafından iletilmediği durumda, gönderen hesap bilgisini müşteri tarafından HHS’nin dijital kanalında GKD sonrasında seçilebilir. Bu amaçla ÖBHS arayüzünde HHS seçtirilmelidir.   GKD sonrası HHS ekranında seçilen Hesap Numarası POST işleminin yanıtında dönülemez ancak isteğe bağlı GET sorgusu ile dönülebilir.    Hesap Referansı kullanılıyorsa Hesap Numarası kullanılmayabilir.   Ödeme Sistemine doğrudan katılımcı olmayan ÖHS'ler müşterilerine IBAN sunmadıkları için hspRef üzerinden ödeme başlatabilirler. Bu durumda hesap numarası boş olacaktır. \n \n \n >> Hesap Referansı \n hspRef \n AN5..40 \n İ \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid). YÖS bazında farklılaşması gerekmez.  ÖBHS’nin aynı zamanda HBHS olduğu durumda müşteri rızası tesis edilmiş bir hesabın referansı üzerinden de ödeme başaltılabilir.   GKD sonrası HHS ekranında seçilen Hesap Referansı POST işleminin yanıtında dönülemez ancak isteğe bağlı GET sorgusu ile dönülebilir.    Hesap Numarası kullanılıyorsa Hesap Referansı kullanılmayabilir.    Ödeme Sistemine doğrudan katılımcı olmayan ÖHS'ler müşterilerine IBAN sunmadıkları için hspRef üzerinden ödeme başlatabilirler. Bu durumda hesap numarası boş olacaktır. \n \n \n > Alıcı \n alc \n Kompleks:Hesap \n Z \n \n \n \n >> Unvan \n unv \n AN3..140 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen adres kaydı yaptırmış olan alıcının maskeli ad-soyadı veya maskeli ticari unvan bilgisidir. Kolas’tan dönen “account owner” alanı kullanılmalıdır. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen unvan bilgisidir. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n Z \n ÖBHS tarafından istek mesajında iletilip doğrulanan veya Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen alıcı maskeli IBAN bilgisidir. \n \n \n >> Kolay Adres \n kolas \n Kompleks:Kolas \n K \n \n \n \n >>> Kolas Türü \n kolasTur \n AN1 \n Z \n TR.OHVPS.DataCode.KolasTur  sıralı veri türü değerlerinden birini alır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n \n \n >>> Kolas Değeri \n kolasDgr \n AN7..50 \n Z \n Müşterinin eklediği, HHS (FAST katılımcısı) tarafından doğrulanmış Kolay Adres değeridir. Alabileceği değerler BKM “Kolay Adresleme Sistemi Uygulama Kuralları” belgesinde tanımlıdır.  Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n \n \n >>> Kolas Referans Numarası \n kolasRefNo \n N12 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı KOLAS tarafından ilgili sorguya özel olarak üretilmiş referans numarasıdır. \n \n \n >>> Kolas Hesap Türü \n kolasHspTur \n AN1 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı hesap türü bilgisidir:   TR.OHVPS.DataCode.KolasHspTur  sıralı veri değerlerinden birini alır. \n \n \n > Karekod \n kkod \n Kompleks:Karekod \n K \n \n \n \n >> Akış Türü \n aksTur \n AN2 \n Z \n TR.OHVPS.DataCode.KareKodAksTur  sıralı veri değerlerinden birini alır. Kolay Adresi Sistemi ile birlikte kullanılmaz. \n \n \n >> Referansı \n kkodRef \n AN1..12 \n K \n Karekod referans numarasını  gösterir. \n \n \n >> Üretici Kodu \n kkodUrtcKod \n AN4 \n Z \n Karekod üreticisinin kodu.  Ödeme Hizmeti Sağlayıcıları ve TCMB tarafından uygun görülen ödeme sistemi işleticisi TR Karekod üretebilmek için BKM’ye kayıt başvurusu yaparak karekod üretici kodu alabileceklerdir. Bankalar EFT kodlarını kullanacak olup ayrıca kayıt yaptırmalarına gerek bulunmamaktadır. 4 haneden kısa değerlerin sol tarafı ’0’ karakteri ile tamamlanmalıdır. \n \n \n > Ödeme Ayrıntıları \n odmAyr \n Kompleks: OdemeAyrintilari \n Z \n \n \n \n >> Ödeme Kaynağı \n odmKynk \n AN1 \n Z \n Ödemenin başlatıldığı kaynağı belirtir.  TR.OHVPS.DataCode.OdemeKaynak  sıralı veri değerlerinden “O” değerini alır. “O” değeri “Açık bankacılık aracılığı ile gönderilen ödemelerde kullanılır.” anlamını taşımaktadır. \n \n \n >> Ödeme Amacı \n odmAmc \n AN2 \n Z \n TR.OHVPS.DataCode.OdemeAmaci  sıralı veri değerlerinden birini alır. Karekod akışında, FAST Karekod Veri Organizasyonundaki 62-08: alanında tanımlı Ödeme Amacı verisi kullanılır. \n \n \n >> Referans Bilgisi \n refBlg \n AN1..140 \n K \n Ödemeye özel  Referans Bilgisi  alanıdır. Karekod işlemi değil ise zorunludur.  -\tKişiden kişiye fon aktarımlarda: Gün içerisinde ÖHK özelinde, her işleme özel biricik olarak oluşturulan referans bilgisidir.  Karekod P2P akışı için referans bilgisi (Karekod referans numarası değil, işleme özel üretilecek referans bilgisidir.) YÖS tarafından atanacaktır.  -\tE-ticaret işlemlerinde sipariş/takip numarası/müşteri/abone numarası  - İşyeri Ödemesi Karekod akışında, FAST Karekod Veri Organizasyonundaki  -\t62-01: alanında tanımlı Fatura Numarası   -\t62-06: alanında tanımlı Müşteri Numarası   verilerinden biri kullanılır. \n \n \n >> Açıklama \n odmAcklm \n AN1..200 \n İ \n ÖBHS’nin ÖHK’dan aldığı ya da kendisinin atadığı işlem açıklaması bilgisi.  FAST/PÖS sistemi üzerinden yapılan ödemeler için açıklama bilgisi girilirse boşluk karakteri girilerek geçilemez. En az bir alfasayısal karakter girilmesi zorunludur. \n \n \n >> ÖHK Mesaj Alanı \n ohkMsj \n AN1..200 \n İ \n HHS’nin ÖHK’ya göstermek üzere ilettiği mesaj. \n \n \n >> Ödeme Sistemi \n odmStm \n AN1 \n Z \n TR.OHVPS.DataCode.OdemeSistemi  sıralı veri değerlerinden birini alır. \n \n \n >> Beklenen Ödeme Zamanı \n bekOdmZmn \n ISODateTime \n K \n İşlemin yönlendirildiği ödeme sistemi PÖS ise ve PÖS işlem saatleri dışında ise işlemin yapılabileceği ilk zaman bilgisidir. Bu alan ileri vadeli ödemeler için düşünülmüştür. İlk fazda doldurulmasına gerek olmadığı düşünülmektedir. \n \n \n İşyeri Ödeme Bilgileri \n isyOdmBlg \n Kompleks:IsyeriOdemeBilgileri \n K \n İşyeri ödemelerinde kullanılabilecek alanlardır. Karekodlu işyeri ödemesi akışında bu alanlar dolu geldiği için isteğe bağlı olarak gönderilebilir. isyOdmBlg alanlarının en az birinin dolu olması durumunda yanıtta yer alır. \n \n \n > İşyeri Kategori Kodu \n isyKtgKod \n AN4 \n K \n İşlemin, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). Ödeme Amacı = ‘06’ ya da ‘04’ olan ödeme işlemleri için doldurulabilir. \n \n \n > Alt İşyeri Kategori Kodu \n altIsyKtgKod \n AN4 \n K \n İşlem alt işyerinden gerçekleştiriliyorsa, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). \n \n \n >Üye İş Yeri Tekil Kimlik \n genelUyeIsyeriNo \n AN8 \n K \n İşyeri kayıt sisteminde kayıtlı İşyeri için BKM tarafından üretilmiş olan genel işyeri numarasıdır (GlobalMerchantId) 8 haneden küçük gönderiminde başa ‘0’ eklenmelidir. Örnek değer ‘01630618’ \n 6.3.\tADIM 2- Ödeme Emri Rızasının Yetkilendirilmesi \n   \n Şekil 6: Ödeme Emri Rızasının Yetkilendirilmesi \n ÖBHS, ÖHK’nın ödeme emrini yetkilendirmesi isteğini iletir. Ödeme emrinin yetkilendirilmesi, HHS tarafından gerçekleştirilen Yönlendirme veya Ayrık GKD yöntemiyle yapılır. \n \n \n Yönlendirmeli doğrulama akışında , ÖBHS ÖHK’yı HHS’ye yönlendirir. \n \n ÖBHS tarafından yönlendirme, bir önceki adımdaki RizaNo’yu içerir. \n Yönlendirmenin RizaNo’yu içermesi sayesinde, HHS hangi ödeme emriyle ilişkili olarak yönlendirme yapıldığını ilişkilendirebilir. \n HHS, ÖHK için GKD sürecini işletir. \n \n ÖHK’yı doğrularsa, \n \n ÖHK -bir önceki adımda seçmediyse- borçlu hesabını seçer. \n HHS, ödeme emri rıza kaynağının durumunu “Yetkilendirildi” olarak günceller. \n HHS, ÖHK’yı “olumlu yönlendirme akışı” ile ÖBHS tarafından tanımlanan yönlendirme adresine yönlendirir: \n \n \n \n yonAdr?rizaDrm=Y&yetKod=xx&rizaNo=yy&rizaTip=O&drmKod=zzz\n \n ÖHK’yı doğrulayamazsa, \n1. HHS, ödeme emri rıza kaynağının durumunu “Yetki İptal” olarak günceller. \n2. HHS, ÖHK’yı “olumsuz yönlendirme akışı” ile ÖBHS tarafından tanımlanan yönlendirme adresine yönlendirir: \n yonAdr?rizaDrm=I&rizaNo=yy&rizaTip=O&drmKod=zzz\n \n HHS tarafında oluşabilecek bir hata durumunun YÖS’e aktarılması gerektiği durumlar olabilir. Bu durumda yonlendirme adresinde hata kodu parametresi zorunlu olarak iletilmelidir. \nHata açıklamalarının neler olabileceği ve YÖS’ün kendi uygulamasında bu hatayı ne şekilde göstereceği aşağıda tariflenmiştir. \n yonAdr?rizaDrm=I&rizaNo=yy&rizaTip=O&rizaIptDtyKod=11&drmKod=zzz\n \n URL’de iletilen “Rıza İptal Detay Kodu” Rıza durumları bölümünde (4. Bölüm) belirtilen hata kodları ile aynı olacak şekilde tasarlanmıştır. GKD sırasında yapılması gereken kontroller 5.3 bölümünde detaylandırılmıştır. \n \n Ayrık doğrulama akışında , HHS, ÖHK’nın ödeme emrini başlattığı uygulamadan farklı olabilecek bir “doğrulama” uygulamasında işlemi doğrulamasını ister.\n \n Ayrık akış ÖBHS’nin farklı bir kanal kullanarak yetkilendirme isteği göndermesiyle başlatılır. \n Bu yetkilendirme isteği, yetkilendirilecek ödeme emri rızasının eşleştirileceği ÖHK’nın bulunması için ilgili veriyi taşır. \n HHS, ÖHK’yı doğrular. \n ÖHK -bir önceki adımda seçmediyse- borçlandırılacak hesabını seçer. \n HHS, ödeme emri rıza kaynağının durumunu “Yetkilendirildi” olarak günceller. \n \n \n \n Başarılı GKD sonrasında (rizaDrm=’Y’) ilgili rıza nesnesi için (belirli bir rizaNo) yetkilendirme kodunun (yetKod) alınmasının ardından erişim belirteci erişim adresine POST çağrısı yapılarak yetkilendirme kodu karşılığında erişim belirteci ve yenileme belirteci alınır. POST /erişim-belirteci erişim noktası EK-3’te açıklanmıştır. \n Erişim belirteci alındıktan sonra; HHS, ödeme emri rıza kaynağının durumunu “Yetki Kullanıldı” olarak günceller. \n 6.4.\tADIM 2.1 – Ödeme Emri Rızasının Sorgulanması (isteğe bağlı) \n   \n Şekil 7: “odemeEmriRizasi” nesnesinin sorgulanması (isteğe bağlı) \n GKD işleminin başarıyla tamamlanıp Ödeme Emri Rızasının yetkilendirilmesi esnasında, gönderen hesap seçiminin HHS ekranında yapıldığı durumlar olabilir. Bu durumlarda ödeme emri isteğinde gönderen hesap bilgileri alanının zorunlu olması nedeniyle,  OdemeEmriRizasi  nesnesi sorgulanarak gönderen hesap bilgileri (hesap numarası ve/veya hesap referansı) alınmalıdır. HHS, “ ADIM 2 -Ödeme Emri Rızasının Yetkilendirilmesi ” akışında ÖHK’nın hesapları arasında seçim yapmasını ve seçilen hesap bilgisinin  OdemeEmriRizasi  nesnesine işler. \n GET /odeme-emri-rizasi/{RizaNo} \n ÖBHS, mevcut durumunu kontrol etmek için, oluşturulan bir  OdemeEmriRizasi  kaynağının durumunu isteğe bağlı olarak alabilir. \n Durum \n OdemeEmriRizasi  kaynağı için kullanılabilecek durum göstergeleri şu şekildedir: \n \n Yetki Bekleniyor \n Yetkilendirildi \n Yetki Kullanıldı \n Yetki Ödeme Emrine Dönüştü \n Yetki Sonlandırıldı \n Yetki İptal \n \n Ödeme Emri Rızası sonlandırıldı ve iptal statüsünde olan rıza'ların güncellenme zamanından(gnclZmn) 6 ay sonrasına kadar sorgulanabilir olması beklenmektedir. HHS'ler ilgili süre sonrasında yapılacak rıza sorgularına TR.OHVPS.Resource.NotFound uyarısı verebilir. YÖS'ler tarafından iptal ve sonlandırıldı statüsünde olan rızalar için sorgulama yapmamalıdır. \n Ödeme emri rıza durum değişiklikleri 4.2 bölümünde detaylandırılmıştır. \n BAŞARILI YANIT: \n GET /odeme-emri-rizasi/{RizaNo}  yanıtının (RESPONSE) gövdesinde (BODY)  “OdemeEmriRizasiİstegi” nesnesi kullanılır. İstek başarıyla sonuçlanırsa HHS kaynak sunucusunda Tablo-8’de yer alan parametreleri içeren “OdemeEmriRizasi” oluşturulur. \n Gönderen Hesap Bilgisinin, ADIM 2 (Ödeme Emri Rızasının Yetkilendirilmesi) sonrasında HHS ekranından seçildiği akışta “OdemeEmriRizasi” nesnesi güncellenir ve ÖBHS  GET /odeme-emri-rizasi/{RizaNo}  isteği yaparak güncel gönderen hesap bilgisi bilgisini de içeren “OdemeEmriRizasi” nesnesini çekmelidir. \n Çerçeve sözleşme kapsamında olmayan tek seferlik ödeme işlemlerinde, Kimlik Türü ve Kimlik Verisi bilgilerinin ödeme emri rızası sırasında gönderimi zorunlu değildir. Başarılı GKD sonrası, yani erişim belirteci alındığında, ödeme emri oluşmadan önce, YÖS’ün ödeme emri rızasını sorgulayarak bu bilgileri alması ve ödeme emrini oluştururken Kimlik Türü, Kimlik Verisi ve Gönderen Unvan alanlarını dolu olarak göndermesi beklenmektedir.  Ancak rıza durumu “Yetki Bekleniyor - B”, “Yetkilendirildi - Y” ve “Yetki İptal - I” statülerinde ise, ödeme emri rızası sorgulamasında, HHS’nin Kimlik Türü ve Kimlik Verisi bilgisini YÖS ile paylaşmaması gerekmektedir. \n 6.5.\tADIM 3- Ödeme Emrinin Oluşturulması \n   \n Şekil 8: Ödeme Emrinin Oluşturulması \n POST /odeme-emri \n \n ÖHK’nın Güçlü Kimlik Doğrulama ile işlemi yetkilendirmesi sonrasında, ÖBHS OdemeEmri kaynağını oluşturur. \n Ödeme emri (OdemeEmri) uygun ödeme kaynağına POST isteği yapılarak başlatılır.\n \n POST HHS tarafından işlenir: RizaDurumu “Yetki Kullanıldı” ise işleme başlanır. \n POST /odeme-emri-rizasi ile POST /odeme-emri isteklerinde istek alanların aynı olması beklenmektedir. HHS tarafından kontrolü sağlanmalıdır.POST verisindeki Gönderen Hesap Numarası ve Alıcı Hesap Numarasının aynı bankaya aitse HAVALE değilse FAST veya PÖS iş akışına geçilir. \n POST verisinin modele göre kontrolü yapılır (alan kontrolleri) \n POST verisinin mantıksal kontrolleri yapılır (IBAN kontrolü, çapraz alan kontroller) \n OdemeEmriDurumu “Gerçekleşti” / “Gönderildi” / “Gerçekleşmedi” olarak güncellenir. \n \n \n POST başarılı olursa, içerisinde OdemeEmriNo ve OdemeEmriDurumu değişkenleri de bulunan OdemeEmri nesnesi ÖBHS’ye döner ve RizaDurumu değişkenin değeri “Yetki Ödeme Emrine Dönüştü” olarak güncellenir. \n \n BAŞARILI İSTEK: \n Tablo 9: “OdemeEmriIstegi” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n HHS tarafından ödeme emri oluşturulması sırasında yapılması gereken kontrol ve işlemler \n FAST A01 PÖS M01 mesaj mapping \n \n \n \n \n Riza Bilgileri \n rzBlg \n Kompleks: RizaBilgileri \n Z \n \n \n \n \n \n > Rıza No \n rizaNo \n AN1..128 \n Z \n OdemeEmriRızasi nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n \n \n > Oluşturma Zamanı \n olusZmn \n ISODateTime \n Z \n OdemeEmriRizasi nesnesinin oluşturulma zamanı \n \n \n \n \n > Rıza Durumu \n rizaDrm \n AN1 \n Z \n TR.OHVPS.DataCode.RizaDurumu  sıralı veri tipini değerlerinden birini alır. \n \n \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n HHS, hhsKod’un kendisine ait olduğunu ve istek başlığındaki x-aspsp-code değeri ile aynı olduğunu kontrol eder.  Hata durumunda  TR.OHVPS.Connection.InvalidASPSP  hata kodunu döner. \n Gönderen katılımcı kodu (yani bankanın FAST/PÖS’teki Katılımcı kodu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n HHS, yosKod’un geçerli bir Ödeme Hizmeti Sağlayıcısı Kodu olduğunu ve istek başlığındaki x-tpp-code değeri ile aynı olduğunu kontrol eder.  Hata durumunda  TR.OHVPS.Connection.InvalidTPP  hata kodunu döner. \n YosKod \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n \n \n >Yetkilendirme Yöntemi \n yetYntm \n AN1 \n Z \n TR.OHVPS.DataCode.GkdTur  sıralı veri türü değerlerinden birini alır. \n \n \n \n \n >Yönlendirme Adresi \n yonAdr \n AN1..1024 \n K \n Yönlendirmeli güçlü kimlik doğrulama için zorunludur. HHS, müşteri uygulama / tarayıcısını yönlendirmeli akışta bu alanda belirtilen YÖS adresine yönlendirir. \n \n \n \n \n \n \n \n \n \n \n \n \n \n >Ayrık GKD \n ayrikGkd \n Kompleks:AyrikGkd \n K \n Ayrık güçlü kimlik doğrulama için zorunlu. \n yetYntm = A gönderilmiş ise ayrikGkd nesnesinin dolu gönderilmesi zorunludur. yetYntm = Y için bu nesne iletilmemelidir. \n \n \n \n >>OHK Tanım Tip \n ohkTanimTip \n AN8 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım tipleridir. İstek içerisindeki veri değiştirilmeden iletilir. \n \n \n \n \n >>OHK Tanım Değer \n ohkTanimDeger \n AN1..30 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım değeridir. ohkTanimTip'i ile uyumlu değerdir.  İstek içerisindeki veri değiştirilmeden iletilir. \n \n \n \n \n >HHS Yönlenme Adresi \n hhsYonAdr \n AN1..1024 \n K \n Yönlendirmeli akış türünde GKD doğrulama bilgilerinin girilebilmesi için uygulamadan açılacak yönlendirme sayfasının adresi. Ayrık GKD akışında bu alan dönülmemelidir. \n \n \n \n \n >Yetkilendirme Tamamlanma Zamanı \n yetTmmZmn \n ISODateTime \n Z \n Yetkilendirme akışının tamamlanması gereken son zamanı gösterir.   Rıza durumu Yetkilendirildi statüsüne geçene kadarki süredir. \n \n \n \n \n Ödeme Başlatma \n odmBsltm \n Kompleks: OdemeBaslatma \n Z \n \n \n \n \n \n > Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n \n \n >> Kimlik Türü \n kmlkTur \n AN1 \n Z \n TR.OHVPS.DataCode.KimlikTur  sıralı veri türü değerlerinden birini alır. \n Çerçeve sözleşme kapsamındaki ödemelerde kullanımı zorunludur. Ödeme Emri Rizası Nesnesindeki Kimlik Numarası Türü verisi ile aynı olmalıdır. Kurum adına yapılan (ticari) ödemelerde, kurum adına işlem yapan kullanıcının kimlik türünün bu alanda gönderilmesi zorunludur. \n \n \n \n >> Kimlik Verisi \n kmlkVrs \n AN1..30 \n Z \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır. TR.OHVPS.DataCode.KimlikTur  değerine göre uzunluk ve formatı değişir. \n Çerçeve sözleşme kapsamındaki ödemelerde kullanımı zorunludur. HHS, ÖBHS tarafından iletilmesi durumunda Kimlik Verisi üzeriden çapraz kontroller uygulamalı ve Kimlik Verisini temel alarak GKD gerçekleştirmelidir. Ödeme Emri Rizası Nesnesindeki Kimlik Numarası verisi ile aynı olmalıdır. Gerçek kişi tarafından yapılan ödemelerde, 1. HHS, Gönderen Adı ve Gönderen Hesap Numarasını ödeme emri isteğinde (Havale/FAST/PÖS) gönderir. - Gönderen Adı ve diğer tüm müşteri bilgileri, Kimlik Numarası üzerinden elde edillir. Pasaport numarasına ilişkin kontroller HHS'nin halihazırda kullandığı veri, akış ve tabi olduğu diğer düzenlemelerdeki işleyiş ile aynı şekilde ele alınmalıdır. Kurum adına yapılan (ticari) ödemelerde, kurum adına işlem yapan kullanıcının kimlik verisi bu alanda gönderilebilmesi zorunludur. \n GonKimN / Psp \n \n \n >> Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür. TR.OHVPS.DataCode.KurumKimlikTur  sıralı veri türü değerlerinden birini alır. \n Kurum adına yapılan (ticari) ödemelerde kullanımı zorunludur. Ödeme Emri Rizası Nesnesindeki Kurum Kimlik Türü verisi ile aynı olmalıdır. \n \n \n \n >> Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.   TR.OHVPS.DataCode.KurumKimlikTur  değerine göre uzunluk ve formatı değişir. \n Kurum adına yapılan (ticari) ödemelerde kullanımı zorunludur. Ödeme Emri Rizası Nesnesindeki Kurum Kimlik Verisi ile aynı olmalıdır. \n GonKimN / VKN \n \n \n >> Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur  sıralı veri türü değerlerinden birini alır  (B: Bireysel, K:Kurumsal) \n Kurum adına yapılan ödemelerde K değerini alır. Kurum Kimlik Türü ve Kurum Kimlik Verisi alanlarının giilmiş olduğu çapraz olarak kontrol edilir.  Ödeme Emri Rizası Nesnesindeki ÖHK Türü ile aynı olmalıdır. \n \n \n \n > İşlem Tutarı \n islTtr \n Kompleks:Tutar \n Z \n \n \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para Birimi.  Karekod akışında, FAST Karekod Veri Organizasyonundaki  53: (Para Birimi)  alanında tanımlı Para Birimi verisi kullanılır. \n Ödeme Emri Rizası Nesnesindeki Para Birimi verisi ile aynı olmalıdır. \n \n \n \n >> Tutar \n ttr \n AN1..24 \n Z \n ÖBHS'nin ön yüzde kullanıcıdan teyit aldığı tutar.   Karekod akışında, FAST Karekod Veri Organizasyonundaki  54: (Tutar)  alanında tanımlı Tutar verisi kullanılır.   Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n Ödeme Emri Rizası Nesnesindeki İşlem Tutarı verisi ile aynı olmalıdır. HHS işlem tutarı ödeme mesajında (Havale/FAST/PÖS) aynen taşınmak durumundadır. \n Ttr \n \n \n > Gönderen \n gon \n Kompleks:Hesap \n Z \n \n \n \n \n \n >> Unvan \n unv \n AN3..140 \n Z \n Gönderen kişinin ad soyad ya da ticari unvan bilgisi. \n HHS ve ÖBHS verisi tutarlı olmalıdır.  ÖBHS verisi ile HHS verisinin farklılaşması durumunun ise risk değerlendirme sistemlerine girdi olarak kullanması tavsiye edilir. \n GonAd \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n K \n ÖBHS'nin ön yüzünden seçtirdiği/kullanıcıya girdiği IBAN Hesap numarası ya da Hesap Referansı alanlarından en az birinin dolu olarak gelmesi gerekmektedir. \n Ödeme Emri Rizası Yanıtı Nesnesindeki Gönderen Hesap Numarası verisi ile aynı olmalıdır. \n GonHesN \n \n \n >> Hesap Referansı \n hspRef \n AN5..40 \n K \n ÖBHS’nin aynı zamanda HBHS olduğu durumda müşteri rızası tesis edilmiş bir hesabın referansı üzerinden de ödeme başlatılabilir. GKD sonrası HHS ekranında seçilen Hesap Referansı POST işleminin yanıtında dönülemez ancak isteğe bağlı GET sorgusu ile dönülebilir. Hesap Numarası kullanılıyorsa Hesap Referansı kullanılmayabilir.   Ödeme Sistemine doğrudan katılımcı olmayan ÖHS'ler müşterilerine IBAN sunmadıkları için hspRef üzerinden ödeme başlatabilirler. Bu durumda hesap numarası boş olacaktır. \n \n \n \n \n > Alıcı \n alc \n Kompleks:Hesap \n Z \n \n \n \n \n \n >> Unvan \n unv \n AN3..140 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen adres kaydı yaptırmış olan alıcının maskeli ad-soyadı veya maskeli ticari unvan bilgisidir. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen unvan bilgisidir. \n YÖS’ten alıcı ad soyad bilgisi geliyorsa ve HHS'nin kontrolünden başarılı bir şekilde geçti ise HHS'nin tekrar alıcı ad soyad bilgisi için giriş yaptırmasına gerek bulunmamaktadır. \n AlAd \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n Z \n Alıcının Hesap Numarası alanıdır (IBAN). Kolay Adres  sorgusunda dönülen adres kaydı yaptırmış olan alıcının maskeli IBAN bilgisidir. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen IBAN bilgisidir. Karekod akışında, FAST Karekod Veri Organizasyonundaki 30-01: alanında tanımlı İş Yeri IBAN verisi kullanılır. \n Ödeme Emri Rizası Yanıtı Nesnesindeki Alıcı Hesap Numarası verisi ile aynı olmalıdır.  Kontroller başarıyla sonuçlanırsa, bilgi FAST/PÖS AlHesN alanına doğrudan aktarır ve FAST/PÖS Alan Katılımcı Kodu (AlKK) olarak Alıcı HHS Kodu kullanılır.  KOLAS sorgusu sonucunda ödeme emrinde iletilen maskeli bilgi ile HHS’nin kendi ödeme emri rızası isteğinde tuttuğu KOLAS sorgusundan dönülen bilgi maskelenerek karşılaştırılır. Eğer aynı değilse uygun hata kodu dönülerek işlem sonlandırılır. \n AlHesN \n \n \n >> Kolay Adres \n kolas \n Kompleks:Kolas \n K \n \n \n \n \n \n >>> Kolas Türü \n kolasTur \n AN1 \n Z \n Müşterinin sorgulamak istediği Kolay Adres Tipi değeridir.  TR.OHVPS.DataCode.KolasTur  sıralı veri türü değerlerinden birini alır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n Ödeme Emri Rizası Yanıtı Nesnesindeki Kolay Adres Tipi verisi ile aynı olmalıdır. \n \n \n \n >>> Kolas Değeri \n kolasDgr \n AN7..50 \n Z \n Müşterinin eklediği, HHS (FAST katılımcısı) tarafından doğrulanmış Kolay Adres değeridir. Alabileceği değerler BKM “Kolay Adresleme Sistemi Uygulama Kuralları” belgesinde tanımlıdır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n Ödeme Emri Rizası Yanıtı Nesnesindeki Kolay Adres Değeri verisi ile aynı olmalıdır. \n FAST (KolasRef) \n \n \n >>> Kolas Referans Numarası \n kolasRefNo \n N12 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı KOLAS tarafından ilgili sorguya özel olarak üretilmiş referans numarasıdır. \n \n KolasRef ( hem FAST hem de PÖS için aynı) \n \n \n >>> Kolas Hesap Türü \n kolasHspTur \n AN1 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı hesap türü bilgisidir:   TR.OHVPS.DataCode.KolasHspTur  sıralı veri değerlerinden birini alır. \n \n \n \n \n > Karekod \n kkod \n Kompleks:Karekod \n K \n \n \n \n \n \n >> Akış Türü \n aksTur \n AN2 \n Z \n Karekod Akış Türü Karekod ödemesinin hangi akışla gerçekleştirildiğini gösterir.  Kolay Adresi Sistemi ile birlikte kullanılmaz.  01: FAST katılımcısından dinamik doğrulama hizmeti alınan işyeri ödemesi  02: FAST katılımcısından statik doğrulama hizmeti alınan işyeri ödemesi 03: Kişiden kişiye ödemeler \n Ödeme Emri Rizası Nesnesindeki Kare Kod Akış Türü verisi ile aynı olmalıdır. \n FAST: KrkdAksTur \n \n \n >> Referansı \n kkodRef \n AN1..12 \n K \n Karekod referans numarasını gösterir.  Okunan karekodda referans değeri varsa kullanılması zorunludur. Kolay Adresi Sistemi ile birlikte kullanılmaz. \n Ödeme Emri Rizası Nesnesindeki Karekod Referansı verisi ile aynı olmalıdır.  Çevrimiçi doğrulama hizmeti alınmayan statik karekodlar için Referans numarasının bulunmadığı durumlarda HHS tarafından “NONREF” ifadesi girilir. \n FAST: Karekod Referansı (KrkdRef) \n \n \n >> Üretici Kodu \n kkodUrtcKod \n AN4 \n Z \n Karekod üreticisinin kodu.  Ödeme Hizmeti Sağlayıcıları ve TCMB tarafından uygun görülen ödeme sistemi işleticisi TR Karekod üretebilmek için BKM’ye kayıt başvurusu yaparak karekod üretici kodu alabileceklerdir. Bankalar EFT kodlarını kullanacak olup ayrıca kayıt yaptırmalarına gerek bulunmamaktadır. 4 haneden kısa değerlerin sol tarafı ’0’ karakteri ile tamamlanmalıdır. \n \n \n \n \n > Ödeme Ayrıntıları \n odmAyr \n Kompleks: OdemeAyrintilari \n Z \n \n \n \n \n \n >> Ödeme Kaynağı \n odmKynk \n AN1 \n Z \n Ödemenin başlatıldığı kaynağı belirtir.  TR.OHVPS.DataCode.OdemeKaynak  sıralı veri değerlerinden “O” değeri atanarak iletilmelidir. “O” değeri “Açık bankacılık aracılığı ile gönderilen ödemelerde kullanılır.” anlamını taşımaktadır. \n Ödeme Emri Rizası Nesnesindeki Ödeme Kaynağı verisi ile aynı olmalıdır. HHS tarafından ödeme mesajında (FAST/PÖS) aynen taşınmak durumundadır. \n FAST/PÖS: OdmKynk \n \n \n >> Ödeme Amacı \n odmAmc \n AN2 \n Z \n TR.OHVPS.DataCode.OdemeAmaci  sıralı veri değerlerinden birini alır. \n Ödeme Emri Rizası Nesnesindeki Ödeme Amacı verisi ile aynı olmalıdır. HHS tarafından ödeme mesajında (FAST/PÖS) aynen taşınmak durumundadır. \n FAST (OdmAmc)/PÖS(OdmAmaci) \n \n \n >> Referans Bilgisi \n refBlg \n AN1..140 \n K \n Ödemeye özel  Referans Bilgisi  alanıdır. Karekod işlemi değil ise zorunludur.  -\tKişiden kişiye fon aktarımlarda: Gün içerisinde ÖHK özelinde, her işleme özel biricik olarak oluşturulan referans bilgisidir.  Karekod P2P akışı için referans bilgisi (Karekod referans numarası değil, işleme özel üretilecek referans bilgisidir.) YÖS tarafından atanacaktır.  -\tE-ticaret işlemlerinde sipariş/takip numarası/müşteri/abone numarası  -İşyeri Ödemesi Karekod akışında, FAST Karekod Veri Organizasyonundaki  -\t62-01: alanında tanımlı Fatura Numarası   -\t62-06: alanında tanımlı Müşteri Numarası   verilerinden biri kullanılır. \n Ödeme Emri Rizası Nesnesindeki Referans Bilgisi verisi ile aynı olmalıdır. \n RefBlg (Hem FAST hem de PÖS için aynı) \n \n \n >> Açıklama \n odmAcklm \n AN1..200 \n İ \n ÖBHS’nin ÖHK’dan aldığı ya da kendisinin atadığı işlem açıklaması bilgisi.  FAST/PÖS sistemi üzerinden yapılan ödemeler için açıklama bilgisi girilirse boşluk karakteri girilerek geçilemez. En az bir alfasayısal karakter girilmesi zorunludur. \n \n FAST/PÖS Acklm \n \n \n >> ÖHK Mesaj Alanı \n ohkMsj \n AN1..200 \n İ \n HHS’nin ÖHK’ya göstermek üzere ilettiği mesaj. \n \n \n \n \n >> Ödeme Sistemi \n odmStm \n AN1 \n Z \n TR.OHVPS.DataCode.OdemeSistemi  sıralı veri değerlerinden birini alır. \n Ödeme Emri Rizası Nesnesindeki Ödeme Sistemi verisi ile aynı olmalıdır. \n \n \n \n >> Beklenen Ödeme Zamanı \n bekOdmZmn \n ISODateTime \n K \n İşlemin yönlendirildiği ödeme sistemi PÖS ise ve PÖS işlem saatleri dışında ise işlemin yapılabileceği ilk zaman bilgisi \n \n \n \n \n İşyeri Ödeme Bilgileri \n isyOdmBlg \n Kompleks:IsyeriOdemeBilgileri \n K \n İşyeri ödemelerinde kullanılabilecek alanlardır. Karekodlu işyeri ödemesi akışında bu alanlar dolu geldiği için isteğe bağlı olarak gönderilebilir. isyOdmBlg alanlarının en az birinin dolu olması durumunda istekte yer alır.  İşyeri Ödeme Bilgileri, YÖS uygulama önyüzünde ÖHK’nın bildiği ve girişi yapılması beklenen bir bilgi olmamalıdır. YÖS tarafından sistemsel olarak doldurulması gereklidir. \n \n \n \n \n > İşyeri Kategori Kodu \n isyKtgKod \n AN4 \n K \n İşlemin, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). Ödeme Amacı = ‘06’ ya da ‘04’ olan ödeme işlemleri için doldurulabilir. 4 karakterden küçük değerlerin başına 0 eklenerek iletilmesi gereklidir. \n \n \n \n \n > Alt İşyeri Kategori Kodu \n altIsyKtgKod \n AN4 \n K \n İşlem alt işyerinden gerçekleştiriliyorsa, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). 4 karakterden küçük değerlerin başına 0 eklenerek iletilmesi gereklidir. \n \n \n \n \n >Üye İş Yeri Tekil Kimlik \n genelUyeIsyeriNo \n AN8 \n K \n İşyeri kayıt sisteminde kayıtlı İşyeri için BKM tarafından üretilmiş olan genel işyeri numarasıdır (GlobalMerchantId) 8 haneden küçük gönderiminde başa ‘0’ eklenmelidir. Örnek değer ‘01630618’ \n \n \n \n \n \n BAŞARILI YANIT: \n POST işleminin RESPONSE gövdesini (BODY) oluşturan “OdemeEmri” nesnesi Tablo-10’daki parametrelerden oluşur: \n Tablo 10: “OdemeEmri” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n \n \n \n \n Riza Bilgileri \n rzBlg \n Kompleks: RizaBilgileri \n Z \n \n \n \n > Rıza No \n rizaNo \n AN1..128 \n Z \n OdemeEmriRızasi nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n > Oluşturma Zamanı \n olusZmn \n ISODateTime \n Z \n OdemeEmriRizasi nesnesinin oluşturulma zamanıdır. \n \n \n > Rıza Durumu \n rizaDrm \n AN1 \n Z \n TR.OHVPS.DataCode.RizaDurumu  sıralı veri tipini değerlerinden birini alır. \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n > Yetkilendirme Yöntemi \n yetYntm \n AN1 \n Z \n TR.OHVPS.DataCode.GkdTur  sıralı veri türü değerlerinden birini alır. \n \n \n > Yönlenme Adresi \n yonAdr \n AN1..1024 \n Z \n Yönlendirmeli güçlü kimlik doğrulama için zorunlu. HHS, müşteri uygulama / tarayıcısını yönlendirmeli akışta bu alanda belirtilen YÖS adresine yönlendirir. \n \n \n > Ayrık GKD \n ayrikGkd \n Kompleks:AyrikGkd \n K \n Ayrık güçlü kimlik doğrulama için zorunlu. \n \n \n >> OHK Tanım Tip \n ohkTanimTip \n AN8 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım tipleridir. İstek içerisindeki veri değiştirilmeden iletilir. \n \n \n >> OHK Tanım Değer \n ohkTanimDeger \n AN1..30 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım değeridir. ohkTanimTip'i ile uyumlu değerdir.  İstek içerisindeki veri değiştirilmeden iletilir. \n \n \n > HHS Yönlenme Adresi \n hhsYonAdr \n AN1..1024 \n K \n Yönlendirmeli akış türünde GKD doğrulama bilgilerinin girilebilmesi için uygulamadan açılacak yönlendirme sayfasının adresi. Ayrık GKD akışında bu alan dönülmemelidir. \n \n \n > Yetkilendirme Tamamlanma Zamanı \n yetTmmZmn \n ISODateTime \n Z \n Yetkilendirme akışının tamamlanması gereken son zamanı gösterir.   Rıza durumu Yetkilendirildi statüsüne geçene kadarki süredir. \n \n \n Emir Bilgileri \n emrBlg \n Kompleks: EmirBilgileri \n Z \n \n \n \n > Ödeme Emri Numarası \n odmEmriNo \n AN1..128 \n Z \n odemeEmri nesnesinin UID'sidir. OdemeEmrine İlişkin sorgular bu ID üzerinden yapılır. \n \n \n > Ödeme Emri Zaman \n odmEmriZmn \n ISODateTime \n Z \n odemeEmri nesnesinin oluşturulma zamanıdır. \n \n \n Ödeme Başlatma \n odmBsltm \n Kompleks: OdemeBaslatma \n Z \n \n \n \n > Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n >> Kimlik Türü \n kmlkTur \n AN1 \n Z \n TR.OHVPS.DataCode.KimlikTur  sıralı veri türü değerlerinden birini alır. \n \n \n >> Kimlik Verisi \n kmlkVrs \n AN1..30 \n Z \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır. TR.OHVPS.DataCode.KimlikTur  değerine göre uzunluk ve formatı değişir. \n \n \n >> Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür. TR.OHVPS.DataCode.KurumKimlikTur  sıralı veri türü değerlerinden birini alır. \n \n \n >> Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.   TR.OHVPS.DataCode.KurumKimlikTur  değerine göre uzunluk ve formatı değişir. \n \n \n >> Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur  sıralı veri türü değerlerinden birini alır  (B: Bireysel, K:Kurumsal) \n \n \n > İşlem Tutarı \n islTtr \n Kompleks:Tutar \n Z \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para Birimi.  Karekod akışında, FAST Karekod Veri Organizasyonundaki  53: (Para Birimi)  alanında tanımlı Para Birimi verisi kullanılır. \n \n \n >> Tutar \n ttr \n AN1..24 \n Z \n ÖBHS'nin ön yüzde kullanıcıdan teyit aldığı tutar.   Karekod akışında, FAST Karekod Veri Organizasyonundaki  54: (Tutar)  alanında tanımlı Tutar verisi kullanılır.    Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n \n \n > Gönderen \n gon \n Kompleks:Hesap \n Z \n \n \n \n >> Unvan \n unv \n AN3..140 \n Z \n Gönderen kişinin ad soyad ya da ticari unvan bilgisi. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n K \n ÖBHS tarafından iletilip doğrulanan veya HHS ekranında seçilen Gönderen Hesap Numarası dönülür. \n \n \n >> Hesap Referansı \n hspRef \n AN5..40 \n K \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid)  YÖS bazında farklılaşması gerekmez. ÖBHS’nin aynı zamanda HBHS olduğu durumda müşteri rızası tesis edilmiş bir hesabın referansı üzerinden de ödeme başaltılabilir. GKD sonrası HHS ekranında seçilen Hesap Referansı POST işleminin yanıtında dönülemez ancak isteğe bağlı GET sorgusu ile dönülebilir. Hesap Numarası kullanılıyorsa Hesap Referansı kullanılmayabilir.  Ödeme Sistemine doğrudan katılımcı olmayan ÖHS'ler müşterilerine IBAN sunmadıkları için hspRef üzerinden ödeme başlatabilirler. Bu durumda hesap numarası boş olacaktır. \n \n \n > Alıcı \n alc \n Kompleks:Hesap \n Z \n \n \n \n >> Unvan \n unv \n AN3..140 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen adres kaydı yaptırmış olan alıcının maskeli ad-soyadı veya maskeli ticari unvan bilgisidir. Kolas’tan dönen “account owner” alanı kullanılmalıdır. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen unvan bilgisidir. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n Z \n Alıcının Hesap Numarası alanıdır (IBAN). Kolay Adres  sorgusunda dönülen adres kaydı yaptırmış olan alıcının maskeli IBAN bilgisidir. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen IBAN bilgisidir. Karekod akışında, FAST Karekod Veri Organizasyonundaki 30-01: alanında tanımlı İş Yeri IBAN verisi kullanılır. \n \n \n >> Kolay Adres \n kolas \n Kompleks:Kolas \n K \n \n \n \n >>> Kolas Türü \n kolasTur \n AN1 \n Z \n Müşterinin sorgulamak istediği Kolay Adres Tipi değeridir.  TR.OHVPS.DataCode.KolasTur  sıralı veri türü değerlerinden birini alır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n \n \n >>> Kolas Değeri \n kolasDgr \n AN7..50 \n Z \n Müşterinin eklediği, HHS (FAST katılımcısı) tarafından doğrulanmış Kolay Adres değeridir. Alabileceği değerler BKM “Kolay Adresleme Sistemi Uygulama Kuralları” belgesinde tanımlıdır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n \n \n >>> Kolas Referans Numarası \n kolasRefNo \n N12 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı KOLAS tarafından ilgili sorguya özel olarak üretilmiş referans numarasıdır. \n \n \n >>> Kolas Hesap Türü \n kolasHspTur \n AN1 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı hesap türü bilgisidir:   TR.OHVPS.DataCode.KolasHspTur  sıralı veri değerlerinden birini alır. \n \n \n > Karekod \n kkod \n Kompleks:Karekod \n K \n \n \n \n >> Akış Türü \n aksTur \n AN2 \n Z \n Karekod Akış Türü Karekod ödemesinin hangi akışla gerçekleştirildiğini gösterir.  Kolay Adresi Sistemi ile birlikte kullanılmaz.  01: FAST katılımcısından dinamik doğrulama hizmeti alınan işyeri ödemesi  02: FAST katılımcısından statik doğrulama hizmeti alınan işyeri ödemesi 03: Kişiden kişiye ödemeler \n \n \n >> Referansı \n kkodRef \n AN1..12 \n K \n Karekod referans numarasını gösterir.  Okunan karekodda referans değeri varsa kullanılması zorunludur. Kolay Adresi Sistemi ile birlikte kullanılmaz. \n \n \n >> Üretici Kodu \n kkodUrtcKod \n AN4 \n Z \n Karekod üreticisinin kodu.  Ödeme Hizmeti Sağlayıcıları ve TCMB tarafından uygun görülen ödeme sistemi işleticisi TR Karekod üretebilmek için BKM’ye kayıt başvurusu yaparak karekod üretici kodu alabileceklerdir. Bankalar EFT kodlarını kullanacak olup ayrıca kayıt yaptırmalarına gerek bulunmamaktadır. 4 haneden kısa değerlerin sol tarafı ’0’ karakteri ile tamamlanmalıdır. \n \n \n > Ödeme Ayrıntıları \n odmAyr \n Kompleks: OdemeAyrintilari \n Z \n \n \n \n >> Ödeme Kaynağı \n odmKynk \n AN1 \n Z \n Ödemenin başlatıldığı kaynağı belirtir.  TR.OHVPS.DataCode.OdemeKaynak  sıralı veri değerlerinden “O”  değerini alır. “O” değeri “Açık bankacılık aracılığı ile gönderilen ödemelerde kullanılır.” anlamını taşımaktadır. \n \n \n >> Ödeme Durumu \n odmDrm \n AN2 \n Z \n TR.OHVPS.DataCode.OdemeDurumu  sıralı veri değerlerinden birini alır.      Ödeme Durumu alanı ile ilgili olarak HHS’ler tarafından YÖS’lere  OdemeEmri servisi yanıtında 02:Gönderildi, 04:Onayda Bekliyor,05:İşleme Alındı yanıtları gönderilebilir.   05:İşleme Alındı  durumu YÖS tarafından müşteriye gösterilmeyen bir koddur. Bu kod dönüldüğünde YÖS uygulamasında ÖHK’ya ödeme durumu  02:Gönderildi  olarak gösterilir. İşlemin son durumunun teyidi için YÖS ödeme emri sorgulaması yapmalıdır.   02:Gönderildi  durumu oluştuktan sonra YÖS tarafından ödeme emri sorgulaması yapılarak ödeme durumunun güncel değeri öğrenilir. Güncel değerler  01:Gerçekleşti,03:Gerçekleşmedi  durumları olabilir. \n \n \n >> Ödeme Amacı \n odmAmc \n AN2 \n Z \n TR.OHVPS.DataCode.OdemeAmaci  sıralı veri değerlerinden birini alır. \n \n \n >> Referans Bilgisi \n refBlg \n AN1..140 \n K \n Ödemeye özel  Referans Bilgisi  alanıdır. Karekod işlemi değil ise zorunludur.  -\tKişiden kişiye fon aktarımlarda: Gün içerisinde ÖHK özelinde, her işleme özel biricik olarak oluşturulan referans bilgisidir.  Karekod P2P akışı için referans bilgisi (Karekod referans numarası değil, işleme özel üretilecek referans bilgisidir.) YÖS tarafından atanacaktır.  -\tE-ticaret işlemlerinde sipariş/takip numarası/müşteri/abone numarası  - İşyeri Ödemesi Karekod akışında, FAST Karekod Veri Organizasyonundaki  -\t62-01: alanında tanımlı Fatura Numarası   -\t62-06: alanında tanımlı Müşteri Numarası   verilerinden biri kullanılır. \n \n \n >> Açıklama \n odmAcklm \n AN1..200 \n İ \n ÖBHS’nin ÖHK’dan aldığı ya da kendisinin atadığı işlem açıklaması bilgisi.  FAST/PÖS sistemi üzerinden yapılan ödemeler için açıklama bilgisi girilirse boşluk karakteri girilerek geçilemez. En az bir alfasayısal karakter girilmesi zorunludur. \n \n \n >> ÖHK Mesaj Alanı \n ohkMsj \n AN1..200 \n İ \n HHS’nin ÖHK’ya göstermek üzere ilettiği mesaj. \n \n \n >> Ödeme Sistemi \n odmStm \n AN1 \n Z \n TR.OHVPS.DataCode.OdemeSistemi  sıralı veri değerlerinden birini alır. \n \n \n >> Ödeme Sistem Numarası \n odmStmNo \n AN10..50 \n K \n Ödeme başarılı başlatıldıysa, ödemenin başlatıldığı sistemdeki referans numarası. Gerektiğinde ilgili ödeme sisteminde/HHS’de söz konusu ödemeye karşılık gelen mesajla bağlantı kurmada kullanılır.   Ödeme Hizmeti kullanıcısına işlemin takibi için gösterilebilir.  İşlemin yönlendirildiği ödeme sistemi FAST ya da PÖS ise sistemdeki ilgili mesajın Tarih, GönderenKatilimKodu ve SorguNumarasi değerlerinin birleşiminden oluşur. Bu 3 alan mevcutta kullanıldığı formatta aralarına dikey çizgi (Unicode U+2223) işareti koyularak, birleştirmeli ve iletilmelidir. Örn : Tarih|GönderenKatilimKodu|SorguNumarasi   Ödeme Havale/Virman işlemi ise HHS’nin üretmiş olduğu havale/virman numarasını içerir. Buradaki format da Tarih|GönderenKatilimKodu|Havale-virman numarası şeklinde olmalıdır. Havale/FAST/PÖS  ödeme yöntemleri için tarih alanı yyyy-aa-gg formatında 10 karakter olarak iletilmelidir. \n \n \n >> Beklenen Ödeme Zamanı \n bekOdmZmn \n ISODateTime \n K \n İşlemin yönlendirildiği ödeme sistemi PÖS ise ve PÖS işlem saatleri dışında ise işlemin yapılabileceği ilk zaman bilgisi \n \n \n İşyeri Ödeme Bilgileri \n isyOdmBlg \n Kompleks:IsyeriOdemeBilgileri \n K \n İşyeri ödemelerinde kullanılabilecek alanlardır. Karekodlu işyeri ödemesi akışında bu alanlar dolu geldiği için isteğe bağlı olarak gönderilebilir. isyOdmBlg alanlarının en az birinin dolu olması durumunda yanıtta yer alır. \n \n \n > İşyeri Kategori Kodu \n isyKtgKod \n AN4 \n K \n İşlemin, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). Ödeme Amacı = ‘06’ ya da ‘04’ olan ödeme işlemleri için doldurulabilir. \n \n \n > Alt İşyeri Kategori Kodu \n altIsyKtgKod \n AN4 \n K \n İşlem alt işyerinden gerçekleştiriliyorsa, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). \n \n \n >Üye İş Yeri Tekil Kimlik \n genelUyeIsyeriNo \n AN8 \n K \n İşyeri kayıt sisteminde kayıtlı İşyeri için BKM tarafından üretilmiş olan genel işyeri numarasıdır (GlobalMerchantId) 8 haneden küçük gönderiminde başa ‘0’ eklenmelidir. Örnek değer ‘01630618’ \n 6.6.\tADIM 3.1- Ödeme Emri Sorgusu (İsteğe bağlı) \n   \n Şekil 9: Ödeme Emri Sorgusu \n GET /odeme-emri/{odemeEmriNo} \n ÖBHS, bu erişim adresi aracılığıyla ödeme emrini sorgulayabilir. \n BAŞARILI YANIT: \n GET /odeme-emri/{odemeEmriNo} yanıtının (RESPONSE) gövdesinde (BODY)  “OdemeEmri” nesnesi bulunur. İstek başarıyla sonuçlanırsa HHS kaynak sunucusunda Tablo-10’da yer alan parametreleri içeren “OdemeEmri” nesnesi döner. \n"},{title:"10.\tOlay Bildirim",frontmatter:{},regularPath:"/v1.1.0/contents/olay-bildirim.html",relativePath:"v1.1.0/contents/olay-bildirim.md",key:"v-206455c6",path:"/v1.1.0/contents/olay-bildirim.html",headers:[{level:2,title:"Genel Bilgiler",slug:"genel-bilgiler"},{level:2,title:"Olay Abonelik Servisleri (OAS)",slug:"olay-abonelik-servisleri-oas"},{level:2,title:"ADIM 1: Olay Aboneliğinin gerçekleştirilmesi",slug:"adim-1-olay-aboneliginin-gerceklestirilmesi"},{level:2,title:"ADIM 2: Olay Aboneliğinin güncellenmesi",slug:"adim-2-olay-aboneliginin-guncellenmesi"},{level:2,title:"ADIM 3: Olay Aboneliğinin sorgulanması",slug:"adim-3-olay-aboneliginin-sorgulanması"},{level:2,title:"ADIM 4: Olay Aboneliğinin iptali",slug:"adim-4-olay-aboneliginin-iptali"},{level:2,title:"ADIM 5: Olay Aboneliğinin İletilemeyen Olayları",slug:"adim-5-olay-aboneliginin-iletilemeyen-olayları"},{level:2,title:"ADIM 6: Sistem Olay Dinleme",slug:"adim-6-sistem-olay-dinleme"},{level:2,title:"Olay Dinleme Servisleri (ODS)",slug:"olay-dinleme-servisleri-ods"},{level:2,title:"ADIM 1: Olay Dinleme",slug:"adim-1-olay-dinleme"},{level:2,title:"ADIM 2:  Sistem Olay Dinleme",slug:"adim-2-sistem-olay-dinleme"}],content:" 10.\tOlay Bildirim  \n Genel Bilgiler \n Olay Bildirim Abonelik API servisleri, HHS'lerin sunmuş oldukları olay bildirimlerini takip etmek amacıyla abonelik akışlarını tanımlar. \n YÖS'ler olay bildirimlerini takip edebilmek için talep ettikleri abonelik hizmetlerini belirterek HHS'ler özelinde bir abonelik kaydı oluştururlar. Bu abonelik kaydını okuyabilir, güncelleyebilir ya da silebilirler. \n Olay bildirimleri HHS'ler tarafından 2 yöntem ile sağlanır. İlki olay bildirimlerinin anlık olarak iletilmesi, diğeri ise anlık iletilemeyen olayların toplu olarak iletilmesidir. \n Olay Bildirimi 2 API ile yönetilecektir. \n 1 - Olay Abonelik Servisleri (OAS) \n2 - Olay Dinleme Servisleri  (ODS) \n Olay Abonelik ve Olay Dinleme API'lerinin istek ve yanıt başlığında beklenen parametreler ÖBH,HBH,GKD API'lerinden farklıdır.\n 3.15. İstek Başlığı  ve  3.16. Yanıt Başlığı  bölümlerinde zorunlu parametreler ve açıklamaları belirtilmiştir. \n Olay Abonelik Servisleri (OAS) \n Olay abonelik Servisleri; HHS'ler tarafından sunulacak olay bildirim abonelik servislerini ve iletilemeyen olaylar servisini içermektedir. \n HHS'nin sunacağı bu API ile YÖS'ler şu adımları gerçekleştirebilir. \n \n YÖS'ün olay bildirimlerini dinleyebilmek için öncelikle dinlemek istediği olaylara ait olay tipleri ve kaynak tiplerini belirlemesi gerekmektedir. \n Olay tipleri ve kaynak tiplerinin neler olacağı \"Olay Tipleri ve Kaynak Tipleri İlişkisi\" tablosunda belirtilmiştir. \n YÖS, belirlediği olaylar için HHS'ye olay abonelik endpointi aracılığı ile abonelik başlatır. \n YÖS, abonelik numarası aracılığı ile abonelik bilgilerini görüntüleyebilir, güncelleyebilir, silebilir. \n YÖS, olay bildirimlerini bu abonelik sayesinde kendisinin sunacağı Olay Dinleme API'si ile dinler. \n HHS anlık iletemediği olaylarını biriktirerek, iletilemeyen olaylar endpointi ile YÖS'e sunar. \n \n HHS'ler \"Olay Tipleri ve Kaynak Tipleri İlişkisi\" tablosunda belirlenen olay ve kaynak tiplerinin tümü için YÖS'lere bildirim sunmak zorundadır. \n Olay Abonelik Servislerinde Idempotency kurallarının işletilmesine gerek bulunmamaktadır. \n Nezdinde ödeme hesabı bulunduran bazı hesap hizmeti sağlayıcılar(EPK, Ödeme Kuruluşları) müşterilerine ait hesapları, diğer HHS'lerdeki havuz hesaplarını kullanarak yönetiyor olabilir. Bu durum ilgili hesap hizmeti sağlayıcılarının, ÖHVPS kapsamında HHS olduğu rolde sunması gereken olay bildirim servisleri ile ilgili uyması gereken kuralları değiştirmemektedir. İlgili hesap hizmeti sağlayıcılarının standartlara uygun şekilde YÖS'lere bildirimleri yapması gerekmektedir. \n YÖS'ler sahip oldukları rol özelinde olay abonelik servislerinden faydalanabilir. Bu yüzden olay bildirim etki alanı (scope) değerleri hesap_bilgisi ve/veya odeme_emri olarak belirlenmiştir. \n Olay Abonelik Servisine ait API Endpointleri aşağıdaki tabloda listelenmiştir. \n Olay Abonelik Servisleri için Erişim Adresleri (Endpoints) \n Etki Alanı (Scope) =“hesap_bilgisi”  \"odeme_emri\" \n \n \n \n No \n Kaynak \n HTTP işlemi \n Erişim Adresi \n Zorunlu (Z)/ İsteğe Bağlı(İ) \n Yetkilendirme Türü \n İmzalama \n Parametre \n İstem Nesnesi \n Yanıt Nesnesi \n \n \n \n \n 1 \n olay-abonelik \n POST \n /olay-abonelik \n Z \n İstemci Kimlik Bilgileri \n İmzalı İstek ve Yanıt \n \n OlayAbonelikİstegi \n OlayAbonelik \n \n \n 2 \n olay-abonelik \n GET \n /olay-abonelik \n Z \n İstemci Kimlik Bilgileri \n İmzalı Yanıt \n \n - \n OlayAbonelik \n \n \n 3 \n olay-abonelik/{olayAbonelikNo} \n PUT \n /olay-abonelik/{olayAbonelikNo} \n Z \n İstemci Kimlik Bilgileri \n İmzalı İstek ve Yanıt \n \n OlayAbonelik \n OlayAbonelik \n \n \n 4 \n olay-abonelik/{olayAbonelikNo} \n DELETE \n /olay-abonelik/{olayAbonelikNo} \n Z \n İstemci Kimlik Bilgileri \n - \n - \n - \n - \n \n \n 5 \n olay-abonelik/{olayAbonelikNo}/iletilemeyen-olaylar \n GET \n /olay-abonelik/{olayAbonelikNo}/iletilemeyen-olaylar \n Z \n İstemci Kimlik Bilgileri \n - \n Sayfalama \n \n Olaylar \n \n \n 6 \n sistem-olay-dinleme \n POST \n sistem-olay-dinleme \n Z \n İstemci Kimlik Bilgileri \n - \n - \n Olaylar \n - \n ADIM 1: Olay Aboneliğinin gerçekleştirilmesi \n POST /olay-abonelik \n HHS'nin olay abonelik hizmeti sunduğu servistir.\nYÖS, seçeceği olay-kaynak tipleri için bu servis aracılığı ile abone olabilir. HHS POST işlemi sonucunda, YÖS adına bir olay abonelik kaynağı oluşturur ve tekil tanımlayıcı olan olayAbonelikNo değerini döner. olayAbonelikNo üretilirken farklı YÖS'ler için aynı değer kullanılamaz. olayAbonelikNo evrensel tekil olmalıdır. \n1 YÖS'ün 1 HHS'de 1 adet abonelik kaydı olabilir. \nBaşarılı POST isteği sonucu HTTP 201 cevabı ile iletilmelidir. \n YÖS tarafından daha önce oluşturulmuş olay abonelik kaydı varsa \"HTTP 400 -TR.OHVPS.Business.InvalidContent -Kaynak Çakışması\" hatasıyla uyarı mesajını döner. \n Olay Abonelik kaydı oluşturmak isteyen YÖS'ün ODS API tanımı HHS tarafından kontrol edilmelidir. YÖS'ün tanımı olmaması halinde \"HTTP 400-TR.OHVPS.Business.InvalidContent\" hatası verilmelidir. \n Olay Abonelik kaydı oluşturmak isteyen YÖS tarafından olay tipi ve kaynak tipi için iletilen değerler olması gereken sıralı veri tülerinden(TR.OHVPS.DataCode.OlayTip ve TR.OHVPS.DataCode.KaynakTip) farklı ise HHS tarafından  \"HTTP 400-TR.OHVPS.Resource.InvalidFormat\" hatası verilmelidir. \n Abonelik üzerinde görüntüleme, güncelleme, silme işlemlerini gerçekleştirebilir.\nYÖS'ün Aboneliği devam ettiği sürece; YÖS'ün açacağı Olay Dinleme API'sine, HHS tarafından abonelik kapsamında olay bildirimleri iletilir. \n BKM'nin sunacağı abonelik servisleri için HHS ve YÖS'lerin abonelik isteği yapmasına gerek bulunmamaktadır. BKM üretim ortamı tanımları yapılırken katılımcıları abonelik servislerine üye yapacaktır. BKM'nin sunacağı abonelik servislerinin olay tipi \"HHS_YOS_GUNCELLENDI\"dir. HHS ve YÖS API ile sunulan bilgilerde bir değişiklik olduğunda yapılacak olay bildirimlerini sağlar.\nÖrneğin; HHS logo bilgilerinde yapılacak bir değişiklik sonrasında, YÖS'lere yapılacak bildirim ile logo bilgisini değişen HHS'nin hhsKod değerini iletir. YÖS, HHS API'yi  hhsKod ile çağırarak HHS'nin güncel bilgilerini alır. Güncel bilgiler ile kendi sistemini günceller. \n OlayAbonelikIstegi nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n HHS tarafından yapılması gereken kontrol ve işlemler \n \n \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n \n Abonelik Tipleri \n abonelikTipleri \n Kompleks: abonelikTipleri[Array][1..N] \n Z \n \n \n \n \n > Olay Tipi \n olayTipi \n AN1..36 \n Z \n YÖS abone olmak istediği olay tiplerini TR.OHVPS.DataCode.OlayTip sıralı veri tiplerinden değer ya da değerler ile doldurur. \n \"Olay Tipleri ve Kaynak Tipleri İlişkisi\" tablosunda \"Olay Bildirim Yapan\" kolonu \"HHS\" olan olay tipleri ile veri girişine izin verilir. \n \n \n > Kaynak Tipi \n kaynakTipi \n AN1..36 \n Z \n Olay tiplerinin tanımlanabildiği kaynak listesi bulunmaktadır. Bu listeye uygun kaynak tipleri iletilmelidir. \n HHS, YÖS API üzerinden YÖS'ün rollerini alarak uygun kaynak tiplerine kayıt olmasını sağlar. \n \n \n \n OlayAbonelik nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Olay Abonelik Numarası \n olayAbonelikNo \n AN1..64 \n Z \n YÖS özelinde oluşturulan tekil tanımlayıcıdır. Farklı YÖS'ler için aynı değer kullanılamaz. \n \n \n Olay Abonelik Oluşturulma zamanı \n olusturmaZamani \n ISODateTime \n Z \n Olay Abonelik nesnesinin oluşturulma zaman damgası \n \n \n Olay Abonelik Güncelleme zamanı \n guncellemeZamani \n ISODateTime \n Z \n Olay Abonelik nesnesinin güncelleme zaman damgası iletilebilir. İlk değeri olay abonelik oluşturma zamanı bilgisidir. \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n Abonelik Tipleri \n abonelikTipleri \n Kompleks: abonelikTipleri[Array][1..N] \n Z \n OlayAbonelikIstegi nesnesi içerisinde iletilen değerlerin yanıt içerisinde dönmesi beklenmektedir. \n \n \n > Olay Tipi \n olayTipi \n AN1..36 \n Z \n \n \n \n > Kaynak Tipi \n kaynakTipi \n AN1..36 \n Z \n \n \n \n \n Olay Tipleri ve Kaynak Tipleri İlişkisi \n * Anlık : Olay gerçekleştikten sonra maksimum 5 saniye içerisindeki zaman \n \n \n \n Olay Tipleri \n YÖS Rolü \n Kaynak Tipleri \n Olay Oluşturulma durumu \n KaynakNo \n Asıl verinin elde edileceği API \n Olay Bildirimini Yapan \n Olay Bildirim Zamanı \n Retry Policy \n \n \n \n \n KAYNAK_GUNCELLENDI \n ÖBH \n ODEME_EMRI \n Tüm ödeme durum değişikliklerinde \n odemeEmriNo \n GET /odeme-emri/{odemeEmriNo} \n HHS \n Anlık \n 30 Dakika - 3 Deneme \n \n \n \n HBH \n HESAP_BILGISI_RIZASI \n Rıza iptal detay kodu ‘02’ : Kullanıcı İsteği ile HHS üzerinden İptal durumunda \n RizaNo \n GET /hesap-bilgisi-rizasi/{RizaNo} \n HHS \n *Anlık \n 30 Dakika - 3 Deneme \n \n \n \n HBH \n BAKIYE \n Bakiye nesnesindeki tutarla ilgili bir bilgi değiştiğinde ve HBH rızası içerisinde \"06-Anlık Bakiye Bildirimi\" izin türü varsa oluşturulur. Mevcutta alınmış rızalar için  bakiye kaynak tipi özelinde 06 izin türü gerektiğinden; mevcut rızanın yenilenmesine dair müşteriye bilgilendirme yapılarak 06 izin türünü kapsayan yeni rıza alınması süreci YÖS tarafından gerçekleştirilebilir. Bloke tutar değişikliği için olay oluşturma ve bildirimi HHS inisiyatifindedir. KrdHsp içerisinde yer alan kulKrdTtr değerinin değiştiği durumda olay bildirim gönderilmesi gerekmektedir. \n hspRef \n GET /hesaplar/{hspRef}/bakiye, GET /hesaplar/{hspRef}/islemler \n HHS \n Maksimum 10 dakika içerisinde \n Retry policy uygulanmamalıdır. İlk istek gönderilemediği durumda İletilemeyen Olaylara eklenmelidir. \n \n \n \n HBH \n COKLU_ISLEM_TALEBI ( bulk-data) \n İlgili API İlke ve kurallarına eklendiğinde güncellenecektir. \n \n \n HHS \n \n 30 Dakika - 3 Deneme \n \n \n AYRIK_GKD_BASARILI \n ÖBH \n ODEME_EMRI_RIZASI \n HHS sisteminde ÖHK kendini doğruladığında rıza oluşturulur. YÖS'e rıza oluşturulduğuna dair bildirim yapılır. YÖS yetkod değerini sorgulama sonucunda elde eder. \n RizaNo \n GET /yetkilendirme-kodu?rizaNo={rizaNo}}&rizaTip=O \n HHS \n *Anlık \n 1 Dakika 3 kez \n \n \n \n HBH \n HESAP_BILGISI_RIZASI \n HHS sisteminde ÖHK kendini doğruladığında rıza oluşturulur. YÖS'e rıza oluşturulduğuna dair bildirim yapılır. YÖS yetkod değerini sorgulama sonucunda elde eder. \n RizaNo \n GET /yetkilendirme-kodu?rizaNo={rizaNo}&rizaTip=H \n HHS \n *Anlık \n 1 Dakika 3 kez \n \n \n AYRIK_GKD_BASARISIZ \n ÖBH \n ODEME_EMRI_RIZASI \n HHS sisteminde ÖHK kendini doğruladıktan sonra yaptığı kontroller neticesinde logine izin vermez ise YÖS'e bildirim yapılır. YÖS rıza durumunu sorgulayarak işlemin neden iletilmediğine dair bilgi edinebilir. \n RizaNo \n GET /odeme-emri-rizasi/{RizaNo} \n HHS \n *Anlık \n 1 Dakika 3 kez \n \n \n \n HBH \n HESAP_BILGISI_RIZASI \n HHS sisteminde ÖHK kendini doğruladıktan sonra yaptığı kontroller neticesinde logine izin vermez ise YÖS'e bildirim yapılır. YÖS rıza durumunu sorgulayarak işlemin neden iletilmediğine dair bilgi edinebilir. \n RizaNo \n GET /hesap-bilgisi-rizasi/{RizaNo} \n HHS \n *Anlık \n 1 Dakika 3 kez \n \n \n HHS_YOS_GUNCELLENDI \n \n \n BKM sistemi tarafından üretilecek olayları dinlemek için kullanılacak kaynak tipidir. YÖS ve HHS'lerin BKM'ye abonelik oluşturmasına gerek bulunmamaktadır. BKM HHS ve YÖS üretim ortamı tanımı yaparken aboneliklerini başlatacaktır.   (HHS yaygınlaştırma durumundayken de aboneliği başlatılacaktır.) \n \n \n HHS \n \n \n \n \n \n YÖS \n HHS \n HHS bilgilerinde değişiklik olduğunda, YÖS'ün hhsKod ile sorgulama yapması ve değişen bilgiyi güncellemesi beklenmektedir. \n hhsKod \n GET /hhs/{hhsKod} \n BKM \n *Anlık \n 5 Dakika - 3 Deneme \n \n \n \n HHS \n YOS \n YÖS bilgilerinde değişiklik olduğunda, HHS'nin yosKod ile sorgulama yapması ve değişen bilgiyi güncellemesi beklenmektedir. \n yosKod \n GET /yos/{yosKod} \n BKM \n *Anlık \n 5 Dakika - 3 Deneme \n \n \n \n * Anlık : Olay gerçekleştikten sonra maksimum 5 saniye içerisindeki zaman \n ADIM 2: Olay Aboneliğinin güncellenmesi \n PUT\tolay-abonelik/{olayAbonelikNo} \n YÖS'ün olay aboneliğine ait abonelik tiplerini güncelleyebildiği servistir. Olay aboneliği oluşturulduğu zaman HHS tarafından iletilen olayAbonelikNo aracılığı ile güncelleme işlemi yapılır. YÖS abone olmak istediği olay-kayıt tiplerininin son halini güncelleme servisi ile HHS'ye iletir. HHS bu bilgilerle eski abonelik tiplerinin yerini değiştirir. \n Başarılı PUT isteği sonucu HTTP 200 cevabı ile iletilmelidir. \n OlayAbonelikIstegi nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n HHS tarafından yapılması gereken kontrol ve işlemler \n \n \n \n \n Olay Abonelik Numarası \n olayAbonelikNo \n AN1..64 \n Z \n YÖS özelinde oluşturulan tekil tanımlayıcıdır. Farklı YÖS'ler için aynı değer kullanılamaz. \n HHS geçerli bir olay abonelik numarası olduğunun kontrolünü yapar. \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n \n Abonelik Tipleri \n abonelikTipleri \n Kompleks: abonelikTipleri[Array][1..N] \n Z \n HHS Sisteminde, YÖS'ün eski abonelikleri yeni aboneliklerle güncellenmelidir. \n \n \n \n > Olay Tipi \n olayTipi \n AN1..36 \n Z \n YÖS abone olmak istediği olay tiplerini TR.OHVPS.DataCode.OlayTip sıralı veri tiplerinden değer ya da değerler ile doldurur. \n \"Olay Tipleri ve Kaynak Tipleri İlişkisi\" tablosunda \"Olay Bildirim Yapan\" kolonu \"HHS\" olan olay tipleri ile veri girişine izin verilir.  Olay tipi AYRIK_GKD_BASARILI ve AYRIK_GKD_BASARISIZ için, YÖS'ün ODS API'yi sunması zorunludur. HHS, bu olay tipleri özelinde YÖS API üzerinden YÖS'ün bu API'yi sunduğunu kontrol eder ve eğer sunmuyor ise TR.OHVPS.Business.InvalidContent hatası dönerek kayıt işlemini gerçekleştirmez. \n \n \n > Kaynak Tipi \n kaynakTipi \n AN1..36 \n Z \n Olay tiplerinin tanımlanabildiği kaynak listesi bulunmaktadır. Bu listeye uygun kaynak tipleri iletilmelidir. \n HHS, YÖS API üzerinden YÖS'ün rollerini alarak uygun kaynak tiplerine kayıt olmasına izin verir. \n \n \n \n OlayAbonelik nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Olay Abonelik Numarası \n olayAbonelikNo \n AN1..64 \n Z \n YÖS özelinde oluşturulan tekil tanımlayıcıdır. Farklı YÖS'ler için aynı değer kullanılamaz. \n \n \n Olay Abonelik Oluşturulma zamanı \n olusturmaZamani \n ISODateTime \n Z \n Olay Abonelik nesnesinin oluşturulma zaman damgası \n \n \n Olay Abonelik Güncelleme zamanı \n guncellemeZamani \n ISODateTime \n Z \n Olay Abonelik nesnesinin güncelleme zaman damgası \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n Abonelik Tipleri \n abonelikTipleri \n Kompleks: abonelikTipleri[Array][1..N] \n Z \n OlayAbonelikIstegi nesnesi içerisinde iletilen değerlerin yanıt içerisinde dönmesi beklenmektedir. \n \n \n > Olay Tipi \n olayTipi \n AN1..36 \n Z \n OlayAbonelikIstegi nesnesi içerisinde iletilen değerlerin yanıt içerisinde dönmesi beklenmektedir. \n \n \n > Kaynak Tipi \n kaynakTipi \n AN1..36 \n Z \n OlayAbonelikIstegi nesnesi içerisinde iletilen değerlerin yanıt içerisinde dönmesi beklenmektedir. \n ADIM 3: Olay Aboneliğinin sorgulanması \n GET /olay-abonelik \n YÖS olay abonelik bilgilerini sorgulamak isteyebilir. HHS, YÖS'e ait aktif durumdaki abonelik bilgisini iletir.\nBaşarılı GET sonucu HTTP 200 kodu ile iletilmelidir. \n OlayAbonelik nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Olay Abonelik Numarası \n olayAbonelikNo \n AN1..64 \n Z \n YÖS özelinde oluşturulan tekil tanımlayıcıdır. Farklı YÖS'ler için aynı değer kullanılamaz. \n \n \n Olay Abonelik Oluşturulma zamanı \n olusturmaZamani \n ISODateTime \n Z \n Olay Abonelik nesnesinin oluşturulma zaman damgası \n \n \n Olay Abonelik Güncelleme zamanı \n guncellemeZamani \n ISODateTime \n Z \n Olay Abonelik nesnesinin güncelleme zaman damgası \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n Abonelik Tipleri \n abonelikTipleri \n Kompleks: abonelikTipleri[Array][1..N] \n Z \n YÖS'ün abone olduğu olay - kaynak listesini döner. \n \n \n > Olay Tipi \n olayTipi \n AN1..36 \n Z \n TR.OHVPS.DataCode.OlayTip sıralı veri tiplerinden değerler içerir. \n \n \n > Kaynak Tipi \n kaynakTipi \n AN1..36 \n Z \n TR.OHVPS.DataCode.KaynakTip sıralı veri tiplerinden değerler içerir. \n ADIM 4: Olay Aboneliğinin iptali \n DELETE /olay-abonelik/olayAbonelikNo \n YÖS'ün abonelik kaydını silmesi için HHS'nin sunduğu servistir.  Başarılı silme işlemi sonucu HTTP 204 ile YÖS'e iletilir. \n ADIM 5: Olay Aboneliğinin İletilemeyen Olayları \n GET /iletilemeyen-olaylar \n HHS kaynaklar üzerinde oluşacak olayları YÖS'e POST/olay-dinleme servisi ile gönderim sağlamaktadır. Bu gönderim belli bir yeniden gönderim politası (retry-policy) ile yapılmalıdır.  Ancak yine de iletilemeyen olaylar olursa (YÖS servisinden HTTP 202 alamama durumu) YÖS'e iletilemeyen-olaylar servisi üzerinden sunulmalıdır. Yani yeniden gönderim politikası sonunda gönderilemeyen olaylar bu servis ile sunulmalıdır. \n Aynı kaynak numarası ile aynı olay-kaynak tipinde, 1 YÖS’e ait, 1 adet iletilemeyen olay kaydı olabilir. \n Bu serviste 1 gün öncesinden sorgu anına kadar tüm kayıtlarına ait iletilemeyen olaylar listelenmelidir.\nÖrnek sorgu zamanı : 2023-04-06T15:14:00+03:00\nHHS'nin sunacağı veri 2023-04-05T00:00:00+03:00  ile 2023-04-06T15:14:00+03:00 arasında olmalıdır.\nSıralama yönü olay tarihine göre artan şekilde olmalıdır. Sayfalama 100'er kayıt dönülerek yapılmalıdır. \n YÖS tarafından iletilemeyen olaylar isteği 10 dakikada bir olacak şekilde yapılabilir. HHS bu limite uygun işlem kısıtı uygulayabilir. \n İşlem Sorgu Örneği GET İşlem Sorgu Örneği  : /iletilemeyen-olaylar?syfNo=1&olyZmnBslTrh=2024-01-08T16:42:00+03:00&olyZmnBtsTrh=2024-01-09T17:09:00+03:00 \n Örneğin; \n olyZmnBslTrh : 07/01/2024 10:00:00+03:00\n olyZmnBtsTrh : 09/01/2024 16:00:00+03:00\n Sorgu Zamanı : 09/01/2024 10:15:00+03:00 \n Yanıt içerisinde yer alan veriye ait tarih aralığı : 08/01/2024 00:00:00+03:00 - 09/01/2024 10:15:00+03:00 olmalıdır. \n Başlangıç ve bitiş zaman aralığı örnekte yer alan şekilde seçilse dahi ilgili servis yanıtı için öncelikle sorgu zamanına bakılıp 1 gün öncesinden sorgu anına kadar tüm kayıtların iletilemeyen olaylar içerisinde listelenmesi sağlanmalıdır. \n İlgili tarih aralığında uygun veri olmaması halinde yanıt gövdesi boş olacak şekilde dönülmelidir. \n İletilemeyen Olaylar Sorgulama İsteği Sorgu Parametreleri \n \n \n \n Alan Adı \n Parametre Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n HHS tarafından yapılması gereken kontrol ve işlemler \n \n \n \n \n İstenen Sayfa Numarasi \n syfNo \n N3 \n İ \n Cevapta dönecek sayfa numarası 1’den başlayarak artan değerlerle iletilmelidir. \n Bu veri gönderildiği durumda, HHS İletilemeyen Olaylar listesine ait bu sayfadaki kayıtları göndermelidir. Gönderilmediğinde, HHS ilk sayfadaki kayıtları göndermelidir. \n \n \n Olay Zamanı Başlangıç Tarihi \n olyZmnBslTrh \n ISODateTime \n İ \n Sorgulanacak Olay Zamanına ait başlangıç tarihi \n HHS'ler iletilemeyen olaylar listesi dönüşünü bu kritere göre filtreleyerek iletmek zorundadır. YÖS tarafından tetiklenen sorgularda; olyZmnBslTrh iletilmediği durumda ya da 1 gün öncesinin başlangıç saatine göre daha geri bir zaman dilimi gönderildiğinde, başlangıç zamanı(olyZmnBslTrh) değeri sorgu zamanından 1 gün öncesine ait günün başlangıç zamanı olarak kabul edilmelidir. \n \n \n Olay Zamanı Bitiş Tarihi \n olyZmnBtsTrh \n ISODateTime \n İ \n Sorgulanacak Olay Zamanına ait bitiş tarihi \n HHS'ler iletilemeyen olaylar listesi dönüşünü bu kritere göre filtreleyerek iletmek zorundadır. YÖS tarafından tetiklenen sorgularda; olyZmnBtsTrh iletilmediği durumda ya da sorgu zamanından daha ileri bir zaman dilimi gönderildiğinde, bitiş zamanı(olyZmnBtsTrh) değeri sorgu zamanı olarak kabul edilmelidir. \n \n \n \n Tablo 17: Olaylar nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n Olaylar \n olaylar \n Kompleks: Olaylar \n Z \n \n \n \n >Olay No \n olayNo \n AN1..64 \n Z \n Olaya ait evrensel tekil numaradır. \n \n \n >Olay Zamani \n olayZamani \n ISODateTime \n Z \n Olayın oluştuğu tarih bilgisidir. \n \n \n >Olay Tipi \n olayTipi \n AN1..36 \n Z \n TR.OHVPS.DataCode.OlayTip sıralı veri tiplerinden birini alır. \n \n \n >Kaynak Tipi \n kaynakTipi \n AN1..36 \n Z \n TR.OHVPS.DataCode.KaynakTip sıralı veri tiplerinden birini alır. \n \n \n >Kaynak Numarası \n kaynakNo \n AN1..128 \n Z \n Güncellenen kaynağa ait HHS sistemindeki tekil tanımlayıcı. \n \n \n \n Kaynak numarasında gönderilen değer ile ilgili kaynağı sorgulayarak almak YÖS'ün insiyatifindedir. \n ADIM 6: Sistem Olay Dinleme \n POST /sistem-olay-dinleme \n HHS'lerin sistem olaylarını dinleme amacıyla açması gereken endpoint bilgisidir. \n YÖS API içerisinde yapılan değişikliklerde, BKM tarafından HHS'lere olay bildirimlerini yapılır. \n Olaylar yanıt nesnesi içerisinde 1 adet kayıt yer almalıdır. \n Başarılı POST isteği sonucu HTTP 202 Accepted kodu ile dönülmelidir. \n HHS'den başarılı yanıt alınamadığı durumda, 5 dakika aralıklarla 3 kez deneme yapılacaktır. Hata alınmaya devam edilmesi durumunda başka bir aksiyon alınmayacaktır. \n Olay Dinleme Servisleri (ODS) \n YÖS sunacağı Olay Dinleme Servisi ile hem HHS'den hem de BKM'den gelen olayların bildirimini dinleyebilir. YÖS'ler HHS'de yer alan olay abonelik kayıtlarını iptal edebilir ancak BKM Sistem Olay Dinleme servisinin ileteceği bildirimlerin alınması zorunlu olduğundan ODS API her zaman aktif olmalıdır. \n HHS'den gelecek olay bildirimlerini olay-dinleme endpointi ile dinlerken, BKM'den gelecek olay bildirimlerini sistem-olay-dinleme endpointi ile dinlemelidir. \n Olay Dinleme Servislerinde Idempotency kurallarının işletilmesine gerek bulunmamaktadır. \n Olay Dinleme Servisine ait API Endpointleri aşağıdaki tabloda listelenmiştir. \n Olay Dinleme Servisleri için Erişim Adresleri (Endpoints) \n Etki Alanı (Scope) =“olay_dinleme” \n \n \n \n No \n Kaynak \n HTTP işlemi \n Erişim Adresi \n Zorunlu (Z)/ İsteğe Bağlı(İ) \n Yetkilendirme Türü \n İmzalama \n Parametre \n İstem Nesnesi \n Yanıt Nesnesi \n \n \n \n \n 1 \n olay-dinleme \n POST \n /olay-dinleme \n Z \n İstemci Kimlik Bilgileri \n İmzalı İstek \n - \n Olaylar \n - \n \n \n 2 \n sistem-olay-dinleme \n POST \n /olay-dinleme \n Z \n İstemci Kimlik Bilgileri \n - \n - \n Olaylar \n - \n ADIM 1: Olay Dinleme \n POST /olay-dinleme \n Olay abonelik servisi ile abone olunan olaylar, olay dinleme servisi ile YÖS'e iletilir.\nOlaylar yanıt nesnesi içerisinde en fazla 100 kayıt gönderilmelidir.\nBaşarılı POST isteği sonucu HTTP 202 Accepted ile dönülmelidir. \n HHS'nin işlem hata aldığında, başarılı işlem olana kadar 3 kez deneme yapılması gerekmektedir.\nİlk istekle son istek arasında 30 dakika olacak şekilde, zamana yayarak bu denemelerin yapılması gerekmektedir. (Exponential backoff policy uygulanması beklenmektedir. )\nHHS kendi sistemini yormayacak şekilde, belirleyeceği kurallar dahilinde bu geliştirmeyi yapmalıdır. \n Tablo 17: Olaylar nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n >Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n >>Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n >> Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n >Olaylar \n olaylar \n Kompleks: Olaylar \n Z \n \n \n \n >>Olay Numarası \n olayNo \n AN1..64 \n Z \n Olaya ait atanmış tekil kimlik numarası \n \n \n >>Olay Zamanı \n olayZamani \n ISODateTime \n Z \n Olayın oluşma zamanı \n \n \n >>Olay Tipi \n olayTipi \n AN1..36 \n > \n TR.OHVPS.DataCode.OlayTip sıralı veri tiplerinden birini alır. \n \n \n >>Kaynak Tipi \n kaynakTipi \n AN1..36 \n Z \n TR.OHVPS.DataCode.KaynakTip sıralı veri tiplerinden birini alır. \n \n \n >>Kaynak Numarası \n kaynakNo \n AN1..128 \n Z \n Güncellenen kaynağa ait HHS sistemindeki tekil tanımlayıcı. \n ADIM 2:  Sistem Olay Dinleme \n POST /sistem-olay-dinleme \n YÖS'lerin sistem olaylarını dinleme amacıyla açması gereken endpoint bilgisidir. \n HHS API içerisinde yapılan değişikliklerde, BKM tarafından YÖS'lere olay bildirimlerini yapılır. \n Olaylar yanıt nesnesi içerisinde 1 adet kayıt yer almalıdır. \n Başarılı POST isteği sonucu HTTP 202 Accepted kodu ile dönülmelidir. \n YÖS'ten başarılı yanıt alınamadığı durumda, 5 dakika aralıklarla 3 kez deneme yapılacaktır. Hata alınmaya devam edilmesi durumunda başka bir aksiyon alınmayacaktır. \n"},{title:"4. Rıza Durumları",frontmatter:{},regularPath:"/v1.1.0/contents/riza-durumlari.html",relativePath:"v1.1.0/contents/riza-durumlari.md",key:"v-3358815e",path:"/v1.1.0/contents/riza-durumlari.html",headers:[{level:2,title:"4.1.\tHesap Bilgisi Hizmeti Rıza durum değişiklikleri",slug:"_4-1-hesap-bilgisi-hizmeti-rıza-durum-degisiklikleri"},{level:2,title:"4.2.\tÖdeme Bilgisi Hizmeti Rıza Durum Değişiklikleri",slug:"_4-2-odeme-bilgisi-hizmeti-rıza-durum-degisiklikleri"}],content:" 4. Rıza Durumları \n ÖHK, Ödeme Emri Başlatma Hizmetine ya da Hesap Bilgisi Hizmetine müşteri rızasının tesisi ile başlar. ÖHK’nın YÖS uygulaması üzerinden yaptığı işlemler neticesinde rıza durumları değişebilir.\nRıza’nın alabileceği durum kodları şu şekilde belirlenmiştir. \n B: Yetki Bekleniyor  – İlk rıza talebinde \n Y: Yetkilendirildi  – Başarılı GKD sonrası yetKod üretildiğinde \n K: Yetki Kullanıldı  – Erişim Belirteci alındığında \n E: Yetki ödeme emrine dönüştü  – ÖBHS için \n S: Yetki Sonlandırıldı \n    HBHS için : Erişimin Geçerli Olduğu Son Tarih geldiğinde \n    ÖBHS için : Yenileme belirteci Son Tarihi geldiğinde \n I :Yetki İptal \nRıza iptal durumu ise gerek raporlama gerekse müşteri deneyimi perspektifinden doğru   bilgilendirmeler yapılabilmesi açısından aşağıdaki gibi detay kodları ile zenginleştirilmiştir: \n \n Rıza İptal Detay Kodu: \n \n \n \n ‘01’ :\tYeni Rıza Talebi ile İptal \n ‘02’ :\tKullanıcı İsteği ile HHS üzerinden İptal \n ‘03’ :\tKullanıcı İsteği ile YÖS üzerinden İptal \n ‘04’ :\tSüre Aşımı : Yetki Bekleniyor \n ‘05’ :\tSüre Aşımı : Yetkilendirildi \n ‘06’ :\tSüre Aşımı : Yetki Ödemeye Dönüşmedi \n ‘07’ :\tGKD iptali : Aynı rıza no ile mükerrer çağrımı \n ‘08’ :\tGKD iptali : Rızano ile kimlik bilgileri uyuşmaması \n ‘09’ :\tGKD iptali : Uygun ürünü bulunmuyor \n ‘10’ :\tGKD iptali : HHS Açık Bankacılık kanalı işleme kapalı \n ’11’ :\tGKD iptali : Hesap Yetki Sorunu \n ‘12’ :\tGKD iptali : ÖHK HHS kontrollerini aşamadı \n ‘13’ :\tGKD iptali : ÖHK isteği ile GKD’den vazgeçildi \n ‘14’ :\tGKD iptali : Fraud Şüphesi \n ‘99’ :\tGKD iptali : Diğer \n \n \n 4.1 ve 4.2 bölümlerinde detaylandırılan rıza durum değişikliklerinde rıza iptal detay kodları kullanılmıştır. \n Örneğin B⇨ I/01 denildiğinde “Yetki Bekleniyor” rıza durumundan “Yetki İptal” rıza durumuna Rıza İptal Detay Kodu da ‘01’ yani ‘Yeni Rıza Talebi ile İptal’ olarak güncellenmelidir ifade edilmiştir. \n ÖHK verdiği rıza sırasında seçtiği hesaplarından biri kapatılırsa, diğer hesaplara ait bilgileri görmeye devam eder. Ancak ÖHK’nın hesabına ait bilgilerinin YÖS'e iletilmesini istemediği durumda, rızasını tamamen iptal ederek yeni hesap listesi ile yeni rıza vermesi gerekmektedir. Yani hesap kapanması nedeniyle rıza geçerliliğini yitirmez. ÖHK'nın proaktif olarak bu hesabı rızadan çıkarması durumunda rıza iptali olur. \n Rıza iptal edilmediği ve geçerli olduğu sürece kapalı hesaplar için diğer çevrimiçi kanallarda uygulanan yöntem izlenmelidir. Diğer çevrimiçi kanallarda kapalı hesaplara ilişkin bilgi dönülmüyor ise ÖHVPS'den de dönüş yapılmaz. ÖHK’nın rıza onayı verdiği açık hesaplarının tümü HHS tarafında kapatıldığı durumda, yine aynı şekilde HHS çevrimiçi kanallarında koyduğu kurallara göre bu hesaplarının YÖS uygulamasında gösterilmesine karar verir. \n Hesap kapama ve ticari kullanıcıların hesaplar üzerindeki yetki değişiklikleri HHS'nin iç sistemleri tarafından yapılan kontrollerle yönetilir. Buradaki değişiklikler ile HHS sistemsel olarak rıza iptali gerçekleştiremez. ÖHK izni ve onayı dahilinde rıza iptal gerçekleştirilmesi gerekmektedir. \n HHS'ler sunmuş oldukları Rıza İptal ekranını (sadece Hesap Bilgisi Rızası için), hangi ortamlardan GKD yapılmasına izin veriliyorsa (web/mobil) aynı ortamdan ÖHK'ya sunmalıdır.  Örneğin bir HHS bireysel müşterileri için web ve mobil, kurumsal müşteriler için web üzerinden GKD imkanı sunuyor ise, minimumda bireysel müşteriler için web ve mobil ortamlarından, kurumsal müşteriler için web ortamından Rıza İptal ekranı aracılığı ile rıza iptaline izin vermelidir. Bunun dışında çağrı merkezi ya da şube gibi ortamlardan sunacağı Rıza İptal imkanı HHS inisiyatifindedir. Bahsi geçen zorunluluk Ödeme Emri Rıza İptal ekranı için geçerli değildir. \n Benzer şekilde YÖS'ler hangi ortamlardan (web/mobil) hizmet veriyorsa, aynı ortam üzerinden Rıza İptal ekranını sunmalıdır. \n 4.1.\tHesap Bilgisi Hizmeti Rıza durum değişiklikleri \n Kural : Bir ÖHK'nın, bir YÖS için, bir HHS'de Y, K, B rıza durumlarında tek bir rızası olabilir.\nBir ÖHK hem kişisel olarak hem de bir kurumun kullanıcısı olabilir. Bu durumda kurum ve kişisel rıza aynı anda mevcut olabilmelidir. Rıza nesneleri, HHS tarafından uygun şekilde yönetilmelidir. \n \n \n Hesap Bilgisi Rızası isteği HHS’ye iletilir. \na.\tHHS ÖHK'ya ait içeride rıza var mı kontrol eder. Eğer yoksa  Yetki Bekleniyor - B  rıza durumu ile yeni rıza oluşturur. \nb.\tEğer içeride rıza varsa \n     i. Rıza durumu Yetki Bekleniyor - B ise; \n        HHS, sistemde Yetki Bekleniyor - B rıza durumuna sahip kayıt olduğu için, öncelikle eski kaydı Yetki İptal - I durumuna getirir.  Rıza İptal Detay Kodu “Yeni Rıza Talebi ile iptal” olmalıdır.  B ⇨ I / 01  Sonrasında,  Yetki Bekleniyor - B  rıza durumu ile yeni rıza oluşturur. \n      ii. Rıza durumu Yetkilendirildi - Y veya Yetki Kullanıldı - K ise; \n    ÖHK'nın halihazırda verilmiş bir rızası vardır. HHS, önce mevcut rızanın iptalinin yapılması gerektiğine dair   TR.OHVPS.Resource.ConsentMismatch  hatasını döner. YÖS, HHS ya da YÖS uygulaması üzerinden bu rızanın iptal edilmesi gerektiğine dair ÖHK'ya bilgilendirme yapar. \n      iii.\tRıza durumu Yetki Sonlandırıldı - S  ise Yetki Bekleniyor - B durumunda yeni rıza no oluşturur. \n      iv.\tRıza durumu Yetki İptal - I ise  Yetki Bekleniyor - B  durumunda yeni rıza no oluşturur. \n \n \n GKD başarılı bir şekilde tamamlandığında Rıza durumu Yetki Bekleniyor’dan Yetkilendirildi’ye güncellenir.  B ⇨ Y \n \n \n GKD'nin gerçekleşmediği durumlardan HHS haberdar olmayabilir. \n ÖHK GKD yapmadan ayrılmış olabilir. (ÖR: Tarayıcıyı kapatmış olabilir) Rıza Yetki Bekleniyor - B rıza durumunda kalır.  5 dakika içerisinde sistem tarafından Yetki Bekleniyor - B rıza durumundaki kayıtlar Yetki İptal  : Yetki Bekleniyor Süre Aşımı olarak güncellenir.   B ⇨ I / 04  Bkz. 9. Madde. \n \n \n GKD'nin gerçekleşmediği durumlardan HHS haberdardır. HHS yonlendirme adresinin query parametrelerine  rizaIptDtyKod  değerini ekleyerek bu durumu YÖS’e bildirmek zorundadır. \n \n \n Rıza durumunun  “Yetkilendirildi\" , “Yetki Kullanıldı” olduğu durum.  Yetki Bekleniyor ⇨ Yetki İptal   B ⇨  I / 07 \n \n \n Rızano ile kimlik bilgileri uyuşmazlığı.  Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 08 \n \n \n ÖHK'nın HHS'de ilgili ürününün olmadığı durum (hesap/kart) Yetki Bekleniyor ⇨ Yetki İptal   B ⇨ I / 09 \n \n \n Açık bankacılık kanalınız işleme kapalıdır.Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 10 \n \n \n Kullanıcının HHS'deki hesaplarında yeterli yetkisinin olmama durumu  Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 11 \n \n \n HHS’nin ÖHK için yaptığı kontrollerin başarısız olduğu durum Yetki Bekleniyor ⇨ Yetki İptal   B ⇨ I / 12 \n \n \n ÖHK isteği ile GKD’den vazgeçildiği durum Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 13 \n \n \n Fraud Şüphesi Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 14 \n \n \n Diğer Yetki Bekleniyor ⇨  Yetki İptal   B ⇨  I / 99 \n \n \n \n \n \n \n ÖHK, hesaplarında/izin türlerinde/Erişimin Geçerli Olduğu Son Tarih bilgilerinden bir ya da birden fazlasında güncelleme yapmak için YÖS ekranına girer. \n \n \n     a.\tYÖS önce Rıza İptal API'sini çağırır. Sonra yeni değerlerle yeni bir rıza isteğinde bulunur. Tekrar GKD gerekir. \n     b.\tYÖS rıza iptal yapmadan yeni rıza alma akışına başlarsa 1.b akışı devreye girer. \n     c.\tRıza güncelleme ilerleyen sürümlerde ele alınacaktır. \n \n \n Erişim Belirteci API \n a. Erişim Belirteci'nin yetkilendirme kodu ile çağrımı yapıldığında; \n      i. Rıza durumu Yetki İptal - I ya da Yetki Sonlandırıldı - S ise   TR.OHVPS.Resource.ConsentRevoked  hatası dönülmelidir. \n     ii. Rıza durumu Yetki Bekleniyor - B ya da Yetki Kullanıldı - K  ise  TR.OHVPS.Resource.ConsentMismatch  hatası dönülmelidir. \n     iii. Rıza durumu Yetkilendirildi - Y olduğunda erişim belirteci tahsis edilir.\nErişim belirteci alındığında rıza durumu K: Yetki Kullanıldı yapılır.  Y ⇨K \n b. Yenileme belirteci karşılığı erişim belirteci alınması sırasında; yenileme belirteci kontrolü ve sonrasında rıza kontrolü yapılmalıdır. \n      i. Öncelikle Yenileme Belirteci Geçerlik Süresi kontrolü yapılmalıdır. Geçerli bir Yenileme Belirteci olmadığı görülür ise  TR.OHVPS.Connection.InvalidToken  hatası dönülmelidir. \n     ii. Rıza durumu Yetki İptal - I  ya da Yetki Sonlandırıldı - S ise  TR.OHVPS.Resource.ConsentRevoked  hatası dönülmelidir. \n     iii. Rıza durumu Yetki Bekleniyor - B ya da Yetkilendirildi - Y  ise  TR.OHVPS.Resource.ConsentMismatch  hatası dönülmelidir. \n     iv. Rıza durumu Yetki Kullanıldı - K olduğunda, yenileme belirteci karşılığı erişim belirteci tahsis edilir. \n \n \n Sorgulama: HBHS, rıza alma akışına başlamadan önce, daha önce oluşturulmuş bir hesap bilgisi-rizasi kaynağının durumunu, isteğe bağlı olarak alabilir. Rıza numarası ile sorgulama yapılır. \n \n \n Hesap Bilgisi Rızasının İptali: HBHS üzerinden ya da HHS üzerinden yapılan rıza iptallerinde Rıza durumu  Yetki İptal - I olarak güncellenir. Rıza numarası ile iptal sağlanır. \n a. HHS üzerinden rıza iptali yapmış olabilir.  Rıza durumu sorgulanır. \n Rıza numarası Yetki Bekleniyor - B ve Yetkilendirildi - Y ve Yetki Kullanıldı - K durumlarında ise Yetki İptal durumuna getirilir. Rıza gnclzmn timestamp ile güncellenir.\nHHS, Rıza iptalinde aynı zamanda erişim belirtecini de invalid hale getirmelidir. \n B ⇨ I / 02 \n Y ⇨ I / 02 \n K ⇨ I / 02 \n b.\tYÖS üzerinden yapılacak iptal işleminde yine Y ve B ve K rıza durumlarında ise iptal edilebilir. \n B ⇨ I / 03 \n Y ⇨ I / 03 \n K ⇨ I / 03 \n Rıza durumu Yetki Sonlandırıldı - S  ise iptal gerçekleşmez. “Rıza durumunuz iptal etmeye uygun değildir.” hatası ÖHK'ya yansıtılır.  TR.OHVPS.Resource.ConsentRevoked \n \n \n ÖHK’nın verdiği rıza süresi dolmuş olabilir.\nErişimin Geçerli Olduğu Son Tarih geldiğinde Rıza durumu Yetki Kullanıldı’dan Yetki Sonlandırıldı durumuna çekilmelidir.   K ⇨ S \n \n \n Hesaplar, Bakiye ve İşlemler servislerinde erişim belirteci kontrolü ve sonrasında rıza kontrolü yapılmalıdır.\nGeçerli bir erişim belirteci yok ise  TR.OHVPS.Connection.InvalidToken  hatası dönülmelidir. \n YÖS'ün; Rıza İptal - I ya da Yetki Sonlandırıldı - S rıza durumlarında Hesaplar, Bakiye ve İşlemler servislerini çağırmaması beklenir. HHS'nin bu rıza durumları ile yapılmış çağrılar olduğunda  TR.OHVPS.Resource.ConsentRevoked  hatasını dönmesi gereklidir. \n Rıza durumu Yetki Kullanıldı - K dışında ise  TR.OHVPS.Resource.ConsentMismatch  hatası verilmelidir. \n Rıza durumu Yetki Kullanıldı - K ise servis akışlarına devam edilir. \n Rıza sorgulama API'sinde ilgili rıza kaydı bulunamaz veya sorgulayan kurumun yetkisi yoksa (örn : YÖS’ün farklı bir YÖS’e ait rıza noyu sorgulaması) \n TR.OHVPS.Resource.NotFound hatası  verilmelidir. \n \n \n HHS/YÖS tarafında rıza bilgileri belirli aralıklarla sistem kullanıcısı tarafından taranır:\n5 dakikadan uzun süredir “Yetki Bekleniyor” durumunda kalan kayıtların durumları güncellenir.\nYetki Bekleniyor  ⇨ Rıza İptal  / Süre Aşımı : Yetki Bekleniyor  B ⇨ I / 04 \n 5 dakikadan uzun süredir “Yetkilendirildi” durumunda kalan kayıtlar güncellenir.\nYetkilendirildi     ⇨ Rıza İptal / Süre Aşımı: Yetkilendirildi  B ⇨ I / 05 \nYukarıda bahsedilen, YÖS Süre Aşımı nedeniyle rıza iptal durum güncellemelerini yapmadan önce HHS’yi sorgulayarak rıza durumunu öğrenmeli ve süre aşımı dışında bir kodu varsa aynı kodla kendi sistemini güncellemelidir. \nErişimin Geçerli Olduğu Son Tarih geldiğinde rıza durumu Yetki Kullanıldı’dan Yetki Sonlandırıldı’ya güncellenir.  K ⇨ S \n 4.2.\tÖdeme Bilgisi Hizmeti Rıza Durum Değişiklikleri \n Kural : Bir ÖHK'nın bir YÖS için bir HHS'de istediği kadar rızası olabilir. \n Kurum ve kişisel rıza aynı anda mevcut olabilmelidir. Rıza nesneleri, HHS tarafından uygun şekilde yönetilmelidir. \n \n \n Ödeme Emri Rızası isteği HHS’ye iletilir. İçeride rıza olup olmamasına bakılmaksızın  Yetki Bekleniyor - B  rıza durumu ile yeni rıza no oluşturur. \n \n \n GKD başarılı bir şekilde tamamlandığında rıza durumu Yetki Bekleniyor’dan Yetkilendirildi’ye güncellenir.   B ⇨ Y \n \n \n GKD'nin gerçekleşmediği durumlardan HHS haberdar olmayabilir. \n ÖHK GKD yapmadan ayrılmış olabilir. (ÖR: Browserı kapatmış olabilir)\nRıza durumu Yetki Bekleniyor'dur. 5 dakika içerisinde sistem tarafından Yetki Bekleniyor - B durumundaki kayıtlar Rıza İptal : Yetki Bekleniyor Süre Aşımı olarak güncellenir. Bkz. 8. Madde. \n \n \n GKD'nin gerçekleşmediği durumlardan HHS haberdardır. HHS yonlendirme adresinin query parametrelerine rizaIptDtyKod değerini ekleyerek bu durumu YÖS’e bildirmek zorundadır. \n \n \n Rıza durumunun  “Yetkilendirildi\" , “Yetki Kullanıldı” olduğu durum.  Yetki Bekleniyor ⇨ Yetki İptal   B ⇨  I / 07 \n \n \n Rızano ile kimlik bilgileri uyuşmazlığı.  Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 08 \n \n \n ÖHK'nın HHS'de ilgili ürününün olmadığı durum (hesap/kart) Yetki Bekleniyor ⇨ Yetki İptal   B ⇨ I / 09 \n \n \n Açık bankacılık kanalınız işleme kapalıdır.Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 10 \n \n \n Kullanıcının HHS'deki hesaplarında yeterli yetkisinin olmama durumu  Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 11 \n \n \n HHS’nin ÖHK için yaptığı kontrollerin başarısız olduğu durum Yetki Bekleniyor ⇨ Yetki İptal   B ⇨ I / 12 \n \n \n ÖHK isteği ile GKD’den vazgeçildiği durum Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 13 \n \n \n Fraud Şüphesi Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 14 \n \n \n Diğer Yetki Bekleniyor ⇨  Yetki İptal   B ⇨  I / 99 \n \n \n \n \n \n \n GKD muafiyeti olduğunda YÖS HHS’den arka planda onay alır. Bu onay sırasında rıza durumu  Yetkilendirildi  yapılır.  B ⇨ Y \n \n \n Erişim Belirteci API \na. Erişim Belirteci'nin yetkilendirme kodu ile çağrımı yapıldığında; \n      i. Rıza durumu Yetki İptal - I  ya da Yetki Sonlandırıldı - S ise   TR.OHVPS.Resource.ConsentRevoked  hatası dönülmelidir. \n     ii. Rıza durumu Yetki Bekleniyor - B , Yetki Kullanıldı - K  ya da Yetki ödeme emrine dönüştü - E  ise  TR.OHVPS.Resource.ConsentMismatch  hatası dönülmelidir. \n     iii. Rıza durumu Yetkilendirildi - Y olduğunda erişim belirteci tahsis edilir.\nErişim belirteci alındığında rıza durumu K: Yetki Kullanıldı yapılır.  Y ⇨K \n b. Yenileme belirteci karşılığı erişim belirteci alınması sırasında; yenileme belirteci kontrolü ve sonrasında rıza kontrolü yapılmalıdır. \n      i. Öncelikle Yenileme Belirteci Geçerlik Süresi kontrolü yapılmalıdır. Geçerli bir Yenileme Belirteci olmadığı görülür ise  TR.OHVPS.Connection.InvalidToken  hatası dönülmelidir. \n     ii. Rıza durumu Yetki İptal - I  ya da Yetki Sonlandırıldı - S ise  TR.OHVPS.Resource.ConsentRevoked  hatası dönülmelidir. \n     iii. Rıza durumu Yetki Bekleniyor - B ya da Yetkilendirildi - Y  ise  TR.OHVPS.Resource.ConsentMismatch  hatası dönülmelidir. \n     iv. Rıza durumu Yetki Kullanıldı - K veya Yetki Ödeme Emrine Dönüştü – E olduğunda, yenileme belirteci karşılığı erişim belirteci tahsis edilir. \n \n \n Ödeme Başlatma API önce erişim belirteci ve sonrasında rıza kontolü yapılarak gerçekleştirilmelidir \n \n Öncelikle Erişim Belirteci kontrolü yapılmalıdır. Geçerli bir Erişim Belirteci olmadığı görülür ise  TR.OHVPS.Connection.InvalidToken  hatası dönülmelidir. \n Rıza durumu Yetki İptal - I  ya da Yetki Sonlandırıldı - S ise  TR.OHVPS.Resource.ConsentRevoked  hatası dönülmelidir. \n Rıza durumu Yetki Bekleniyor - B , Yetkilendirildi - Y, Yetki Ödeme Emrine Dönüştü - E  ise  TR.OHVPS.Resource.ConsentMismatch  hatası dönülmelidir. \n Rıza durumu Yetki Kullanıldı - K olduğunda ödeme emri gerçekleştirilir.  Rıza durumu Yetki Kullanıldı - K'dan Yetki Ödeme Emrine Dönüştü – E yapılmalıdır.   K ⇨E \n \n \n \n Sorgulama: GKD işleminin başarıyla tamamlanıp Ödeme Emri Rızasının yetkilendirilmesi esnasında, gönderen hesap seçiminin HHS ekranında yapıldığı durumlarda, ödeme emri isteğinde gönderen hesap bilgileri alanının zorunlu olması nedeniyle, ödemeEmriRizasi nesnesi sorgulanarak gönderen hesap bilgileri (hesap numarası ve/veya hesap referansı) alınmalıdır.\nRıza sorgulama, Ödeme Emri Sorgulama API'lerinde ilgili rıza kaydı bulunamaz veya sorgulayan kurumun yetkisi yoksa (örn : YÖS’ün farklı bir YÖS’e ait rıza noyu sorgulaması) \n TR.OHVPS.Resource.NotFound  hatası verilmelidir. \n \n \n Ödeme Emri Rızasının İptali bulunmamaktadır. \n \n \n HHS/YÖS tarafında rıza bilgileri belirli aralıklarla sistem kullanıcısı tarafından taranır:\n5 dakikadan uzun süredir Yetki Bekleniyor'da kalan kayıtların durumları güncellenir.\nYetki Bekleniyor ⇨ Rıza İptal / Süre Aşımı : Yetki Bekleniyor  B ⇨ I / 04 \n 5 dakikadan uzun süredir Yetkilendirildi'de kalan kayıtlar durumları güncellenir.\nYetkilendirildi     ⇨ Rıza İptal / Süre Aşımı : Yetkilendirildi  B ⇨ I / 05 \n 5 dakikadan uzun süredir Yetki kullanıldı'da kalan kayıtlar durumları güncellenir.\nYetki kullanıldı ⇨ Rıza İptal / Süre Aşımı : Yetki Ödemeye Dönüşmedi  B ⇨ I / 06 \n Yenileme belirteci Son Tarih geldiğinde rıza durumu Yetki ödeme emrine dönüştü’den Yetki Sonlandırıldı'ya güncellenir. \n E ⇨ S \n \n \n GKD muafiyeti sadece ödeme başlatma servislerinde bulunmaktadır. \n \n \n"},{title:"3. Temel Prensipler",frontmatter:{},regularPath:"/v1.1.0/contents/temel-prensipler.html",relativePath:"v1.1.0/contents/temel-prensipler.md",key:"v-2fcc3a95",path:"/v1.1.0/contents/temel-prensipler.html",headers:[{level:2,title:"3.1 Genel",slug:"_3-1-genel"},{level:2,title:"3.2.\tİstem (Çağrı) ve Oturum",slug:"_3-2-istem-cagrı-ve-oturum"},{level:2,title:"3.3.\tRESTful API",slug:"_3-3-restful-api"},{level:2,title:"3.4.\tSürüm Yönetimi",slug:"_3-4-surum-yonetimi"},{level:2,title:"3.5.\tKaynak URI Yol Yapısı",slug:"_3-5-kaynak-uri-yol-yapısı"},{level:2,title:"3.6.\tKarakter Kodlama",slug:"_3-6-karakter-kodlama"},{level:2,title:"3.7.\tVeri Formatı",slug:"_3-7-veri-formatı"},{level:2,title:"3.8.\tİstemci Sertifika Yönetimi",slug:"_3-8-istemci-sertifika-yonetimi"},{level:2,title:"3.9.\tYetkilendirme Türleri",slug:"_3-9-yetkilendirme-turleri"},{level:2,title:"3.10. İstek/Cevap Mesajlarında Kullanılan Nesne Yapıları",slug:"_3-10-istek-cevap-mesajlarında-kullanılan-nesne-yapıları"},{level:2,title:"3.11. Sayfalandırma ve Filtreleme",slug:"_3-11-sayfalandırma-ve-filtreleme"},{level:2,title:"3.12. Mesaj İmzalama",slug:"_3-12-mesaj-imzalama"},{level:2,title:"3.13. Durum Kodu",slug:"_3-13-durum-kodu"},{level:2,title:"3.14. Gereksinimlerinin Sınıflandırılması",slug:"_3-14-gereksinimlerinin-sınıflandırılması"},{level:2,title:"3.15. İstek Başlığı",slug:"_3-15-istek-baslıgı"},{level:2,title:"3.16. Yanıt Başlığı",slug:"_3-16-yanıt-baslıgı"},{level:2,title:"3.17. Idempotency Kuralları",slug:"_3-17-idempotency-kuralları"},{level:2,title:"3.18. HTTP Durum Kodları",slug:"_3-18-http-durum-kodları"},{level:2,title:"3.19. Maskeleme Kuralları",slug:"_3-19-maskeleme-kuralları"},{level:2,title:"3.20. Fonksiyonel Olmayan Gereksinimler",slug:"_3-20-fonksiyonel-olmayan-gereksinimler"},{level:2,title:"3.21. Otomatik Sorgular",slug:"_3-21-otomatik-sorgular"}],content:' 3. Temel Prensipler  \n Bu bölümde Ödeme Hizmetleri Veri Paylaşım Servisleri (Hesap Bilgisi Hizmeti, Ödeme Emri Başlatma Hizmeti) için tanımlanan temel prensipler açıklanmaktadır. \n 3.1 Genel \n \n \n HHS’ler Yönetmeliğin 59. maddesinin beşinci fıkrası ve Ödeme ve Elektronik Para Kuruluşlarının Bilgi Sistemleri ile Ödeme Hizmeti Sağlayıcılarının Ödeme Hizmetleri Alanındaki Veri Paylaşım Servislerine İlişkin Tebliğin (Tebliğ) 23. maddesinin birinci fıkrası uyarınca, ödeme hizmetleri veri paylaşım servislerini GEÇİT aracılığıyla HBHS ve ÖBHS’ye sunmakla yükümlüdür. \n \n \n Tebliğin 23. maddesinin ikinci fıkrası uyarınca ödeme emri başlatma hizmetinde açık iletişim servisinin tarafları ÖBHS ile HHS’dir. \n \n \n Tebliğin 23. maddesinin üçüncü fıkrası uyarınca hesap bilgisi hizmetinde açık iletişim servisinin tarafları HBHS ile HHS’dir. \n \n \n Yönetmeliğin 60. maddesinin birinci fıkrası uyarınca müşteri, ödeme emri başlatma hizmetini  ödeme hesabının çevrim içi olarak erişilebilir olduğu durumlarda , kullanmayı tercih edebilir. \n \n \n Yönetmeliğin 61. maddesinin birinci fıkrası uyarınca müşteri, hesap bilgisi hizmetini  ödeme hesabının çevrim içi olarak erişilebilir olduğu durumlarda , kullanmayı tercih edebilir. \n \n \n Tebliğin 25. maddesi uyarınca HHS ve YÖS (ÖBHS ve HBHS) arasında bağlantı uçtan uca güvenli bir şekilde sağlanır. Bu amaçla iletim katmanında TLS (asgari 1.2 sürümü) ile şifreli iletişim sağlanır. \n \n \n Tebliğin 23. maddesinin dördüncü fıkrası uyarınca HHS tarafından sunulan ödeme hizmetleri veri paylaşım servislerini kullanan yetkilendirilmiş ödeme hizmeti sağlayıcılarının TCMB tarafından ilgili ödeme hizmeti için yetkilendirilmiş olduğu kontrol edilir. \n \n \n Tebliğin 25. maddesinin beşinci fıkrası uyarınca zaman damgası, 15/1/2004 tarihli 5070 sayılı Elektronik İmza Kanunu kapsamında tanımlanan zaman damgasına dayanır. \n \n \n API alan isimleri Türkçe olarak tanımlanmıştır. Ancak API başlığı (header) alanındaki alan isimleri özelinde, API Geçitleri tarafından otomatik olarak tanınabilmesi gözetilerek, İngilizce isimlendirme tercih edilmiştir. \n \n \n ÖHK halihazırda ödeme hesaplarına, çevrim içi (mobil bankacılık, internet bankacılığı vb.) erişebilir durumda ise, HHS\'nin varsa Açık Bankacılık kanal veya yetki tanımını varsayılan değeri AÇIK olacak şekilde sunması gerekmektedir. HHS’nin, Bireysel/Kurumsal/Ticari müşteri ayrımı yapmaksızın tüm müşterileri için, çevrim içi kanallarda hesap hareketlerine erişim ve ödeme yapabilme yetkisi bulunması durumunda, yine aynı şekilde Açık Bankacılık kanal veya yetki tanımını da varsayılan değeri AÇIK olacak şekilde sunması gerekmektedir. HHS Açık Bankacılık hizmetini kanal/yetki tanımı ile yönetmesi durumunda hizmeti verdiği ilgili kanallar(web,mobil) üzerinden müşterisine Açma/Kapama olanağı şeklinde sunması gerekmektedir. \n \n \n 5411 Sayılı Kanun kapsamındaki bankalar, HHS API içerisinde Aktif durumda listelenmemişken, YÖS API içerisinde listelenemezler. \n 3.2.\tİstem (Çağrı) ve Oturum \n \n \n Her istek tekil istek numarası ve ÖHK’lı işlemler için zaman damgası (PSU-Timestamp) içerir. Birden fazla istek içeren işlem YÖS tarafından belirlenen çağrıya özgü talep kimliği (istek numarası: X-Request-ID) ve rıza sürecine özgü talep kimliği (işlem grup numarası: X-Group-ID) değerleri kullanılmalıdır. Aynı rıza no’ya ait tüm isteklerde aynı X-Group-ID bilgisi değeri gönderilmelidir. \n \n \n Oturum takibi ise PSU-Session-ID ile yapılır. Oturum numarası (PSU-Session-ID) ÖHK’lı işlemler için zaman damgası (PSU-Timestamp) ile birlikte ilgili tüm işlem verilerini içerecek şekilde kayıt altına alınır. \n \n \n Örneğin, bir ödeme emri başlatma işlemi birden fazla istekten oluşur. Her istek yukarıda belirtildiği gibi biricik istek numarası ve ÖHK’lı işlemler için zaman damgası (PSU-Timestamp) içerir. Ancak işlemin oturum bütünlüğü PSU-Session-ID ile sağlanır. \n \n \n Taraflar açtıkları oturumu işlem bütünlüğünü sağlayacak süre içerisinde açık tutar ve işlem biter bitmez kapatır. \n 3.3.\tRESTful API \n API’ler, dünya ölçeğinde yaygın bir şekilde kullanılan Temsili Durum Transferi (Representational State Transfer, REST) mimari tarzı ve JavaScript Nesne Notasyonu (JavaScript Object Notation, JSON) veri formatlarına uygun olarak geliştirilir. En üst seviye Veri Tanımlama Dili (Data Description Language) ve en iyi uygulama örnekleri için  ^JSON Şeması  temel alınır. \n İstek ve yanıt mesajlarında, isteğe bağlı veya koşullu bir alan, değer içermiyorsa, bu alan JSON payloadunda yer almamalıdır. \n Örnek kod bloğu. \n "rzBlg":{\n         "rizaNo":"aa9bd7e7-0ccd-4edc-9639-5a358dbf2335",\n         "olusZmn":"2022-11-28T12:00:21+03:00",\n         "gnclZmn":null,    --\x3e hatalı\n         "rizaDrm":"K",\n         "rizaIptDtyKod":"" --\x3e hatalı \n      },\n \n Örnek kod bloğu: \n \n         "alc":{\n            "hspNo": "TR800800004162387689546019",\n            "unv": "AHMET YILMAZ", \n            "kolas":{}  --\x3e nesne gönderimi hatalı\n         },\n 3.4.\tSürüm Yönetimi \n API sonraki aşamalarda doğabilecek gereksinimleri ve daha karmaşık kullanım durumlarını karşılamak için sürümler halinde geliştirilir ve bu durum tasarım sırasında göz önünde bulundurulur. \n API v1.0.2 sürümünde ; \n \n Kapsamdaki ödeme hesapları : Vadesiz TL, yabancı para hesapları (gerçek ve tüzel kişilere ait ödeme hesapları), Kredili Mevduat Hesabı \n Tekil ödeme (Virman/Havale/FAST/Müşterilerarası TL Aktarım Sistemi)\n \n Virman ve havale işlemleri kapsamında yabancı para transferi yapılabilir. \n \n \n Hesap bilgisi hizmetleri\n \n Temel veya ayrıntılı hesap bilgisi \n Bakiye \n Gerçekleşen işlemler için Hesap hareketleri \n \n \n Karekodlu ödemelerdeki 01, 02 ve 03 akış türleri\nyer almaktadır. \n \n API v1.1.0 sürümünde ; \n \n API v1.0.2 sürümüne ek Olay Bildirim ve Ayrık GKD özellikleri eklenmiştir. Süreçlerin daha iyi işlemesi için çeşitli güncellemeler yapılmıştır. \n \n Her sürüm değişikliğinde bir önceki sürüm belirli bir süre desteklenecektir. Diğer bir ifadeyle, sadece belirli bir süre için mevcut ve bir önceki sürüm aynı anda erişilebilir olacaktır. \n 3.5.\tKaynak URI Yol Yapısı \n YÖS’lerin başlattığı çağrılarda URI yolu aşağıdaki yapıyı takip eder: \n [hhs-yol-ön-eki]/ohvps/ [kaynak-grubu]/ [sürüm]/ [kaynak]/[kaynak-no]/[alt-kaynak] \n Bu, aşağıdaki unsurlardan oluşur: \n \n [hhs-yol-ön-eki] \nİsteğe bağlı, HHS\'ye özgü yol ön ekini ifade eder. \nGEÇİT üzerinden yapılan çağrılarda BKM tarafından belirlenen sistem adı ve yol ön eki kullanılır. \n ohvps \nSabit metin “ohvps” (Ödeme Hizmetleri Veri Paylaşım Servisleri kısaltması) \n [kaynak-grubu] \nKaynak grubu, API’ye erişmek için kullanılan ödeme hizmetine (HBH, ÖBH) göre erişim adresi (end point) grubunu tanımlar (“hbh” veya “obh”). \n [sürüm] \nAPI sürümünü ifade eder (“/s[ana-sürüm].[alt-sürüm]/”). \n [kaynak]/[kaynak-no] \nKaynak detaylarını ifade eder. \n [alt-kaynak] \nAlt kaynak detaylarını ifade eder. \n \n HHS, tüm kaynakları için aynı katılımcı yolu ön ekini ve sistem adını kullanmalıdır. \n BKM API’lerine erişmek isteyen uygulamaların yetkilerine göre aşağıdaki API’lere abone olmaları gerekmektedir: \n OBH: \n https://gecit-api.bkmtest.com.tr/ohvps/obh/s1.1/odeme-emri-rizasi \n https://gecit-api.bkmtest.com.tr/ohvps/obh/s1.1/odeme-emri \nHBH: \n https://gecit-api.bkmtest.com.tr/ohvps/hbh/s1.1/hesap-bilgisi-rizasi \n https://gecit-api.bkmtest.com.tr/ohvps/hbh/s1.1/hesaplar \n https://gecit-api.bkmtest.com.tr/ohvps/hbh/s1.1/hesaplar/1234/islemler \n https://gecit-api.bkmtest.com.tr/ohvps/hbh/s1.1/hesaplar/1234/bakiye \nGKD \n https://gecit-api.bkmtest.com.tr/ohvps/gkd/s1.1/erisim-belirteci \nHHS – YÖS API \n https://gecit-api.bkmtest.com.tr/hhs-api/s1.1/hhs \n https://gecit-api.bkmtest.com.tr/hhs-api/s1.1/hhs/1234 \n https://gecit-api.bkmtest.com.tr/yos-api/s1.1/yos \n https://gecit-api.bkmtest.com.tr/yos-api/s1.1/yos/1234 \n HHS’lerin sağlayacakları API’lerdeki URI çevrimi örnekleri aşağıdaki gibidir. \n \n https://xbank.com.tr/api-portal/ohvps/obh/s1.1/odeme-emri \n https://gecit-api.bkmtest.com.tr/ohvps/obh/s1.1/odeme-emri  (BKM API) \n https://xbank.com.tr/api-portal/ohvps/hbh/s1.1/hesap-bilgisi-rizasi \n https://gecit-api.bkmtest.com.tr/ohvps/hbh/s1.1/hesap-bilgisi-rizasi  (BKM API) \n https://xbank.com.tr/api-portal/ohvps/hbh/s1.1/hesaplar \n https://gecit-api.bkmtest.com.tr/ohvps/hbh/s1.1/hesaplar   (BKM API) \n https://xbank.com.tr/api-portal/ohvps/hbh/s1.1/hesaplar/1234 \n https://gecit-api.bkmtest.com.tr/ohvps/hbh/s1.1/hesaplar/1234  (BKM API) \n \n GEÇİT üzerinden yapılan çağrılarda, istek başlığında bulunan “x-aspsp-code” (isteğin iletildiği Hesap Hizmeti Sağlayıcısının kodu) değerine göre HHS API’de standart olarak tanımlanmış olan “basePath” bilgisine servis uzantısı eklenerek HHS’ye yönlendirme yapılır. \n Örneğin, istek başlığında  xbank ’ın kodu varsa, YÖS tarafından yapılan \n https://gecit-api.bkmtest.com.tr/ohvps/hbh/s1.1/hesap-bilgisi-rizasi \nçağrısı GEÇİT tarafından karşılanarak \n https://xbank.com.tr/api-portal/ohvps/hbh/s1.1/hesap-bilgisi-rizasi \nadresine yönlendirilir. \n Bu örnekte,  https://xbank.com.tr/api-portal  basePath bilgisi HHS tarafından HHS API’ye girilen değerdir. \n ÖNEMLİ :  URI Query parametreleri GET ile iletilirken değerlerde url-encode yapılmalıdır. Örnek bir API isteği; \nGET /ohvps/hbh/s1.1/hesaplar/xxx/islemler?hesapIslemBslTrh=2023-02-07T16:42:38%2B03:00&hesapIslemBtsTrh=2023-02-07T17:09:18%2B03:00&srlmKrtr=islGrckZaman&srlmYon=Y&syfKytSayi=10&syfNo=1 \n Burada \'+\' karakterinin boşluk olarak algılanmaması için %2B değeri ile iletilmiştir. \n 3.6.\tKarakter Kodlama \n API istekleri ve yanıtlarının  Başlık  parametrelerinde ISO-8859-1 standartında yer alan karakter kümesi kullanılmalıdır.  3.15. İstek Başlığı  bölümünde detaylandırılmıştır. \n API istekleri ve yanıtlarında  Gövde  parametrelerinde UTF-8 karakter kodlaması kullanılır. Bu, JSON için varsayılan karakter kodlamasıdır. \n Ancak, bir HHS\'nin kendi uygulamaları ve ödeme başlattığı ödeme sistemi (Havale vb.) bazı UTF-8 karakterlerini kabul etmeyebilir. HHS, UTF-8 kodlaması içeren bir mesajı işleyemez ve reddederse, HTTP 400 (Hatalı İstek) durum kodu ile yanıt vermelidir. \n Gövde parametrelerinde desteklenen UTF-8 karakter kümesi aşağıda listelenmiştir. \n \n \n \n Karakter \n UTF 8   Hex. \n Karakter \n UTF 8   Hex. \n Karakter \n UTF 8   Hex. \n Karakter \n UTF 8   Hex. \n \n \n \n \n \n 20 \n = \n 3d \n X \n 58 \n r \n 72 \n \n \n ! \n 21 \n ? \n 3f \n Y \n 59 \n s \n 73 \n\n 23 \n @ \n 40 \n Z \n 5a \n t \n 74 \n \n \n % \n 25 \n A \n 41 \n [ \n 5b \n u \n 75 \n \n \n & \n 26 \n B \n 42 \n \\ \n 5c \n v \n 76 \n \n \n \' \n 27 \n C \n 43 \n ] \n 5d \n w \n 77 \n \n \n ( \n 28 \n D \n 44 \n ^ \n 5e \n x \n 78 \n \n \n ) \n 29 \n E \n 45 \n _ \n 5f \n y \n 79 \n \n \n * \n 2a \n F \n 46 \n a \n 61 \n z \n 7a \n \n \n + \n 2b \n G \n 47 \n b \n 62 \n { \n 7b \n \n \n , \n 2c \n H \n 48 \n c \n 63 \n } \n 7d \n \n \n - \n 2d \n I \n 49 \n d \n 64 \n Ç \n c3 \n \n \n . \n 2e \n J \n 4a \n e \n 65 \n Ö \n c3 \n \n \n / \n 2f \n K \n 4b \n f \n 66 \n Ü \n c3 \n \n \n 0 \n 30 \n L \n 4c \n g \n 67 \n ç \n c3 \n \n \n 1 \n 31 \n M \n 4d \n h \n 68 \n ö \n c3 \n \n \n 2 \n 32 \n N \n 4e \n i \n 69 \n ü \n c3 \n \n \n 3 \n 33 \n O \n 4f \n j \n 6a \n Ğ \n c4 \n \n \n 4 \n 34 \n P \n 50 \n k \n 6b \n ğ \n c4 \n \n \n 5 \n 35 \n Q \n 51 \n l \n 6c \n İ \n c4 \n \n \n 6 \n 36 \n R \n 52 \n m \n 6d \n ı \n c4 \n \n \n 7 \n 37 \n S \n 53 \n n \n 6e \n Ş \n c5 \n \n \n 8 \n 38 \n T \n 54 \n o \n 6f \n ş \n c5 \n \n \n 9 \n 39 \n U \n 55 \n p \n 70 \n \n \n \n \n : \n 3a \n V \n 56 \n q \n 71 \n \n \n \n \n ; \n 3b \n W \n 57 \n \n \n \n \n \n \n \n Ancak  Erişim belirteci, Yenileme belirteci ve Authorization  parametreleri daha dar bir karakter kümesi ile doldurulmalıdır. \n Bearer HTTP Authorization Şeması RFC 6750\'de tanımlanmıştır.  https://www.rfc-editor.org/rfc/rfc6750#section-2.1  bölümünde izin verilen karakterlerin gönderilmesi beklenmektedir. Buradaki standartın her 3 parametre için de uygulanmasına karar verilmiştir. \n RFC 6750 içerisinde bearer token formatı şu şekildedir : 1*( ALPHA / DIGIT / "-" / "." / "_" / "~" / "+" / "/" ) *"=" \nAugmented BNF for Syntax Specifications (ABNF) ile ifade edilen bu formatta token en az 1 adet alfanumerik karakter veya özel karakter ("-", "." , "_" , "~" , "+" , "/")  içermeli ve 0 ya da daha çok sayıda "=" karakteri ile bitmelidir. \n ALPHA = A-Z / a-z aralığındaki harflerdir. \nDIGIT = 0-9 aralığındaki rakamlardır. \n 3.7.\tVeri Formatı \n \n Açık bankacılık kapsamındaki zaman damgası, ISO 8601 standartına uygun olarak yerel saat bilgisini ve timezone bilgisini de içerecek şekilde " yyyy-MM-dd’T’HH:mm:ssXXX " formattaki haliyle hazırlanmalıdır. \n \n Örnek:  "timestamp": "2021-05-30T20:34:15+03:00" \nyyyy : 4 hane yıl \nMM : Başa ‘0’ eklenmiş, toplam 2 hane ay \ndd    : Başa ‘0’ eklenmiş, toplam 2 hane gün \nHH    : Başa ‘0’ eklenmiş, toplam 2 hane saat (0-23 arası değer alabilir.) \nmm : Başa ‘0’ eklenmiş, toplam 2 hane dakika \nss    : Başa ‘0’ eklenmiş, toplam 2 hane saniye \nXXX : ISO 8601 Time zone \n \n \n Zaman damgası hesaplamalarında, yeni günün başlangıç saatinin 00:00:00 olduğu kabul edilmiştir. \n \n \n JWT veri paketlerinde kullanılan zaman damgaları, 1 Ocak 1970 Saat 00:00:00 (UTC) anından itibaren geçen saniye sayısı değerini (Unix Time) kullanmalıdır. \n \n \n Bir HHS, tarihi yanlış biçimlendirilmiş bir istek aldığında, 400 (Hatalı İstek) durum kodu ve ilgili hata kodu ile yanıt vermelidir. \n \n \n ISO 4217 Standartında para birimleri ve kaç basamak ondalık değer içerebilecekleri belirlenmiştir. \n https://www.iso.org/iso-4217-currency-codes.html   adresinden ücretsiz olarak listeye erişilebilir.  \nAPI Standartlarında da para birimleri  ISO 4217’de tanımlanmış olan 3 harfli kodlarla iletilir.   Tüm tutar alanları ISO 4217\'de tanımlanmış para birimlerinin ondalık basamak değerleri de göz önünde bulundurularak iletilmelidir. Tutar alanları artı ya da eksi değer alabileceği için API deseninde tanımlanmış regular expressionlar dikkate alınmalıdır. \nÖrneğin; Bakiye API\'sindeki "Kredili Mevduat Hesabı Bakiyesi" alanı "-100.25" ve "Para Birimi" alanı "TRY" olarak iletildiğinde 25 değerinin kuruş olduğu anlaşılmalıdır. \nÖdeme Emri Rızası API\'sinde yer alan "İşlem Tutarı" alanı "104.75" TRY olarak iletildiğinde "75" değerinin kuruş olduğu anlaşılmalıdır. \n"12000" Japon Yeni için, ISO 4217’de JPY para biriminin ondalık kısmı olmadığından "İşlem Tutarı" alanında "12000" ve "Para Birimi" alanında "JPY" değeri  iletilmelidir. \n \n \n Altın para birimi özelinde ISO 4217’ye uygun olarak "XAU" cinsinde ve 2 basamak ondalık rakam içerecek şekilde iletilmelidir. Örneğin içerisinde "13,50 gr" altın olan hesap için bakiye "13.50", para birimi "XAU" olarak gönderilmelidir. \n \n \n Diğer madenlerde ondalık basamak ISO 4217 standartında tanımlandığı gibi olmalıdır. \n \n \n Sıralı veri tipleri büyük küçük harfe duyarlı olmalıdır. \n 3.8.\tİstemci Sertifika Yönetimi \n ÖHVPS kapsamında YÖS ve HHS’lerin güvenli bir şekilde tanımlanması amacıyla elektronik sertifikalar kullanılır. \n ÖHVPS kapsamında tarafların güvenli bir şekilde tanımlaması, uçtan uca güvenli iletişim, mesaj şifreleme ve mesaj imzalama işlevleri 15/1/2004 tarihli ve 5070 sayılı Elektronik İmza Kanunu’nda açıklanan elektronik sertifikalar kullanılarak sağlanır. Elektronik sertifikada Türkiye Cumhuriyet Merkez Bankası tarafından verilen kuruluş kodu ve kuruluşun türüne dair bilgiler bulunur. \n GEÇİT üzerinden yapılan erişimlerde YÖS ve HHS’lere önceden dağıtılmış olan istemci sertifikaları kullanılarak tarafların (sunucu) kimliklerinin doğrulanması sağlanacaktır. İstemci sertifikaları hem test hem de üretim ortamında kullanılacaktır. Sertifikaların işlevselliği ve geçerliliği sertifikasyon sürecinde de sınanacaktır. Söz konusu sertifikaların dağıtım prosedürleri ve kullanımlara yönelik açıklamalar EK-3’te yer verilmiştir. \n 3.9.\tYetkilendirme Türleri \n GEÇİT üzerinden yapılan çağrılarda iki temel yetkilendirme türü kullanılır: \n 1.\tİstemci Kimlik Bilgileri:  Müşteri onayının gerekmediği, sadece YÖS’ün tanımlanıp doğrulandığı API çağrılarında kullanılır. YÖS’ün yetkilendirilmiş olduğu ve faaliyet izninin yaptığı hizmet çağrısına uygun olduğu kontrol edilir.  Bu amaçla, YÖS’lere clientId ve clientSecret tahsis edilecektir. YÖS’ler ilgili clientId ve clientSecret ile sadece yetkilendirilmiş oldukları servislere erişebileceklerdir. YÖS’ler kendilerine BKM tarafından sunulacak API’yi, kendi clientID ve clientSecret değerleri ile sorgulayarak “İstemci Kimlik Bilgileri” belirtecini (access token) elde edeceklerdir.\nHHS’ler de GEÇİT üzerindeki YÖS API’sini sorgulama maksadı ile GEÇİT\'e geldiklerinde, kendilerine atanmış olan clientID ve clientSecret bilgileri ile yetki kontrolleri yapılır.\nHHS’ler kendilerinden alınacak username ve password değerleri kullanılarak oluşturulacak basic authentication metodu ile servislerini sunacaklardır. \n 2.\tYetkilendirme Kodu:  YÖS’ün doğrulanmasının yanısıra müşterinin GKD ile doğrulanması gereken API çağrılarında kullanılır. Müşteri doğrulanarak yetkilendirme kodu oluşturulması HHS’nin yetkilendirme arayüzüne yönlendirilir. GKD’nin başarıyla tamamlanması sonrasında yetkilendirme kodu YÖS’e dönülür. YÖS daha sonra HHS’nin  erişim belirteci  (access token) erişim adresini (EK-3: POST /erisim-belirteci) çağırmak suretiyle yetkilendirme kodunu bir erişim belirteci (access token) ile değiştirerek ilgili kaynakları kullanabilir. \n Ödeme emri başlatma ve hesap bilgisi hizmetlerinde hangi yetkilendirme türlerinin kullanılacağı bilgisi, ilgili başlıklardaki erişim adresleri (endpoints) tablolarında yer almaktadır. \n erisim-belirteci  erisim noktasından elde edilen  erisimBelirteci  ilişkilendirildiği nesne veya işlem için gönderilen POST isteği başlığında  x-access-token  alanında iletilir.\nBelirli bir süre için tanımlanan erişim belirteci (access token) değerinin yenileme belirteci (refresh token) ile yenilenmesi gerekir. \n Erişim adreslerinde kullanılan yetkilendirme türü ilgili erişim adresi tablolarında belirtilmiştir. \n 3.10. İstek/Cevap Mesajlarında Kullanılan Nesne Yapıları \n İstek ve Cevap mesajlarında kullanılacak olan nesneler tüm elemanlarını kapsayacak şekilde Ek-1 de listelenmiştir. Tüm listelenen elemanlar açısından (Uç nokta mesaj yapılarının belirtildiği tablolarda belirtildiği üzere) alanın Zorunlu (z) veya İsteğe Bağlı (İ) olma durumlarına göre bazı alanlar gönderilebilir veya gönderilmeyebilir. \n 3.11. Sayfalandırma ve Filtreleme \n Sayfalandırma \n Çağrıya dönülen kaynak nesnesi içerisindeki kayıtlar bir sayfalandırma yapısı ile çağrılacak şekilde istek oluşturulur. \n Oluşturulacak isteğin içerisinde parametreler ile filtreleme, sayfa başına gösterilecek kayıt sayısı ve hangi sayfanın önyüzde gösterileceği bilgileri erişim noktasına iletilir ve ilgili kayıtlar cevap olarak alınır. \n Filtreleme \n HHS, birden çok kayıt dönülmesi gereken GET çağrılarında sınırlı filtreleme desteği sağlamalıdır. Filtre parametreleri her zaman kaynak nesnesinin belirli alanlarına özgüdür ve nesne için tanımlanan kurallara uymalıdır. \n 3.12. Mesaj İmzalama \n Elektronik imzalar, ÖHVPS API’de gerçekleştirilen işlemlerin ve taşınan verilerin bütünlük ve inkâr edilemezliğini destekler. İmzaların kaynak bazında hangi istek ve yanıtlara uygulandığı belirlidir. \n API yalnızca TLS\'ye dayanırsa, dijital kayıtları ve inkâr edilemezlik kanıtlarını tutmak zor olur. Bu nedenle, TLS\'ye dayanmayan bir inkâr edilemezlik çözümü olarak API isteğinin HTTP başlığında bir JWS kullanılarak sağlanabilir. \n HTTP isteğinin gövdesinin hash fonksiyonu (SHA256) ile özeti alınacaktır. Elde edilen özet, asimetrik anahtarları destekleyen bir algoritma kullanılarak imzalanacak ve JWS elde edilecektir. \n Bir istek, YÖS\'nin özel anahtarı ile imzalanacak ve bu isteğe karşılık gelen yanıt, HHS\'nin özel anahtarı tarafından imzalanacaktır. \n Tüm API istekleri ve yanıtları imzalanmaz. Mesaj imzalamanın zorunlu olup olmadığı, desteklenip desteklenmediği her API özelinde belirlenir. \n Anahtar Deposu \n HHS\'ler ve YÖS\'ler tarafından güvenilen bir Güven Otoritesi (Trust Anchor), taraflar için bir genel anahtar deposu sağlamaktan sorumludur. \n Güven Otoritesi, taraflardan herhangi birisinin oluşturduğu bir anahtar çiftinin açık bölümünü saklayan merkezi bir dizin (BKM tarafından tutulan merkezi kayıt sistemi vb.) olacaktır. \n Mesajları doğrulamak için tarafların genel anahtarlarının paylaşılması için BKM bir servis sağlayacaktır. HHS API olarak adlandırılımış olan bu servis ile HHS ve YÖS listelerine ulaşılabildiği gibi doğrulama işlemi için ihtiyaç duyulacak olan genel anahtarlara da bu servis üzerinden erişilebilinecektir. \n İlgili Mesaj şifreleme için genel akış, Ek-5 bölümünde detaylarıyla paylaşılmaktadır. \n 3.13. Durum Kodu \n API’ler, iki farklı amaca hizmet eden iki durum kodu kullanır: \n \n HTTP Durum Kodu, API çağrısının (kaynaktaki HTTP işlemi) sonucunu yansıtır. \n Bazı kaynak payload’larındaki Durum alanı, kaynakların durumunu yansıtır. \n 3.14. Gereksinimlerinin Sınıflandırılması \n Erişim adreslerinin ve alanların kullanımı Zorunlu(Z), İsteğe Bağlı(İ) veya Koşullu(K) olabilir. Kullanımlara ilişkin durumlar ve kullanımın (K) koşullu olduğu duruma ilişkin açıklamalar ilgili tablolarda belirtilmiştir. \n ÖHVPS API\'lerinin (HBH,ÖBH,GKD) istek ve yanıtta kullanılacak başlık isimleri, ilgili RFC dokümanlarında ve aşağıdaki tabloda yer aldığı şekilde kullanılacaktır.  Uygulamaya özelleşmiş başlıklar "X-" ile başlayacaktır. Başlık isimlerinde yer alacak kısaltmalar (örn. PSU, ASPSP gibi) tamamı büyük harfle yazılacak şekilde tanımlanacaktır. Başlık isimleri büyük – küçük harfe duyarlı olmamalıdır. Örneğin x-request-id ya da X-Request-ID olarak gönderilmiş olan bir istek başlığı değişkeni, sunucu tarafında hata vermeyecek şekilde işlenebilmelidir. \n 3.15. İstek Başlığı \n \n "Başlık isimleri" yorumlanırken küçük büyük harfe duyarlı olmamalıdır. Örneğin "x-ReQuEsT-Id" geçerli bir başlık ismidir. \n "Başlık değerleri" yorumlanırken ise küçük büyük harf duyarlılığı olmalıdır. Örneğin "xyz123" ile "XYZ123" değerleri farklıdır. \n Başlık değerlerinde ISO-8859-1 standartında yer alan karakter kümesi kullanılmalıdır. Örneğin "PSU-Device-Data" değerinde "İOS12" yazmak, büyük "İ" harfinin ISO-8859-1 içerisinde yer almamasından dolayı, hataya yol açacaktır. \n İstek ve Yanıt başlığında yer alan alanların; POST GET DELETE methodlarında, OBH,HBH,GKD,OAS,ODS API\'leri bazında Zorunlu/Koşullu/İsteğe Bağlı kullanım durumları aşağıdaki tabloda listelenmiştir. \n \n Tablo 2: İstek Başlığında Yer Alan Veriler \n \n \n \n Başlık İsimleri \n Format \n Notlar \n POST \n GET \n DELETE \n POST \n GET \n DELETE \n \n \n \n \n \n \n \n OBH HBH GKD \n OBH HBH GKD \n OBH HBH GKD \n OAS ODS \n OAS ODS \n OAS ODS \n \n \n X-Request-ID \n AN1..36 \n İsteği başlatan YÖS tarafından belirlenen çağrıya özgü talep kimliği. İstek numarası.   Örnek: Ödeme emri başlatma iş akışının her adımda farklı “x-request-id” değeri kullanılır.   Çağrıların aynı yanıtı dönmesinin beklendiği durumlarda (idempotent işlemlerde) aynı değer ile çağrı yapılır. \n Z \n Z \n Z \n Z \n Z \n Z \n \n \n X-Group-ID \n AN1..36 \n İsteği başlatan YÖS tarafından belirlenen işlem akışına özgü talep kimliği. İşlem grup numarası.  Aynı rıza no’ya ait tüm isteklerde aynı x-group-id bilgisi değeri gönderilmelidir. Örnek: Ödeme emri başlatma/hesap bilgisi iş akışının her adımında aynı “x-group-id” değeri kullanılır. \n Z \n Z \n Z \n - \n - \n - \n \n \n Content-Type \n AN1..20 \n Standart HTTP Başlığı; Talepte sağlanan payload’ın biçimini temsil eder. Bu değerin application/json olarak gönderilmesi gerekmektedir. Hata durumlarında application/problem+json da iletilebilir.  (Başka bir değere ayarlanırsa, HHS, 415 Desteklenmeyen Ortam Türü (Unsupported Media Type) ile yanıt vermelidir) \n Z \n - \n - \n Z \n - \n - \n \n \n X-ASPSP-Code \n AN4 \n Hesap Hizmeti Sağlayıcısının (HHS) kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n Z \n Z \n Z \n Z \n Z \n Z \n \n \n X-TPP-Code \n AN4 \n Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur \n Z \n Z \n Z \n Z \n Z \n Z \n \n \n PSU-Auth-Date \n ISODateTime \n ÖHK’nın YÖS üzerinde en son oturum açtığı saat. [RFC7231] Örneğin:  auth-date: Tue, 11 Sep 2012 19:43:31 GMT \n İ \n İ \n İ \n - \n - \n - \n \n \n PSU-IP-Address \n AN7..15 \n ÖHK YÖS üzerinde oturum açmışsa, işlemi başlattığı cihazın IP adresi. \n İ \n İ \n İ \n - \n - \n - \n \n \n PSU-IP-Port \n AN1..5 \n ÖHK YÖS üzerinde oturum açmışsa, işlemi başlattığı cihazın Port adresi. \n İ \n İ \n İ \n - \n - \n - \n \n \n PSU-GEO-Location \n AN1..36 \n ÖHK’nın işlemi başlattığı cihazın konum bilgisi. RFC2426 standartına uygun olarak paylaşılmalıdır. Örneğin  GEO:"<enlem >, <boylam>GEO:52.506931,13.144558 \n İ \n İ \n İ \n - \n - \n - \n \n \n PSU-User-Agent \n AN 1.. 255 \n ÖHK’nın işlemi başlattığı cihazın sağladığı user-agent bilgisi. (Tarayıcı, versiyon, işletim sistemi bilgileri) \n İ \n İ \n İ \n - \n - \n - \n \n \n PSU-Timestamp \n ISODateTime \n ÖHK’nın işlemi başlattığı cihazın tarih saat içeren zaman bilgisi. \n İ \n İ \n İ \n - \n - \n - \n \n \n PSU-Device-ID \n AN5..40 \n ÖHK işlemi mobil uygulama aracılığıyla başlattıysa, kullanılan mobil uygulama ilk yüklendiğinde oluşturulan tekil cihaz veya uygulama belirteci. ÖHK cihazının UUID değeri kullanılabilir. \n İ \n İ \n İ \n - \n - \n - \n \n \n PSU-Device-Data \n AN1..1024 \n ÖHK’nın işlemi başlattığı mobil cihaza ait veriler.  Örnek alanlar:   - Platform - (Android, iOS, Windows 10 Mobile)  - Device Model   - OS Name   - OS Version - Locale - Time zone \n İ \n İ \n İ \n - \n - \n - \n \n \n PSU-Initiated \n AN1 \n İşlemin ÖHK tarafından başlatılması durumunda E , sistem tarafından başlatıldığı durumda H değerini, olay bildirimine istinaden yapılacak isteklerde O değerini alması beklenir. İşlemler servisinde yapılacak sistemsel sorgulardaki işlem limitlerini kontrol amacıyla kullanılır. O değerinin gönderilebileceği API\'ler  Asıl Verinin Elde Edileceği API  olarak ilgili sayfada yer alan Olay Tipleri ve Kaynak Tipleri İlişkisi tablosunda yer almaktadır. Asıl verinin elde edileceği API\'ler özelinde O gönderimi yapılabilir. O olarak yapılan her isteğe HHS\'nin yanıt vermesi gereklidir. Otomatik sorgularda uygulanan üst limitler, O gönderimi durumunda geçerli değildir. \n Z \n Z \n Z \n - \n - \n - \n \n \n PSU-Fraud-Check \n AN1..4096 \n YÖS\'lerin çeşitli güvenlik kontrollerini gerçekleştirerek, önemli görülen aşağıdaki bilgileri HHS\'ler ile paylaşmaları gerekmektedir. Bu bilgiler ışığında müşterinin profili oluşturulmasına katkı sağlanacaktır.   ÖHK’lı işlemlerde (PSU-Initiated = E gönderildiği durumlarda) gönderilmesi zorunludur.  Sistemsel yapılan API çağrımlarımda, Olay Bildirim Servis Çağrımlarında ve HHS-YÖS API çağrımlarında gönderilmesine gerek bulunmamaktadır.  Paylaşılacak bilgiler şu şekildedir.   FirstLoginFlag  : ÖHK\'nın, müşterilik ömründe ilgili YÖS sistemine (mobil ya da web uygulaması) ilk login olma süresini ifade eden değer. ÖHK\'nın ilk yaptığı HBH ya da ÖBH işlemi değil, YÖS sisteminde kendini aktifleştirme tarih aralığı bilgisidir.   YÖS, kullanıcının ilk login bilgisini tutarak sonraki işlemlerinde bu bilgiyi belirlenen format ile HHS\'ye aktaracaktır. Örneğin; YÖS\'ün 7 aydır müşterisi olan bir kullanıcı için bu alan "5" olarak YÖS tarafından beslenecektir. Burada amaç; ilgili kullanıcının YÖS\'ün eski bir müşterisi mi, yoksa yeni bir müşterisi mi olup olmadığını anlamaktır.   Gönderilmesi Zorunlu alandır. TR.OHVPS.DataCode.ZmnAralik sıralı veri tipinin alabileceği değerleri alabilir.   DeviceFirstLoginFlag  : ÖHK\'nın, müşterilik ömründe işlem anında kullandığı cihazla YÖS uygulamasına (web ya da uygulama tabanlı) ilk login olma süresini ifade eden değer. ÖHK cihaz değişikliği yaparsa FirstLoginFlag değeri sabit kalmalı  ancak DeviceFirstLoginFlag değeri değişmelidir.  FirstloginFlag değeri ile ÖHK’nın YÖS uygulamasına ilk login tarih bilgisi ile ilgili bilgi verilirken, DeviceFirstLoginFlag ile de ÖHK’nın YÖS uygulamasına farklı bir cihaz aracılığı ile ilk login tarihinin bilgisi verilmektedir.  Örneğin; ÖHK 7 aydır YÖS\'ün müşterisi olabilir, böyle bir durumda FirstLoginFlag değeri "5" olacaktır. Ancak son işlemini daha önce hiç kullanmadığı bir cihazdan yapmıştır. Yeni cihazdaki login süre aralığı 0-2 saat aralığında  olduğu için DeviceFirstLoginFlag değeri "1" olacaktır.FirstLoginFlag değeri yine "5" olarak kalmaya devam edecektir.Bu bilgi ile YÖS, ilgili HHS\'ye ilk kez geliyor olsa bile; HHS, müşterinin YÖS\'ü uzun süredir kullandığını ama yeni bir cihazla işlemlerine devam ettiğini anlayabilecektir. Bir ÖHK, farklı cihazlar veya platformlar üzerinden YÖS ile etkileşime girebilir.  Kullanıcı ve YÖS arasında bir oturum başlatılmış ise YÖS’ün tutarlı ve kalıcı bir kimlik (device id) ataması beklenmektedir.  Device ID: Web sitesi veya mobil uygulama kullanıcıları için üretilen, tarayıcı ya da mobil uygulama tabanlı benzersiz (tekil) tanımlayıcı değer. Mobil uygulamalar için ÖHK’nın ilk defa ilgili cihaza aktivasyon yaptığı tarih bilgisi alınmalıdır.   Device ID bilgileri YÖS uygulama ortamı (web ya da uygulama tabanlı) ve ÖHK cihazı bazında tutulmalıdır. YÖS’ten başlatılan işlem hangi uygulama ortamına ait ise ilgili ortamala ilişkili tutulan Device ID’nin ilk login tarihine bakılarak güncel flag değeri hesaplanmalıdır.  Gönderilmesi Zorunlu alandır. TR.OHVPS.DataCode.ZmnAralik sıralı veri tipinin alabileceği değerleri alabilir.   LastPasswordChangeFlag  : ÖHK\'nın, YÖS (cihaz bağımsız)  uygulamasına login olduğu şifre bilgisinin en son değiştirildiği süreyi ifade eden değer. Müşterinin en son ne zaman şifre değişikliği yaptığını anlamak için kullanılan alandır. Yeni müşteri ve hiç şifre değişikliği yapmamış olabilir, böyle bir durumda ilgili alan "0" olarak beslenecektir.   Gönderilmesi Zorunlu alandır. TR.OHVPS.DataCode.ZmnAralik sıralı veri tipinin alabileceği değerleri alabilir.   BlacklistFlag  : ÖHK\'nın herhangi bir sebeple YÖS\'ün sakıncalı müşteriler listesinde bulunup bulunmadığını ifade eden değer.   Burada amaç herhangi bir sebeple YÖS tarafında yasaklı olarak kayıtlı olan ÖHK bilgisinin, dolandırıcılığı önceden tespit etmek amaçlı HHS\'ye aktarılması olarak açıklanabilir. Örneğin, YÖS tarafından tespit edilen dolandırıcı kullancılara ait device id bilgisi, bu kara listede tutulur daha sonra aynı cihazla başka bir ÖHK işlem yapacak olsa bile bu alanda ilgili bilgi "1" değeri ile HHS\'ye aktarılır. HHS\'de olmayıp YÖS tarafında olan bu örnekteki sakıncalı müşteri/cihaz bilgisinin, dolaylı yoldan HHS\'ye aktarılması amaçlanmaktadır.  Gönderilmesi Opsiyonel alandır. TR.OHVPS.DataCode.VarYok sıralı veri tipinin alabileceği değerleri alabilir.   MalwareFlag  : YÖS uygulamasının çalıştığı cihaz üzerindeki son 21 güne ait zararlı yazılım tespit bilgisini ifade eden değer. Örneğin ÖHK\'nın cihazında zararlı yazılım olduğu ayın 1\'inde YÖS tarafından tespit edildi. Zararlı yazılım tespitinden 2 saat sonra YÖS üzerinden login olan ÖHK\'nın durumu,  "1" olarak iletilecektir. Bir gün sonra ayın 2\'sinde, yeni bir zararlı yazılım tespiti yok ancak mevcut zararlı yazılım aktifse alan "2" değeri ile iletilecektir. Süreler artarak 21 güne kadar TR.OHVPS.DataCode.ZmnAralik değerlerine göre iletilecektir.Son 21 gün içinde yeni bir tespit yoksa ayın 22\'sinden itibaren ilgili alan  "0" değeri ile beslenecektir. Not: Zararlı yazılım, bankacılık işlemlerinin yapıldığı uygulamalara girişte kullanılan bilgilerin (şifre, kullanıcı kodu gibi) ele geçirilmesi amacıyla kullanılan bir uygulama ya da kod parçacığı olabilir. Bu amaçlar dışında kullanılan (bankacılığa yönelik bir zararlı yazılım olmayan) yazılım tespitleri iletilmemelidir. YÖS kanallarına her bir loginde, kullanılan cihazda bir zararlı yazılım var mı yok mu kontrolü yapılmalıdır.   Gönderilmesi Opsiyonel alandır. TR.OHVPS.DataCode.ZmnAralik sıralı veri tipinin alabileceği değerleri alabilir.   AnomalyFlag  : Diğer şüpheli durumların varlığını ifade eden değer. Gönderilmesi Opsiyonel alandır. TR.OHVPS.DataCode.VarYok sıralı veri tipinin alabileceği değerleri alabilir.   UnsafeAccountFlag : HHS tarafından aktarılan bilgi ile son 21 gün içinde ÖHK\'nın dolandırıcılık mağduru olması durumunu ifade eden değer. Örneğin; HHS 1, ayın 1\'inde süphe veya sahtekarlık nedeniyle bir ödeme işlemine izin vermediği durumda, bu bilgiyi rıza iptal detay kodu ile YÖS\'e aktarmış olur. Bu bilgiyi tutan YÖS, ilgili müşterinin 15 dakika sonra HHS 2\'de yaptığı işlem için ilgili alanı "1" değeri ile besler. Böylece HHS 2, ÖHK\'nın farklı bir HHS\'de son 15 dakika içinde şüpheli veya sahte bir işlemi olduğunu anlayabilecektir. Ayın 22\'sinde yeni bir tespit/kayıt yoksa bu alan YÖS tarafından "0" olarak beslenecektir. Gönderilmesi Opsiyonel alandır.TR.OHVPS.DataCode.ZmnAralik sıralı veri tipinin alabileceği değerleri alabilir.     Flaglar JWT claims içine key value şeklinde eklenerek gönderilecektir. EK-5: Mesaj İmzalama Akışı\'nda belirtilen yöntemle imzalanarak oluşturulan JWT PSU-Fraud-Check alanına konularak YÖS\'ler tarafından HHS\'ye iletilmelidir. \n K \n K \n Z \n - \n - \n - \n \n \n PSU-Session-ID \n AN1..100 \n İsteği başlatan YÖS tarafından belirlenen oturuma özgü talep kimliği. ÖHK\'nın YÖS uygulaması üzerinden kimlik doğrulama mekanizması ile bilgi sistemlerine dâhil olmalarından işlemlerini tamamlayıp sistemden ayrılmalarına kadar geçecek tüm süreci kapsayacak şekilde aynı değeri almalıdır. Tek seferlik ödeme gibi ÖHK’nın tanınmadan başlatıldığı işlemlerde bu değer boş olarak iletilmelidir. \n İ \n İ \n İ \n - \n - \n - \n \n \n Authorization \n AN1..4096 \n Katılımcı ile GEÇİT arasındaki otorizasyon için kullanılan token bilgisidir.  Yekilendirme türlerinden İstemci Kimlik Bilgileri’ni adresler.    Bölüm 3.6 Karakter Kodlama  bölümünde açıklanan karakter formatında gönderilmesi beklenmektedir. \n Z \n Z \n Z \n Z \n Z \n Z \n \n \n X-Access-Token \n AN1..4096 \n ÖHK’nın GKD sürecinde doğrulanması sonrasında kullanılan erişim simgesi. Yetkilendirme türlerinden Yetkilendirme Kodu (GKD)’nu adresler.  Bölüm 3.6 Karakter Kodlama  bölümünde açıklanan karakter formatında gönderilmesi beklenmektedir. \n İ \n İ \n İ \n - \n - \n - \n \n \n X-JWS-Signature \n AN1..4096 \n Payload gövdesinin ayrılmış bir JWS imzasını içeren üstbilgi.  Bu başlığın ne zaman belirtilmesi gerektiği hususu ilgili endpoint için belirtilmiştir.  Mesaj imzalama kullanılan API ve methoda göre gönderimi zorunludur. \n K \n K \n K \n K \n - \n - \n 3.16. Yanıt Başlığı \n \n "Başlık isimleri" yorumlanırken küçük büyük harfe duyarlı olmamalıdır. Örneğin "x-ReQuEsT-Id" geçerli bir başlık ismidir. \n "Başlık değerleri" yorumlanırken ise küçük büyük harf duyarlılığı olmalıdır. Örneğin "xyz123" ile "XYZ123" değerleri farklıdır. \n Başlık değerlerinde ISO-8859-1 standartında yer alan karakter kümesi kullanılmalıdır. Örneğin "Link" değerinde "İOS12" yazmak, büyük "İ" harfinin ISO-8859-1 içerisinde yer almamasından dolayı, hataya yol açacaktır. \n \n Tablo 3: Yanıt Başlığında Yer Alan Veriler \n \n \n \n Başlık İsimleri \n Format \n Notlar \n Kullanım Durumu  OBH HBH GKD \n Kullanım Durumu  OAS ODS \n \n \n \n \n X-Request-ID \n AN1..36 \n YÖS tarafından belirlenen çağrıya özgü talep kimliği. İstek numarası    İlgili istek başlığındaki bilgi geri dönülür. \n Z \n Z \n \n \n X-Group-ID \n AN1..36 \n İsteği başlatan YÖS tarafından belirlenen işlem akışına özgü talep kimliği. İşlem grup numarası. İlgili istek başlığındaki bu değer geri dönülür. \n Z \n - \n \n \n X-ASPSP-Code \n AN4 \n Hesap Hizmeti Sağlayıcısının (HHS) kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n Z \n Z \n \n \n X-TPP-Code \n AN4 \n Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur \n Z \n Z \n \n \n Content-Type \n AN1..20 \n Standart HTTP Başlığı; Talepte sağlanan payload’ın biçimini temsil eder:  application/json \n Z \n Z \n \n \n X-JWS-Signature \n AN1..4096 \n JWS imzasını içeren üstbilgi. Bu başlığın hangi yanıtlar için kullanılması gerektiği ilgili endpoint için belirtilmiştir.  Hata durumlarında, yanıt gövdesi değeri dönülüyor ise imzalanmalı ve imza bilgisi x-jws-signature alanında iletilmelidir.  Ancak uygulama katmanı tarafından yakalanamayan dolayısı ile imzalanamayan hata durumlarında x-jws-signature alanı HHS\'ler tarafından boş gönderilebilir. \n K \n K \n \n \n X-RateLimit-Limit \n N 1..18 \n İstek kısıtı uygulanan servislerde en fazla kaç adet istek yapılabileceğini gösterir. Kısıt uygulanan servislerde bu başlığın dönmesi zorunludur. \n K \n - \n \n \n X-RateLimit-Remaining \n N 1..18 \n İstek kısıtı uygulanan servislerde kaç adet istek hakkı kaldığını gösterir. Kısıt uygulanan servislerde bu başlığın dönmesi zorunludur. \n K \n - \n \n \n X-RateLimit-Reset \n AN 1..255 \n İstek kısıtı uygulanan servislerde çağrım hakkı bittikten sonra yeniden denemeden önce beklemesi gereken süreyi (saniye cinsinden) gösterir. HTTP 429 durum kodu (Too Many Requests) ile dönülen yanıtların başlığında dönülmesi zorunludur.  YÖS olarak yaptığınız sistemsel sorgularda; HTTP 429 durum kodu (Too Many Requests) ile dönülen yanıt aldığınızda tekrar sorgu yapmadan önce “X-RateLimit-Reset” yanıt başlığını kontrol ederek, bu başlıktaki süre kadar bekledikten sonra yeniden sorgulama yapılması gerekmektedir. \n K \n - \n \n \n x-total-count \n N 1..18 \n Hesaplar, İşlemler, Bakiye, İletilemeyen Olaylar servislerinde sayfalama kullanıldığı durumda, sorgu sonucu dönecek toplam kayıt sayısı bilgisi, bu alanda HHS isteğine bağlı olarak gönderilebilir.   Kayıt sayısı 0 olduğu durumda gönderimi zorunludur. \n K \n K \n \n \n Link \n 1..4096 \n “Link” alanının  Hesap Bilgisi Hizmeti için Erişim Adresleri    tablosundaki parametre  = Sayfalama olan API’lerde ve İletilemeyen Olaylar API\'sinde gönderim yapılması zorunludur.  Sayfalama yapısı kullanıldığında gelen yanıtta birden fazla sayfa var ise; önceki, sonraki, ilk, son sayfalara gitmek için gerekli referanslar link headerında aşağıdaki örnekteki gibi doldurulabilir.  x-total-count alanının gönderimi kayıt sayısı 0 olduğu durum dışında isteğe bağlı olduğu için; Link içerisindeki son sayfa bilgisi  (last) isteğe bağlı hale getirilmiştir. “Önceki”( prev) ve “Sonraki” (next) adımlarının uygun olan her durumda yer alması zorunludur. İlk sayfada “Önceki” seçeneği olmamalı, son sayfada ise “Sonraki” seçeneği olmamalıdır.    </ohvps/hbh/s1.1/hesaplar/hspref/islemler?hesapIslemBslTrh=2022-01-01T00:00:00+03:00&hesapIslemBtsTrh=2023-12-12T23:59:59+03:00&srlmKrtr=islGrckZaman&srlmYon=Y&syfNo=6&syfKytSayi=100>; rel="next",  </ohvps/hbh/s1.1/hesaplar/hspref/islemler?hesapIslemBslTrh=2022-01-01T00:00:00+03:00&hesapIslemBtsTrh=2023-12-12T23:59:59+03:00&srlmKrtr=islGrckZaman&srlmYon=Y&syfNo=4&syfKytSayi=100>; rel="prev",  </ohvps/hbh/s1.1/hesaplar/hspref/islemler?hesapIslemBslTrh=2022-01-01T00:00:00+03:00&hesapIslemBtsTrh=2023-12-12T23:59:59+03:00&srlmKrtr=islGrckZaman&srlmYon=Y&syfNo=14&syfKytSayi=100>; rel="last",  </ohvps/hbh/s1.1/hesaplar/hspref/islemler?hesapIslemBslTrh=2022-01-01T00:00:00+03:00&hesapIslemBtsTrh=2023-12-12T23:59:59+03:00&srlmKrtr=islGrckZaman&srlmYon=Y&syfNo=0&syfKytSayi=100>; rel="first"    Hiç hesap hareketinin olmadığı durumda dönen yanıt başlığınızın şu şekilde olması beklenmektedir.  Response body: [] Response header: Link: </ohvps/hbh/s1.1/hesaplar?srlmKrtr=hspRef&srlmYon=A&syfNo=1&syfKytSayi=100>; rel="last",</ohvps/hbh/s1.1/hesaplar?srlmKrtr=hspRef&srlmYon=A&syfNo=1&syfKytSayi=100>; rel="first"  x-total-count alanı da 0 olarak iletilmelidir. \n K \n K \n 3.17. Idempotency Kuralları \n YÖS’ün aşağıdaki durumlarda aynı istek numarası (x-request-id) ve aynı veri gövdesiyle çağrıyı tekrarlaması; HHS’nin de bu durumlarda aynı yanıtı dönmesi gereklidir. \n \n HHS’nin yanıtı kesinti/arıza nedeniyle YÖS’e ulaşmaz ve zaman aşımı söz konusu olması, \n ÖHK, YÖS uygulaması üzerinden çift tıklama ile mükerrer defa HHS API’lerini çağırılması,\n(API kontrollerinden önce YÖS uygulamasının, çift tıklama kontrolü yapması önerilmektedir.) \n YÖS, yanıt almasına rağmen işleyemeden kaybedilmesi, \n \n durumlarında HHS aşağıdaki kuralları işletir: \n \n HHS gelen istek numarasını ve veri gövdesini birleştirerek checksum değeri üretir. \nchesksum değeri x-request-id|request.body ‘nin hash algoritmalarından (CRC32,MD5 vb)  geçirilerek üretilebilir. \n HHS bu checksum değeri ile YÖS’e dönmüş olduğu yanıtı 5 dk boyunca saklar.  Saklama yöntemi olarak veri tabanı veya önbellek araçları kullanılabilir. \n YÖS aynı istek numarası ve aynı veri gövdesi ile yeni bir çağrı yaptığında, aynı checksum değeri üretileceği için 5dk boyunca bu değere karşılık gelen yanıtı döner. \n 5 dk sonrasında istek numarası veya veri gövdesi değişmemiş olsa dahi bu HHS tarafından yeni istek olarak kabul edilir. \n \n Aşağıdaki Public Post işlemleri için bu kural setinin işletilmesi gerekmektedir: \n 1- Ödeme emri rızası oluşturma \n2- Erişim belirteci oluşturma \n3- Ödeme emri \n4- Hesap bilgisi rızası oluşturma \n 3.18. HTTP Durum Kodları \n RFC 2616\'da belirlenmiş olan durum kodları (status code) gönderilen isteğin durumunu YÖS’a standart bir şekilde ifade eder. Eğer bir hata varsa hatayı, gönderilen istek başarılı bir şekilde işlem gördüyse ona ilişkin durumu aktarır. Durum kodları genel olarak 5 kategoridedir. \n \n 1xx Bilgi \n 2xx Başarılı \n 3xx Yönlendirme \n 4xx İstemci Hatası \n 5xx Sunucu Hatası \n \n errorCode Alanında Kullanılabilecek Sıralı Hata Tipleri : \n \n TR.OHVPS.Resource \n \n ⇨\tInvalidFormat \n ⇨\tConsentMismatch \n ⇨\tNotFound \n ⇨\tInvalidSignature \n ⇨\tMissingSignature \n ⇨\tMethodNotAllowed \n ⇨\tNotAcceptable \n ⇨\tUnsupportedMediaType \n ⇨\tConsentRevoked \n \n \n \n TR.OHVPS.Business \n \n ⇨\tInvalidContent \n ⇨\tInvalidAccount \n \n \n \n TR.OHVPS.Connection \n \n ⇨\tInvalidCertificate \n ⇨\tExceededRate \n ⇨\tInvalidTPP \n ⇨\tInvalidASPSP \n ⇨\tInvalidToken \n ⇨\tInvalidTPPRole \n \n \n \n TR.OHVPS.Server \n \n ⇨\tInternalError \n ⇨\tServiceUnavailable \n \n \n TR.OHVPS.Resource.InvalidFormat hatası alındığı durumda; fieldErrors nesnesi içerisinde verilecek hata kodları : \n \n TR.OHVPS.Field \n \n ⇨\tMissing \n ⇨\tInvalid \n \n \n Veri Tipi Örneği: \n { \n     "path" :   "/ohvps/obh/s1.1/odeme-emri-rizasi" , \n     "id" :   "d8bd4e5f-f094-48a6-aee1-3a800e2709d9" , \n     "timestamp" :   "2022-12-22T10:33:15+03:00" , \n     "httpCode" :   400 , \n     "httpMessage" :   "Bad Request" , \n     "moreInformation" :   "Validation error" , \n     "moreInformationTr" :   "Şema kontrolleri başarısız" , \n     "fieldErrors" :   [ \n         { \n             "objectName" :   "odemeEmriRizasiIstegi" , \n             "field" :   "odmBsltm.islTtr.prBrm" , \n             "messageTr" :   "boş değer olamaz" , \n             "message" :   "must not be null" , \n             "code" :   "TR.OHVPS.Field.Missing" \n         } , \n         { \n             "objectName" :   "odemeEmriRizasiIstegi" , \n             "field" :   "odmBsltm.kmlk.kmlkVrs" , \n             "messageTr" :   "boyut \'1\' ile \'30\' arasında olmalı" , \n             "message" :   "size must be between 1 and 30" , \n             "code" :   "TR.OHVPS.Field.Invalid" \n         } \n     ] , \n     "errorCode" :   "TR.OHVPS.Resource.InvalidFormat" \n }  \n \n Tablo 4: HTTP Durum Kodları \n \n \n \n HTTP Durum \n İstek Sonucu ve Açıklamalar \n POST \n GET \n DELETE \n \n \n \n \n 200 OK \n İstek Başarıyla Tamamlandı. Kaynak güncellemek için yapılan (örneğin, GET) ve başarıyla tamamlanan isteklerinde kullanılır. \n H \n E \n H \n \n \n 201 Created \n İstek Başarılı Oldu. Kaynak yaratma isteği (örneğin, POST /ödeme-emri-rizasi) başarıyla sonuçlandı. \n E \n H \n H \n \n \n 204 No Content \n Silme işlemi başarıyla tamamlandı. Kaynak silme isteği (örneğin,  DELETE /hesap-rizasi/{RizaNo} ) başarıyla sonuçlandı. \n H \n H \n E \n \n \n 400 Bad Request \n İstekte bozuk, eksik veya uyumlu olmayan JSON gövdesi, URL parametreleri veya başlık alanları var.  İstekle başlatılan işlem yapısal bozukluk, eksik veya tutarsız veri veya HHS tarafındaki kontrollerin hatalı sonuçlanması nedeniyle hata ile sonuçlanır ve hataya ilişkin veriler hata nesnesi içerisinde dönülür. \n E \n E \n E \n \n \n 401 Unauthorized \n Yetkilendirme başlığı eksik, hatalı veya geçersiz olduğundan istek yetkilendirilmediğinde ve erişim reddedildiğinde http 401 kodu dönülmelidir. \n E \n E \n E \n \n \n 403 Forbidden \n Erişim belirtecinin veya rızanın kapsamı uyuşmuyor. YÖS bir hesaba/işlem kaynağına erişmeye çalışır ve YÖS, istenen kaynağa erişmek için geçerli izinlere sahip bir rızası yoktur.  Örneğin; hesap bilgisi rızası bakiye izni almamıştır ancak /bakiyeler adresinden istekte bulunmuştur. \n \n \n \n \n \n 404 Not Found \n **HHS geçerli bir API erişim adresini sağlamıyorsa, o URL\'ye gelen istekler için 404 (Bulunamadı) ile yanıt vermelidir.**YÖS, uygulama esaslarında tanımlanmayan bir kaynak için bir URL\'ye erişmeye çalışırsa (örneğin, GET /yurtdisi-odeme), HHS, 404 (Bulunamadı) ile yanıt vermeyi seçebilir. \n E \n E \n E \n \n \n 405 Method Not Allowed \n YÖS, desteklenmeyen bir yöntemle kaynağa erişmeye çalıştı. \n E \n E \n E \n \n \n 406 Not Acceptable \n İstek, geçersiz bir karakter kümesi içeriyor. \n E \n E \n E \n \n \n 415 Unsupported Media Type \n İstek gövdesi hedef kaynakta bu yöntem tarafından desteklenmeyen bir biçimde oluşturulduğu için işlem reddedildi \n E \n H \n H \n \n \n 429 Too Many Requests \n Belirli bir süre içinde çok fazla talepte bulunulduğu için işlem reddedildi.  HHS’ler adil kullanım politikalarını aşan talepleri kısıtlayabilir. \n E \n E \n E \n \n \n 500 Internal Server Error \n API sunucu / servis katmanında sorun oluştu. İşlem başarısız.  5XX hata durumlarında yanıt gövde değeri olmadığı için mesaj imzalama yapılamaz ve x-jws-signature alanı boş olarak iletilir.  Bu durumda x-jws-signature kontrolü yapılmamalıdır. \n E \n E \n E \n \n \n 503 Service Unavailable \n Hizmet sürümü kullanımdan kaldırıldı.  Bir API\'nin kullanımdan kaldırıldığı ve artık bir HHS tarafından operasyonel olarak desteklenmediği durumlarda, URI yolu hala etkin olabilir ve API isteklerini kabul edebilir.  Bu durumda, YÖS\'ün API sürümünün çevrimdışı olduğunun farkında olması için 503 Hizmet Kullanılamıyor dönmesi önerilir. \n E \n E \n E \n \n \n \n Hata Örnekleri: \n 400 Bad Request \n TR.OHVPS.Business.InvalidContent  hatası HHS tarafından yapılacak iş kuralı kontrollerinin başarısız olduğu durumda verilmelidir. \n TR.OHVPS.Resource.InvalidFormat  hatası şema validasyonu, alan uzunluk ve varlık kontrollerinin başarısız olduğu durumda verilmelidir. \n \n { \n     "path" :   "/ohvps/obh/s1.1/odeme-emri-rizasi" , \n     "id" :   "7f115b9c-d7c2-4a2a-bc45-5a9891c79072" , \n     "timestamp" :   "2022-12-22T10:47:57+03:00" , \n     "httpCode" :   400 , \n     "httpMessage" :   "Bad Request" , \n     "moreInformation" :   "Validation error" , \n     "moreInformationTr" :   "Şema kontrolleri başarısız" , \n     "fieldErrors" :   [ \n         { \n             "objectName" :   "odemeEmriRizasiIstegi" , \n             "field" :   "odmBsltm.alc.unv" , \n             "messageTr" :   "boyut \'3\' ile \'140\' arasında olmalı" , \n             "message" :   "size must be between 3 and 140" , \n             "code" :   "TR.OHVPS.Field.Invalid" \n         } , \n         { \n             "objectName" :   "odemeEmriRizasiIstegi" , \n             "field" :   "odmBsltm.islTtr.ttr" , \n             "messageTr" :   "boş değer olamaz" , \n             "message" :   "must not be null" , \n             "code" :   "TR.OHVPS.Field.Missing" \n         } \n     ] , \n     "errorCode" :   "TR.OHVPS.Resource.InvalidFormat" \n }  \n\n \n Zorunlu header alanlarından biri ya da birkaçı eksik olarak gönderilirse aşağıdaki gibi bir hata dönüşü gerçekleşebilir. \n HHS uygulaması tarafından dönülebilecek hata örnekleri: \n \n { \n     "path" :   "/ohvps/obh/s1.1/odeme-emri-rizasi" , \n     "id" :   "2005515d-f0e6-4a07-a439-0ef3b0f56011" , \n     "timestamp" :   "2022-12-22T10:39:26+03:00" , \n     "httpCode" :   400 , \n     "httpMessage" :   "Bad Request" , \n     "moreInformation" :   "Validation error" , \n     "moreInformationTr" :   "Şema kontrolleri başarısız" , \n     "errorCode" :   "TR.OHVPS.Resource.InvalidFormat" , \n     "fieldErrors" :   [ \n         {          \n             "field" :   "X-Request-ID" , \n             "messageTr" :   "X-Request-ID değeri boş olamaz." , \n             "message" :   "X-Request-ID cannot be null." , \n             "code" :   "TR.OHVPS.Field.Invalid" \n         } \n     ] \n }  \n\n \n Business hata örneği - 1: \n { \n     "path" :   "/ohvps/obh/s1.1/odeme-emri-rizasi" , \n     "id" :   "677cfd9d-77c1-4ea3-8bdf-74a6e9887177" , \n     "timestamp" :   "2022-12-22T11:05:59+03:00" , \n     "httpCode" :   400 , \n     "httpMessage" :   "Bad Request" , \n     "moreInformation" :   "gonUnvan wrong" , \n     "moreInformationTr" :   "Gönderen Ünvan hatalı" , \n     "errorCode" :   "TR.OHVPS.Business.InvalidContent" \n }  \n \n Business hata örneği - 2: \n { \n     "path" :   "/ohvps/obh/s1.1/odeme-emri-rizasi" , \n     "id" :   "5df3b402-3aca-4305-a35b-5af0f3184b40" , \n     "timestamp" :   "2022-12-22T11:06:47+03:00" , \n     "httpCode" :   400 , \n     "httpMessage" :   "Bad Request" , \n     "moreInformation" :   "Sender account is disabled or not found." , \n     "moreInformationTr" :   "Gonderen hesap aktif değil veya bulunamadı." , \n     "errorCode" :   "TR.OHVPS.Business.InvalidAccount" \n }  \n \n GEÇİT\'te yapılan zorunlu header kontrollerinde aşağıdaki hatalar dönebilir: \n \n { \n     "timestamp" :   "2022-12-22T10:40:28+03:00" , \n     "path" :   "/ohvps/obh/s1.1/odeme-emri-rizasi" , \n     "id" :   "d4375748-6fc7-4f7e-94f3-6411cab1d59f" , \n     "moreInformationTr" :   "Geçersiz HHS kodu." , \n     "errorCode" :   "TR.OHVPS.Connection.InvalidASPSP" , \n     "moreInformation" :   "Invalid ASPSP Code" , \n     "httpCode" :   400 , \n     "httpMessage" :   "Bad Request" \n }  \n \n GEÇİT tarafından dönülecek hata örneği: \n \n { \n     "timestamp" :   "2022-12-22T10:40:28+03:00" , \n     "path" :   "/ohvps/obh/s1.1/odeme-emri-rizasi" , \n     "id" :   "d4375748-6fc7-4f7e-94f3-6411cab1d59f" , \n     "moreInformationTr" :   "Geçersiz HHS kodu." , \n     "errorCode" :   "TR.OHVPS.Connection.InvalidTPP" , \n     "moreInformation" :   "Invalid TPP Code" , \n     "httpCode" :   400 , \n     "httpMessage" :   "Bad Request" \n }  \n \n GEÇİT tarafından dönülecek hata örneği: \n \n { \n     "timestamp" :   "2022-12-22T11:14:05+03:00" , \n     "path" :   "/ohvps/hbh/s1.1/hesap-bilgisi-rizasi" , \n     "id" :   "ee1e3ea7-a5e5-468b-bb02-314148f84e6a" , \n     "moreInformationTr" :   "Geçersiz yös rolü. İlgili api çağrısı için yetkisi yok." , \n     "errorCode" :   "TR.OHVPS.Connection.InvalidTPPRole" , \n     "moreInformation" :   "Invalid TPP Role" , \n     "httpCode" :   403 , \n     "httpMessage" :   "Forbidden" \n }  \n\n \n 401 Unauthorized \n YÖS, süresi dolmuş bir erişim belirteci kullandığında, HHS 401 (Yetkisiz) http kodu ile aşağıdaki hata kodunu dönmelidir.  Aşağıdaki nedenlerden herhangi biri nedeniyle bir Erişim Belirtecinin süresi dolduğunda bu durum ortaya çıkabilir: \n \n Rızanın süresi doldu (Son Kullanma Tarihi geçti) \n Erişim Belirtecinin şüpheli kullanımı veya sahtekarlık şüphesi \n Rızada belirlenen gün sayısının aşımı\nBu hata, müşteriden doğru izinlerle yeniden kimlik doğrulaması isteyerek çözülebilir. \n \n \n { \n     "path" :   "/ohvps/gkd/s1.1/erisim-belirteci" , \n     "id" :   "ed3fd667-fc58-40ad-a982-e8937faccd15" , \n     "timestamp" :   "2022-12-22T11:17:33+03:00" , \n     "httpCode" :   401 , \n     "httpMessage" :   "Unauthorized" , \n     "moreInformation" :   "Refresh token expired or not found in database" , \n     "moreInformationTr" :   "Yenileme belirteci zaman aşımına uğramış veya veri tabanında yok" , \n     "errorCode" :   "TR.OHVPS.Connection.InvalidToken" \n }  \n \n\n \n 403 Forbidden \n Örn; YÖS yetkisi olmayan rol(ÖBH/HBH) ile işlem yapmaya çalıştığı durumda 403 hatası alarak işleme devam edemez. \n { \n   "path" :   "/ohvps/hbh/s1.1/bakiye" , \n   "id" :   "3e48ea98-f889-48b9-aa6e-28aabc6cfb14" , \n   "timestamp" :   "2022-12-22T11:20:05+03:00" , \n   "httpCode" :   403 , \n   "httpMessage" :   "Forbidden" , \n   "moreInformation" :   "Forbidden" , \n   "moreInformationTr" :   "Bakiye Bilgileri için ÖHK izni bulunmamaktadır." , \n   "errorCode" :   "TR.OHVPS.Resource.Forbidden" \n }  \n \n 404 Not Found \n Örn; GET /odeme-emri-rizasi/123456 çağrısı durumunda 123456 geçerli bir ödeme kaynağı değilse, HHS, 404 koduyla cevap vermelidir. \n { \n     "path" :   "/ohvps/obh/s1.1/odeme-emri-rizasi/123456" , \n     "id" :   "22f52b2d-d442-4a6a-8f39-d23eba45a34b" , \n     "timestamp" :   "2022-12-22T10:53:53+03:00" , \n     "httpCode" :   404 , \n     "httpMessage" :   "Not Found" , \n     "moreInformation" :   "Resource not found" , \n     "errorCode" :   "TR.OHVPS.Resource.NotFound" , \n     "moreInformationTr" :   "Kaynak bulunamadı" \n }  \n\n \n 405 Method Not Allowed \n { \n     "path" :   "/ohvps/obh/s1.1/odeme-emri-rizasi" , \n     "id" :   "3e5c6b28-7ee4-4469-b541-843fb4a94eec" , \n     "timestamp" :   "2022-12-22T11:35:10+03:00" , \n     "httpCode" :   405 , \n     "httpMessage" :   "Method Not Allowed" , \n     "moreInformation" :   "Method not allowed" , \n     "errorCode" :   "TR.OHVPS.Resource.MethodNotAllowed" , \n     "moreInformationTr" :   "İstek yapılan URL için izin verilmeyen metot" \n }  \n \n 406 Not Acceptable \n { \n     "path" :   "/ohvps/obh/s1.1/odeme-emri-rizasi" , \n     "id" :   "3e5c6b28-7ee4-4469-b541-843fb4a94eec" , \n     "timestamp" :   "2022-12-22T11:35:10+03:00" , \n     "httpCode" :   406 , \n     "httpMessage" :   "Not Acceptable" , \n     "moreInformation" :   "Not Acceptable" , \n     "errorCode" :   "TR.OHVPS.Resource.NotAcceptable" , \n     "moreInformationTr" :   "Kabul edilmedi" \n }  \n \n 415 Unsupported Media Type \n İstek başlığında content-type, JSON dışında bir veri iletilirse bu hata verilebilir. \n \n { \n     "path" :   "/ohvps/obh/s1.1/odeme-emri-rizasi" , \n     "id" :   "63cc94b6-1b51-4648-9671-95e6e2e7e03d" , \n     "timestamp" :   "2022-12-22T11:37:12+03:00" , \n     "httpCode" :   415 , \n     "httpMessage" :   "Unsupported Media Type" , \n     "moreInformation" :   "Content type not supported" , \n     "errorCode" :   "TR.OHVPS.Resource.UnsupportedMediaType" , \n     "moreInformationTr" :   "Desteklenmeyen içerik tipi’" \n }  \n \n 429 Too Many Requests \n { \n   "path" :   "/ohvps/hbh/s1.1/hesaplar/aef6061f-2978-4bb4-980d-b4c634c8055b/islemler" , \n   "id" :   "20473c5f-2f4f-4b2e-8b66-7978aec442f7" , \n   "timestamp" :   "2022-12-22T00:21:07+03:00" , \n   "httpCode" :   429 , \n   "httpMessage" :   "Too Many Requests" , \n   "moreInformation" :   "Exceeded rate" , \n   "moreInformationTr" :   "Erişim sıklığı limiti aşımı" , \n   "errorCode" :   "TR.OHVPS.Connection.ExceededRate" \n }  \n \n 500 Internal Server Error \n { \n   "id" :   "1b90c6dc-0277-4755-8b05-9297ddfab743" , \n   "path" :   "/ohvps/obh/s1.1/odeme-emri-rizasi" , \n   "timestamp" :   "2022-12-22T11:41:34+03:00" , \n   "httpCode" :   500 , \n   "httpMessage" :   "Internal Server Error" , \n   "moreInformation" :   "Unexpected condition was encountered." , \n   "moreInformationTr" :   "Beklenmeyen bir durumla karşılaşıldı." , \n   "errorCode" :   "TR.OHVPS.Server.InternalError" \n }  \n\n \n 503 Service Unavailable \n \n   "timestamp" :   "2022-12-20T23:18:56+03:00" , \n   "path" :   "/ohvps/hbh/s1.1/hesap-bilgisi-rizasi/2a72678ee3d24de2be47887e4903a8c6" , \n   "id" :   "e76315b7-09f4-4295-b6d8-1f7fec632159" , \n   "moreInformationTr" :   "HHS şu anda hizmet veremiyor." , \n   "errorCode" :   "TR.OHVPS.Server.ServiceUnavailable" , \n   "moreInformation" :   "HHS is currently unavailable" , \n   "httpCode" :   503 , \n   "httpMessage" :   "Service Unavailable" \n 3.19. Maskeleme Kuralları \n Maskeli olarak iletilmesi gereken verilerin maskeleme kuralları şu şekildedir: \n \n IBAN verileri Hesap Numarası : İlk 4 ve son 4 karakteri açık, diğer karakterler maskeli olmalıdır. Örnek: TR54******************4812 \n Ad-Soyadı / Ticari Unvan : Her kelimenin ilk 2 karakteri açık, sonraki karakterler yerine 4 adet ‘ ’ karakteri konumlandırılmalıdır.\nÖrneğin: “FATİH SERKAN EREN” ifadesi “FA *** SE**** ER****” şeklinde gösterilmelidir. \n Tabela Unvanı : Her kelimenin ilk 2 karakteri açık, sonraki karakterler yerine 4 adet \' \' karakteri konumlandırılmalıdır. Örneğin “BANKALARARASI KART MERKEZİ ANONİM ŞİRKETİ” ifadesi “BA *** KA**** ME**** AN**** Şİ****” şeklinde gösterilmelidir. \n YÖS’ten girilen alıcı unvan ve IBAN bilgileri ödeme emri rızası ve ödeme emri yanıtında açık dönülür, Kolas akışında ödeme emri rızası yanıtı ve ödeme emri istek ve yanıtında maskeli taşınır. \n 3.20. Fonksiyonel Olmayan Gereksinimler \n \n \n HHS’lerin sunuyor oldukları servisleri en fazla 3000 ms içinde yanıt dönecek şekilde tasarlamalıdır. \n \n \n HHS\'ler mevcut online işlem kanallarından sundukları erişilebilirlik ve performans kriterlerinden daha düşük bir hizmet kalitesi sunmamalıdır. \n \n \n HHS’lerin sunuyor oldukları servislere sistemin güvenlik ve sürekliliğini sağlamak adına rate limit koyma ihtiyaçları olur ise, standartlar ve ihtiyaçlara uygun şekilde bir konfigürasyon yapabilirler.  \n \n \n HHS rate limit tanımı uyguluyor ise; YÖS\'ler arasında ayrım yapmadan, adil ve makul sınırlar dahilinde uygulamalıdır.    \n \n \n YÖS tarafından kullanıcının başlatmadığı otomatik sorgu limitleri  3.21 Otomatik Sorgular  bölümünde detaylandırılmıştır. HHS\'lerin bu servisler için minimumda cevap vermesi gereken sorgu sayıları belirlenmiştir. Bu sayıların üzerinde yapılan servis çağrısına yanıt dönmek HHS inisiyatifindedir. Diğer taraftan kullanıcının başlattığı istekler için uygulanacak limitler, HHS\'nin online işlem kanallarından sunulan sorgu limitlerinden daha az olmamalıdır. \n \n \n HHS\'ler, çağrım limitlerini aşan istekler için HTTP 429 - Too Many Request hatasını dönmelidir. Örnek hata mesajı  3.18 HTTP Durum Kodları  bölümünde bulunmaktadır. Rate Limit özelinde tanımlanmış parametreler olan X-RateLimit-Limit, X-RateLimit-Remaining ve X-RateLimit-Reset alanları da   3.16 Yanıt Başlığı  bölümünde açıklanmıştır. YÖS\'ler de HHS\'nin belirlediği rate limit kurallarına uymakla yükümlüdür. \n 3.21. Otomatik Sorgular \n YÖS uygulaması, ÖHK\'nın başlattığı işlemler neticesinde API çağrımı yapabileceği gibi, sistemsel bir şekilde otomatik API çağrımı da yapabilir. \nHHS, API çağrımının ÖHK\'lı ya da ÖHK\'sız olduğunu istek parametreleri içerisinde yer alan PSU-Initiated parametresi ile anlar. Bu parametre “E” ise ÖHK’lı, “H” ise sistemsel yapılmış bir sorgu anlamına gelmektedir. \n ÖHK YÖS uygulamasına giriş yaptığı andan çıkış yaptığı ana kadar yani ÖHK oturumu boyunca yapılan API çağrımlarında, PSU-Initiated  değerinin "E" olması gerekmektedir.  YÖS uygulamasında ÖHK oturumu boyunca,  ÖHK\'nın bilgilerinden minimumda "bakiye" bilgisinin, uygulama arayüzlerinde güncel değeri ile online sorgularla gösterimi YÖS\'ün insiyatifindedir. \n ÖHK’nın başlattığı sorgular için HHS tarafından belirlenen üst rate limitler dahilinde çağrım yapılabilir. \n YÖS, aşağıdaki API\'leri sistemsel bir şekilde çağırabilir. \nHHS\'lerin bu servisler için minimumda cevap vermesi gereken sorgu sayıları belirlenmiştir. Bu sayıların üzerinde yapılan servis çağrısına yanıt dönmek HHS inisiyatifindedir. \nHHS tarafından izin verilen sorgu sayısının üzerinde yapılan bir sorgu için HTTP 429 durum kodu (Too Many Requests) hatası dönülmelidir. Yanıt gövdesinde tekrar hata nesnesinin oluşturulması HHS inisiyatifindedir.  HHS yanıt headerı alanında iletilecek X-RateLimit-Reset (saniye cinsinden) değeri kadar süre sonunda\nYÖS\'ün tekrar sorgulama yapması beklenmektedir. \n \n \n \n No \n Kaynak \n HTTP işlemi \n Erişim Adresi \n Otomatik Sorgu Sayısı \n \n \n \n \n 1 \n erisim-belirteci \n POST \n /erisim-belirteci \n --- \n \n \n 2 \n odeme-emri-rizasi \n GET \n /odeme-emri-rizasi/{rizaNo} \n Rıza bazında günde 4 \n \n \n 3 \n odeme-emri \n GET \n /odeme-emri/{odemeEmriNo} \n Rıza bazında günde 24 \n \n \n 4 \n hesap-bilgisi-rizasi \n GET \n /hesap-bilgisi-rizasi/{RizaNo} \n Rıza bazında günde 4 \n \n \n 5 \n hesap-bilgisi-rizasi \n DELETE \n /hesap-bilgisi-rizasi/{RizaNo} \n --- \n \n \n 6 \n hesaplar \n GET \n /hesaplar \n Bireysel günde 4  Kurumsal günde 4 \n \n \n 7 \n hesaplar \n GET \n /hesaplar/{hspRef} \n Bireysel günde 4 Kurumsal günde 4 \n \n \n 8 \n bakiye \n GET \n /hesaplar/{hspRef}/bakiye \n Bireysel günde 24 Kurumsal ÖHK - günde 24 \n \n \n 9 \n bakiye \n GET \n /bakiye \n Bireysel günde 24 Kurumsal ÖHK - günde 24 \n \n \n 10 \n islemler \n GET \n /hesaplar/{hspRef}/işlemler \n Bireysel günde 4 Kurumsal ÖHK - saatte 12 \n \n \n \n YÖS ve HHS son 24 saat içerisindeki sorgu sayılarını toplayarak elde ettiği sonuçlarla limit kontrolü yapmalıdır (Pencere yöntemi). \n İşlemler servisinin çağrım detaylarına  ^Bölüm 7.8  üzerinden ulaşılabilir. \n Hesap bilgisi rızasının YÖS tarafından otomatik bir şekilde iptal edilmesi durumu  ^Bölüm 9\'da  açıklanmıştır. \n'},{frontmatter:{},regularPath:"/v1.1.0/deneyalani/genel-bilgiler.html",relativePath:"v1.1.0/deneyalani/genel-bilgiler.md",key:"v-70a6dc4e",path:"/v1.1.0/deneyalani/genel-bilgiler.html",content:" GENEL BiLGİLER: \n ÖHVPS API İlke ve Kuralları dokümanına istinaden geliştirmelerini yapan/yapacak olan katılımcılar geliştirdikleri sürüme ait API’lerin nasıl çalıştıklarını görmek istediklerinde “Deney Alanı” üzerinden gözlem yapabilirler. Bu kapsamda, Deney Alanı katılımcılara tarayıcı üzerinden statik verilerle işlem başlatarak, dönen yanıtı inceleme imkanı sunar. \n Deney Alanı ile sunulan imkanlar şu şekildedir: \n \n Servisler durum bilgisi içermeyecek şekilde (stateless) olarak sunulmaktadır. \n Güçlü Kimlik Doğrulama akışlarında kurum özelinde oluşturulan yetkilendirme kimlik bilgilerine ihtiyaç duyulmamaktadır. \n Yanıt veri kümesi statiktir. Servislere yapılan istekler, her zaman aynı yanıtı dönmektedir. \n Yeni oluşturma, güncelleme, silme işlemleri kaynak veri üzerinde değişiklik yapmamaktadır. \n Deney alanı genelin kullanımına açıktır. Üyelik kaydı olmaksızın Deney Alanı üzerinden API incelemeleri gerçekleştirilebilmektedir. \n API dokümanında yapılacak minor değişiklikler deney alanına yansıtılmayacaktır. \n \n Not: Deney Alanı’nın kapsamı genişletilmiş versiyonu – “BKM ÖHVPS Simülatör” uygulaması hem HHS hem de YÖS katılımcılarının; test uygulamalarını uçtan uca test edebilebileceği bir ortamdır. Simülatör uygulaması üzerinden dinamik veri girişi yaparak, geliştirilen servisler ile zorunlu senaryoların tümünün simülasyonu gerçekleştirilebilir. Simülatör ortamındaki API’ler, üretim ortamının bir kopyası olacak şekilde oluşturulmuştur ve kurumların üretim ortamına hazır hale gelmelerine aracılık eder. Bu uygulama, pürüzsüz bir üretim ortamı geçişi imkanı sağlar ve ÖHVPS BKM Teknik Sertifikasyonu geçmek için koşulması gereken sertifikasyon senaryoları BKM ÖHVPS Simülatör’ü üzerinden sunulmaktadır. BKM Simülatör kullanımı için ayrı bir süreç işletilmekte olup daha fazla detaylı bilgi almak için ohvps@bkm.com.tr adresine taleplerinizi iletmeniz gerekmektedir. \n Ödeme Emri Başlatma API Deney Alanı \n"},{frontmatter:{},regularPath:"/v1.1.0/deneyalani/hesap-bilgisi-api.html",relativePath:"v1.1.0/deneyalani/hesap-bilgisi-api.md",key:"v-3637769d",path:"/v1.1.0/deneyalani/hesap-bilgisi-api.html",content:" \n   \n "},{frontmatter:{},regularPath:"/v1.1.0/contents/tanim-ve-kisitlamalar.html",relativePath:"v1.1.0/contents/tanim-ve-kisitlamalar.md",key:"v-e8779b46",path:"/v1.1.0/contents/tanim-ve-kisitlamalar.html",content:"  1.\tTanım ve Kısaltmalar   \n Tablo 1: Tanım ve Kısaltmalar \n \n \n \n Kısaltma \n Tanım \n Açıklama \n İngilizce Açıklama \n İngilizce Kısaltma \n \n \n \n \n ÇS \n Çerçeve Sözleşme \n Ödeme hizmeti sağlayıcısı ile müşteri arasında tekil veya süreklilik arz eden ödeme işlemlerinin yürütülmesine ve mümkün olan durumlarda ödeme hesabının açılmasına ilişkin usul ve esasları belirleyen sözleşme \n \n \n \n \n EPK \n Elektronik Para Kuruluşu \n Kanun kapsamında elektronik para ihraç etme yetkisi verilen tüzel kişi \n Electronic Money Institution \n EMI \n \n \n FAST \n Fonların Anlık ve Sürekli Transferi \n TCMB tarafından işletilen Fonların Anlık ve Sürekli Transferi Sistemi \n \n \n \n \n FAST TR-Karekod \n FAST-TR Karekod Teknik İlke ve Kurallar Rehberi \n TR Karekod’un FAST Sistemi aracılığıyla gerçekleşecek işlemlerde kullanılmasına ilişkin detaylı teknik ilke ve kurallarını içeren doküman \n \n \n \n \n GEÇİT \n BKM API Geçidi \n Bankalararası Kart Merkezi (BKM) tarafından geliştirilen ve taraflara standart Açık Bankacılık işlemleri sunulmasını sağlayan API Geçidi uygulaması \n \n \n \n \n GKD \n Güçlü Kimlik Doğrulama \n Kimlik doğrulamada kullanılan ve bir bileşenin ele geçirilmesinin diğer bileşenin güvenliğini tehlikeye atmayacağı en az iki bileşenden oluşan, bu iki bileşenin de müşterinin bildiği, sahip olduğu veya biyometrik bir karakteristiği olan bileşen sınıflarından farklı ikisine ait olacak şekilde seçildiği yöntem \n Strong Customer Authentication \n SCA \n \n \n İB \n İşlem Bilgisi \n Gerçekleştirilen işleme ilişkin işlem zamanını, işlemin niteliğini ve ödeme işlemi için ödeme emrinin masraf, komisyon ve ücretler de dahil hesabın borçlandırılacağı toplam tutarını ve ödemenin göndereni ile alıcısını veya toplu ödeme emrinin masraf, komisyon ve ücretler de dahil hesabın borçlandırılacağı toplam tutarını ve göndereni ile alıcılarını içeren bilgi \n \n \n \n \n İDK \n İşlem Doğrulama Kodu \n Kimlik doğrulama yöntemlerinden biriyle kendisini sisteme tanıtan bir müşterinin gerçekleştirmek istediği işleme özgü olmak ve belirli bir geçerlilik süresi içinde işlem onayında kullanılmak üzere oluşturulan, finansal sonuç doğrunan işlemlerde kişiye onay anında ilgili işlem bilgisi (İB) ile birlikte gösterilen, alıcı veya tutarın değişmesiyle geçersiz hale gelen bilgi \n Authentication Code \n AC \n \n \n KOLAS \n Kolay Adresleme Servisi \n Fon transferlerinde hesap numarası ile ad soyad yerine kullanılan ve belirli bir hesap ile eşleştirilmiş telefon numarası, e-posta adresi, T.C. Kimlik Numarası (TCKN), Vergi Kimlik Numarası (VKN), Yabancı Kimlik Numarası veya Pasaport Numarası gibi Kolay Adres bilgilerinin kaydedilmesini, güncellenmesini ve sorgulamasını sağlayan katman servis \n \n \n \n \n HBHS \n Hesap Bilgisi Hizmeti Sağlayıcısı \n Kanunun 12 inci maddesinin birinci fıkrasının (g) bendinde tanımlanan ödeme hizmetini (hesap bilgisi hizmetini) sunan tüzel kişi \n Account Information Service Provider \n AISP \n \n \n HHS \n Hesap Hizmeti Sağlayıcısı \n Nezdinde ödeme hesabı bulunan ödeme hizmeti sağlayıcısı \n Account Servicing Payment Service Provider \n ASPSP \n \n \n ÖBHS \n Ödeme Emri Başlatma Hizmeti Sağlayıcısı \n Kanunun 12 inci maddesinin birinci fıkrasının (f) bendinde tanımlanan ödeme hizmetini (ödeme emri başlatma hizmetini) sunan tüzel kişi \n Payment Initiation Service Provider \n PISP \n \n \n ÖDK \n Ödeme Kuruluşu \n Ödeme hizmeti sağlamak ve gerçekleştirmek için Kanun kapsamında yetkilendirilmiş tüzel kişi \n Payment Institution \n PI \n \n \n ÖH \n Ödeme Hesabı \n Ödeme hizmeti kullanıcısı adına açılan ve ödeme işleminin yürütülmesinde kullanılan hesap \n Payment Account \n PA \n \n \n ÖHK \n Ödeme Hizmeti Kullanıcısı (Müşteri) \n Gönderen, alıcı veya her ikisi sıfatıyla belirli bir ödeme hizmetinden faydalanan gerçek veya tüzel kişi \n Payment Service User \n PSU \n \n \n ÖHS \n Ödeme Hizmeti Sağlayıcısı \n 5411 sayılı Kanun kapsamındaki bankalar, EPK, ÖDK ve Posta ve Telgraf Teşkilatı Anonim Şirketi(PTT) \n Payment Service Provider \n PSP \n \n \n ÖHVPS \n Ödeme Hizmetleri Veri Paylaşım Servisleri \n Kanunun 12’nci maddesinin birinci fıkrasının (f) veya (g) bentlerinde yer alan ödeme hizmetlerinde kullanılan veri paylaşım servisleri \n \n \n \n \n PÖS \n Perakende Ödeme Sistemi \n TCMB tarafından işletilen, işlemlerin Türk Lirası üzerinden gerçekleştiği Müşteriler Arası Türk Lirası Aktarım Sistemi \n \n \n \n \n TR-Karekod \n TR-Karekod İlke ve Kuralları \n Ulusal karekod (TR Karekod) ilke ve kurallarının belirlendiği belge \n \n \n \n \n YÖS \n Yetkili Ödeme Hizmeti Sağlayıcısı \n Ödeme emri başlatma hizmeti ve/veya hesap bilgisi hizmeti sunan tüzel kişi \n Third Party Payment Service Providers \n TPP \n \n \n \n"},{frontmatter:{},regularPath:"/v1.1.0/deneyalani/hhs-yos-api.html",relativePath:"v1.1.0/deneyalani/hhs-yos-api.md",key:"v-3ee390dd",path:"/v1.1.0/deneyalani/hhs-yos-api.html",content:" \n   \n "},{frontmatter:{},regularPath:"/v1.1.0/deneyalani/olay-bildirim-api.html",relativePath:"v1.1.0/deneyalani/olay-bildirim-api.md",key:"v-642a7506",path:"/v1.1.0/deneyalani/olay-bildirim-api.html",content:" \n   \n "},{frontmatter:{},regularPath:"/v1.1.0/deneyalani/test.html",relativePath:"v1.1.0/deneyalani/test.md",key:"v-68ac6685",path:"/v1.1.0/deneyalani/test.html",content:" \n   \n "},{title:"8.\tDüzenli Ödeme Emri Başlatma Hizmeti",frontmatter:{},regularPath:"/v2.0.0/contents/duzenli-odeme-emri-hizmeti.html",relativePath:"v2.0.0/contents/duzenli-odeme-emri-hizmeti.md",key:"v-f0a9c5f2",path:"/v2.0.0/contents/duzenli-odeme-emri-hizmeti.html",headers:[{level:2,title:"Düzenli Ödeme Emri Başlatma Hizmeti için Erişim Adresleri (Endpoints)",slug:"duzenli-odeme-emri-baslatma-hizmeti-icin-erisim-adresleri-endpoints"},{level:2,title:"8.1.\tADIM 0 - Düzenli Ödeme Emri Rızası Başlatma Isteği",slug:"_8-1-adim-0-duzenli-odeme-emri-rızası-baslatma-istegi"},{level:2,title:"8.2.\tADIM 1 - Düzenli Ödeme Emri Rızasının Hazırlanması",slug:"_8-2-adim-1-duzenli-odeme-emri-rızasının-hazırlanması"},{level:2,title:"8.3.\tADIM 2- Düzenli Ödeme Emri Rızasının Yetkilendirilmesi",slug:"_8-3-adim-2-duzenli-odeme-emri-rızasının-yetkilendirilmesi"},{level:2,title:"8.4.\tADIM 2.1 – Düzenli Ödeme Emri Rızasının Sorgulanması (isteğe bağlı)",slug:"_8-4-adim-2-1-duzenli-odeme-emri-rızasının-sorgulanması-istege-baglı"},{level:2,title:"8.5.\tADIM 3- Duzenli Ödeme Emrinin Oluşturulması",slug:"_8-5-adim-3-duzenli-odeme-emrinin-olusturulması"},{level:2,title:"8.6.\tADIM 3.1- Duzenli Ödeme Emri Sorgusu (İsteğe bağlı)",slug:"_8-6-adim-3-1-duzenli-odeme-emri-sorgusu-istege-baglı"},{level:2,title:"8.7.\tADIM 4- Düzenli Ödeme Planı Sorgulama",slug:"_8-7-adim-4-duzenli-odeme-planı-sorgulama"},{level:2,title:"8.8.\tADIM 5- Düzenli Ödeme Emri Rıza İptali",slug:"_8-8-adim-5-duzenli-odeme-emri-rıza-iptali"}],content:" 8.\tDüzenli Ödeme Emri Başlatma Hizmeti \n Ödeme hizmeti kullanıcısının düzenli tekrar eden bir ödeme talimatı gerçekleştirmek istediği ödeme emirlerinde bu hizmeti kullanabilir. Ödemenin Havale / PÖS / FAST ödeme sistemlerinden hangisi ile gerçekleşeceğine, ödeme günü geldiğinde HHS karar verir. \n Düzenli ödeme hizmetini online bankacılık sistemlerinde sunan HHS'lerin, ÖHVPS üzerinden bu hizmetleri sunması zorunludur. Mevcutta online kanallarından bu hizmeti sundukları müşteri segmentine (bireysel,kurumsal vb.), ÖHVPS üzerinden hizmet sunmaya devam etmeleri gerekmektedir. YÖS, bireysel müşteri özelinde düzenli ödeme hizmeti vermeyen HHS'ye düzenli ödeme talimatı rızası isteği yapması durumunda HHS tarafından  TR.OHVPS.Business.IndividualCustomerNotSupported  hatası , kurumsal müşteri özelinde düzenli ödeme talimatı rızası isteği yapıldığında HHS tarafından  TR.OHVPS.Business.CorporateCustomerNotSupported  hatası verilmelidir. \n HHS'ler düzenli ödeme hizmetini sunuş bilgilerini HHS API aracılığı ile yayınlayacaklardır. YÖS, düzenli ödeme hizmeti başlatabileceği HHS'lerin listesini HHS API'de yer alan \"hizmetTipi\":\"03\" parametresi ile alabilir. YÖS, düzenli ödeme hizmeti sunmayan HHS'ye düzenli ödeme talimat rızası isteği yapması durumunda HHS tarafından  TR.OHVPS.Business.RegularPaymentOrderNotSupported  hatası iletilmelidir. \n Düzenli ödeme talimatı güncelleme hizmeti YÖS üzerinden yapılamayacaktır. ÖHK aktif olan düzenli ödeme talimat rızasını iptal ederek, yeniden oluşturabilecektir. \n HHS üzerinden ilgili güncelleme hizmeti sağlanabilir. Ödeme planında yapılan güncelleme sonucunda olay bildirim ile YÖS'e bildirim sağlanacaktır. HHS üzerinden güncelleme yapılırken son ödeme günü için ileri bir tarihe güncelleme adımı olmamalıdır. Sadece ilk oluşturulan düzenli ödeme emri içerisindeki son ödeme gününden öncesi olacak şekilde güncelleme yapılmasına izin verilmelidir. \n Düzenli Ödeme Emri Başlatma Hizmeti 5 temel akışdan oluşur: \n \n Düzenli Ödeme Emri Rızası Başlatma İsteğinin tetiklenmesi:  ÖHK ÖBHS mobil uygulama ya da websitesinden düzenli ödeme emri rızasını başlatır. \n Düzenli Ödeme Emri Rıza Hazırlanması:  ÖBHS, “Düzenli Ödeme Emri Rızası Başlatma” işlemi için izin oluşturulması isteğini HHS’ye iletir. \n Düzenli Ödeme Emri Rızasının Yetkilendirilmesi:  HHS, gerekli gördüğü durumlarda ÖHK’yı GKD ile doğrular ve düzenli ödeme emri rızasına erişim için erişim belirteci tanımlanmasını temin eder. \n Düzenli Ödeme Emrinin Başlatılması:  ÖBHS, “düzenli ödeme emri”ni HHS’ye iletir. \n Düzenli Ödeme Emri Rıza Durumu, Düzenli Ödeme Emri Durumu, Düzenli Ödeme Emri Detayı Sorguları:  ÖBHS, Düzenli Ödeme Emri Rıza Durumu, Düzenli Ödeme Emri Durumu, Düzenli Ödeme Emri Detayı bilgilerini isteğe bağlı olarak sorgulayabilir. \n Düzenli Ödeme Planı Sorguları:  ÖBHS, Düzenli Ödeme Emri için oluşturulan talimata dair ödeme planını sorgulayabilir. \n \n Nezdinde ödeme hesabı bulunduran hesap hizmeti sağlayıcılar(Banka, EPK, Ödeme Kuruluşları)  müşterilerine ait hesapları hesap referansı ya da hesap numarası üzerinden takip etmektedir. YÖS'lerin hem HBH hem de ÖBH servisleri için hesap referansı veya hesap numarası üzerinden işlem yapılabileceğini bilmeleri, sistemlerini API dokümanında belirtilen akışlara göre uyumlandırmaları ve müşteri bilgilendirmesini(önyüzlerinde hesap no ve hesap referansı ayrımını gözeterek) buna paralel yapmaları beklenmektedir. \n YÖS'ler gönderen hesap seçimini aşağıdaki yöntemlerden biri ya da birkaçı ile sağlayabilirler: \n \n YÖS, müşterisinin ödeme hesabını HHS ekranından seçtirebilir. \n YÖS, müşterisinden Hesap Bilgisi rızası alır. Rıza aldığı hesaplar üzerinden hesap referansı aracılığı ile düzenli ödeme emri başlatabilir. \n YÖS, müşterisinin ödeme hesabını elle girmesine olanak tanıyabilir. IBAN'ı olmayan HHS'ler düzenli ödeme emri rızası adımında  TR.OHVPS.Business.IBANNotSupported  hatasını vermelidir. IBAN'ı olan HHS'lerin bu akışı desteklemesi zorunludur. \n YÖS; müşterisinin hesap referansını elle girmesini sağlayabilir. Hesap Referansı bilgisi ile başlatılan düzenli ödeme emri işlemlerinde HHS seçimi zorunludur. \n \n Ödeme Sistemine doğrudan katılımcı olmayan HHS'ler, müşterilerine IBAN sunmadıkları için, YÖS'ler hesap referansı ile ödeme başlatabilirler. Bunların dışındaki HHS'lerin, gönderen IBAN veya hesap referansı ile ödeme akışını desteklemesi zorunludur. \n Düzenli Ödeme Emri Başlatma Hizmeti için Erişim Adresleri (Endpoints) \n Düzenli Ödeme Emri Başlatma Hizmeti İçin Erişim Adreslerinin Etki Alanı (Scope) = “odeme_emri” olarak belirtilmelidir. Ödeme Emri Hizmeti ile aynı etki alanı(scope) kullanılmaktadır. \n Tablo : Düzenli Ödeme Emri Başlatma Hizmeti İçin Erişim Adresleri \n \n \n \n No \n Kaynak \n HTTP işlemi \n Erişim Adresi \n Zorunlu / İsteğe Bağlı \n Yetkilendirme Türü \n İmzalama \n İstem Nesnesi \n Yanıt Nesnesi \n \n \n \n \n 1 \n duzenli-odeme-emri-rizasi \n POST \n /duzenli-odeme-emri-rizasi \n Z \n İstemci Kimlik Bilgileri \n İmzalı İstek ve Yanıt \n DuzenliOdemeEmriRizasiIstegi \n DuzenliOdemeEmriRizasi \n \n \n 2 \n erisim-belirteci (GKD için) \n POST \n /erisim-belirteci \n Z \n İstemci Kimlik Bilgileri \n İmzalı İstek ve Yanıt \n ErisimBelirteciIstegi \n ErisimBelirteci \n \n \n 3 \n duzenli-odeme-emri-rizasi \n GET \n /duzenli-odeme-emri-rizasi/{rizaNo} \n Z \n İstemci Kimlik Bilgileri \n İmzalı Yanıt \n - \n DuzenliOdemeEmriRizasi \n \n \n 4 \n duzenli-odeme-emri \n POST \n /duzenli-odeme-emri \n Z \n İstemci Kimlik Bilgileri & Yetkilendirme Kodu (GKD) \n İmzalı İstek ve Yanıt \n DuzenliOdemeEmriIstegi \n DuzenliOdemeEmri \n \n \n 5 \n duzenli-odeme-emri \n GET \n /duzenli-odeme-emri/{talimatNo} \n Z \n İstemci Kimlik Bilgileri & Yetkilendirme Kodu (GKD) \n İmzalı Yanıt \n - \n DuzenliOdemeEmri \n \n \n 6 \n duzenli-odeme-emri-rizasi-iptal \n DELETE \n /duzenli-odeme-emri-rizasi/{rizaNo} \n Z \n İstemci Kimlik Bilgileri \n - \n - \n - \n \n \n 7 \n duzenli-odeme-talimat-plani \n GET \n /duzenli-odeme-emri/{talimatNo}/odeme-plani \n Z \n İstemci Kimlik Bilgileri & Yetkilendirme Kodu (GKD) \n İmzalı Yanıt \n - \n DuzenliOdemeEmriPlani \n 8.1.\tADIM 0 - Düzenli Ödeme Emri Rızası Başlatma Isteği \n \n ÖHK, ÖBHS uygulamasında (web arayüzü/mobil uygulama) düzenli ödeme emri rızası sürecini başlatır. \n Gönderen hesap detaylarının bu aşamada belirtilmesi zorunlu değildir. \n 8.2.\tADIM 1 - Düzenli Ödeme Emri Rızasının Hazırlanması \n   \n Şekil : Düzenli Ödeme Emri Rızasının Hazırlanması \n \n \n ÖBHS, ödeme hizmeti kullanıcı hesabının bulunduğu HHS’ye bağlanarak düzenli ödeme emri rıza kaynağının oluşturulmasını (DuzenliOdemeEmriRizasi) sağlar. \n \n \n POST isteği TLS protokolü tesis edilen iletişim katmanı üzerinden gerçekleştirilir. TLS için nitelikli sertifikalar kullanılır. \n \n \n POST isteğinin başlığındaki alanlar ve istemcinin sertifikasındaki özel alanlar kullanılarak istemcinin yetkilendirilmesi sağlanır: \n \n İstekte bulunan ÖBHS yetkilendirilmiş olduğu geçit tarafından kontrol edilir. \n İstekte bulunan yetkilendirilmiş ödeme hizmeti sağlayıcısı ÖBHS rolüne sahipliği geçit tarafından kontrol edilir. \n HHS tarafından, istek başlığındaki x-aspsp-code ile katilimciBlg içerisinde yer alan hhsKod değeri ile aynı olduğunu kontrol edilir. Farklı olması durumunda  “TR.OHVPS.Connection.InvalidASPSP”  hatası dönülür. \n \n \n \n POST başarılı olursa, HHS, düzenli ödeme emri için içeride rıza olup olmamasına bakılmaksızın yeni bir rıza tanımlayıcısı RizaNo içeren DuzenliOdemeEmriRizasi  yanıt olarak döner. \n \n \n 1 ÖHK'nın 1 YÖS için 1 HHS'de istediği kadar rızası olabilir. \n \n \n HHS tarafında RizaDurumu değişkeninin durumu “Yetki Bekleniyor” olarak güncellenir. \n \n \n YÖS’ün doğrulama ekranı olarak ÖHK’ya açacağı URL adresini de ilgili rıza numarasına göre oluşturur. Burada 2 farklı yöntemle URL oluşturabilir. \n \n Statik URL  : \nHHS’nin base pathi/alt-dizin/{rızaNo} \nÖrnek hhsYonAdr : https://xbank.com.tr/ohvps/cb54834e36f742d09af3d534ece3352a \nBu adres için ilgili doğrulama sayfası önden hazırlanmalı ve ÖHK’nın doğrulama sayfasına erişimi için yayınlanmış olmalıdır (publish edilmelidir). \n Dinamik URL : \nHHS’nin base pathi/alt-dizin/GKD Karşılama Ekranı?rizano={rızano} \nÖrnek: https://xbank.com.tr/ohvps/gkd?rizano=cb54834e36f742d09af3d534ece3352a \n \n \n \n POST /duzenli-odeme-emri-rizasi \n İSTEK: \n ÖBHS, bu API erişim adresinden HHS’ye yeni bir DuzenliOdemeEmriRizasi oluşturulması için istekte bulunur: \n \n ÖBHS, düzenli ödeme emri başlatma isteği olduğunu HHS’ye bildirir. \n ÖBHS, ÖHK’nın, ÖBHS arayüzünden verdiği rızanın (“Ön Onay”) bir kopyasının HHS nezdinde müşteri tarafından onaylanması için HHS’ye gönderilmesini sağlar. \n YÖS, düzenli ödeme hizmeti sunmayan (HHS API'de yer alan \"hizmetTipi\":\"03\" yok ise) HHS'ye düzenli ödeme talimat rızası isteği yapması durumunda HHS tarafından  TR.OHVPS.Business.RegularPaymentOrderNotSupported  hatası dönülür. \n HHS; istek mesajında yer alan alanların ÖHVPS API İlke ve Kuralları dökümanında belirtilen şartları sağlayacak şekilde zorunluluk, uzunluk ve içerik kontrollerini yapar. (Zorunlu) Kontrollere istinaden hata oluşması durumunda  \"TR.OHVPS.Resource.InvalidFormat\"  hata kodu iletilmeli ve fieldErrors dolu olacak şekilde hatalı alanı belirten detaylı açıklama gönderilmelidir. InvalidFormat hata kodlarında fieldErrors içeriği gönderilmeli ve anlaşılır açıklama ile message, messageTr alanları doldurulması zorunludur. \n HHS, hhsKod’un kendisine ait olduğunu ve istek başlığındaki x-aspsp-code değeri ile aynı olduğunu kontrol eder. Farklı olması durumunda  ”TR.OHVPS.Connection.InvalidASPSP”  hatası dönülür. \n HHS, yosKod’un geçerli bir Ödeme Hizmeti Sağlayıcısı Kodu olduğunu ve istek başlığındaki x-tpp-code değeri ile aynı olduğunu kontrol eder. Farklı olması durumunda  ”TR.OHVPS.Connection.InvalidTPP”  hatası dönülür. \n YÖS, bireysel müşteri özelinde düzenli ödeme hizmeti vermeyen HHS'ye düzenli ödeme talimatı rızası isteği yapması durumunda HHS tarafından  \"TR.OHVPS.Business.IndividualCustomerNotSupported\"  hatası , kurumsal müşteri özelinde düzenli ödeme talimatı rızası isteği yapıldığında HHS tarafından  \"TR.OHVPS.Business.CorporateCustomerNotSupported\"  hatası dönülür. \n HHS; YÖS API ile alınan ÖBHS bilgilerinin içerisinde yer alan yönlendirme adresleri ile düzenli ödeme emri rızası nesnesi request mesajında paylaşılan adreslerin uyumlu olup olmadığının kontrollerini yapar. (Zorunlu) Kontrollere istinaden hata oluşması durumunda  \"TR.OHVPS.Business.TPPRedirectionAddressMismatch\"  hatası dönülür. \n Tek seferlik ödeme işlemlerinde (gönderen kimlik bilgilerinin boş olduğu durumda) ve işyeri ödemelerinde düzenli ödeme emri rızası başlatılmamalıdır. YÖS tarafından başlatılan düzenli ödeme emri rızası işleminde bu gönderen kimlik boş olması ve/veya işyeri ödeme bilgilerinin iletilmesi durumunda  TR.OHVPS.Resource.OneTimePaymentNotSupport  hatası dönülür. \n HHS; kimlik bilgileri nesnesinde yer alan kimlik bilgileri ile ÖHK’nın HHS müşterisi olup olmadığının kontrollerini yapar. Bu kontrol hem bireysel hem de kurumsal ÖHK’lar için yapılmalıdır.  (Koşullu Zorunlu) Kontrollere istinaden hata oluşması durumunda  \"TR.OHVPS.Business.CustomerNotFound\"  hatası dönülür. \n Düzenli Ödeme Emri Başlatma Hizmeti rıza isteğinde bulunan ÖHK’nın “Açık Bankacılık Kanal Yetki” tanımı yok ise  \"TR.OHVPS.Business.OpenBankingChannelClosed\"  hatası dönülür. HHS insiyatifinde olup HHS bu kontrolü GKD sonrası gerçekleştirebilir. \n HHS \"gkd\" nesnesi için alan kontrollerini gerçekleştirir. \"yetYntm\" = \"A\" gönderilmiş ise \"ayrikGkd\" nesnesinin dolu gönderilmesi zorunludur. Gönderilmemesi durumunda HHS tarafından  \"TR.OHVPS.Resource.InvalidFormat\"  hatası dönülür. \n Ayrık GKD desteklemeyen HHS'ye Ayrık GKD yöntemiyle rıza başlatma isteği yapılması durumunda HHS tarafından  \"TR.OHVPS.Business.DecoupledAuthenticationNotSupported\"  hatası dönülür. YÖS ilgili işlemi “Yönlendirmeli” akışa çekip süreci ilerletebilir. \n Ayrık GKD ile başlatılan rıza akışlarında HHS, YÖS'ün AYRIK_GKD_BASARILI ve AYRIK_GKD_BASARISIZ olay tipleri için olay aboneliğinin varlığını kontrol eder. YÖS iki olay tipine de abone olmak zorundadır. Eğer olay aboneliği yoksa HHS tarafından  \"TR.OHVPS.Business.EventSubscriptionNotFound\"  hatası dönülür. \n Rıza başlatma akışı içerisinde kimlik bilgisinin, ÖHK'ya ait kimlik verisi(kmlk.kmlkVrs) ile ayrık GKD içerisinde yer alan OHK Tanım Değer alanı (ayrikGkd.ohkTanimDeger) birebir aynı olmalıdır. Aynı olmadığı durumda HHS tarafından  \"TR.OHVPS.Business.CustomerInfoMismatch\"  hatası dönülür. \n HHS tarafında ÖHK'nın mobil uygulaması bulunmaması durumu tespit edilebildiği durumda Ayrık GKD ile başlatılan rıza akışlarında HHS tarafından  \"TR.OHVPS.Business.CustomerMobileApplicationNotFound\"  hatası dönülür. YÖS ilgili işlemi “Yönlendirmeli” akışa çekip süreci ilerletebilir. \n HHS kimlik bilgisi ile gönderen ünvanının uyumlu olduğunu kontrol eder. HHS'ler EFT/FAST işlemlerinde kabul ettikleri kontrol kriterleri ile işleme izin verebilirler. (Zorunlu) Kontrollere istinaden hata oluşması durumunda  \"TR.OHVPS.Business.IncorrectSenderTitle\"  hatası dönülür. \n Gönderen Hesap Numarası ÖBHS tarafından iletildiği durumda;\n \n IBAN’ın doğruluğu (kontrol basamağı doğrulaması) kontrol edilir. Kontrollere istinaden hata oluşması durumunda   \"TR.OHVPS.Business.InvalidAccount\"  hatası dönülür. \n IBAN içerisindeki HHS kodunun istek başlığındaki HHS kodu ile aynı olduğu (hesabın HHS’ye aitliğinin kontrolü) kontrol edilir. Kontrollere istinaden hata oluşması durumunda   \"TR.OHVPS.Business.AccountCodeMismatch\"  hatası dönülür. \n Hesap numarasının ÖHK’ya ait olduğu kontrol edilir.Kontrollere istinaden hata oluşması durumunda   \"TR.OHVPS.Business.CustomerAccountMismatch\"  hatası dönülür. \n HHS’ye özel ödeme izni verilmeyen farklı statülerin bulunması durumu kontrol edilir. (İlgili hesabın para transfer işlemine yetkisi olmaması) Kontrollere istinaden hata oluşması durumunda   \"TR.OHVPS.Business.AccountUnauthorized\"  hatası dönülür. \n HHS’de gönderen hesabın aktifliği kontrol edilir. Kontrollere istinaden hata oluşması durumunda   \"TR.OHVPS.Business.AccountInactive\"  hatası dönülür. \n \n \n Gönderen hesap numarası için, Hesap Referansı kullanılıyorsa Hesap Numarası kullanılmayabilir. Hesap referansı ile düzenli ödeme emri rızası başlatılacak ise HHS hesap referansı değeri ile ilişkilendirilmiş mevcut bir hesap bilgisi rızası var mı kontrol etmelidir. Eğer aktif bir rızası yok ise  \"TR.OHVPS.Business.ActiveConsentNotFound\"  hatası verilmelidir. \n Düzenli ödeme emri rızasında alıcı hesap bilgileri Karekod ya da Kolas ile belirlenebilir. HHS online kanallarında düzenli ödeme hizmetini Karekod ve Kolas aracılığı ile kabul ediyorsa, ÖHVPS servisleri ile de kabul etmek zorundadır. YÖS tarafından düzenli ödeme emri rızası isteği içerisinde alıcı bilgisi için karekod ya da kolas kompleks alanları yer alması durumunda , destek vermeyen HHS'ler tarafından  \"TR.OHVPS.Business.RecipientAccountTypeNotSupported\"  hatası verilmelidir. \n \n Yukarıdaki kontroller tamamlandıktan sonra HHS, DuzenliOdemeEmriRizasi oluşturduğu anda durumunu “Yetki Bekleniyor” olarak düzenler. \n Bu aşamada ÖHK’nın HHS tarafından tanımlanmış ve isteğin veri alanında gönderen hesaba (borçlandırılacak hesaba) ilişkin bir bilgisinin olması gerekmez. \nHesap bakiye kontrolünün rıza aşamasında yapılmaması gerekmektedir. Çünkü ÖHK düzenli ödeme emri gerçekleşene kadar hesabına para eklemesi yapabilir. \n POST /duzenli-odeme-emri-rizasi  isteğinin (REQUEST) gövdesinde (BODY)  “DuzenliOdemeEmriRizasiIstegi” nesnesi (Tablo) kullanılır. İstek başarıyla sonuçlanırsa HHS kaynak sunucusunda “DuzenliOdemeEmriRizasi” (Tablo) nesnesi oluşturulur. \n  BAŞARILI İSTEK: \n Tablo : “DuzenliOdemeEmriRizasiIstegi” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n HHS tarafından düzenli ödeme emri rızası oluşturulması sırasında yapılması gereken kontrol ve işlemler \n \n \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n HHS, hhsKod’un kendisine ait olduğunu ve istek başlığındaki x-aspsp-code değeri ile aynı olduğunu kontrol eder. \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n HHS, yosKod’un geçerli bir Ödeme Hizmeti Sağlayıcısı Kodu olduğunu ve istek başlığındaki x-tpp-code değeri ile aynı olduğunu kontrol eder. \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n \n > Yetkilendirme Yöntemi \n yetYntm \n AN1 \n İ \n TR.OHVPS.DataCode.GkdTur  sıralı veri türü değerlerinden birini alır. Yetkilendirme yöntemi, ÖBHS tarafından belirtilmeyebilir. \n HHS, HBHS’nin belirlediği yöntemi dikkate alarak süreci ilgili akışa uygun olarak devam ettirir. Desteklemediği yöntem için (örn: Ayrık GKD) ayrıca hata mesajı verilmelidir. \n \n \n > Yönlenme Adresi \n yonAdr \n AN1..1024 \n K \n Yönlendirmeli güçlü kimlik doğrulama için zorunlu.  YÖS’ün ileteceği adrestir.  Durum kodu(drmKod), yönlendirme adresine parametre olarak eklenmelidir. \n HHS, müşteri uygulama / tarayıcısını bu alanda belirtilen adrese yönlendirir. \n \n \n > Ayrık GKD \n ayrikGkd \n Kompleks:AyrikGkd \n K \n Ayrık güçlü kimlik doğrulama için zorunlu. \n yetYntm = A gönderilmiş ise ayrikGkd nesnesinin dolu gönderilmesi zorunludur.   HHS, YÖS'ün AYRIK_GKD_BASARILI ve AYRIK_GKD_BASARISIZ olay tipleri için olay aboneliğinin varlığını kontrol eder.  Bknz: Ayrık GKD \n \n \n >> OHK Tanım Tip \n ohkTanimTip \n AN8 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım tipleridir.  TR.OHVPS.DataCode.ohkTanimTip  sıralı veri tiplerinden birini alır. \n \n \n \n >> OHK Tanım Değer \n ohkTanimDeger \n AN1..30 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım değeridir. ohkTanimTip'i ile uyumlu değerdir. \n \n \n \n Ödeme Başlatma \n odmBsltm \n Kompleks: OdemeBaslatma \n Z \n \n \n \n \n > Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n \n >> Kimlik Türü \n kmlkTur \n AN1 \n Z \n TR.OHVPS.DataCode.KimlikTur  sıralı veri türü değerlerinden birini alır. \n Çerçeve sözleşme kapsamındaki ödemelerde kullanımı zorunludur. HHS geçerli bir Kimlik Numarası Türü olduğunu kontrol eder. Kurum adına yapılan (ticari) ödemelerde, kurum adına işlem yapan kullanıcının kimlik türünün bu alanda gönderilmesi zorunludur. \n \n \n >> Kimlik Verisi \n kmlkVrs \n AN1..30 \n Z \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır. TR.OHVPS.DataCode.KimlikTur  değerine göre uzunluk ve formatı değişir. \n Çerçeve sözleşme kapsamındaki ödemelerde kullanımı zorunludur. HHS, ÖBHS tarafından iletilmesi durumunda Kimlik Verisi üzeriden çapraz kontroller uygulamalı ve Kimlik Verisini temel alarak GKD gerçekleştirmelidir.  Pasaport numarasına ilişkin kontroller HHS'nin halihazırda kullandığı veri, akış ve tabi olduğu diğer düzenlemelerdeki işleyiş ile aynı şekilde ele alınmalıdır.  Kurum adına yapılan (ticari) ödemelerde, kurum adına işlem yapan kullanıcının kimlik türünün bu alanda gönderilmesi zorunludur. \n \n \n >> Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n Z \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür. TR.OHVPS.DataCode.KurumKimlikTur  sıralı veri türü değerlerinden birini alır. \n Kurum adına yapılan (ticari) ödemelerde kullanımı zorunludur.  HHS geçerli bir Kurum Kimlik Numarası Türü olduğunu kontrol eder. \n \n \n >> Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n Z \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.   TR.OHVPS.DataCode.KurumKimlikTur  değerine göre uzunluk ve formatı değişir. \n Kurum adına yapılan (ticari) ödemelerde kullanımı zorunludur.  HHS, ÖBHS tarafından iletilmesi durumunda Kurum Kimlik Verisi üzeriden çapraz kontroller uygulamalıdır. \n \n \n >> Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur  sıralı veri türü değerlerinden birini alır  (B: Bireysel, K:Kurumsal) \n Kurum adına yapılan ödemelerde K değerini alır. Kurum Kimlik Türü ve Kurum Kimlik Verisi alanlarının girilmiş olduğu çapraz olarak kontrol edilir. \n \n \n > Gönderen \n gon \n Kompleks:Hesap \n İ \n \n \n \n \n >> Ünvan \n unv \n AN3..140 \n Z \n Gönderenin ünvanıdır.  HHS, bu bilgiyi ÖBHS sisteminden gelen veri yerine FAST’a iletirken kendi sisteminden alabilir. \n HHS’nin bu veri ile kendi sistemlerindeki verinin farklı olması ve Kimlik Numarası ile eşleşmemesi durumunda düzenli ödeme emri başlatma isteği reddedilir.  ÖBHS verisi ile HHS verisinin farklılaşması durumunun ise risk değerlendirme sistemlerine girdi olarak kullanması tavsiye edilir. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n İ \n ÖBHS'nin ön yüzünden daha önce kayıt altına alınmış hesaplar arasından seçtirdiği veya müşteriye girdiği IBAN’dır.  ÖBHS tarafından iletilmediği durumda, gönderen hesap bilgisini müşteri tarafından HHS’nin dijital kanalında GKD sonrasında seçilebilir. Bu amaçla ÖBHS arayüzünde HHS seçtirilmelidir.  Hesap Referansı kullanılıyorsa Hesap Numarası kullanılmayabilir. Hesap referansı ile düzenli ödeme emri rızası başlatılacak ise HHS hesap referansı değeri ile ilişkilendirilmiş mevcut bir hesap bilgisi rızası var mı kontrol etmelidir.   Ödeme Sistemine doğrudan katılımcı olmayan ÖHS'ler müşterilerine IBAN sunmadıkları için hspRef üzerinden ödeme başlatabilirler. Bu durumda hesap numarası boş olacaktır. \n ÖBHS tarafından iletildiği durumda; IBAN içerisindeki HHS kodunun istek başlığındaki HHS kodu ile aynı olduğu (hesabın HHS’ye aitliğinin kontrolü), IBAN’ın doğruluğu (kontrol basamağı doğrulaması), Hesap numarasının ÖHK’ya ait olduğu, HHS’ye özel ödeme izni verilmeyen farklı statülerin bulunması durumu kontrol edilir. \n \n \n >> Hesap Referansı \n hspRef \n AN5..40 \n İ \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid). YÖS bazında farklılaşması gerekmez.  ÖBHS’nin aynı zamanda HBHS olduğu durumda müşteri rızası tesis edilmiş bir hesabın referansı üzerinden de ödeme başaltılabilir.  Hesap Numarası kullanılıyorsa Hesap Referansı kullanılmayabilir.   Ödeme Sistemine doğrudan katılımcı olmayan HHS'ler müşterilerine IBAN sunmadıkları için hspRef üzerinden ödeme başlatabilirler. Bu durumda hesap numarası boş olacaktır. \n HspRef'e bağlı IBAN değiştiğinde yeni IBAN'ın da ilgili HspRef ile ilişkilendirilmesi beklenmektedir. Bu durumda, HBHS, HspRef ile sorguya geldiğinde HHS'nin yeni IBAN ve hesap hareketlerini dönebilmesi mümkün olacaktır. HspRef’in, IBAN değiştiğinde değiştirilmemesi tavsiye edilmektedir. \n \n \n > Alıcı \n alc \n Kompleks:Hesap \n Z \n \n \n \n \n >> Ünvan \n unv \n AN3..140 \n K \n Kolay Adres Sistemi  kullanılmıyorsa zorunludur.  Alıcının ünvanıdır. ÖBHS ekranlarından girişi yapılabileceği gibi ÖBHS’nin kayıtlı alıcılarından yapılan seçimle de doldurup gönderebildiği bilgi olabilir.  FAST-TR Karekod Veri Organizasyonunda;  İşyeri tarafından sunulan uzun karekod yapısının  59:  alanında tanımlı İşyeri adı alanıdır, Kişiden Kişiye Ödeme Karekod Yapısının  07:  alanında tanımlı    Ödeme Alıcısının Adı ve Soyadı  alanıdır. \n \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n K \n Alıcının Hesap Numarası (IBAN)  alanıdır.   Kolay Adres Sistemi  kullanılmıyorsa zorunludur.  Karekod akışında, FAST Karekod Veri Organizasyonundaki  30-01:  alanında tanımlı İş Yeri IBAN verisi kullanılır.  Alıcının birden fazla hesabının kullanılabilir olduğu durumlarda (özellikle işyeri ödemelerinde HHS nezdindeki hesap (on-us havale akışı) tercih edilmelidir. \n HHS (Gönderen Katılımcı) tarafından IBAN doğrulaması (kontrol basamağı doğrulaması) yapılır. \n \n \n >> Kolay Adres \n kolas \n Kompleks:Kolas \n K \n Talimatın gerçekleşeceği ana kadar KOLAS tanımınında değişiklik olabileceği için,  KOLAS ile yapılan düzenli ödeme emri işlemleri, talimatın verildiği anda çözülen IBAN'a yapılacaktır. \n Kolas ile düzenli ödeme emri hizmeti desteklenmiyorsa; HHS tarafından hata dönülmelidir. \n \n \n >>> Kolas Türü \n kolasTur \n AN1 \n Z \n TR.OHVPS.DataCode.KolasTur  sıralı veri türü değerlerinden birini alır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n HHS (Gönderen FAST katılımcısı) tarafından KOLAS Servisine yapılan sorguda girdi olarak kullanılır. \n \n \n >>> Kolas Değeri \n kolasDgr \n AN7..50 \n Z \n Müşterinin eklediği, HHS (FAST katılımcısı) tarafından doğrulanmış Kolay Adres değeridir. Alabileceği değerler BKM “Kolay Adresleme Sistemi Uygulama Kuralları” belgesinde tanımlıdır.  Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n HHS (Gönderen FAST katılımcısı) tarafından KOLAS Servisine yapılan sorguda girdi olarak kullanılır. \n \n \n > Karekod \n kkod \n Kompleks:Karekod \n K \n Karekod ile yapılan düzenli işlemler, talimatın verildiği anda çözülen IBAN'a yapılacaktır. \n Karekod ile düzenli ödeme emri hizmeti desteklenmiyorsa; HHS tarafından hata dönülmelidir. \n \n \n >> Akış Türü \n aksTur \n AN2 \n Z \n TR.OHVPS.DataCode.KareKodAksTur  sıralı veri değerlerinden birini alır. Kolay Adresi Sistemi ile birlikte kullanılmaz. \n \n \n \n >> Referansı \n kkodRef \n AN1..12 \n K \n Karekod referans numarasını  gösterir. Okunan karekodda referans değeri varsa kullanılması zorunludur.  Karekod ilke ve kurallar belgesinde tanımlandığı şekilde kullanılması gerekmektedir.  Kolay Adresi Sistemi ile birlikte kullanılmaz. \n \n \n \n >> Üretici Kodu \n kkodUrtcKod \n AN4 \n Z \n Karekod üreticisinin kodu.  Ödeme Hizmeti Sağlayıcıları ve TCMB tarafından uygun görülen ödeme sistemi işleticisi TR Karekod üretebilmek için BKM’ye kayıt başvurusu yaparak karekod üretici kodu alabileceklerdir. Bankalar EFT kodlarını kullanacak olup ayrıca kayıt yaptırmalarına gerek bulunmamaktadır. 4 haneden kısa değerlerin sol tarafı ’0’ karakteri ile tamamlanmalıdır. \n \n \n \n > Ödeme Ayrıntıları \n odmAyr \n Kompleks: OdemeAyrintilari \n Z \n \n \n \n \n >> Ödeme Kaynağı \n odmKynk \n AN1 \n Z \n Ödemenin başlatıldığı kaynağı belirtir.  TR.OHVPS.DataCode.OdemeKaynak  sıralı veri veri değerlerinden “O” değeri atanarak iletilmelidir. “O” değeri “Açık bankacılık aracılığı ile gönderilen ödemelerde kullanılır.” anlamını taşımaktadır. \n HHS, YÖS'ün API deseninde \"O\" kodunu ilettiğini kontrol eder. \n \n \n >> Ödeme Amacı \n odmAmc \n AN2 \n Z \n TR.OHVPS.DataCode.OdemeAmaci  sıralı veri değerlerinden birini alır. Karekod akışında, FAST Karekod Veri Organizasyonundaki 62-08: alanında tanımlı Ödeme Amacı verisi kullanılır. \n HHS geçerli bir Ödeme Amacı kodu olduğunu kontrol eder. \n \n \n >> Referans Bilgisi \n refBlg \n AN1..140 \n K \n Ödemeye özel  Referans Bilgisi  alanıdır. Karekod işlemi değil ise zorunludur.  -\tKişiden kişiye fon aktarımlarında: Gün içerisinde ÖHK özelinde, her işleme özel biricik olarak oluşturulan referans bilgisidir.  Karekod P2P akışı için referans bilgisi (Karekod referans numarası değil, işleme özel üretilecek referans bilgisidir.) YÖS tarafından atanacaktır.   -\tE-ticaret işlemlerinde sipariş/takip numarası/müşteri/abone numarası  -\tİşyeri Ödemesi Karekod akışında, FAST Karekod Veri Organizasyonundaki  -\t62-01: alanında tanımlı Fatura Numarası   -\t62-06: alanında tanımlı Müşteri Numarası   verilerinden biri kullanılır. \n YÖS bu değeri ÖHK’yı HHS’ye yönlendirmeden önceki ekranda göstermeli, ve HHS bu değeri GKD için kullandığı önyüzünde “işlem doğrulama kodunun” bir unsuru olarak yine ÖHK’ya göstermelidir. \n \n \n >> Açıklama \n odmAcklm \n AN1..200 \n İ \n ÖBHS’nin ÖHK’dan aldığı ya da kendisinin atadığı işlem açıklaması bilgisi.  FAST/PÖS sistemi üzerinden yapılan ödemeler için açıklama bilgisi girilirse boşluk karakteri girilerek geçilemez. En az bir alfasayısal karakter girilmesi zorunludur. \n  BAŞARILI YANIT: \n POST işleminin RESPONSE gövdesini (BODY) oluşturan “DuzenliOdemeEmriRizasi” nesnesi Tablo’da parametrelerden oluşur: \n Tablo : “DuzenliOdemeEmriRizasi” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n \n \n \n \n Riza Bilgileri \n rzBlg \n Kompleks: RizaBilgileri \n Z \n \n \n \n > Rıza No \n rizaNo \n AN1..128 \n Z \n DuzenliOdemeEmriRızasi nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n > Oluşturma Zamanı \n olusZmn \n ISODateTime \n Z \n DuzenliOdemeEmriRizasi nesnesinin oluşturulma zamanı \n \n \n > Güncellenme Zamanı \n gnclZmn \n ISODateTime \n Z \n DuzenliOdemeEmriRizasi nesnesinin güncellenme zamanı \n \n \n > Rıza Durumu \n rizaDrm \n AN1 \n Z \n TR.OHVPS.DataCode.RizaDurumu  sıralı veri tipini değerlerinden birini alır. \n \n \n > Rıza Iptal Detay Kodu \n rizaIptDtyKod \n AN2 \n K \n Rıza durumunun iptal olduğu durumda zorunludur. Alabileceği değerler 4. Bölümde detaylandırılmıştır. \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n > Yetkilendirme Yöntemi \n yetYntm \n AN1 \n Z \n TR.OHVPS.DataCode.GkdTur  sıralı veri türü değerlerinden birini alır.  HHS, ÖBHS’nin belirlediği yöntemi dikkate alarak kendi belirlediği yöntemi kullanır. \n \n \n > Yönlenme Adresi \n yonAdr \n AN1..1024 \n K \n Yönlendirmeli güçlü kimlik doğrulama için zorunlu. HHS, müşteri uygulama / tarayıcısını yönlendirmeli akışta bu alanda belirtilen YÖS adresine yönlendirir. \n \n \n > Ayrık GKD \n ayrikGkd \n Kompleks:AyrikGkd \n K \n Ayrık güçlü kimlik doğrulama için zorunlu. \n \n \n >> OHK Tanım Tip \n ohkTanimTip \n AN8 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım tipleridir. İstek içerisindeki veri değiştirilmeden iletilir. \n \n \n >> OHK Tanım Değer \n ohkTanimDeger \n AN1..30 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım değeridir. ohkTanimTip'i ile uyumlu değerdir.  İstek içerisindeki veri değiştirilmeden iletilir. \n \n \n > HHS Yönlenme Adresi \n hhsYonAdr \n AN1..1024 \n K \n Yönlendirmeli akış türünde GKD doğrulama bilgilerinin girilebilmesi için uygulamadan açılacak yönlendirme sayfasının adresi. Ayrık GKD akışında bu alan dönülmemelidir. \n \n \n > Yetkilendirme Tamamlanma Zamanı \n yetTmmZmn \n ISODateTime \n Z \n Yetkilendirme akışının tamamlanması gereken son zamanı gösterir.   HHS tarafından maksimum 5 dk içinde işlem tamamlanacak şekil zaman damgası oluşturulur. Zaman aşımı olduğunda HHS’nin GKD’ye izin vermeyecek şekilde hata mesajı vermesi gerekmektedir.  Rıza durumu Yetkilendirildi statüsüne geçene kadarki süredir. \n \n \n Ödeme Başlatma \n odmBsltm \n Kompleks: OdemeBaslatma \n Z \n \n \n \n > Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n >> Kimlik Türü \n kmlkTur \n AN1 \n Z \n TR.OHVPS.DataCode.KimlikTur  sıralı veri türü değerlerinden birini alır. \n \n \n >> Kimlik Verisi \n kmlkVrs \n AN1..30 \n Z \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır. TR.OHVPS.DataCode.KimlikTur  değerine göre uzunluk ve formatı değişir. \n \n \n >> Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n Z \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür. TR.OHVPS.DataCode.KurumKimlikTur  sıralı veri türü değerlerinden birini alır. \n \n \n >> Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n Z \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.   TR.OHVPS.DataCode.KurumKimlikTur  değerine göre uzunluk ve formatı değişir. \n \n \n >> Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur  sıralı veri türü değerlerinden birini alır  (B: Bireysel, K:Kurumsal) \n \n \n > Gönderen \n gon \n Kompleks:Hesap \n Z \n \n \n \n >> Ünvan \n unv \n AN3..140 \n Z \n Gönderenin ünvanıdır.  HHS, bu bilgiyi ÖBHS sisteminden gelen veri yerine FAST’a iletirken kendi sisteminden alabilir.   Tek seferlik ödeme dışında YÖS'ün gönderen ünvanını göndermesi zorunludur. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n İ \n ÖBHS'nin ön yüzünden daha önce kayıt altına alınmış hesaplar arasından seçtirdiği veya müşteriye girdiği IBAN’dır.  ÖBHS tarafından iletilmediği durumda, gönderen hesap bilgisini müşteri tarafından HHS’nin dijital kanalında GKD sonrasında seçilebilir. Bu amaçla ÖBHS arayüzünde HHS seçtirilmelidir.   GKD sonrası HHS ekranında seçilen Hesap Numarası POST işleminin yanıtında dönülemez ancak isteğe bağlı GET sorgusu ile dönülebilir.    Hesap Referansı kullanılıyorsa Hesap Numarası kullanılmayabilir.   Ödeme Sistemine doğrudan katılımcı olmayan ÖHS'ler müşterilerine IBAN sunmadıkları için hspRef üzerinden ödeme başlatabilirler. Bu durumda hesap numarası boş olacaktır. \n \n \n >> Hesap Referansı \n hspRef \n AN5..40 \n İ \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid). YÖS bazında farklılaşması gerekmez.  ÖBHS’nin aynı zamanda HBHS olduğu durumda müşteri rızası tesis edilmiş bir hesabın referansı üzerinden de ödeme başaltılabilir.   GKD sonrası HHS ekranında seçilen Hesap Referansı POST işleminin yanıtında dönülemez ancak isteğe bağlı GET sorgusu ile dönülebilir.    Hesap Numarası kullanılıyorsa Hesap Referansı kullanılmayabilir.    Ödeme Sistemine doğrudan katılımcı olmayan ÖHS'ler müşterilerine IBAN sunmadıkları için hspRef üzerinden ödeme başlatabilirler. Bu durumda hesap numarası boş olacaktır. \n \n \n > Alıcı \n alc \n Kompleks:Hesap \n Z \n \n \n \n >> Ünvan \n unv \n AN3..140 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen adres kaydı yaptırmış olan alıcının maskeli ad-soyadı veya maskeli ticari ünvan bilgisidir. Kolas’tan dönen “account owner” alanı kullanılmalıdır. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen ünvan bilgisidir. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n Z \n ÖBHS tarafından istek mesajında iletilip doğrulanan veya Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen alıcı maskeli IBAN bilgisidir. \n \n \n >> Kolay Adres \n kolas \n Kompleks:Kolas \n K \n \n \n \n >>> Kolas Türü \n kolasTur \n AN1 \n Z \n TR.OHVPS.DataCode.KolasTur  sıralı veri türü değerlerinden birini alır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n \n \n >>> Kolas Değeri \n kolasDgr \n AN7..50 \n Z \n Müşterinin eklediği, HHS (FAST katılımcısı) tarafından doğrulanmış Kolay Adres değeridir. Alabileceği değerler BKM “Kolay Adresleme Sistemi Uygulama Kuralları” belgesinde tanımlıdır.  Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n \n \n >>> Kolas Referans Numarası \n kolasRefNo \n N12 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı KOLAS tarafından ilgili sorguya özel olarak üretilmiş referans numarasıdır. \n \n \n >>> Kolas Hesap Türü \n kolasHspTur \n AN1 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı hesap türü bilgisidir:   TR.OHVPS.DataCode.KolasHspTur  sıralı veri değerlerinden birini alır. \n \n \n > Karekod \n kkod \n Kompleks:Karekod \n K \n \n \n \n >> Akış Türü \n aksTur \n AN2 \n Z \n TR.OHVPS.DataCode.KareKodAksTur  sıralı veri değerlerinden birini alır. Kolay Adresi Sistemi ile birlikte kullanılmaz. \n \n \n >> Referansı \n kkodRef \n AN1..12 \n K \n Karekod referans numarasını  gösterir. \n \n \n >> Üretici Kodu \n kkodUrtcKod \n AN4 \n Z \n Karekod üreticisinin kodu.  Ödeme Hizmeti Sağlayıcıları ve TCMB tarafından uygun görülen ödeme sistemi işleticisi TR Karekod üretebilmek için BKM’ye kayıt başvurusu yaparak karekod üretici kodu alabileceklerdir. Bankalar EFT kodlarını kullanacak olup ayrıca kayıt yaptırmalarına gerek bulunmamaktadır. 4 haneden kısa değerlerin sol tarafı ’0’ karakteri ile tamamlanmalıdır. \n \n \n > Ödeme Ayrıntıları \n odmAyr \n Kompleks: OdemeAyrintilari \n Z \n \n \n \n >> Ödeme Kaynağı \n odmKynk \n AN1 \n Z \n Ödemenin başlatıldığı kaynağı belirtir.  TR.OHVPS.DataCode.OdemeKaynak  sıralı veri değerlerinden “O” değerini alır. “O” değeri “Açık bankacılık aracılığı ile gönderilen ödemelerde kullanılır.” anlamını taşımaktadır. \n \n \n >> Ödeme Amacı \n odmAmc \n AN2 \n Z \n TR.OHVPS.DataCode.OdemeAmaci  sıralı veri değerlerinden birini alır. Karekod akışında, FAST Karekod Veri Organizasyonundaki 62-08: alanında tanımlı Ödeme Amacı verisi kullanılır. \n \n \n >> Referans Bilgisi \n refBlg \n AN1..140 \n K \n Ödemeye özel  Referans Bilgisi  alanıdır. Karekod işlemi değil ise zorunludur.  -\tKişiden kişiye fon aktarımlarda: Gün içerisinde ÖHK özelinde, her işleme özel biricik olarak oluşturulan referans bilgisidir.  Karekod P2P akışı için referans bilgisi (Karekod referans numarası değil, işleme özel üretilecek referans bilgisidir.) YÖS tarafından atanacaktır.  -\tE-ticaret işlemlerinde sipariş/takip numarası/müşteri/abone numarası  - İşyeri Ödemesi Karekod akışında, FAST Karekod Veri Organizasyonundaki  -\t62-01: alanında tanımlı Fatura Numarası   -\t62-06: alanında tanımlı Müşteri Numarası   verilerinden biri kullanılır. \n \n \n >> Açıklama \n odmAcklm \n AN1..200 \n İ \n ÖBHS’nin ÖHK’dan aldığı ya da kendisinin atadığı işlem açıklaması bilgisi.  FAST/PÖS sistemi üzerinden yapılan ödemeler için açıklama bilgisi girilirse boşluk karakteri girilerek geçilemez. En az bir alfasayısal karakter girilmesi zorunludur. \n 8.3.\tADIM 2- Düzenli Ödeme Emri Rızasının Yetkilendirilmesi \n   \n Şekil : Düzenli Ödeme Emri Rızasının Yetkilendirilmesi \n ÖBHS, ÖHK’nın düzenli ödeme emrini yetkilendirmesi isteğini iletir. Ödeme emrinin yetkilendirilmesi, HHS tarafından gerçekleştirilen Yönlendirme veya Ayrık GKD yöntemiyle yapılır. \n \n \n Yönlendirmeli doğrulama akışında , ÖBHS ÖHK’yı HHS’ye yönlendirir. \n \n ÖBHS tarafından yönlendirme, bir önceki adımdaki RizaNo’yu içerir. \n Yönlendirmenin RizaNo’yu içermesi sayesinde, HHS hangi ödeme emriyle ilişkili olarak yönlendirme yapıldığını ilişkilendirebilir. \n HHS, ÖHK için GKD sürecini işletir. \n \n ÖHK’yı doğrularsa, \n \n ÖHK -bir önceki adımda seçmediyse- borçlu hesabını seçer. \n HHS, düzenli ödeme emri rıza kaynağının durumunu “Yetkilendirildi” olarak günceller. \n HHS, ÖHK’yı “olumlu yönlendirme akışı” ile ÖBHS tarafından tanımlanan yönlendirme adresine yönlendirir: \n \n \n \n yonAdr?rizaDrm=Y&yetKod=xx&rizaNo=yy&rizaTip=D&drmKod=zzz\n \n ÖHK’yı doğrulayamazsa, \n1. HHS, düzenli ödeme emri rıza kaynağının durumunu “Yetki İptal” olarak günceller. \n2. HHS, ÖHK’yı “olumsuz yönlendirme akışı” ile ÖBHS tarafından tanımlanan yönlendirme adresine yönlendirir: \n yonAdr?rizaDrm=I&rizaNo=yy&rizaTip=D&drmKod=zzz\n \n HHS tarafında oluşabilecek bir hata durumunun YÖS’e aktarılması gerektiği durumlar olabilir. Bu durumda yonlendirme adresinde hata kodu parametresi zorunlu olarak iletilmelidir. \nHata açıklamalarının neler olabileceği ve YÖS’ün kendi uygulamasında bu hatayı ne şekilde göstereceği aşağıda tariflenmiştir. \n yonAdr?rizaDrm=I&rizaNo=yy&rizaTip=D&rizaIptDtyKod=11&drmKod=zzz\n \n URL’de iletilen “Rıza İptal Detay Kodu” Rıza durumları bölümünde (4. Bölüm) belirtilen hata kodları ile aynı olacak şekilde tasarlanmıştır. GKD sırasında yapılması gereken kontroller 5.3 bölümünde detaylandırılmıştır. \n \n Ayrık doğrulama akışında , HHS, ÖHK’nın düzenli ödeme emri rızasını başlattığı uygulamadan farklı olabilecek bir “doğrulama” uygulamasında işlemi doğrulamasını ister.\n \n Ayrık akış ÖBHS’nin farklı bir kanal kullanarak yetkilendirme isteği göndermesiyle başlatılır. \n Bu yetkilendirme isteği, yetkilendirilecek ödeme emri rızasının eşleştirileceği ÖHK’nın bulunması için ilgili veriyi taşır. \n HHS, ÖHK’yı doğrular. \n ÖHK, bir önceki adımda seçmediyse- borçlandırılacak hesabını seçer. \n HHS, düzenli ödeme emri rıza kaynağının durumunu “Yetkilendirildi” olarak günceller. \n \n \n \n Başarılı GKD sonrasında (rizaDrm=’Y’) ilgili rıza nesnesi için (belirli bir rizaNo) yetkilendirme kodunun (yetKod) alınmasının ardından erişim belirteci erişim adresine POST çağrısı yapılarak yetkilendirme kodu karşılığında erişim belirteci ve yenileme belirteci alınır. POST /erişim-belirteci erişim noktası EK-3’te açıklanmıştır. \n Erişim belirteci alındıktan sonra; HHS, düzenli ödeme emri rıza kaynağının durumunu “Yetki Kullanıldı” olarak günceller. \n 8.4.\tADIM 2.1 – Düzenli Ödeme Emri Rızasının Sorgulanması (isteğe bağlı) \n   \n Şekil 7: “DuzenliOdemeEmriRizasi” nesnesinin sorgulanması (isteğe bağlı) \n GKD işleminin başarıyla tamamlanıp Düzenli Ödeme Emri Rızasının yetkilendirilmesi esnasında, gönderen hesap seçiminin HHS ekranında yapıldığı durumlar olabilir. Bu durumlarda düzenli ödeme emri isteğinde gönderen hesap bilgilerinin zorunlu olması nedeniyle,  DuzenliOdemeEmriRizasi  nesnesi sorgulanarak bu bilgiler alınmalıdır. HHS, “ ADIM 2 -Düzenli Ödeme Emri Rızasının Yetkilendirilmesi ” akışında ÖHK’nın hesapları arasında seçim yapmasını ve seçilen hesap bilgisinin  DuzenliOdemeEmriRizasi  nesnesine işler. \n \n Sorgulama yapılan Düzenli Ödeme Emri HHS tarafında bulunmuyor ise  \"TR.OHVPS.Resource.NotFound\"  hatası dönülür. \n \n GET /duzenli-odeme-emri-rizasi/{RizaNo} \n ÖBHS, mevcut durumunu kontrol etmek için, oluşturulan bir  DuzenliOdemeEmriRizasi  kaynağının durumunu isteğe bağlı olarak alabilir. \n Durum \n DuzenliOdemeEmriRizasi  kaynağı için kullanılabilecek durum göstergeleri şu şekildedir: \n \n Yetki Bekleniyor \n Yetkilendirildi \n Yetki Kullanıldı \n Yetki Ödeme Emrine/Talimata Dönüştü \n Yetki Sonlandırıldı \n Yetki İptal \n \n Düzenli Ödeme emri rıza durum değişiklikleri 4.2 bölümünde detaylandırılmıştır. \n BAŞARILI YANIT: \n GET /duzenli-odeme-emri-rizasi/{rizaNo}  yanıtının (RESPONSE) gövdesinde (BODY)  “DuzenliOdemeEmriRizasiİstegi” nesnesi kullanılır. İstek başarıyla sonuçlanırsa HHS kaynak sunucusunda Tablo-8’de yer alan parametreleri içeren “DuzenliOdemeEmriRizasi” oluşturulur. \n Gönderen Hesap Bilgisinin, ADIM 2 (İleri Tarihli Ödeme Emri Rızasının Yetkilendirilmesi) sonrasında HHS ekranından seçildiği akışta “DuzenliOdemeEmriRizasi” nesnesi güncellenir ve ÖBHS  GET /duzenli-odeme-emri-rizasi/{rizaNo}  isteği yaparak güncel gönderen hesap bilgisi bilgisini de içeren “DuzenliOdemeEmriRizasi” nesnesini çekmelidir. \n 8.5.\tADIM 3- Duzenli Ödeme Emrinin Oluşturulması \n   \n Şekil 8: Duzenli Ödeme Emrinin Oluşturulması \n POST /duzenli-odeme-emri \n ÖHK’nın Güçlü Kimlik Doğrulama ile işlemi yetkilendirmesi sonrasında, ÖBHS DuzenliOdemeEmri kaynağını oluşturur.\nDuzenli Ödeme emri (DuzenliOdemeEmri) uygun ödeme kaynağına POST isteği yapılarak başlatılır. \n \n Erişim Belirteci kontrolü yapılır. Geçerli bir Erişim Belirteci yok ise  \"TR.OHVPS.Connection.InvalidToken\"  hatası dönülür. \n HHS; istek mesajında yer alan alanların ÖHVPS API İlke ve Kuralları dökümanında belirtilen şartları sağlayacak şekilde zorunluluk, uzunluk ve içerik kontrollerini yapar. (Zorunlu) Kontrollere istinaden hata oluşması durumunda  \"TR.OHVPS.Resource.InvalidFormat\"  hatası dönülür. \n HHS, hhsKod’un kendisine ait olduğunu ve istek başlığındaki x-aspsp-code değeri ile aynı olduğunu kontrol eder. Farklı olması durumunda  ”TR.OHVPS.Connection.InvalidASPSP”  hatası dönülür. \n HHS, yosKod’un geçerli bir Ödeme Hizmeti Sağlayıcısı Kodu olduğunu ve istek başlığındaki x-tpp-code değeri ile aynı olduğunu kontrol eder. Farklı olması durumunda  ”TR.OHVPS.Connection.InvalidTPP”  hatası dönülür. \n Rıza durumu kontrol edilir.\n \n B: Yetki Bekleniyor, Y: Yetkilendirildi  ya da E: Yetki Ödeme Emrine Dönüştü ise  “TR.OHVPS.Resource.ConsentMismatch”  hatası dönülür. \n I: Rıza İptal ya da S: Yetki Sonlandırıldı ise  ”TR.OHVPS.Resource.ConsentRevoked”  hatası dönülür. \n RizaDurumu “K: Yetki Kullanıldı” ise kontrollere devam edilir. \n \n \n POST /duzenli-odeme-emri-rizasi ile POST /duzenli-odeme-emri isteklerinde istek alanların aynı olması beklenmektedir. HHS tarafından kontrolü sağlanmalıdır. Düzenli Ödeme Emri rızasında gönderilen değerlerden farklı bir değer gönderildiği durumda  “TR.OHVPS.Business.FieldMismatch”  hatası dönülür. \n \n Yukarıdaki kontroller tamamlandıktan sonra POST başarılı olursa, içerisinde tlmtNo değişkeni bulunan DuzenliOdemeEmri nesnesi ÖBHS’ye döner ve RizaDurumu değişkenin değeri “Yetki Ödeme Emrine/Talimata Dönüştü” olarak güncellenir. \n BAŞARILI İSTEK: \n Tablo 9: “DuzenliOdemeEmriIstegi” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n HHS tarafından düzenli ödeme emri oluşturulması sırasında yapılması gereken kontrol ve işlemler \n FAST A01 PÖS M01 mesaj mapping \n \n \n \n \n Riza Bilgileri \n rzBlg \n Kompleks: RizaBilgileri \n Z \n \n \n \n \n \n > Rıza No \n rizaNo \n AN1..128 \n Z \n OdemeEmriRızasi nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n \n \n > Oluşturma Zamanı \n olusZmn \n ISODateTime \n Z \n OdemeEmriRizasi nesnesinin oluşturulma zamanı \n \n \n \n \n > Rıza Durumu \n rizaDrm \n AN1 \n Z \n TR.OHVPS.DataCode.RizaDurumu  sıralı veri tipini değerlerinden birini alır. \n \n \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n HHS, hhsKod’un kendisine ait olduğunu ve istek başlığındaki x-aspsp-code değeri ile aynı olduğunu kontrol eder. \n Gönderen katılımcı kodu (yani bankanın FAST/PÖS’teki Katılımcı kodu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n HHS, yosKod’un geçerli bir Ödeme Hizmeti Sağlayıcısı Kodu olduğunu ve istek başlığındaki x-tpp-code değeri ile aynı olduğunu kontrol eder. \n YosKod \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n \n \n >Yetkilendirme Yöntemi \n yetYntm \n AN1 \n Z \n TR.OHVPS.DataCode.GkdTur  sıralı veri türü değerlerinden birini alır. \n \n \n \n \n >Yönlendirme Adresi \n yonAdr \n AN1..1024 \n K \n Yönlendirmeli güçlü kimlik doğrulama için zorunludur. HHS, müşteri uygulama / tarayıcısını yönlendirmeli akışta bu alanda belirtilen YÖS adresine yönlendirir. \n \n \n \n \n >Ayrık GKD \n ayrikGkd \n Kompleks:AyrikGkd \n K \n Ayrık güçlü kimlik doğrulama için zorunlu. \n yetYntm = A gönderilmiş ise ayrikGkd nesnesinin dolu gönderilmesi zorunludur. yetYntm = Y için bu nesne iletilmemelidir. \n \n \n \n >>OHK Tanım Tip \n ohkTanimTip \n AN8 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım tipleridir. İstek içerisindeki veri değiştirilmeden iletilir. \n \n \n \n \n >>OHK Tanım Değer \n ohkTanimDeger \n AN1..30 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım değeridir. ohkTanimTip'i ile uyumlu değerdir.  İstek içerisindeki veri değiştirilmeden iletilir. \n \n \n \n \n >HHS Yönlenme Adresi \n hhsYonAdr \n AN1..1024 \n K \n Yönlendirmeli akış türünde GKD doğrulama bilgilerinin girilebilmesi için uygulamadan açılacak yönlendirme sayfasının adresi. Ayrık GKD akışında bu alan dönülmemelidir. \n \n \n \n \n >Yetkilendirme Tamamlanma Zamanı \n yetTmmZmn \n ISODateTime \n Z \n Yetkilendirme akışının tamamlanması gereken son zamanı gösterir.   Rıza durumu Yetkilendirildi statüsüne geçene kadarki süredir. \n \n \n \n \n Ödeme Başlatma \n odmBsltm \n Kompleks: OdemeBaslatma \n Z \n \n \n \n \n \n > Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n \n \n >> Kimlik Türü \n kmlkTur \n AN1 \n Z \n TR.OHVPS.DataCode.KimlikTur  sıralı veri türü değerlerinden birini alır. \n Çerçeve sözleşme kapsamındaki ödemelerde kullanımı zorunludur. Duzenli Ödeme Emri Rizası Nesnesindeki Kimlik Numarası Türü verisi ile aynı olmalıdır. Kurum adına yapılan (ticari) ödemelerde, kurum adına işlem yapan kullanıcının kimlik türünün bu alanda gönderilmesi zorunludur. \n \n \n \n >> Kimlik Verisi \n kmlkVrs \n AN1..30 \n Z \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır. TR.OHVPS.DataCode.KimlikTur  değerine göre uzunluk ve formatı değişir. \n Çerçeve sözleşme kapsamındaki ödemelerde kullanımı zorunludur. HHS, ÖBHS tarafından iletilmesi durumunda Kimlik Verisi üzeriden çapraz kontroller uygulamalı ve Kimlik Verisini temel alarak GKD gerçekleştirmelidir. Duzenli Ödeme Emri Rizası Nesnesindeki Kimlik Numarası verisi ile aynı olmalıdır. Gerçek kişi tarafından yapılan ödemelerde, 1. HHS, Gönderen Adı ve Gönderen Hesap Numarasını düzenli ödeme emri isteğinde (Havale/FAST/PÖS) gönderir. - Gönderen Adı ve diğer tüm müşteri bilgileri, Kimlik Numarası üzerinden elde edillir. Pasaport numarasına ilişkin kontroller HHS'nin halihazırda kullandığı veri, akış ve tabi olduğu diğer düzenlemelerdeki işleyiş ile aynı şekilde ele alınmalıdır. Kurum adına yapılan (ticari) ödemelerde, kurum adına işlem yapan kullanıcının kimlik verisi bu alanda gönderilebilmesi zorunludur. \n GonKimN / Psp \n \n \n >> Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür. TR.OHVPS.DataCode.KurumKimlikTur  sıralı veri türü değerlerinden birini alır. \n Kurum adına yapılan (ticari) ödemelerde kullanımı zorunludur. Duzenli Ödeme Emri Rizası Nesnesindeki Kurum Kimlik Türü verisi ile aynı olmalıdır. \n \n \n \n >> Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.   TR.OHVPS.DataCode.KurumKimlikTur  değerine göre uzunluk ve formatı değişir. \n Kurum adına yapılan (ticari) ödemelerde kullanımı zorunludur. Duzenli Ödeme Emri Rizası Nesnesindeki Kurum Kimlik Verisi ile aynı olmalıdır. \n GonKimN / VKN \n \n \n >> Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur  sıralı veri türü değerlerinden birini alır  (B: Bireysel, K:Kurumsal) \n Kurum adına yapılan ödemelerde K değerini alır. Kurum Kimlik Türü ve Kurum Kimlik Verisi alanlarının giilmiş olduğu çapraz olarak kontrol edilir.  Duzenli Ödeme Emri Rizası Nesnesindeki ÖHK Türü ile aynı olmalıdır. \n \n \n \n > Gönderen \n gon \n Kompleks:Hesap \n Z \n \n \n \n \n \n >> Ünvan \n unv \n AN3..140 \n Z \n Gönderen kişinin ad soyad ya da ticari ünvan bilgisi. \n HHS ve ÖBHS verisi tutarlı olmalıdır.  ÖBHS verisi ile HHS verisinin farklılaşması durumunun ise risk değerlendirme sistemlerine girdi olarak kullanması tavsiye edilir. \n GonAd \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n K \n ÖBHS'nin ön yüzünden seçtirdiği/kullanıcıya girdiği IBAN Hesap numarası ya da Hesap Referansı alanlarından en az birinin dolu olarak gelmesi gerekmektedir. \n Duzenli Ödeme Emri Rizası Yanıtı Nesnesindeki Gönderen Hesap Numarası verisi ile aynı olmalıdır. \n GonHesN \n \n \n >> Hesap Referansı \n hspRef \n AN5..40 \n K \n ÖBHS’nin aynı zamanda HBHS olduğu durumda müşteri rızası tesis edilmiş bir hesabın referansı üzerinden de ödeme başlatılabilir. GKD sonrası HHS ekranında seçilen Hesap Referansı POST işleminin yanıtında dönülemez ancak isteğe bağlı GET sorgusu ile dönülebilir. Hesap Numarası kullanılıyorsa Hesap Referansı kullanılmayabilir.   Ödeme Sistemine doğrudan katılımcı olmayan ÖHS'ler müşterilerine IBAN sunmadıkları için hspRef üzerinden ödeme başlatabilirler. Bu durumda hesap numarası boş olacaktır. \n \n \n \n \n > Alıcı \n alc \n Kompleks:Hesap \n Z \n \n \n \n \n \n >> Ünvan \n unv \n AN3..140 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen adres kaydı yaptırmış olan alıcının maskeli ad-soyadı veya maskeli ticari ünvan bilgisidir. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen ünvan bilgisidir. \n YÖS’ten alıcı ad soyad bilgisi geliyorsa ve HHS'nin kontrolünden başarılı bir şekilde geçti ise HHS'nin tekrar alıcı ad soyad bilgisi için giriş yaptırmasına gerek bulunmamaktadır. \n AlAd \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n Z \n Alıcının Hesap Numarası alanıdır (IBAN). Kolay Adres  sorgusunda dönülen adres kaydı yaptırmış olan alıcının maskeli IBAN bilgisidir. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen IBAN bilgisidir. Karekod akışında, FAST Karekod Veri Organizasyonundaki 30-01: alanında tanımlı İş Yeri IBAN verisi kullanılır. \n Duzenli Ödeme Emri Rizası Yanıtı Nesnesindeki Alıcı Hesap Numarası verisi ile aynı olmalıdır.  Kontroller başarıyla sonuçlanırsa, bilgi FAST/PÖS AlHesN alanına doğrudan aktarır ve FAST/PÖS Alan Katılımcı Kodu (AlKK) olarak Alıcı HHS Kodu kullanılır.  KOLAS sorgusu sonucunda düzenli ödeme emrinde iletilen maskeli bilgi ile HHS’nin kendi düzenli ödeme emri rızası isteğinde tuttuğu KOLAS sorgusundan dönülen bilgi maskelenerek karşılaştırılır. Eğer aynı değilse uygun hata kodu dönülerek işlem sonlandırılır. \n AlHesN \n \n \n >> Kolay Adres \n kolas \n Kompleks:Kolas \n K \n \n \n \n \n \n >>> Kolas Türü \n kolasTur \n AN1 \n Z \n Müşterinin sorgulamak istediği Kolay Adres Tipi değeridir.  TR.OHVPS.DataCode.KolasTur  sıralı veri türü değerlerinden birini alır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n Duzenli Ödeme Emri Rizası Yanıtı Nesnesindeki Kolay Adres Tipi verisi ile aynı olmalıdır. \n \n \n \n >>> Kolas Değeri \n kolasDgr \n AN7..50 \n Z \n Müşterinin eklediği, HHS (FAST katılımcısı) tarafından doğrulanmış Kolay Adres değeridir. Alabileceği değerler BKM “Kolay Adresleme Sistemi Uygulama Kuralları” belgesinde tanımlıdır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n Duzenli Ödeme Emri Rizası Yanıtı Nesnesindeki Kolay Adres Değeri verisi ile aynı olmalıdır. \n FAST (KolasRef) \n \n \n >>> Kolas Referans Numarası \n kolasRefNo \n N12 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı KOLAS tarafından ilgili sorguya özel olarak üretilmiş referans numarasıdır. \n \n KolasRef ( hem FAST hem de PÖS için aynı) \n \n \n >>> Kolas Hesap Türü \n kolasHspTur \n AN1 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı hesap türü bilgisidir:   TR.OHVPS.DataCode.KolasHspTur  sıralı veri değerlerinden birini alır. \n \n \n \n \n > Karekod \n kkod \n Kompleks:Karekod \n K \n \n \n \n \n \n >> Akış Türü \n aksTur \n AN2 \n Z \n Karekod Akış Türü Karekod ödemesinin hangi akışla gerçekleştirildiğini gösterir.  Kolay Adresi Sistemi ile birlikte kullanılmaz.  01: FAST katılımcısından dinamik doğrulama hizmeti alınan işyeri ödemesi  02: FAST katılımcısından statik doğrulama hizmeti alınan işyeri ödemesi 03: Kişiden kişiye ödemeler \n Duzenli Ödeme Emri Rizası Nesnesindeki Kare Kod Akış Türü verisi ile aynı olmalıdır. \n FAST: KrkdAksTur \n \n \n >> Referansı \n kkodRef \n AN1..12 \n K \n Karekod referans numarasını gösterir.  Okunan karekodda referans değeri varsa kullanılması zorunludur. Kolay Adresi Sistemi ile birlikte kullanılmaz. \n Duzenli Ödeme Emri Rizası Nesnesindeki Karekod Referansı verisi ile aynı olmalıdır.  Çevrimiçi doğrulama hizmeti alınmayan statik karekodlar için Referans numarasının bulunmadığı durumlarda HHS tarafından “NONREF” ifadesi girilir. \n FAST: Karekod Referansı (KrkdRef) \n \n \n >> Üretici Kodu \n kkodUrtcKod \n AN4 \n Z \n Karekod üreticisinin kodu.  Ödeme Hizmeti Sağlayıcıları ve TCMB tarafından uygun görülen ödeme sistemi işleticisi TR Karekod üretebilmek için BKM’ye kayıt başvurusu yaparak karekod üretici kodu alabileceklerdir. Bankalar EFT kodlarını kullanacak olup ayrıca kayıt yaptırmalarına gerek bulunmamaktadır. 4 haneden kısa değerlerin sol tarafı ’0’ karakteri ile tamamlanmalıdır. \n \n \n \n \n > Ödeme Ayrıntıları \n odmAyr \n Kompleks: OdemeAyrintilari \n Z \n \n \n \n \n \n >> Ödeme Kaynağı \n odmKynk \n AN1 \n Z \n Ödemenin başlatıldığı kaynağı belirtir.  TR.OHVPS.DataCode.OdemeKaynak  sıralı veri değerlerinden “O” değeri atanarak iletilmelidir. “O” değeri “Açık bankacılık aracılığı ile gönderilen ödemelerde kullanılır.” anlamını taşımaktadır. \n Duzenli Ödeme Emri Rizası Nesnesindeki Ödeme Kaynağı verisi ile aynı olmalıdır. HHS tarafından ödeme mesajında (FAST/PÖS) aynen taşınmak durumundadır. \n FAST/PÖS: OdmKynk \n \n \n >> Ödeme Amacı \n odmAmc \n AN2 \n Z \n TR.OHVPS.DataCode.OdemeAmaci  sıralı veri değerlerinden birini alır. \n Duzenli Ödeme Emri Rizası Nesnesindeki Ödeme Amacı verisi ile aynı olmalıdır. HHS tarafından ödeme mesajında (FAST/PÖS) aynen taşınmak durumundadır. \n FAST (OdmAmc)/PÖS(OdmAmaci) \n \n \n >> Referans Bilgisi \n refBlg \n AN1..140 \n K \n Ödemeye özel  Referans Bilgisi  alanıdır. Karekod işlemi değil ise zorunludur.  -\tKişiden kişiye fon aktarımlarda: Gün içerisinde ÖHK özelinde, her işleme özel biricik olarak oluşturulan referans bilgisidir.  Karekod P2P akışı için referans bilgisi (Karekod referans numarası değil, işleme özel üretilecek referans bilgisidir.) YÖS tarafından atanacaktır.  -\tE-ticaret işlemlerinde sipariş/takip numarası/müşteri/abone numarası  -İşyeri Ödemesi Karekod akışında, FAST Karekod Veri Organizasyonundaki  -\t62-01: alanında tanımlı Fatura Numarası   -\t62-06: alanında tanımlı Müşteri Numarası   verilerinden biri kullanılır. \n Duzenli Ödeme Emri Rizası Nesnesindeki Referans Bilgisi verisi ile aynı olmalıdır. \n RefBlg (Hem FAST hem de PÖS için aynı) \n \n \n >> Açıklama \n odmAcklm \n AN1..200 \n İ \n ÖBHS’nin ÖHK’dan aldığı ya da kendisinin atadığı işlem açıklaması bilgisi.  FAST/PÖS sistemi üzerinden yapılan ödemeler için açıklama bilgisi girilirse boşluk karakteri girilerek geçilemez. En az bir alfasayısal karakter girilmesi zorunludur. \n \n FAST/PÖS Acklm \n \n \n \n BAŞARILI YANIT: \n POST işleminin RESPONSE gövdesini (BODY) oluşturan “DuzenliOdemeEmri” nesnesi Tablo-10’daki parametrelerden oluşur: \n Tablo 10: “DuzenliOdemeEmri” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n \n \n \n \n Riza Bilgileri \n rzBlg \n Kompleks: RizaBilgileri \n Z \n \n \n \n > Rıza No \n rizaNo \n AN1..128 \n Z \n OdemeEmriRızasi nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n > Oluşturma Zamanı \n olusZmn \n ISODateTime \n Z \n OdemeEmriRizasi nesnesinin oluşturulma zamanıdır. \n \n \n > Rıza Durumu \n rizaDrm \n AN1 \n Z \n TR.OHVPS.DataCode.RizaDurumu  sıralı veri tipini değerlerinden birini alır. \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n > Yetkilendirme Yöntemi \n yetYntm \n AN1 \n Z \n TR.OHVPS.DataCode.GkdTur  sıralı veri türü değerlerinden birini alır. \n \n \n > Yönlenme Adresi \n yonAdr \n AN1..1024 \n Z \n Yönlendirmeli güçlü kimlik doğrulama için zorunlu. HHS, müşteri uygulama / tarayıcısını yönlendirmeli akışta bu alanda belirtilen YÖS adresine yönlendirir. \n \n \n > Ayrık GKD \n ayrikGkd \n Kompleks:AyrikGkd \n K \n Ayrık güçlü kimlik doğrulama için zorunlu. \n \n \n >> OHK Tanım Tip \n ohkTanimTip \n AN8 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım tipleridir. İstek içerisindeki veri değiştirilmeden iletilir. \n \n \n >> OHK Tanım Değer \n ohkTanimDeger \n AN1..30 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım değeridir. ohkTanimTip'i ile uyumlu değerdir.  İstek içerisindeki veri değiştirilmeden iletilir. \n \n \n > HHS Yönlenme Adresi \n hhsYonAdr \n AN1..1024 \n K \n Yönlendirmeli akış türünde GKD doğrulama bilgilerinin girilebilmesi için uygulamadan açılacak yönlendirme sayfasının adresi. Ayrık GKD akışında bu alan dönülmemelidir. \n \n \n > Yetkilendirme Tamamlanma Zamanı \n yetTmmZmn \n ISODateTime \n Z \n Yetkilendirme akışının tamamlanması gereken son zamanı gösterir.   Rıza durumu Yetkilendirildi statüsüne geçene kadarki süredir. \n \n \n Ödeme Başlatma \n odmBsltm \n Kompleks: OdemeBaslatma \n Z \n \n \n \n > Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n >> Kimlik Türü \n kmlkTur \n AN1 \n Z \n TR.OHVPS.DataCode.KimlikTur  sıralı veri türü değerlerinden birini alır. \n \n \n >> Kimlik Verisi \n kmlkVrs \n AN1..30 \n Z \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır. TR.OHVPS.DataCode.KimlikTur  değerine göre uzunluk ve formatı değişir. \n \n \n >> Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür. TR.OHVPS.DataCode.KurumKimlikTur  sıralı veri türü değerlerinden birini alır. \n \n \n >> Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.   TR.OHVPS.DataCode.KurumKimlikTur  değerine göre uzunluk ve formatı değişir. \n \n \n >> Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur  sıralı veri türü değerlerinden birini alır  (B: Bireysel, K:Kurumsal) \n \n \n > Gönderen \n gon \n Kompleks:Hesap \n Z \n \n \n \n >> Ünvan \n unv \n AN3..140 \n Z \n Gönderen kişinin ad soyad ya da ticari ünvan bilgisi. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n K \n ÖBHS tarafından iletilip doğrulanan veya HHS ekranında seçilen Gönderen Hesap Numarası dönülür. \n \n \n >> Hesap Referansı \n hspRef \n AN5..40 \n K \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid)  YÖS bazında farklılaşması gerekmez. ÖBHS’nin aynı zamanda HBHS olduğu durumda müşteri rızası tesis edilmiş bir hesabın referansı üzerinden de ödeme başaltılabilir. GKD sonrası HHS ekranında seçilen Hesap Referansı POST işleminin yanıtında dönülemez ancak isteğe bağlı GET sorgusu ile dönülebilir. Hesap Numarası kullanılıyorsa Hesap Referansı kullanılmayabilir.  Ödeme Sistemine doğrudan katılımcı olmayan ÖHS'ler müşterilerine IBAN sunmadıkları için hspRef üzerinden ödeme başlatabilirler. Bu durumda hesap numarası boş olacaktır. \n \n \n > Alıcı \n alc \n Kompleks:Hesap \n Z \n \n \n \n >> Ünvan \n unv \n AN3..140 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen adres kaydı yaptırmış olan alıcının maskeli ad-soyadı veya maskeli ticari ünvan bilgisidir. Kolas’tan dönen “account owner” alanı kullanılmalıdır. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen ünvan bilgisidir. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n Z \n Alıcının Hesap Numarası alanıdır (IBAN). Kolay Adres  sorgusunda dönülen adres kaydı yaptırmış olan alıcının maskeli IBAN bilgisidir. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen IBAN bilgisidir. Karekod akışında, FAST Karekod Veri Organizasyonundaki 30-01: alanında tanımlı İş Yeri IBAN verisi kullanılır. \n \n \n >> Kolay Adres \n kolas \n Kompleks:Kolas \n K \n \n \n \n >>> Kolas Türü \n kolasTur \n AN1 \n Z \n Müşterinin sorgulamak istediği Kolay Adres Tipi değeridir.  TR.OHVPS.DataCode.KolasTur  sıralı veri türü değerlerinden birini alır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n \n \n >>> Kolas Değeri \n kolasDgr \n AN7..50 \n Z \n Müşterinin eklediği, HHS (FAST katılımcısı) tarafından doğrulanmış Kolay Adres değeridir. Alabileceği değerler BKM “Kolay Adresleme Sistemi Uygulama Kuralları” belgesinde tanımlıdır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n \n \n >>> Kolas Referans Numarası \n kolasRefNo \n N12 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı KOLAS tarafından ilgili sorguya özel olarak üretilmiş referans numarasıdır. \n \n \n >>> Kolas Hesap Türü \n kolasHspTur \n AN1 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı hesap türü bilgisidir:   TR.OHVPS.DataCode.KolasHspTur  sıralı veri değerlerinden birini alır. \n \n \n > Karekod \n kkod \n Kompleks:Karekod \n K \n \n \n \n >> Akış Türü \n aksTur \n AN2 \n Z \n Karekod Akış Türü Karekod ödemesinin hangi akışla gerçekleştirildiğini gösterir.  Kolay Adresi Sistemi ile birlikte kullanılmaz.  01: FAST katılımcısından dinamik doğrulama hizmeti alınan işyeri ödemesi  02: FAST katılımcısından statik doğrulama hizmeti alınan işyeri ödemesi 03: Kişiden kişiye ödemeler \n \n \n >> Referansı \n kkodRef \n AN1..12 \n K \n Karekod referans numarasını gösterir.  Okunan karekodda referans değeri varsa kullanılması zorunludur. Kolay Adresi Sistemi ile birlikte kullanılmaz. \n \n \n >> Üretici Kodu \n kkodUrtcKod \n AN4 \n Z \n Karekod üreticisinin kodu.  Ödeme Hizmeti Sağlayıcıları ve TCMB tarafından uygun görülen ödeme sistemi işleticisi TR Karekod üretebilmek için BKM’ye kayıt başvurusu yaparak karekod üretici kodu alabileceklerdir. Bankalar EFT kodlarını kullanacak olup ayrıca kayıt yaptırmalarına gerek bulunmamaktadır. 4 haneden kısa değerlerin sol tarafı ’0’ karakteri ile tamamlanmalıdır. \n \n \n > Ödeme Ayrıntıları \n odmAyr \n Kompleks: OdemeAyrintilari \n Z \n \n \n \n >> Ödeme Kaynağı \n odmKynk \n AN1 \n Z \n Ödemenin başlatıldığı kaynağı belirtir.  TR.OHVPS.DataCode.OdemeKaynak  sıralı veri değerlerinden “O”  değerini alır. “O” değeri “Açık bankacılık aracılığı ile gönderilen ödemelerde kullanılır.” anlamını taşımaktadır. \n \n \n >> Ödeme Amacı \n odmAmc \n AN2 \n Z \n TR.OHVPS.DataCode.OdemeAmaci  sıralı veri değerlerinden birini alır. \n \n \n >> Referans Bilgisi \n refBlg \n AN1..140 \n K \n Ödemeye özel  Referans Bilgisi  alanıdır. Karekod işlemi değil ise zorunludur.  -\tKişiden kişiye fon aktarımlarda: Gün içerisinde ÖHK özelinde, her işleme özel biricik olarak oluşturulan referans bilgisidir.  Karekod P2P akışı için referans bilgisi (Karekod referans numarası değil, işleme özel üretilecek referans bilgisidir.) YÖS tarafından atanacaktır.  -\tE-ticaret işlemlerinde sipariş/takip numarası/müşteri/abone numarası  - İşyeri Ödemesi Karekod akışında, FAST Karekod Veri Organizasyonundaki  -\t62-01: alanında tanımlı Fatura Numarası   -\t62-06: alanında tanımlı Müşteri Numarası   verilerinden biri kullanılır. \n \n \n >> Açıklama \n odmAcklm \n AN1..200 \n İ \n ÖBHS’nin ÖHK’dan aldığı ya da kendisinin atadığı işlem açıklaması bilgisi.  FAST/PÖS sistemi üzerinden yapılan ödemeler için açıklama bilgisi girilirse boşluk karakteri girilerek geçilemez. En az bir alfasayısal karakter girilmesi zorunludur. \n \n \n Talimat Bilgileri \n tlmtBlg \n Kompleks: TalimatBilgileri \n - \n \n \n \n > Talimat Numarası \n tlmtNo \n AN1..128 \n Z \n Düzenli Ödeme Emri nesnesinin UID'sidir. Düzenli Ödeme Emri kaydı'na dair İlişkin sorgular bu ID üzerinden yapılır. \n \n \n > Talimat Oluşma Zamanı \n tlmtOlsZmn \n ISODateTime \n Z \n duzenliOdemeEmri nesnesinin oluşturulma zamanı, talimatın HHS'de oluşturulduğu zaman bilgisidir. \n \n \n > Talimat Tutarı \n tlmtTtr \n AN1..24 \n Z \n ÖBHS'nin HHS'de belirlediği tutar bilgisidir. Talimata ait ilk ödeme emri kaydının tutar bilgisi iletilmelidir.   Karekod akışında, FAST Karekod Veri Organizasyonundaki  54: (Tutar)  alanında tanımlı Tutar verisi kullanılır.   Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n \n \n > Para Birimi \n prBrm \n AN3 \n Z \n Para Birimi.   Karekod akışında, FAST Karekod Veri Organizasyonundaki  53: (Para Birimi)  alanında tanımlı Para Birimi verisi kullanılır. \n \n \n > İlk Ödeme Günü \n ilkOdmGun \n ISODate \n Z \n ÖBHS'nin HHS'de belirlediği ilk ödeme günü bilgisidir.   Alabileceği minimum tarih değeri düzenli ödemenin verildiği tarihin 1 gün sonrası olabilir. Maksimum değer ise 30 gün olacak şekilde seçilebilir.  \n \n \n > Son Ödeme Günü \n sonOdmGun \n ISODate \n Z \n ÖBHS'nin HHS'de belirlediği son ödeme günü bilgisidir. Alabileceği minimum gün değeri ilk ödeme gününün 1 gün sonrası olabilir. Maksimum değer ise 2 yıl olmalıdır.  \n \n \n > Ödeme Sayısı \n odmSayi \n N3 \n Z \n ÖBHS'nin HHS'de belirlediği ödeme sayısıdır. Minimum değer 2 adet olmalıdır. \n \n \n > Ödeme Periyodu \n odmPryt \n AN1 \n Z \n ÖBHS'nin HHS'de belirlediği ödeme periyot bilgisidir. TR.OHVPS.DataCode.OdemePeriyodu sıralı veri değerlerinden birini alır. \n \n \n > Talimat Rumuzu \n tlmtRmz \n AN1..180 \n İ \n ÖBHS'nin HHS'de belirlediği talimata dair rumuz açıklamasıdır. İlgili alan isteğe bağlı olup HHS'lerin inisiyatifindedir. \n 8.6.\tADIM 3.1- Duzenli Ödeme Emri Sorgusu (İsteğe bağlı) \n   \n Şekil 9: Duzenli Ödeme Emri Sorgusu \n GET /duzenli-odeme-emri/{tlmtNo} \n ÖBHS, bu erişim adresi aracılığıyla düzenli ödeme emrini sorgulayabilir. Maksimum talimata dair son ödeme gününün 5 gün sonrasına kadar sorgulama yapılabilir. Sonrasında yapılacak sorgulamalarda erişim belirtecinin yetki süresi sonlandığı için HHS  TR.OHVPS.Resource.ConsentRevoked  hatasını dönmelidir.\nİptal edilmiş talimatın bilgileri sorgulanmak istendiğinde de yine  TR.OHVPS.Resource.ConsentRevoked  hatası verilmelidir. \n YÖS sadece kendi uygulaması üzerinden verilmiş düzenli ödemeleri sorgulayabilir. Erişim izni olmayan bir ödeme emri numarası ile sorgulama yaptığında HHS'den  TR.OHVPS.Resource.NotFound  hatasını alır. \n BAŞARILI YANIT: \n GET /duzenli-odeme-emri/{tlmtNo} yanıtının (RESPONSE) gövdesinde (BODY)  “DuzenliOdemeEmri” nesnesi bulunur. İstek başarıyla sonuçlanırsa HHS kaynak sunucusunda Tablo-10’da yer alan parametreleri içeren “DuzenliOdemeEmri” nesnesi döner. \n 8.7.\tADIM 4- Düzenli Ödeme Planı Sorgulama \n \n Şekil 10: Düzenli Ödeme Planı Sorgulama \n GET /duzenli-odeme-emri/{talimatNo}/odeme-plani \n ÖBHS, bu erişim adresi aracılığıyla düzenli ödeme planını görüntüleyebilir. İptal edilen bir ödeme emri rızasına dair talimat ödeme planı görüntülenemeyecektir. İptal edilmiş bir talimata ait istek geldiğinde HHS tarafından  \"TR.OHVPS.Resource.ConsentRevoked\"  hatası dönülmelidir. \n BAŞARILI YANIT: \n POST işleminin RESPONSE gövdesini (BODY) oluşturan \"DuzenliOdemeEmriPlani\" nesnesi Tablo-11’deki parametrelerden oluşur: \n Tablo 11: DuzenliOdemeEmriPlani nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n \n \n \n \n Ödeme Sıra Numarası \n odmSiraNo \n AN1..999 \n Z \n Ödeme planı içerisindeki sırayı belirten değerdir. \n \n \n Ödeme Tutarı \n odmTtr \n AN1..24 \n Z \n Ödeme planı içerisinde ödeme numarası kaydına ait ödenecek tutar bilgisi   Karekod akışında, FAST Karekod Veri Organizasyonundaki  54: (Tutar)  alanında tanımlı Tutar verisi kullanılır.   Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n \n \n Gerçekleşen Ödeme Tutarı \n grckOdmTtr \n AN1..24 \n K \n Ödeme planı içerisinde ödeme numarası kaydına ait ödenmiş  tutar bilgisi. Kısmi ödeme yapılan işlemlerde kısmi ödeme tutar bilgisi eklenmelidir. Kısmi ödeme yerine ödenecek tutarın tamamı ödenmesi durumunda ilgili tutar bilgisi iletilmelidir. Ödeme Durumu 01, 02 ve 06 olan kayıtlar için bu alanın gönderilmesi zorunludur.  Karekod akışında, FAST Karekod Veri Organizasyonundaki  54: (Tutar)  alanında tanımlı Tutar verisi kullanılır.   Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n \n \n Ödeme Tutarı Para Birimi \n prBrm \n AN3 \n Z \n Tutara ait Para Birimi.   Karekod akışında, FAST Karekod Veri Organizasyonundaki  53: (Para Birimi)  alanında tanımlı Para Birimi verisi kullanılır. \n \n \n Ödeme Talimat Tarihi \n odmTlmtTrh \n ISODate \n Z \n Ödeme planı içerisindeki ilgili ödemenin gerçekleşmesi beklenen tarih bilgisidir. \n \n \n Ödeme Gerçekleşme Zamanı \n odmGrckZmn \n ISODateTime \n K \n Ödeme planı içerisindeki ilgili ödemenin gerçekleştiği tarih bilgisidir. Ödeme durumu 01, 02 ve 06 olan kayıtlar için bu alanın gönderilmesi zorunludur. \n \n \n Ödeme Durumu \n odmDrm \n AN2 \n Z \n Ödeme planı içerisindeki ödemelere ait durumu belirten değerdir.  TR.OHVPS.DataCode.OdemeDurumu  sıralı veri değerlerinden birini alır. \n 8.8.\tADIM 5- Düzenli Ödeme Emri Rıza İptali \n \n Şekil 10: Düzenli Ödeme Emri Rızası İptali \n DELETE /duzenli-odeme-emri-rizasi/{rizaNo} \n ÖBHS, bu erişim adresi aracılığıyla düzenli ödeme emri rızasını iptal edebilir. \n DELETE /duzenli-odeme-emri-rizasi çağrısı, bir ÖBHS'nin önceden oluşturulmuş bir düzenli ödeme emri rızasını silmesine izin verir. Müşteri, rızasını HHS üzerinden iptal etmek yerine, ÖBHS üzerinden bu rızasını kaldırmak isteyebilir. \n \n Erişim belirteci kontrolü yapılır. Geçerli bir erişim belirteci yok ise HHS tarafından  ”TR.OHVPS.Connection.InvalidToken”  hatası dönülür. \n İstek başlığında yer alan X-Access-Token ile ilişkili rıza, iptal edilen rizaNo bilgisi ile aynı olup olmadığı kontrol edilir. Farklı olması durumunda  \"TR.OHVPS.Resource.NotFound\"  hatası dönülür. \n İptal edilmek istenen Düzenli Ödeme Emri Rızası HHS tarafında bulunmuyor ise  ”TR.OHVPS.ResourceNotFound”  hatası dönülür. \n Rıza durumu I ve S olmayan kayıtlar için rıza iptali sağlanacaktır. I ve S olan kayıtlar için rıza iptal edilmek istendiğinde HHS'ler tarafından  TR.OHVPS.Resource.ConsentRevoked  hatası dönülecektir. \n \n Yukarıda kontroller başarıyla tamamlandıktan sonra sırasıyla aşağıdaki işlemler yapılır. \n \n Düzenli ödeme talimat planı içerisinde yer alan odmDrm değeri 04 ve 05 olan kayıtlar 07 durum kodu ile güncellenecektir. Diğer durum kodları için 07 durum kod güncellemesi yapılmayacaktır. \n İlişkili düzenli ödeme emri talimatı iptal edilmelidir. \n Rıza iptal edilmelidir. \n \n Bu API çağrısı, müşterinin ÖBHS üzerinden düzenli ödeme emri rızasını iptal etmesine ve HHS nezdindeki düzenli ödeme emri rızası nesnesinin silinmesini sağlar.\nMüşterinin ÖBHS’nin veri erişim iznini iptal etmesi durumunda ÖBHS, HHS’de mevcut olan DuzenliOdemeEmriRizasi'na dair rıza ve talimat bilgilerini pratik olarak mümkün olan en kısa sürede silmelidir. Bu ise, ilgili kaynağa\nDELETE /duzenli-odeme-emri-rizasi/{RizaNo}\nçağrısı aracılığı ile yerine getirilir. \n Servis istek parametresi olarak sadece path’de iletilen Rıza No bilgisine ihtiyaç duymaktadır.\nÖHK rızası başarı ile silindiğinde HTTP 204 response kodu ile işlem sonucu iletilir. Rıza tipi “I” yani “Yetki İptal” olarak ve gnclZmn zaman damgası vurularak güncellenir.\nÖHK ile rıza iptali sırasında kurulacak iletişimde (e-posta, sms gibi) aşağıdaki alanların iletilmesi tavsiye edilmektedir:\nYÖS Adı, HHS adı, Rıza Oluşturma Zamanı, Servis Tipi Bilgisi (ÖBHS) \n"},{frontmatter:{},regularPath:"/v1.1.0/deneyalani/odeme-emri-api.html",relativePath:"v1.1.0/deneyalani/odeme-emri-api.md",key:"v-6480bcc7",path:"/v1.1.0/deneyalani/odeme-emri-api.html",content:" \n   \n "},{title:"EK-1: İstek/Cevap Mesajlarında Kullanılacak Nesne Yapıları",frontmatter:{},regularPath:"/v2.0.0/contents/ekler.html",relativePath:"v2.0.0/contents/ekler.md",key:"v-e89e9b86",path:"/v2.0.0/contents/ekler.html",headers:[{level:2,title:"EK-1: İstek/Cevap Mesajlarında Kullanılacak Nesne Yapıları",slug:"ek-1-istek-cevap-mesajlarında-kullanılacak-nesne-yapıları"},{level:2,title:"EK-2: Sıralı Veri Türleri",slug:"ek-2-sıralı-veri-turleri"},{level:2,title:"EK-3: İstemci Sertifikalarının Tanım ve Yönetimi",slug:"ek-3-istemci-sertifikalarının-tanım-ve-yonetimi"},{level:2,title:"EK-4: Sunucu Sertifikaları",slug:"ek-4-sunucu-sertifikaları"},{level:2,title:"EK-5: Mesaj İmzalama Akışı",slug:"ek-5-mesaj-imzalama-akısı"},{level:3,title:"İmzalama Kuralları (YÖS)",slug:"imzalama-kuralları-yos"},{level:2,title:"EK-6: HHS/YÖS API Mimarisi",slug:"ek-6-hhs-yos-api-mimarisi"}],content:' EK-1: İstek/Cevap Mesajlarında Kullanılacak Nesne Yapıları \n Açık Bankacılık simülatör uygulaması üzerinde swagger dökümanlarının güncel sürümlerine erişim sağlanabilir. \n EK-2: Sıralı Veri Türleri \n \n \n \n Kod \n Açıklama \n \n \n \n \n TR.OHVPS.DataCode.BrcAlc \n İşlemin hesabı borçlandırdığı ya da alacaklandırdığı bilgisidir. B : Borç A : Alacak N : Finansal Olmayan \n \n \n TR.OHVPS.DataCode.EvetHayir \n E : Evet H : Hayır \n \n \n TR.OHVPS.DataCode.GkdTur \n GKD yapılmasını gerekli bulduğu durumda HHS, YÖS’ün belirlediği yöntemi dikkate alarak kendi belirlediği GKD yöntemini bildirir: Y: Yönlendirmeli GKD A: Ayrık GKD \n \n \n TR.OHVPS.DataCode.HHSDurumu \n A : Açık. Üretim Ortamında HHS’nin aktif bir şekilde hizmet vermesi durumu.  Y : Yaygınlaştırma. Üretim Ortamında HHS’nin kendisi tarafından tanımlanmış kısıtlı ÖHK’ya hizmet vermesi durumu.    G : Geçici Hizmet Veremiyor. HHS servislerinde teknik bir sorun olması nedeniyle HHS’nin hizmet verememesi durumu.  K: Kapalı. HHS’nin hizmet vermeme durumu. \n \n \n TR.OHVPS.DataCode.HHSYOSSrlmKrtr \n ‘kod’ : Kod ‘unv’ : Unvan \n \n \n TR.OHVPS.DataCode.HspDrm \n Hesabın durumunu belirtir: AKTIF PASIF KAPALI \n \n \n TR.OHVPS.DataCode.HspTip \n Hesap çeşidini belirtir: VADESIZ VADELI KREDILI_MEVDUAT_HESABI POS CEK YATIRIM \n \n \n TR.OHVPS.DataCode.HspTur \n Hesabın bireysel veya ticari nitelikte olduğunu belirtir: B: Bireysel T: Ticari \n \n \n TR.OHVPS.DataCode.IslemAmaci \n Ödemenin Amacına yönelik olarak aşağıdaki değerlerden birini alır: 01: Konut Kirası Ödemesi 02: İş yeri Kirası Ödemesi 03: Diğer Kira Ödemesi 04: E-Ticaret Ödemesi: Elektronik ticaret işlem amaçlı aktarımlar 05: Çalışan Ödemesi: Maaş, harcırah, prim gibi çalışan ödemeleri 06: Ticari ödeme: Ticari işletmelerin birbirlerine, kendi hesaplarına veya müşterilerine ödemeleri, borç, ithalat, ihracat, şirket satın alma, vb. kapsamında ödemeler 07: Bireysel Ödeme: Özel amaçlı (aile bireylerine, hediye, bağış, borç, alışveriş vs.) ödemeler 08: Yatırım: Mevduat, menkul kıymet, döviz, gayrı menkul, taşıt, varlık alımı, temettü ödeme, tahsilat vb. gibi yatırım amaçlı ödemeler 09: Finansal: Kredi, depo, repo, türev, finansal varlık alım/satımı vb. ödemeler 10: Eğitim ödemesi 11: Aidat ödemesi 12: Diğer \n \n \n TR.OHVPS.DataCode.IslemTuru \n Hesap hareketleri (işlemler) sorgusunda dönülen İşlem Türü (islTur) parametresi aşağıdaki değerlerden birini alabilir: HAVALE EFT FAST PARA_YATIRMA PARA_CEKME YABANCI_PARA_HAVALE YATIRIM_HESABINA_AKTARIM YATIRIM_HESABINDAN_AKTARIM KURUM_FATURA_ODEMESI CEK SENET SIGORTA_ODEMESI UCRET_KOMISYON_FAIZ SGK_ODEMESI VERGI_ODEMESI DOVIZ_ALIM DOVIZ_SATIM KREDI_ODEMESI KREDI_KULLANIM KK_ODEMESI KK_NAKIT_AVANS SANS_OYUNU UYE_ISYERI_ISLEMLERI HGS_OGS_ISLEMLERI DOGRUDAN_BORCLANDIRMA_SISTEMI DIGER \n \n \n TR.OHVPS.DataCode.IzinTur \n 01: Temel Hesap Bilgisi 02: Ayrıntılı Hesap Bilgisi 03: Bakiye Bilgisi 04: Temel İşlem (Hesap Hareketleri) Bilgisi 05: Ayrıntılı İşlem Bilgisi 06: Anlık Bakiye Bildirimi 07: Temel Kart Bilgisi 08: Detaylı Kart Bilgisi 09: Ayrıntılı Kart İşlem Bilgisi \n \n \n TR.OHVPS.DataCode.KareKodAksTur \n Karekod Akış Türü Karekod ödemesinin hangi akışla gerçekleştirildiğini gösterir.  01: FAST katılımcısından dinamik doğrulamalı hizmet alınan işyeri ödemesi 02: FAST katılımcısından statik doğrulamalı işyeri ödemesi 03: Kişiden kişiye ödemeler \n \n \n TR.OHVPS.DataCode.KaynakTip \n HESAP_BILGISI_RIZASI  ODEME_EMRI_RIZASI   ODEME_EMRI   ILERI_TARIHLI_ODEME_EMRI_RIZASI   ILERI_TARIHLI_ODEME_EMRI   DUZENLI_ODEME_EMRI_RIZASI  DUZENLI_ODEME_PLANI  DUZENLI_ODEME_EMRI   BAKIYE    COKLU_ISLEM_TALEBI    HHS    YOS   KART_BILGILERI \n \n \n TR.OHVPS.DataCode.KimlikTur \n Kod, Tip, Format K , TCKN , N11 M , MNO , AN1..30 (HHS’ye özel bireysel veya kurum müşteri numarası) Y , YKN , N11 P , PNO , AN7..9 \n \n \n TR.OHVPS.DataCode.KolasHspTur \n Hesabın bireysel veya ticari nitelikte olduğunu belirtir: B: Bireysel T: Ticari \n \n \n TR.OHVPS.DataCode.KolasTur \n Müşterinin sorgulama istediği Kolay Adres Tipi değeridir. Alabileceği değerler BKM “Kolay Adresleme Sistemi Uygulama Kuralları” belgesinde tanımlıdır: T: Telefon Numarası E: E-Posta K: TCKN V: VKN Y: YKN P: Pasaport Numarası \n \n \n TR.OHVPS.DataCode.KurumKimlikTur \n Kod, Tip, Format K , TCKN , N11 M , MNO , AN1..30 (HHS’ye özel bireysel veya kurum müşteri numarası) V , VKN , AN10 \n \n \n TR.OHVPS.DataCode.LogoArkaPlan \n B :  Logoların arka planının beyaz olması (Erkek Logo)   K : Logoların arka planının renkli/koyu olması (Dişi Logo) \n \n \n TR.OHVPS.DataCode.LogoFormat \n SVG :  Logonun svg formatında olmasını ifade eder. Logonun 1:2 oranında olması gerekmektedir.   PNG : Logonun png formatında olmasını ifade eder. Logonun 500 X 1000 px olması gerekmektedir. \n \n \n TR.OHVPS.DataCode.LogoTur \n FULL_LOGO   : Yazı ve ikon şekillerin bir arada olduğu logo   ICON_LOGO : İkon şekillerin olduğu ( Sadece görsel olan-yazısız ) logo \n \n \n TR.OHVPS.DataCode.OdemeAmaci \n Ödemenin Amacına yönelik olarak aşağıdaki değerlerden birini alır: 01: Konut Kirası Ödemesi 02: İş yeri Kirası Ödemesi 03: Diğer Kira Ödemesi 04: E-Ticaret Ödemesi: Elektronik ticaret işlem amaçlı aktarımlar 05: Çalışan Ödemesi: Maaş, harcırah, prim gibi çalışan ödemeleri 06: Ticari ödeme: Ticari işletmelerin birbirlerine, kendi hesaplarına veya müşterilerine ödemeleri, borç, ithalat, ihracat, şirket satın alma, vb. kapsamında ödemeler 07: Bireysel Ödeme: Özel amaçlı (aile bireylerine, hediye, bağış, borç, alışveriş vs.) ödemeler 08: Yatırım: Mevduat, menkul kıymet, döviz, gayrı menkul, taşıt, varlık alımı, temettü ödeme, tahsilat vb. gibi yatırım amaçlı ödemeler 09: Finansal: Kredi, depo, repo, türev, finansal varlık alım/satımı vb. ödemeler 10: Eğitim ödemesi 11: Aidat ödemesi \n \n \n TR.OHVPS.DataCode.OdemeDurumu \n Ödemenin durumunu gösterir. Alabileceği değerler: 01: Gerçekleşti (Ödeme ilgili ödeme sistemine iletildi ve alıcı hesabına ulaştı.)  02: Gönderildi (Ödeme ilgili ödeme sistemine iletildi ancak alıcı hesabına ulaştığına dair teyit alınmadı.)İşlemin son durumunun teyidi için YÖS sorgulama yapmalıdır. 03- Gerçekleşmedi (Ödemenin ilgili ödeme sistemine işletiminde veya işlenmesi sırasında hata, zaman aşımı, sistemin gün sonu işlemlerine başlaması vb. durum oluştu ve ödeme gereçeklemedi veya iade edildi.) 04- Onayda bekliyor (Ödeme emri veya ileri tarihli ödeme emri alındı. Çoklu onay akışının tamamlanması bekleniyor.) 05- Ödeme Bekleniyor ( Ödeme Sistemine gönderilmeden önceki statüdür.) 06- Kısmen Gerçekleşti ( İleri tarihli ve düzenli ödeme talimatlarında kısmi ödeme yapılan işlemler için geçerli statüdür.) 07- İptal Edildi ( Ödeme sistemine gönderilmeden önce müşteri ya da herhangi bir sebepten iptal edilen durumlarda kullanılabilir.) \n \n \n TR.OHVPS.DataCode.OdemeKaynak \n I: İnternet bankacılığından gönderilen ödemelerde kullanılır. A: Otomatik para makineleri (ATM) ile gönderilen ödemelerde kullanılır. T: Telefon bankacılığı ile gönderilen ödemelerde kullanılır. K: Kiosklar aracılığıyla gönderilen ödemelerde kullanılır. S: Şubeden girilen ödemelerde kullanılır. M: Mobil uygulamadan gönderilen ödemelerde kullanılır. D: Yukarıdakiler dışındaki ödeme kaynaklarından gönderilen ödemelerde kullanılır.  O: Açık bankacılık aracılığı ile gönderilen ödemelerde kullanılır. \n \n \n TR.OHVPS.DataCode.OdemeSistemi \n İşlemin yönlendirildiği Ödeme Sistemine göre aşağıdaki değerlerden birini alabilir: H: Havale F: FAST E: EFT (PÖS) değerlerinden birini alabilir. \n \n \n TR.OHVPS.DataCode.OhkTur \n B: Bireysel  K: Kurumsal \n \n \n TR.OHVPS.DataCode.OhkTanimTip \n TCKN: TCKN   (ohkTanimDeger N11 olarak gönderilmelidir.)  MNO:        HHS’ye özel bireysel veya kurum müşteri numarası (OHKTanimDeger AN1..30 olarak gönderilmelidir. )   YKN:      Yabancı Kimlik Numarası (OHKTanimDeger N11 olarak gönderilmelidir.)    PNO:      Pasaport numarsı (ohkTanimDeger AN7..9 olarak gönderilmelidir.)    GSM:       Cep telefonu numarası (ohkTanimDeger N10 olarak gönderilmelidir.)   IBAN:    IBAN numarası (OHKTanimDeger AN26 olarak gönderilmelidir.) \n \n \n TR.OHVPS.DataCode.OlayTip \n KAYNAK_GUNCELLENDI  AYRIK_GKD_BASARILI AYRIK_GKD_BASARISIZ HHS_YOS_GUNCELLENDI \n \n \n TR.OHVPS.DataCode.YOSDurumu \n A : Açık. Üretim Ortamında YÖS’ün aktif bir şekilde hizmet vermesi durumu.   G : Geçici Hizmet Veremiyor. YÖS servislerinde teknik bir sorun olması nedeniyle YÖS\'ün hizmet verememesi durumu.   K: Kapalı. YÖS\'ün hizmet vermeme durumu. \n \n \n TR.OHVPS.DataCode.PSUInitiated \n ‘E’ : Evet  ‘H’ : Hayır   ‘O’ : Olay Bildirim \n \n \n TR.OHVPS.DataCode.RizaDurumu \n B: Yetki Bekleniyor Y: Yetkilendirildi K: Yetki Kullanıldı E: Yetki Ödeme Emrine/Talimata Dönüştü S: Yetki Sonlandırıldı I :Yetki Iptal \n \n \n TR.OHVPS.DataCode.RizaIptDtyKod \n ‘01’ :Yeni Rıza Talebi ile İptal ‘02’ :Kullanıcı İsteği ile HHS üzerinden İptal ‘03’ :Kullanıcı İsteği ile YÖS üzerinden İptal ‘04’ :Süre Aşımı : Yetki Bekleniyor ‘05’ :Süre Aşımı : Yetkilendirildi ‘06’ :Süre Aşımı : Yetki Ödemeye Dönüşmedi ‘07’ :GKD iptali : Aynı rıza no ile mükerrer çağrımı ‘08’ :GKD iptali : Rızano ile TCKN uyuşmaması ‘09’ :GKD iptali : Uygun ürünü bulunmuyor ‘10’ :GKD iptali : HHS Açık Bankacılık kanalı işleme kapalı ’11’ :GKD iptali : Hesap Yetki Sorunu ‘12’ :GKD iptali : ÖHK HHS kontrollerini aşamadı ‘13’ :GKD iptali : ÖHK isteği ile GKD’den vazgeçildi ‘14’ :GKD iptali : Fraud Şüphesi ‘15’ :Hesap Rıza Güncelleme Talebi ile İptal  ‘99’ :GKD iptali : Diğer \n \n \n TR.OHVPS.DataCode.RizaTip \n H: Hesap Bilgisi Rızası O: Ödeme Emri Rızası  I: İleri Tarihli Ödeme Emri Rızası D: Düzenli Ödeme Emri Rızası \n \n \n TR.OHVPS.DataCode.SrlmYon \n ‘A’: Azalan değerle sıralama ‘Y’: Artan değerle sıralama \n \n \n TR.OHVPS.DataCode.VarYok \n 0 : Kayıt Yok   1 : Kayıt Var \n \n \n TR.OHVPS.DataCode.YetTip \n Alabileceği değerlere göre hangi belirtecin döneceğine karar verilir. yet_kod yenileme_belirteci \n \n \n TR.OHVPS.DataCode.ZmnAralik \n 0 : Kayıt Yok  1 : 0-2 saat 2 : 2 saat 1 dakika-24 saat  3 : 1-3 gün   4 : 4-15 gün\t  5 : 16 gün ve üstü \n \n \n TR.OHVPS.DataCode.HizmetTipi \n 01 :  Ayrık GKD  02 : İleri Tarihli Ödeme 03 : Düzenli Ödeme \n \n \n TR.OHVPS.DataCode.OdemePeriyodu \n G :  Günlük  H : Haftalık A : Aylık D : Diğer \n \n \n TR.OHVPS.DataCode.KartTip \n B : Banka Kartı  K : Kredi Kartı P : Ön Ödemeli(Prepaid) Kart \n \n \n TR.OHVPS.DataCode.AltKartTip \n A : Asıl  E : Ek Kart S : Sanal Kart \n \n \n TR.OHVPS.DataCode.KartStatu \n A : Açık/Aktif  P : Pasif I : İptal \n \n \n TR.OHVPS.DataCode.IslemPuanDurumu \n 01 : Puan Kazanımı  02: Puan Kullanımı  03: Puan İade  04: Puan İptal \n \n \n TR.OHVPS.DataCode.KartSema \n T : TROY  M : Mastercard V : Visa U : UnionPay A : American Express J : JCB \n \n \n TR.OHVPS.DataCode.KartTuru \n B : Bireysel  T :Ticari \n \n \n TR.OHVPS.DataCode.KartFormu \n F : Fiziksel  D :Dijital \n \n \n TR.OHVPS.DataCode.EkstreStatu \n A : Aktif  P : Pasif \n EK-3: İstemci Sertifikalarının Tanım ve Yönetimi \n Tüm katılımcıların GEÇİT\'e erişebilmesi için, BKM tarafından yapılan istemci sertifika doğrulamasından geçmesi gerekmektedir. İstemci sertifikası üretilmeden önce katılımcıların CSR üretme akışını tamamlaması gerekmektedir. \n OpenSSL ile CSR (Certificate Signing Request) Oluşturma \nAşağıdaki komut ile 2048-bit RSA private key ve CSR oluşturulur. \nopenssl req -new -newkey rsa:2048 -nodes -keyout PRIVATEKEY.key -out CSR.csr \n CSR ile ilgili detay bilgilerin girişinde; \nCommon Name (CN) olarak 4 karakterli hhsKod ya da yosKod değeri ile, \ndiğer alanlar için de kurum bilgileriniz ile giriş yapılır. \n Tüm bilgilerin girilmesinden sonra oluşan private key dosyası kurumunuzda saklanır.\nCSR dosyası ise istemci sertifika üretmek üzere kullanılır. Bu aşamada takip edilmesi gereken adımlar şu şekildedir: \n Katılımcıların, TRIP ortamı üzerinden, BKM Tarafından yetki verilmiş kullanıcılarının görebileceği "İstemci Sertifika Talebi" menü adımına giriş yapmaları beklenir. Açılan ekranda,"CSR Dosyası Yükleme" alanı içerisine, katılımcının üretmiş olduğu csr dosyası yüklenir. Yaklaşık 1 dakika içerisinde kuruma özel olarak üretilmiş olan client sertifikası indirilmeye hazır hale gelecektir. "İndir" butonu ile client sertifika indirilir. İstemci tarafında web isteğinin ilgili sertifika ile ilişkilendirilerek oluşturulması gerekmektedir. \n Uzun dönemli olarak hazırlanacak olan sertifikalar sertifikasyon ve üretim ortamlarında kullanılacaktır. Sertifikaların işlevselliği ve geçerliliği bu aşamalarda sınanacaktır. \n GEÇİT\'in test ve üretim ortamları ayrımında istemci sertifikaları, HHS Listeleme API erişimleri ve Sertifikasyon bağlantıları Şekil 15-HHS/YÖS API Mimarisi Diagramında resmedilmiştir. \n EK-4: Sunucu Sertifikaları \n Sunucu sertifikalarının endpoint bilgisini (Fqdn) içerecek ve global bir Certification Authority tarafından imzalanmış olarak sunulması gerekmektedir.\nÖrneğin; entegrasyon formu içerinde yer alan URL bilgisinin (test.xbank.com.tr) sertifika içerisinde tanımlı olması ve bu sertifikanın global bir CA örneğin Verisign tarafından imzalanmış olarak sunulması gerekmektedir. \n Hizmet sağlayıcı olan HHS\'ler tarafından sunucu sertifikaları uygulanmalıdır. \n EK-5: Mesaj İmzalama Akışı \n Dijital imzalama yapısı, ÖHVPS API’de gerçekleştirilen işlemlerin ve taşınan verilerin bütünlük ve inkâr edilemezliğini sağlamak amacıyla kurgulanmıştır.  İmzaların kaynak bazında hangi istek ve yanıtlara uygulandığı belirlidir. \n API yalnızca TLS\'ye dayanırsa, dijital kayıtları ve inkâr edilemezlik kanıtlarını tutmak zor olur. Bu nedenle, TLS\'ye dayanmayan bir inkâr edilemezlik çözümü olarak API isteğinin HTTP başlığında bir JWS kullanılarak sağlanabilir. \n HTTP isteğinin gövdesinin hash fonksiyonu (SHA256) ile özeti alınacaktır. Elde edilen özet, asimetrik anahtarları destekleyen bir algoritma kullanılarak imzalanacak ve JWS elde edilecektir. İsteğin kendinize geldiği durumda body üzerinde hiç bir değişikliğe tabi tutmadan (serialize/deserialize, minify, trim, vb yapmadan) doğrulama yapmanız gerekmektedir. Aynı şekilde isteğin kendinizden çıktığı aşamada da response body üzerinde hiç bir değişikliğe tabi tutmadan (serialize/deserialize, minify, trim, vb yapmadan) mesaj imzalama yapılmalıdır. \n Bu kapsamda imzalama akışı aşağıdaki gibi olmalıdır: \n \n HHS ve YÖS öncelikle özel ve açık anahtarlarını oluşturmalıdır. Bu anahtarları oluşturmak için aşağıda “openssl” kullanılarak oluşturma örneği paylaşılmıştır. Bu anahtarlardan özel olan anahtar mesajı imzalamak için kullanılacak olup, açık anahtar ise mesajı doğrulamak amacıyla mesajın alıcısı tarafından kullanılacaktır. \n \n Özel anahtarın oluşturulması. private.pem => Özel anahtar  \n openssl genrsa -out private.pem 2048 \n Özel anahtardan açık anahtarın oluşturulması. public_key.pem => Açık anahtar (BKM ile paylaşılacak açık anahtar) \n openssl rsa -in private.pem -pubout -outform PEM -out public_key.pem \n Opsiyonel olarak özel anahtarın PCKS8 formatına çevrilmesi (Java açısından PCKS8 formatında olma ihtiyacı nedeniyle). private_key.pem => Özel anahtarın formatlanmış hali.  \n openssl pkcs8 -topk8 -inform PEM -in private.pem -out private_key.pem –nocrypt \n \n \n Açık ve Özel anahtarlar oluşturulduktan sonra Açık Anahtar BKM ile paylaşılır. BKM bu açık anahtarı diğer katılımcıların ulaşabilmesi ve alabilmesi için bir Anahtar Deposu yaklaşımı ile bünyesinde tutar. İlgili anahtarı iletebilmek ve alabilmek için kullanılacak HHS/YOS API ye erişim detayları EK-6 bölümünde detaylı olarak paylaşılmıştır.  Eğer kurumun ilgili anahtar çiftinin yenilenme durumu söz konusu ise yenilemenin hemen ardından açık anahtar yeni bir imzalama yapılmadan önce mutlaka BKM ile paylaşılmalıdır. \n \n \n İmzalı mesajı açacak olan kurum mesajı imzalayan kurumun açık anahtarını her sorguda yeniden almak durumunda değildir. Belirli periyodlarda kendi ortamındaki anahtarı yenileyerek sistemi işletebilir. Ancak imzalayan kurum anahtar çifti yenilemesi yaptığında BKM ile açık anahtarını paylaşsa dahi imzalı mesajı doğrulayacak taraf eski açık anahtar ile doğrulama yapmaya çalıştığı için hata alacaktır. Bu ilk hata durumunda hızlıca BKM üzerinden yeni anahtarı alıp mesajı tekrar doğrulamayı denemelidir. Eğer yine hata alıyor ise doğrulama işlemini hata statüsüne almalıdır. Bu sebeple anahtar yenileyen kurum yeni açık anahtarını yeni bir mesaj imzalama yapmadan önce mutlaka BKM ile paylaşmalıdır. \n \n \n PSU-Fraud-Check alanı için de JWT formatında çıktı hazırlanması beklenmektedir. Örnek bir PSU-Fraud-Check payload değeri aşağıdaki gibidir; \n {"AnomalyFlag": "0", \n"LastPasswordChangeFlag": "1", \n"FirstLoginFlag": "1", \n"DeviceFirstLoginFlag": "1", \n"BlacklistFlag": "0", \n"MalwareFlag": "0", \n"UnsafeAccountFlag": "0", \n"exp": 1663424479, \n"iat": 1663338079, \n"iss": "[https://apigw.bkm.com.tr|https://apigw.bkm.com.tr/]" } \n İmzalama Kuralları (YÖS) \n Bir YÖS üzerinden başlayan akış örnek olarak paylaşılmıştır. \n \n \n YÖS, mesaj imzalama gerektiren her API isteğinin HTTP gövdesini (request body) kendi özel anahtarı ile şifreleyerek imza bilgisini oluşturur. \n \n \n Ardından bu imza verisini, göndereceği mesajın istek başlığında yer alan X-JWS-Signature alanında göndermelidir. \n \n \n X-JWS-Signature alanında gönderilecek olan bilgi aşağıdaki yöntem ile oluşturulmalıdır. \n \n \n Bu alana yazılacak olan bilgi JWT formatında oluşturulmalıdır. \n \n \n Bir JWT, header-payload-signature alanlarından oluşmaktadır. \n \n Header alanında JWT’yi imzalamak için kullanılacak algoritma belirtilmelidir.  Standartlar kapsamında RS256 kullanılacaktır. \n Payload kısmında özel olarak oluşturulacak olan “body” claim alanına istek gövdesi (request body) verisinin SHA256 hash değeri karşılığı yazılmalıdır. \n JSON payload oluşturulurken RFC 7519 baz alınmalıdır. "iss" (Issuer) Claim, "exp" (Expiration Time) Claim, "iat" (Issued At) Claim, “body” Claim alanlarının gönderilmesi zorunludur. ^RFC7519 \na.\t"iss" (Issuer) Claim : Kurumunuza özel bilgidir. \nb.\t"exp" (Expiration Time) Claim: Saniye cinsinden (Unix time) imzanın son geçerli olduğu tarih. Bu tarih  mevcut sunucu saatinizden 60 dakika sonra olacak şekilde kullanılmalıdır. \nc.\t"iat" (Issued At) Claim : Saniye cinsinden (Unix time) imzanın oluşturulduğu tarih. Bu tarih  mevcut sunucu saatinizden 5 dakika önce olacak şekilde kullanılmalıdır. \nd.\t“body” Claim : istek gövdesi (request body) verisinin SHA256 hash değeri karşılığı. \n Signature alanında da özel anahtar ile imzalanmış olan imza içeriği yer alacaktır. \n \n X-JWS-Signature:   JWS imzasını içeren üstbilgi. Bu başlığın ne zaman belirtilmesi gerektiği hususu ilgili endpoint için belirtilmiştir. \n Örnek X-JWS-Signature Payload Değeri \n { \n"iss": "https://apigw.bkm.com.tr", \n"exp": 1646832405, \n"iat": 1646746005, \n"body": "c543072f97a761a1d891dc81acc380bc1e6f61ca6541bd93ebfdece338457922" \n} \n \n \n \n \n YÖS, isteği gönderir. Sadece mesajın bütünlüğünü ve doğruluğunu teyit amacı ile istek gövdesi (request body) SHA256 hash değeri imzalanarak X-JWS-Signature alanında bu imza iletilir. İsteğin gövde (request body) kısmı açık ve şifresiz olarak gönderilmektedir. \n \n \n HHS, isteği alır, talebi gerçekleştirmeden önce aldığı API isteklerinin imzasını doğrulamalıdır. X-JWS-Signature alanındaki JWT aşağıdaki adımlarla doğrulanmalıdır. \n \n Header kısmındaki algoritmanin RS256 olduğu kontrol edilir. \n Gönderen kurumun açık anahtarı ile JWT verify (doğrulama) işlemi yapılır. \n Yukarıdaki işlemlerin doğruluğunun ardından JWT’nin payload kısmındaki “body” claim alanındaki bilginin, isteğin gövde verisinin SHA256 hash değerlerinin aynı olduğu kontrol edilir. \n Örnek checksum değeri   "a64b19f95eeb1fb0a0a3e2dbbc6e3d8472c52184d4543417ddc6d156fc5c5571" veya   "A64B19F95EEB1FB0A0A3E2DBBC6E3D8472C52184D4543417DDC6D156FC5C5571" şeklinde olabilir. İki hali de aynı değere sahiptir. Kontrollerde buna dikkat edilmesi gerekmektedir. \n \n \n \n Yukarıdaki işlemler ile doğruluğu teyit edilmiş olan isteğin talebi gerçekleştirir. \n \n \n Eğer istek doğrulanamıyor ise gönderen kurumun açık ve özel anahtar çifti yenilenmiş olabilir. \n \n \n BKM HHS API  üzerinden ilgili kurumun bilgilerini (kurum kodu vs) kullanarak kurumun detay bilgileri çeker ve kendi ortamında yeniler. \n \n \n Ardından imzayı tekrar açık anahtar ile doğrulayarak kontroller gerçekleştirilir. (Eğer halen doğrulama işlemi başarısız ise bu istek için hata akışı çalıştırılır.  TR.OHVPS.Resource.InvalidSignature  kodu ile hata üretilebilir.) \n \n \n İmza bilgisinin beklendiği (x-jws-signature) servislerde, bu bilginin iletilmediği durumlarda  TR.OHVPS.Resource.MissingSignature  hatası üretilebilir. \n \n \n HHS isteği işledikten sonra cevabı oluştururken de yukarıdaki akışlar ile göndereceği cevabı imzalamalıdır. \n \n \n İstek yanıt gövdesinin SHA256 checksum değeri için hexadecimal çıktı kullanılacaktır. Oluşacak çıktının 64 karakter olması beklenmektedir. Kontrol için "^[A-Fa-f0-9]{64}$" RegEx tarifini kullanabilirsiniz. \n \n \n Örnek bir gövde: \n {"katilimciBlg":{"hhsKod":"8000","yosKod":"8000"},"gkd":{"yetYntm":"Y","yonAdr":"https://boss-test.bkm.com.tr/boss/ab/yosSimulator/8000?drmKod=6021de9f-55e7-454a-94be-2044866b22e1"},"kmlk":{"kmlkTur":"M","kmlkVrs":"123456","ohkTur":"B"},"hspBlg":{"iznBlg":{"iznTur":["01","02","03","04","05"],"erisimIzniSonTrh":"2022-10-12T23:59:59+03:00","hesapIslemBslZmn":"2021-10-10T00:00:00+03:00","hesapIslemBtsZmn":"2023-10-10T23:59:59+03:00"}}}\n \n Bu gövdenin checksum\'ı: \n a64b19f95eeb1fb0a0a3e2dbbc6e3d8472c52184d4543417ddc6d156fc5c5571\n \n Bu checksum\'ın iletildiği x-jws-signature başlık değeri: \n eyJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJodHRwczovL2FwaWd3LmJrbS5jb20udHIiLCJleHAiOjE2NjU0NzU1NjIsImlhdCI6MTY2NTM4OTE2MiwiYm9keSI6ImE2NGIxOWY5NWVlYjFmYjBhMGEzZTJkYmJjNmUzZDg0NzJjNTIxODRkNDU0MzQxN2RkYzZkMTU2ZmM1YzU1NzEifQ.Q65PI_1fTEzzBMirvmJvXgVX3orhhZ4_UqujtGdHkU7me-1ymIjvPrzy3kfyER1pedFb7HDCBuPvYoqjX8eUnpiiZsxfzCiEa0McIhoFeUOggq-O8VihItp8bLr2DWwQ9JHN1-WXB2mL31KAKFAL1VY9-DXuAdT-RfE_SLYsl2ycmNy4ti4XvfDvvlE56ZsieFZ727VuwR8wi7F0kKDc6UhjaMF9xcUeAM1fxX-bmcOaOo1NZGC0vvgjNZKz_OJrN-q8VhWYnQPiJ7wY7S9IG8bHIkBImKSVf8LuOEvl8u0BZzADLH1iOBd9x2l1plyI_NLPTrnOqhWhKlljkkJBCg\n \n Eğer PSU-Fraud-Check için başlık gönderilecekse, yine JWT formatında imza üretilmelidir. Örnek bir psu-fraud-check başlık değeri: \n eyJhbGciOiJSUzI1NiJ9.eyJBbm9tYWx5RmxhZyI6IjAiLCJMYXN0UGFzc3dvcmRDaGFuZ2VGbGFnIjoiMSIsIkZpcnN0TG9naW5GbGFnIjoiMSIsIkRldmljZUZpcnN0TG9naW5GbGFnIjoiMSIsIkJsYWNrbGlzdEZsYWciOiIwIiwiTWFsd2FyZUZsYWciOiIwIiwiVW5zYWZlQWNjb3VudEZsYWciOiIwIiwiZXhwIjoxNjY1NDc1NTU2LCJpYXQiOjE2NjUzODkxNTYsImlzcyI6Imh0dHBzOi8vYXBpZ3cuYmttLmNvbS50ciJ9.DhUh_nsXDuNIrvsQ3KOhOXdVcJg6fTDVW8K1oea8kLtmb7n-_hJHY3mWX5zzobu-Vh2VvFzIxPhHtol6gLHFktmIMiQ9TDHb_mRZFXgJB4ToNfqc3Fy9mi5bS8By2IYi1HxDaCStstaZDaunzXfHCtqybfZXyk6teDrf-iIf6lqX9Keo7GZO-Y7mP7C13-c_QwyNKrZK4TZwUQbecRqXYn1DcEHM7kukQHTar_hKBWkXPmNpScY0J2rKksr4ejR1uLhdQm-Pdwoe9y6qrNEB79vMLBkRNtbuV0vc1GYHp_YKkzBKBI_58uuB2GD9877CsrcRnHMQb88xpxiPKh6-ew\n EK-6: HHS/YÖS API Mimarisi \n HHS/YÖS API Uygulama Mimarisinde Test ve Üretim ortamlarında aşağıdaki alanda yer almaktadır. \n \n Şekil 15: HHS/YÖS API Mimarisi \n'},{title:"Güçlü Kimlik Doğrulama",frontmatter:{},regularPath:"/v2.0.0/contents/erisim-belirteci.html",relativePath:"v2.0.0/contents/erisim-belirteci.md",key:"v-14ad9962",path:"/v2.0.0/contents/erisim-belirteci.html",headers:[{level:2,title:"Yetkilendirme Kodu API",slug:"yetkilendirme-kodu-api"},{level:2,title:"Erişim Belirteci API",slug:"erisim-belirteci-api"}],content:' Güçlü Kimlik Doğrulama  \n \n ÖHK\'nın YÖS uygulamasından HHS uygulamasına yönlendirilmesi ile başlanan güçlü kimlik doğrulama süreci,  Oauth 2.0 standartları gereği öncelikle yetkod değerinin YÖS\'e iletilmesi ile başlar ve erişim belirtecinin alınması sonucunda başarı ile sonuçlanmış olur. \n Güçlü Kimlik Doğrulama için Erişim Adresleri (Endpoints) \n Etki Alanı (Scope) =“hesap_bilgisi”  "odeme_emri" \n \n \n \n No \n Kaynak \n HTTP işlemi \n Erişim Adresi \n Zorunlu (Z)/ İsteğe Bağlı(İ) \n Yetkilendirme Türü \n İmzalama \n Parametre \n İstem Nesnesi \n Yanıt Nesnesi \n \n \n \n \n 1 \n yetkilendirme-kodu \n GET \n /yetkilendirme-kodu \n Z \n İstemci Kimlik Bilgileri \n İmzalı Yanıt \n \n \n yetkilendirmeKodu \n \n \n 2 \n erisim-belirteci \n POST \n /erisim-belirteci \n Z \n İstemci Kimlik Bilgileri \n İmzalı İstek ve Yanıt \n \n ErisimBelirteciIstegi \n ErisimBelirteci \n Yetkilendirme Kodu API \n GET /yetkilendirme-kodu \n Ayrık GKD sürecinde kullanılacak olan Yetkilendirme Kodu API\'nin  HHS tarafından sunulması gerekmektedir. \n Ayrık GKD akışında; HHS, YÖS\'ün olay dinleme servisine "AYRIK_GKD_BASARILI" olay tipi ile olay bildirimi yapar. Böylece ÖHK\'nın kendi sistemine başarı ile login olduğunu ve yetKod değerinin ÖHK ile ilişkilendirildiğinin bilgisini YÖS\'e iletmiş olur.  \nHHS olay bildirimi için retry policy süreçleri kapsamında 1 dakikada 3 kez deneme yapabilir. YÖS\'e olay bildirimi yapılmamış ise, kendisine gelmeyen olay bildirimi için yetkod\'un geçerli olduğu 5 dakika boyunca yetkilendirme-kodu endpointi ile sorgulama yaparak yetkod değerini alabilir. \n YÖS, "ODEME_EMRI_RIZASI" kaynağı için bildirim yapıldı ise; GET /yetkilendirme-kodu endpointi ile yetkod sorgusu yapılır. \nÖrnek çağrım :\n GET /yetkilendirme-kodu?rizaNo=123&rizaTip=O \n YÖS, "ILERI_TARIHLI_ODEME_EMRI_RIZASI" kaynağı için bildirim yapıldı ise; GET /yetkilendirme-kodu endpointi ile yetkod sorgusu yapılır. \nÖrnek çağrım :\n GET /yetkilendirme-kodu?rizaNo=123&rizaTip=I \n YÖS, "DUZENLI_TEKRARLI_ODEME_EMRI_RIZASI" kaynağı için bildirim yapıldı ise; GET /yetkilendirme-kodu endpointi ile yetkod sorgusu yapılır. \nÖrnek çağrım :\n GET /yetkilendirme-kodu?rizaNo=123&rizaTip=D \n YÖS, "HESAP_BILGISI_RIZASI" kaynağı için bildirim yapıldı ise; GET /yetkilendirme-kodu endpointi ile yetkod sorgusu yapılır. \nÖrnek çağrım :\n GET /yetkilendirme-kodu?rizaNo=123&rizaTip=H \n İSTEK: \n YÖS, rıza numarasını ve isteğin ÖBH ya da HBH olmasına göre değişen rıza tipini parametre olarak istek talebine ekler. Rıza tipinin alabileceği değerler  TR.OHVPS.DataCode.RizaTip  sıralı veri tiplerinde belirtilmiştir. \n HHS\'nin, yetkilendirme yöntemi "Ayrık Gkd" ise  rıza numarası ile yetki kodu değerini dönmesi beklenmektedir. Yönlendirmeli GKD için bu endpoint "yetKod" değerini dönmemelidir. Yönlendirmeli GKD’ye ait bir rıza no ile yetkilendirme kodu API kullanılarak yet_kod alınmak istendiğinde HHS tarafından  TR.OHVPS.Resource.NotFound  hatası verilmelidir. \n YANIT: \n HHS yanıt nesnesi içerisinde, ÖHK\'ya ait yetki kodunu, rıza no ve rıza durumu ile birlikte YÖS\'e iletir. \n \n \n \n Alan Adı \n JSON Alan Adı \n Format:Veri modeli İsmi \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Yetki Kodu \n yetKod \n AN1..255 \n Z \n GKD sürecinde üretilen yetkilendirme kodudur. Tek kullanımlık olup, aynı yetKod ile birden fazla token alınamaz. yetKod Parametresinin yaşam ömrü 5 dakika olmalıdır. \n \n \n RızaNo \n rizaNo \n AN1..128 \n Z \n Rıza nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n Rıza Durumu \n rizaDrm \n AN1 \n Z \n TR.OHVPS.DataCode.RizaDurumu  sıralı veri tipini değerlerinden birini alır. \n \n \n \n Ayrık GKD sürecinde, yetkod değerini alan YÖS; erişim belirteci API ile GKD sürecini tamamlar. \n Erişim Belirteci API \n POST /erisim-belirteci \n İSTEK: \n YÖS erisim-belirteci erişim adresini 2 amaçla kullanır: \n \n \n Bir önceki adımdan aldığı rizaNo, rizaTip (ödeme emri başlatma hizmetinde “O”, hesap bilgisi hizmetinde “H”, ileri tarihli ödeme emri başlatma hizmetinde "I") ve GKD sonrası dönülen yetKod bilgilerini kullanarak HHS nezdinde ErisimBelirteci nesnesi oluşturmak üzere istekte bulunur. YÖS’ün istekte bulunabilmesi için GKD adımının başarılı bir şekilde tamamlanması rizaDrm bilgisinin ‘yetkilendirildi’ olması gerekir. Erişim Belirteci nesnesi ile rızası nesnesi (Ödeme Emri Rızası, Hesap Bilgisi Rızası veya İleri Tarihli Ödeme Emri Rızası) arasındaki ilişki rıza numarası üzerinden sağlanır. \n \n \n Aldığı erişim belirtecinin Geçerlilik Süresinin dolduğu durumda, yenileme belirteci karşılığında yeni bir erişim belirteci alması gerekmektedir. \n \n \n POST /erisim-belirteci isteğinin (REQUEST) gövdesinde (BODY)  “ErisimBelirteciIstegi” nesnesi (Tablo-23) kullanılır. İstek başarıyla sonuçlanırsa HHS kaynak sunucusunda “ErisimBelirteci” nesnesi (Tablo 24) oluşturulur veya (Yenileme Belirteci için) güncellenir. Rıza durumu “Yetki Kullanıldı” olarak güncellenir. \n Erişim Belirteci POST işlemi sonucunda HTTP 200 dönülmesi gerekmektedir. \n “ErisimBelirteciIstegi” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format:Veri modeli İsmi \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n RızaNo \n rizaNo \n AN1..128 \n Z \n Rıza nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n Rıza Tipi \n rizaTip \n AN1 \n Z \n O,H,I,D (TR.OHVPS.DataCode.RizaTip) \n \n \n Yetki Tipi \n yetTip \n AN1..50 \n Z \n “yet_kod” yada “yenileme_belirteci” değerini alabilir.  (TR.OHVPS.DataCode.YetTip) \n \n \n Yetki Kodu \n yetKod \n AN1..255 \n K \n GKD işleminden dönen yetkilendirme kodudur. Tek kullanımlık olup, aynı yetKod ile birden fazla token alınamaz. yetKod Parametresinin yaşam ömrü 5 dakika olmalıdır. yetTip = “yet_kod” ise zorunludur. \n \n \n Yenilenme Belirteci \n yenilemeBelirteci \n AN1..4096 \n K \n Erişim belirtecinin yenilenmesi amacıyla kullanılır. yetTip = “yenileme_belirteci” ise kullanımı zorunludur. \n \n \n \n BAŞARILI YANIT: \n POST işleminin RESPONSE gövdesini (BODY) oluşturan “erisimBelirteci” nesnesinde bulunan erişim belirteci değeri ödeme emrinin başlatılması esnasında kullanılır. \n "ErisimBelirteci" nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format:Veri modeli İsmi \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Erişim Belirteci \n erisimBelirteci \n AN1..4096 \n Z \n Yetkilendirme Kodu karşılığında HHS tarafından dönülen ve sonraki hesap bilgisi ve ödeme emri servislerine erişimde kullanılan bilgidir. Bölüm 3.6 Karakter Kodlama   bölümünde açıklanan karakter formatında gönderilmesi beklenmektedir. Yenileme belirteci ile birden fazla erişim belirteci alınması durumunda verilen tüm erişim belirteçlerinin süreleri bitene kadar geçerli olmalıdır. \n \n \n Geçerlilik Süresi \n gecerlilikSuresi \n N1..9 \n Z \n Erişim Belirtecini saniye cinsinden geçerlilik süresidir.  Erişim belirteci geçerli olduğu son tarih ; Hesap Bilgisi Rızası için en fazla 30 gün en az ise 1 gün olmalıdır.  Erişimin Geçerli Olduğu Son Tarih(erisimIzniSonTrh); Erişim Belirteci Geçerlilik Süresi\'nden küçük ise Erişimin Geçerli Olduğu Son Tarih değeri ile sınırlıdır. Ödeme Emri Rızası ,İleri Tarihli Ödeme Emri Rızası ve Düzenli Tekrarlı Ödeme Emri Rızası için 5 dakika olmalıdır. \n \n \n Yenileme Belirteci \n yenilemeBelirteci \n AN1..4096 \n Z \n Erişim belirtecinin yenilenmesi amacıyla kullanılır.   Bölüm 3.6 Karakter Kodlama  bölümünde açıklanan karakter formatında gönderilmesi beklenmektedir.  Yenileme Belirteci ile Erişim Belirteci isteği yapıldığında HHS\'nin döndüğü yanıt içerisindeki yenilemeBelirteci değerini kesinlikle değiştirmemesi gerekmektedir.Yenileme belirteci rıza süresi boyunca güncellenmemelidir. \n \n \n Yenileme Belirteci Geçerlik Süresi \n yenilemeBelirteciGecerlilikSuresi \n N1..9 \n Z \n Yenileme belirtecinin saniye cinsinden geçerlilik süresidir. Yenileme belirtecinin geçerli olduğu son tarih ; Hesap Bilgisi için Erişimin Geçerli Olduğu Son Tarih ile sınırlı olmalıdır. Bu tarih geldiği zaman Hesap Bilgisi Rıza Durumunu ”Yetki Sonlandırıldı” statüsüne çekilmesi gerekir. Ödeme Başlatma için Rıza Oluşturma Zamanından 15 gün sonrası olmalıdır. 15 gün süresi sorgulama servislerinin çağrımını destekleyecek şekilde uzun tutulmuştur. Ödeme emri 5 dakika içinde gerçekleştirilmelidir. Gerçekleşmediğinde 4.2.8 bölümünde aktarılan rıza statü güncellemesi yapılmalıdır.  Yenileme belirteci geçerlilik süresi, İleri Tarihli Ödeme Emri Başlatma için talimatın gerçekleşeceği zamandan 15 gün sonrası olmalıdır. Talimat gerçekleştikten sonrası için 15 gün süreyle sorgulama servislerinin çağrımını destekleyecek şekilde uzun tutulmuştur. Yenileme belirteci geçerlilik süresi, Düzenli Tekrarlı Ödeme Emri Başlatma için talimatın gerçekleşeceği  son ödeme günü  zamanından 5 gün sonrası olmalıdır. Son talimat gerçekleştikten sonrası için 5 gün süreyle sorgulama servislerinin çağrımını destekleyecek şekilde uzun tutulmuştur. \n \n \n \n erisim-belirteci erisim noktasından elde edilen erisimBelirteci, ilişkilendirildiği nesne veya işlem için gönderilen POST isteği başlığında x-access-token alanında iletilir. \n Yenilenme Belirteci (refreshToken) kullanılarak Erişim Belirteci (accessToken) alındığında, dönen yanıttaki Yenileme Belirteci Geçerlik Süresi (yenilemeBelirteciGecerlilikSuresi) geçen süre eksiltilerek, kalan zamanın saniye cinsinden hesaplanmasıyla iletilmelidir. \n Erişim Belirteci API çağrımı sırasında rıza durumları kontrol edilmelidir. Bu kontrollerin nasıl yapılması gerektiği 4-Rıza Durumları bölümünde aktarılmıştır. \n Yenileme belirteci karşılığında yeni bir erişim belirteci alınması sırasında HHS\'nin döndüğü hata yanıtında httpCode = 401 ve errorCode = "TR.OHVPS.Connection.InvalidToken" gelirse YÖS önce rızanın durumu sorgulamalıdır.  \nEğer geçerli bir rıza ise; HHS veya YÖS tarafında bir sorun olduğu anlaşılmalıdır. Sistem tarafından hata üretilmeli ve sorun incelenmelidir. \nEğer geçerli bir rıza değil ise YÖS tarafındaki rıza durumu güncellenmelidir. \n'},{title:"5.\tGüçlü Kimlik Doğrulama",frontmatter:{},regularPath:"/v2.0.0/contents/gkd.html",relativePath:"v2.0.0/contents/gkd.md",key:"v-24f9d8c6",path:"/v2.0.0/contents/gkd.html",headers:[{level:2,title:"5.1.\tYönlendirmeli Güçlü Kimlik Doğrulama",slug:"_5-1-yonlendirmeli-guclu-kimlik-dogrulama"},{level:2,title:"5.2.\tAyrık Güçlü Kimlik Doğrulama",slug:"_5-2-ayrık-guclu-kimlik-dogrulama"},{level:3,title:"5.2.1\tStatik Model",slug:"_5-2-1statik-model"},{level:2,title:"5.3.\tYönlendirme/Bildirim Adresleri ve Durum Kodu Parametresi",slug:"_5-3-yonlendirme-bildirim-adresleri-ve-durum-kodu-parametresi"},{level:2,title:"5.4  Güçlü Kimlik Doğrulama Kontrolleri",slug:"_5-4-guclu-kimlik-dogrulama-kontrolleri"}],content:" 5.\tGüçlü Kimlik Doğrulama \n Müşteri için güçlü kimlik doğrulama, ÖHK’nın (müşterinin) kimliğinin doğrulamada kullanılan ve bir bileşenin ele geçirilmesinin diğer bileşenin güvenliğini tehlikeye atmayacağı en az iki bileşenden oluşan, bu iki bileşenin de müşterinin “bildiği”, “sahip olduğu” veya “biyometrik bir karakteristiği olan” bileşen sınıflarından farklı ikisine ait olacak şekilde seçildiği yöntemi tanımlar. \n Ödeme ve Elektronik Para Kuruluşlarının Bilgi Sistemleri ile Ödeme Hizmeti Sağlayıcılarının Ödeme Hizmetleri Alanındaki Veri Paylaşım Servislerine İlişkin Tebliğ uyarınca hesap bilgisi hizmetinde müşterinin onayının alınması esnasında ve ödeme emri başlatma hizmetinde her bir ödeme emri başlatma işleminde  HHS tarafından müşteriye güçlü kimlik doğrulama (GKD) uygulanması esastır.  Buna göre: \n \n \n Hesap bilgisi hizmetinde ÖHK’nın onayının alınması esnasında  Tebliğin 26 ncı maddesinin 1 inci fıkrası uyarınca  HHS tarafından ÖHK’ya GKD uygulanır. \n \n \n Ödeme emri başlatma hizmetinde,  Tebliğin 26 ncı maddesinin 2 nci fıkrası uyarınca  HHS tarafından ÖHK’ya güçlü kimlik doğrulama uygulanır ve işlem doğrulama kodu ile ÖHK’nın onayı alınır. \n \n \n Ödeme emri başlatma hizmetinde,  Tebliğin 26 ncı maddesinin 3 nci fıkrası uyarınca  HHS tarafından ÖHK’ya güçlü kimlik doğrulama uygulanmasına ilişkin istisna veya ilave güvenlik önlemleri işbu API İlke ve Kuralları belgesinde tanımlanır. \n \n \n HHS, güçlü kimlik doğrulama sürecinde ÖHK’nin sahip olduğu bileşen sınıfı olarak SMS OTP ya da SMS ile işlem doğrulama kodu kullanabilir. \n \n \n HHS, aşağıdaki hallerde veya  Tebliğin 10 uncu maddesinin ikinci fıkrasında  belirtilen risk değerlendirmesi sonucuna göre tek bileşen ile kimlik doğrulama yapabilir. \n \n Ödemenin göndereni ve alıcısının aynı olması, \n Daha önce tanımlanmış güvenli alıcılar listesine ödeme yapılması, \n ÖHK’nin talimatına istinaden gerçekleştirilen düzenli bir ödeme olması. \n \n \n \n Tek bileşen ile kimlik doğrulama yapılan bu işlemlerle ilgili olarak gerçekleştirilen işlemin müşteri tarafından yapıldığını ispat etme yükümlülüğü HHS’ye ait olur. \n \n \n İşlem Doğrulamada  Tebliğin 3 üncü maddesinin birinci fıkrası ğğ bendindeki  işlem bilgisi tanımına uygun olarak aşağıdaki bilgiler ile  Tebliğin 3 üncü maddesinin birinci fıkrası hh bendinde  tanımlanan işleme özel üretilmiş işlem doğrulama kodu birlikte kullanılır. \n \n Alıcı Unvan (Kolas akışında maskeli olarak)  (ödeme emri başlatma hizmeti) \n Tutar (ödeme emri başlatma hizmeti) \n Referans bilgisi (8 karakterden küçük ise alanın tüm değeri, büyük ise ilk 4 ve son 4 hanesi) \n \n İşleme ait yukarıdaki bilgilerden en az biri değiştiği zaman  Tebliğin 3 üncü maddesinin birinci fıkrası hh bendinde  belirtildiği gibi yeni bir işlem doğrulama kodu üretilecek şekilde akış kurgulanmalıdır. \n \n \n İşlem doğrulama kodunun gönderilmesinden HHS sorumludur. HHS,  Tebliğin 10 uncu maddesinin ikinci fıkrasında  belirtilen risk değerlendirmesi sonucuna göre işlem doğrulama kodu kullanmaksızın ÖHK’nın onayını alabilir. İşlem doğrulama kodu kullanılmayan işlemlerle ilgili olarak gerçekleştirilen işlemin ÖHK tarafından yapıldığını ispat etme yükümlülüğü HHS’ye aittir. \n \n \n ÖHVPS API İlke ve Kuralları kapsamında iki adet Güçlü Kimlik Doğrulama (GKD) yöntemi kullanılacaktır: \n \n Yönlendirmeli (Redirect) GKD Yöntemi \n Ayrık (Decoupled) GKD Yöntemi \n \n \n \n Hem web hem mobil uygulama hizmeti bulunan katılımcılar için her iki uygulama özelinde de yönlendirme yapılması zorunludur. Web ya da mobil uygulamalardan sadece birinin olması durumunda ilgili uygulama özelinde yönlendirme yapılması zorunludur. \n 5.1.\tYönlendirmeli Güçlü Kimlik Doğrulama \n Yönlendirmeli GKD Yönteminde, müşteri kimlik doğrulama için YÖS tarafından HHS arayüzüne yönlendirilir. \n Müşteri HHS’ye (uygulama veya web arayüzü vasıtasıyla) yönlendirildikten sonra müşterinin güçlü kimlik doğrulaması adım adım ve doğrudan HHS ile müşteri arasında yürütülür. GKD’nin tamamlanmasından sonra müşteri tekrar YÖS uygulamasına yönlendirilir. \n Yönlendirmeli GKD Yöntemi için üst düzey örnek iş akışı aşağıdaki adımlardan oluşur: \n \n YÖS, GKD için HHS tarafından tanımlanan arayüze (tarayıcı ya da uygulama) yönlendirme yapar. \n Müşteri, YÖS arayüzünden ayrılır, yönlendirildiği HHS arayüzü üzerinde kimlik doğrulama işlemlerini gerçekleştirir. \n GKD tamamlandıktan sonra müşteri, YÖS arayüzüne tekrar yönlendirilir ve işlem sonucu görüntülenir. \n \n Yönlendirmeli GKD için temel gereklilikler şunlardır: \n \n Ödeme hizmeti (hesap bilgisi veya ödeme emri başlatma hizmeti) tarayıcı ya da uygulama tabanlı bir şekilde sunulabilir. Web ya da mobil uygulamalardan sadece birinin olması durumunda ilgili uygulama özelinde yönlendirme yapılması zorunludur. \n \n Tarayıcı Tabanlı Yönlendirme \n Yönlendirmeli GKD Yönteminde; rıza isteğine başarılı yanıt alındıktan sonra, ÖHK, kimlik doğrulama için YÖS tarafından HHS arayüzüne yönlendirilir.\nYÖS, yönlendirme akışını kendi sunucusundan karşılayacağı bir istek ile başlatmalıdır. YÖS web arayüzündeki bu yapı, 302 yanıt kodu ve yanıt başlığındaki Location değeri ile ÖHK tarayıcısını HHS adresine yönlendirmelidir. Bu sayede GKD, HHS tarafında başlayabilir. \n YÖS tarafındaki yönlendirme servisi için örnek response; \n HTTP/1.1 302 Found\nLocation: {{hhsYonAdr}}\n \n ÖHK, HHS’ye (app veya web arayüzü vasıtasıyla) yönlendirildikten sonra ÖHK'nin güçlü kimlik doğrulaması HHS ile ÖHK arasında yürütülür. GKD’nin tamamlanmasından sonra ÖHK tekrar YÖS uygulamasına yönlendirilir. \n HHS, yönlendirme akışını kendi sunucusundan karşılayacağı bir istek ile başlatmalıdır. HHS web/app arayüzündeki bu yapı, ÖHK'nin oturumunu güvenli bir şekilde kapatmalıdır. Ardından 302 yanıt kodu ve yanıt başlığındaki Location değeri ile ÖHK tarayıcısını YÖS adresine yönlendirmelidir. \n HTTP/1.1 302 Found\nLocation: {{yosYonAdr}}&rizaDrm=Y&yetKod=xx&rizaNo=yy&rizaTip=O\n \n HHS’nin web arayüzüne, \n \n HHS’nin mobil uygulamasının olmadığı, \n ÖHK’nın ödeme hizmetini (hesap bilgisi veya ödeme emri başlatma hizmeti) sunduğu mobil cihazda HHS uygulamasının yüklü olmadığı, \ndurumlarda yönlendirme yapılır. \n \n YÖS’ün mobil uygulaması varsa mobil cihazda uygulamadan tarayıcıya, YÖS’ün mobil uygulaması yoksa ödeme hizmetinin sunduğu cihazda (Kişisel Bilgisayar veya Mobil Cihaz) tarayıcı üzerinden yönlendirme yapılır. \n Uygulama Tabanlı Yönlendirme \n ÖHK’nın ödeme hizmetini (hesap bilgisi veya ödeme emri başlatma hizmeti) YÖS’ün mobil uygulaması ile kullanıyorsa, aynı mobil cihazda HHS’nin mobil uygulamasının yüklenmiş olması durumunda, ÖHK doğrulamasının HHS mobil uygulaması tarafından yapılması için uygulama tabanlı yönlendirme yapılır. Böylece ÖHK, ödeme hizmetine erişim için HHS’nin mobil kanalına erişim sırasında kullandığı doğrulama yöntemini ile doğrulanabilir. \n HHS'nin mobil uygulaması olması durumunda hhsYonAdr olarak universal link kullanması gerekmektedir. \n Tablo 5: Yönlendirmeli Güçlü Kimlik Doğrulama Kanalları \n \n \n \n Doğrulama Yöntemi \n YÖS Olası Ortam \n HHS Olası Ortam \n \n \n \n \n Tarayıcı Tabanlı Yönlendirme \n Kişisel Bilgisayar (masaüstü, dizüstü)/Mobil Cihaz \n Kişisel Bilgisayar (masaüstü, dizüstü) / Mobil Cihaz \n \n \n Uygulama Tabanlı Yönlendirme \n Mobil Cihaz \n Mobil Cihaz \n 5.2.\tAyrık Güçlü Kimlik Doğrulama \n Ayrık Güçlü Kimlik Doğrulama, bir kullanıcının kimliğinin, bir işlem başlatıldıktan sonra ayrı bir şekilde doğrulandığı yönteme verilen addır. Bu GKD modelinde, kimlik doğrulama işlem sürecinden \"ayrıştırılmıştır\". Kullanıcılar, başka bir arayüze yönlendirilmek yerine ( tarayıcı veya uygulama tabanlı yönlendirme gibi), ayrı bir kanal üzerinden (telefonlarında bir uygulama bildirimi gibi) işlemi doğrulamaları için bildirim alır.\nKullanıcı, işlemi tamamen ayrı bir cihaz veya uygulama kullanarak doğrulayabilir. \n İlk fazda Ayrık GKD'de QR’lı modeller kullanılmayacaktır. \n Ayrık GKD uygulamalarının farklı örnekleri bulunmaktadır. Ancak yaygın olan yaklaşım, bir web arayüzü ve bir mobil uygulamanın kombinasyonunu kullanmayı içerir. \n Mobil uygulaması bulunan HHS'ler için Ayrık GKD desteklenmesi zorunludur.  HHS’nin web olduğu durumda Ayrık GKD akışı uygulanmayacaktır. Mobil uygulaması bulunup müşteri özelinde mobil aktiflik kontrol süreci HHS inisiyatifindedir. Ayrık GKD sürecinde HHS tarafında sadece mobil uygulama üzerinden GKD yapılmalıdır. ÖHK’nın web uygulamasına yönlendirme yapmaması gerekmektedir. \n YÖS rolünde Ayrık GKD akışının ÖHK’ya sorularak başlatılmasına gerek bulunmamakla beraber bu bilginin ÖHK’ya sorulması YÖS inisiyatifindedir. YÖS olarak, Ayrık GKD iş akışları kapsamında ÖHK’ya ayrık GKD öncesi HHS mobil uygulamasının varlığı sorularak (bildirim ayarlarının açık olması gerektiği bilgisi de verilebilir) ilerlenebilir. Aynı zamanda Ayrık GKD ile rıza sürecinin başlatılması zorunlu değildir. Rıza süreci başlatılırken yetkilendirme yöntemi YÖS inisiyatifindedir. \n Örnek bir akış şu şekildedir: \n \n İşlem Başlatma (YÖS Web/Mobil Arayüzü):  ÖHK bir işlemi YÖS’ün web/mobil arayüzünde başlatır. YÖS uygulaması, ÖHK'nın tekil bir kullanıcı kimliğini rızaya ekleyerek bir rıza başlatma işlemini HHS’ye iletir. HHS, tekil kullanıcı kimliğini kullanarak ÖHK'nın mobil uygulamasına bir bildirim gönderir. \n Kimlik Doğrulama İsteği (HHS Mobil Uygulama):  ÖHK Mobil uygulama bildirimi alır ve mobil uygulama ÖHK'ya  kimlik doğrulama isteği sunar. HHS’nin BDDK tarafından belirlenmiş GKD yöntemlerine uygun davranması beklenmektedir. \n Kimlik Doğrulama Onayı (HHS Mobil Uygulama):  Mobil uygulama, ÖHK’nın kimlik doğrulama girişimini doğrular. Başarılı olursa rıza onayı sonrası mobil uygulama, 'Ayrık Yetkilendirme Başarılı' olay bildirimini YÖS’e gönderir. \n İşlem Onayı (YÖS Web/Mobil Arayüzü):  YÖS,  HHS'den gelen 'Ayrık Yetkilendirme Başarılı' olay bildirimine konu olan rızayı kullanarak yetkilendirme koduna erişir. Bundan sonraki süreç erişim belirteci alınması servisi ile devam eder. \n \n Ayrık Güçlü Kimlik Doğrulamanın Olay Bildirim Servisleri ile olan Bağımlılıkları \n Ayrık GKD sürecinde; HHS'nin yetkilendirme kodunu YÖS'e iletmesi için gerekli önkoşul olan ÖHK doğrulaması adımının tamamlanmasını olay bildirimi ile YÖS'e yapması gerekmektedir.\nBu nedenle YÖS'lerin eğer Ayrık GKD sürecini destekleyecek ise;  /olay-dinleme endpointini açarak olay bildirimi alması zorunludur. \n Özetle: \n Yönlendirmeli GKD \n \n HHS mobil uygulaması olması durumunda yönlendirme adresi olarak universalLink kullanmalı. \n Bu link tanımı  uygulama var ise uygulamayı aç yoksa webden devam et şeklinde olmalı. \n YÖS’ün mobilden mi webden mi geldiği HHS açısından önemli değildir. HHS olarak YÖS hangi adresi yonAdr değerinde göndermiş ise yetkilendirme süreci bittiğinde o adrese yönlendirme yapılmalıdır. \n \n Ayrık GKD \n \n Mobil uygulaması bulunan HHS'ler için Ayrık GKD desteklenmesi zorunludur. HHS’nin web olduğu durumda Ayrık GKD akışı uygulanmayacaktır. Mobil uygulaması bulunup müşteri özelinde mobil aktiflik kontrol süreci HHS inisiyatifindedir. Ayrık GKD sürecinde HHS tarafında sadece mobil uygulama üzerinden GKD yapılmalıdır. ÖHK’nın web uygulamasına yönlendirme yapmaması gerekmektedir. \n ÖHK’nin Mobil uygulamasının olmadığını tespit edebildiğiniz her durum için rıza oluşturma aşamasında “TR.OHVPS.Business.CustomerMobileApplicationNotFound” hatası döülür. \n HHS, ÖHK’nın mobil uygulamasının bulunmadığı bilgisine ulaşamazsa kendisinin belirleyeceği bildirim yöntemlerinden biri ile ÖHK’ye bilgilendirme yapar. Bildirim yöntemi SMS ise ÖHK’ya mobil uygulamasını açtıracak şekilde adres iletir, Web uygulamayı açtıracak bir link iletilmemelidir. ÖHK bu bildirimi dikkate almazsa/alamazsa veya ÖHK’da mobil uygulama yok ise bu durumda rıza süre aşımından iptal olur. \n ÖHK mevcut bankacılık işlemlerinde bildirimi nasıl gönderiyorsanız (Örneğin: Anlık bildirim gönderildi, alınmadı, SMS’e dönüldü gibi.) aynı şekilde bildirim göndererek ÖHK’nin uygulama üzerinden rızayı onaylaması beklenir. Buradaki akış HHS’nin diğer ürünleri için verdiği müşteri deneyimi ile paralel olmalıdır. \n 5.2.1\tStatik Model \n YÖS'ün ÖHK'yı tanıdığı ve ÖHK'ya ait tanımlayıcı bilgileri HHS'ye aktarabildiği durumda kullanılmaktadır. Buradaki ÖHK'ya ait tanımlayıcı bilgiler TCKN, MNO , YKN, PNO, GSM, IBAN olarak belirlenmiştir. \n Akış aşağıdaki gibi kurgulanmıştır: \n   \n \n \n ÖHK, YÖS uygulaması üzerinde işlem başlatır. \n \n \n ÖHK, YÖS uygulaması içerisinde, farklı bir ortam üzerinden HHS doğrulamasını gerçekleştirmek istediğini belirtir. ÖHK'yı tanıma tip ve değerleri YÖS ÖHK'dan talep edebileceği gibi, YÖS sisteminde hali hazırda kayıtlı bilgilerle de akışı devam ettirebilir.  \n \n \n ÖHK, YÖS'ün müşterisi ve YÖS uygulamasına login ise tek seferlik ödeme akışı başlatamaz. \n \n \n YÖS tarafından başlatılan tek seferlik bir Ödeme işleminin Ayrık GKD ile onaylanacağı durumda;\nYÖS’ün ilgili kullanıcıya ait “ÖHK Tanım Değer” verisinin yanında işleme ait ve ilgili ÖHK ile eşleştirilmiş olan  ve sadece YÖS ile ÖHK’nın bilebileceği bir değerin daha ÖHK tarafından sağlanması ve YÖS tarafından kontrol edilerek eşleşen Ödeme emrinin HHS’ye iletilmesi gerekmektedir. Örneğin; bu değer YÖS tarafında yapılan tek seferlik ödeme işlemine ait fatura numarası. \n \n \n YÖS önyüzde ÖHK'dan aldığı ohkTanimTip ve ohkTanimDeger değerlerini kimlik tür ve kimlik değeri alanlarına atamamalıdır. \n \n \n YÖS, ayrık GKD ile işlem başlatabileceği HHS'lerin listesini HHS API'de yer alan \"hizmetTipi\"=\"01\" parametresi ile alabilir. \n \n \n YÖS, ÖHK bilgileri ile rıza oluşturur. Rıza nesnesi içerisinde yer alan GKD nesnesinde ilgili parametreler aşağıdaki şekilde doldurulur: \n \n \n ohkTanimTip ve ohkTanimDeger parametreleri \nBu metodda; ayrikGkd nesnesi içerisindeki \"ohkTanimTip\" parametresi TR.OHVPS.DataCode.ohkTanimTip sıralı veri tiplerinden TCKN, MNO , YKN, PNO, GSM, IBAN değerlerinden birini alabilir. ohkTanimDeger parametresi de seçilen tipe ait ÖHK'ya ait değeri içermelidir.Rıza başlatma akışı içerisinde kimlik bilgisinin olduğu durumlarda; ÖHK'ya ait kimlik verisi(kmlk.kmlkVrs) ile ayrık GKD içerisinde yer alan OHK Tanım Değer alanı (ayrikGkd.ohkTanimDeger) birebir aynı olmalıdır.Kimlik alanı içermeyen tek seferlik ödeme emri akışlarında bu kural geçerli değildir. GSM ve IBAN değerleri sadece tek seferlik ödemelerde kullanılabilir. \n YÖS'ten ohkTanimTip olarak gelen IBAN bilgisi sadece ÖHK'yı tanımak için kullanılabilir. Tanım tipi IBAN ile başlatılan bir işlemde ÖHK, başka bir IBAN ile ödeme başlatabilir. \n Kurumsal müşteriler için kmlkTur ve kmlkVrs alanları ohkTanimTip ve ohkTanimDeger alanlarında gönderilmelidir. \n \n \n yetYntm parametresi \nyetYntm parametresi  Ayrık GKD  akışını ifade eden \"A\" değerini almalıdır.  \n \n \n \n \n Örnek bir istek : \nPOST/ohvps/obh/s2.0/odeme-emri-rizasi \n RizaNesnesi \n {\n...\n  \"gkd\": {\n    \"yetYntm\": \"A\",\n     \"ayrikGkd\" :{\n         \"ohkTanimTip\" : \"TCKN\" \n         \"ohkTanimDeger\": \"11232123212\"\n     }    \n  },\n...\n}\n \n \n \n YÖS, ayrık GKD ile işlem başlatabileceği HHS'lerin listesini HHS API'de yer alan \"hizmetTipi\":\"01\" parametresi ile alabilir.\nYÖS, ayrık GKD desteklemeyen HHS'ye Ayrık GKD yöntemiyle rıza başlatma isteği yapması durumunda HHS tarafından  TR.OHVPS.Business.DecoupledAuthenticationNotSupported  hatası iletilmelidir. YÖS ilgili işlemi “Yönlendirmeli” akışa çekip süreci ilerletebilir. \n \n \n HHS tarafında ÖHK'nın mobil uygulaması bulunmaması durumu tespit edilebildiği durumda Ayrık GKD ile başlatılan rıza akışlarında hata mesajı vermelidir. HHS tarafından  TR.OHVPS.Business.CustomerMobileApplicationNotFound  hatası iletilmelidir. YÖS ilgili işlemi “Yönlendirmeli” akışa çekip süreci ilerletebilir. HHS, ÖHK’nın mobil uygulamasının bulunmadığı bilgisine ulaşamazsa kendisinin belirleyeceği bildirim yöntemlerinden biri ile ÖHK’ye bilgilendirme yapar. Bildirim yöntemi SMS ise ÖHK’ya mobil uygulamasını açtıracak şekilde adres iletir, Web uygulamayı açtıracak bir link iletilmemelidir. \n \n \n HHS, YÖS'ün AYRIK_GKD_BASARILI ve AYRIK_GKD_BASARISIZ olay tipleri için olay aboneliğinin varlığını kontrol eder.  YÖS iki olay tipine de abone olmak zorundadır. Eğer olay aboneliği yoksa HHS tarafından  TR.OHVPS.Business.EventSubscriptionNotFound  hata kodu iletilmelidir. \n \n \n HHS \"gkd\" nesnesi için alan kontrollerini gerçekleştirir.   \"yetYntm\" = \"A\" gönderilmiş ise \"ayrikGkd\" nesnesinin dolu gönderilmesi zorunludur. Gönderilmemesi durumunda HHS tarafından  TR.OHVPS.Resource.InvalidFormat  hata kodu iletilmelidir. \n \n \n Rıza başlatma akışı içerisinde kimlik bilgisinin olduğu durumlarda; ÖHK'ya ait kimlik verisi(kmlk.kmlkVrs) ile ayrık GKD içerisinde yer alan OHK Tanım Değer alanı (ayrikGkd.ohkTanimDeger) birebir aynı olmalıdır. Aynı olmadığı durumda HHS tarafından  TR.OHVPS.Business.CustomerInfoMismatch  hatası iletilmelidir.\nKimlik alanı içermeyen tek seferlik ödeme emri akışlarında bu kural geçerli değildir. GSM ve IBAN değerleri sadece tek seferlik ödemelerde kullanılabilir. \n \n \n Tek seferlik ödeme işlemlerinde \"ohkTanimTip\" = \"GSM\"/\"IBAN\" olarak gönderilmiş ise, HHS sisteminde bu GSM/IBAN ile eşleşen müşterileri taramalıdır. GSM/IBAN bilgisi ÖHK bazında tekil bir kullanıcıya erişim imkanı sağlamaz ise  TR.OHVPS.Business.InvalidCustomerInfo  hatasını iletmelidir. \n \n \n Kontrollerin başarılı olması durumunda HHS rızayı oluşturur ve ÖHK tekil verisi ile ulaştığı ÖHK'ya bilgilendirme mesajı gönderir.      Bilgilendirme mesajı kısa mesaj ya da anlık bildirim mesajı olabilir. ÖHK’nın birden fazla cihazda aktivasyonu varsa HHS’nin iç süreçlerine göre mevcut durumda nasıl bir bildirim süreci işletiliyorsa aynı şekilde ilerlenebilir.  \n \n \n Kurumsal müşteriler için, hangi kullacıya bildirim gitmesi isteniyor ise, rıza aşamasında o kişi ayrikGkd nesnesinde gönderilir. HHS'nin rıza içerisindeki ohkTur değerine göre,  gelen bildirime verilen cevaba uygun uygulamasını açmalıdır. Kurumsal ÖHK için rıza geldi ise, kurumsal giriş sayfası; bireysel ÖHK için rıza geldi ise bireysel giriş sayfası müşterinin önüne açılmalıdır ve ilgili hesaplara erişime izin vermelidir. \n \n \n ÖHK'ya bir bildirim gelmemesi durumunda, HHS kendi sisteminde GKD sürecine devam edemez. 5 dakika sonunda rıza durumu Yetki Bekleniyor'dan Rıza İptal / Süre Aşımı (İptal kod 04) durumuna çeker. \n \n \n \n \n ÖHK, HHS sisteminden gelen bildirim mesajını alır. HHS sistemine login olduktan sonra işleme onay verilmezse veya GKD kontrolleri başarısız olursa HHS Olay Bildirim servisleri aracılığı ile GKD sürecinin sonlandığını YÖS'e iletir. Olay tipi \"AYRIK_GKD_BASARISIZ\" olacak şekilde bir POST /olay-dinleme servis çağrısı yapılır.YÖS kendisine gelen olay bildirimi ile\nrıza sorgulaması yaparak iptal detay kodunu öğrenebilir. \n \n \n ÖHK, HHS sisteminde login olduktan sonra işleme onay verirse; HHS tarafından rıza ile ilişkili yetkod değeri üretilir.HHS, YÖS'e ÖHK için \"yetkod\" değeri üretildiğinin bilgisini Olay Bildirim servisleri aracılığı ile iletir. Olay tipi \"AYRIK_GKD_BASARILI\" olacak şekilde bir POST /olay-dinleme servis çağrısı yapılır. \n \n \n YÖS kendisine gelen olay bildirimi ile \"yetkod\" değerinin HHS'de üretildiğinin bilgisini alır. \"yetkod\" değerini öğrenebilmek için HHS'yi sorgulaması gerekmektedir.  \nHHS'nin açacağı   GET /yetkilendirme-kodu endpointi   ile bu bilgiye erişebilir. \n \n \n YÖS, \"yetkod\" ile POST /erisim-belirteci endpointinden erişim belirteci alır. Böylelikle ÖHK'nın Ayrık GKD süreci tamamlanmış olur. \n 5.3.\tYönlendirme/Bildirim Adresleri ve Durum Kodu Parametresi \n CSRF Ataklarından korunmak için ve YÖS uygulamasının bir önceki durumunu restore edebilmesi için; YÖS tarafından iletilen yönlendirme ve bildirim adreslerine , Oauth2 standartlarındaki state parametresine eşdeğer,   durum kodu (drmKod)  parametresinin eklenmesi gerekmektedir. Durum kodu parametresi YÖS tarafından üretilen, tekil ve kolay tahmin edilemeyen bir değer olmalıdır. Rıza isteği gönderimi aşamasında oluşturulmalıdır. YÖS uygulamasında uygun bir yerde saklanmalıdır (cookie, session, local storage gibi) . \n Durum kodu, rıza isteğindeki yönlendirme adresine parametre olarak eklenir.  GKD süreci sonrasında yetki kodu ile birlikte bu bilgi, HHS tarafından YÖS’e iletilir. YÖS sakladığı değer ile parametre olarak gelen değerin eşitliğini kontrol eder. Aynı ise erişim belirteci almak üzere akışı ilerletir. Farklı ise işlemi keser. \n 5.4  Güçlü Kimlik Doğrulama Kontrolleri \n ÖHK, GKD için HHS uygulamasına yönlendirildiğinde, HHS’nin çeşitli kontroller yaparak işlemin doğruluğunu teyit etmesi gerekmektedir.\nYapılması gereken kontrollere ait temel senaryolar aşağıdaki tabloda belirtilmiştir. Bu senaryolar baz alınarak HHS’ler tarafından zenginleştirilebilir. \n Aşağıdaki tabloda yer alan 07-13 arası Rıza İptal Detay Kodlarının oluştuğu senaryolar, HHS uygulamasında yapılan kullanıcı doğrulama öncesi ve sonrası olarak iki adımda incelenmelidir. \n HHS tarafında, kullanıcı doğrulama öncesinde yapılan kontroller neticesinde verilemeyen rızalar için ‘04’ : Süre Aşımı : Yetki Bekleniyor iptal kodu atanır. HHS'nin YÖS uygulamasına 04 kodunu iletmesi beklenmez. YÖS zaman aşımı neticesinde rıza statüsünü sorgulayarak öğrenir. \nKullanıcı doğrulandıktan sonra rıza verilemiyorsa ilgili hata kodunun YÖS'e iletilmesi beklenmektedir. Kullanıcı doğrulama sonrası YÖS'e iletilen rıza iptal detay kodu ile HHS veri modelinde tutulan rıza ile ilişkili rıza iptal detay kodu, aynı değeri alacak şekilde güncellenmelidir. YÖS, HHS tarafından kendine iletilen rıza iptal detay kodunu kendi veri modelinde güncellemelidir. \n Zorunlu olarak belirtilen hata durumlarının HHS’ler tarafından gerçeklenmesi ve uygun hata kodlarının YÖS’e iletilmesi; ileride oluşabilecek mutabakatlaşma sorunlarını ortadan kaldırabilecek, yapılacak raporlamalar kapsamında sistem ve süreç iyileştirmelerine katkı sağlayacak, son kullanıcı açısından da alınan hataya yönelik bilgilendirici içerik sağlayacaktır. \n Hata açıklamaları; hata koduna uygun ya da uyumlu olmak kaydıyla, HHS ve YÖS tarafından farklı şekillerde sunulabilir. \n GKD Sırasında yapılması gereken kontroller \n \n \n \n Rıza İptal Detay Kodu \n HHS hata açıklaması* \n Yös ekranında listelenecek örnek mesaj metni* \n Örnek Senaryo \n Zorunlu / Opsiyonel \n \n \n \n \n 07 \n Rıza mevcut ve durumu \"Yetkilendirildi\" veya \"Yetki Kullanıldı\" \n Yetki Hatası \n ÖHK,  kullanıcı doğrulama işlemi tamamlandıktan sonra  YÖS ekranında ileri - geri yaparak ya da ÖHK'nın yönlendirme adresini kopyalayarak tarayıcıya yapıştırması ile tekrar HHS'ye yönlendirir. Bu durumda HHS bu rıza iptal detay kodunu iletir. HHS ve YÖS'ler veri modellerini bu bilgi doğrultusunda güncellemelidir. \n Zorunlu \n \n \n 08 \n Rızano ile kimlik bilgileri uyuşmazlığı. \n İşlem gerçekleştirilememiştir. \n YÖS tarafından başlatılan rıza içerisinde yer alan kimlik bilgisi (örn:TCKN) ile HHS'de başarılı kimlik doğrulama yapılan ÖHK'nın bilgilerinin uyuşmadığı durumda  HHS ve YÖS'ler veri modellerini bu bilgi doğrultusunda güncellemelidir. \n Zorunlu \n \n \n 09 \n ÖHK'nın HHS'de ilgili ürününün olmadığı durum (hesap/kart) \n Gösterilebilecek hesap/kart bulunamamıştır. \n HHS, kullanıcı doğrulama yaptıktan sonra, ÖHK'nın uygun statülü hesabının olmadığı durumda  HHS ve YÖS'ler veri modellerini bu bilgi doğrultusunda güncellemelidir. \n Zorunlu \n \n \n 10 \n ÖHK'nın Açık Bankacılık kanalı işleme kapalı \n ÖHK'nın Açık Bankacılık kanalı işleme kapalı \n Açık bankacılığı ayrı bir kanal olarak tanımlamış HHS'lerde,  ÖHK kullanıcı doğrulama yaptıktan sonra yapılan kontrollerde, ÖHK'nın işlemlerini AB kanalına kapatmış olması durumunda   HHS ve YÖS'ler veri modellerini bu bilgi doğrultusunda güncellemelidir. \n Opsiyonel \n \n \n 11 \n ÖHK'nın HHS'deki hesaplarında yeterli yetkisinin olmaması \n Yetki hatası \n 1- Kurumsal firma kullanıcılarının hesaplar üzerinde işlem yetkisinin olmaması durumunda   2- Bireysel ortak hesaplarda hesap kısıtı bulunuyorsa (para çıkışına izin verilmediği durum)  HHS ve YÖS'ler veri modellerini bu bilgi doğrultusunda güncellemelidir. \n Zorunlu \n \n \n 12 \n HHS’nin,  ÖHK özelinde yaptığı kontrollerin başarısız olması \n Yetki hatası \n HHS'nin, kullanıcı doğrulama sonrası ÖHK için iç sistemlerinde yaptığı kontrollerin başarısız olması. Örneğin: Müşterinin henüz bankacılık hizmet sözleşmesi gibi Internet şubesi üzerinde işlem yapmasını engelleyen eksikleri olması durumunda veya kurumsal kullanıcıda vekalet süresinin dolması/eksik doküman olması durumunda kanal üzerinde işlem yapamadığı durum  HHS ve YÖS'ler veri modellerini bu bilgi doğrultusunda güncellemelidir. \n Opsiyonel \n \n \n 13 \n ÖHK isteği ile GKD’den vazgeçilmesi \n Müşteri işlemden vazgeçmiştir. \n HHS ekranında yer alan VAZGEÇ butonuna basılması durumu (ÖHK,HHS uygulamasında kullanıcı doğrulama yaptıktan sonra VAZGEÇ butonu olabilir.) \n Zorunlu \n \n \n 14 \n GKD İptali: Fraud Şüphesi \n İşlem gerçekleştirilememiştir. \n HHS Fraud şüphesi nedeniyle işlemin devamına izin vermez. HHS'nin, fraud kontrollerinin ödeme başlatma hizmeti için yapması ve “14- GKD İptali: Fraud Şüphesi” ile rıza iptalini gerçekleştirmelidir. HBH servislerinde HHS'nin rıza iptal kodu 14 ile işlemi kesmesi HHS'nin kendi insiyatifindedir yani opsiyoneldir. \n Koşullu \n \n \n 99 \n Diğer \n İşlem gerçekleştirilememiştir. \n Oluşabilecek diğer senaryolar. \n Zorunlu \n \n \n \n GKD sırasında iletilen rıza no eğer HHS’nin sisteminde bulunamazsa durumu güncellenecek bir rıza no da olmayacaktır. HHS kendi önyüzünde bu duruma uygun bir mesaj gösterebilir. YÖS’e de Diğer hata kodu ile bu durumu iletebilir. \n"},{title:"HHS ve YÖS API",frontmatter:{},regularPath:"/v2.0.0/contents/hhs-yos-api.html",relativePath:"v2.0.0/contents/hhs-yos-api.md",key:"v-2b71dd9d",path:"/v2.0.0/contents/hhs-yos-api.html",headers:[{level:2,title:"HHS API",slug:"hhs-api"},{level:2,title:"YOS API",slug:"yos-api"}],content:" HHS ve YÖS API \n HHS API, HHS’lerin detay bilgilerini sunan servistir. Bu servis ile aşağıdaki istek/yanıt yapıları ile ihtiyaç duyulabilecek ilgili bilgiler temin edilebilir. HHS API için “hhs_read” scope bilgisi kullanılır. \n Production ortamında HHS / YOS API içerisinde sisteme dahil olmuş, sertifikasyonu başarı ile tamamlamış paydaşlar listelenecektir. HHS tarafından desteklenen API sürümleri listelenecektir. \n YÖS’ler HHS API’sini sorgulayabilir ancak YÖS API’sini sorgulayamazlar. \nBenzer şekilde HHS’ler YÖS API’sini sorgulayabilir, HHS API’sini sorgulayamazlar. \n HHS API \n GET /hhs/{hhsKod} \n İşlem Sorgu Örneği =  /hhs  ⇨  bu sorgu yöntemi ile tüm HHS’lerin dizi şeklinde verileri listelenir. \nİşlem Sorgu Örneği =  /hhs/2001   ⇨ bu sorgu yöntemi ile gönderilmiş olan hhsKodu’na ait bilgiler listelenir. Ya da “404 Not Found” hatası alır. \nHHS ve YÖS API Tablo 20’deki istek parametrelerine göre sorgulanabilir. \nİşlem Sorgu Örneği (Belirli Bir Hesap) =  /hhs?srlmKrtr=kod&srlmYon=A \n Tablo 20: HHS ve YÖS API Sorgulama İsteği Sorgu Parametreleri \n \n \n \n Alan Adı \n Parametre Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n HHS tarafından yapılması gereken kontrol ve işlemler \n \n \n \n \n Sıralama Kriteri \n srlmKrtr \n AN3..50 \n İ \n Cevapta dönülecek işlemlerin sıralama kriterini belirtir. Alabileceği değerler: {“kod”, “unv”} \n Bu veri gönderildiği durumda, HHS işlemler listesini bu kritere göre sıralayarak gönderir. Gönderilmediğinde, sıralama kriteri “unv” olarak belirlenmelidir. \n \n \n Sıralama Yönü \n srlmYon \n AN1 \n İ \n Cevapta dönülecek işlemlerin sıralama yönünü belirtir. Alabileceği değerler: A: Azalan değerle sıralama Y: Artan değerle sıralama {“A”,”Y”} \n Bu veri gönderildiği durumda, HHS işlemler listesini bu yöne göre sıralayarak gönderir. Gönderilmediğinde, HHS sıralama yönünü Azalan olarak belirler. \n \n \n \n Tablo 21: HHS Bilgileri Sorgulama Yanıtı “Hhs” nesnesi \n \n \n \n Alan Adı \n Parametre Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n hhs kodu \n kod \n AN4 \n Z \n HHS nin kod bilgisi \n \n \n hhs unvanı \n unv \n AN3..140 \n Z \n HHS nin unvan bilgisi \n \n \n hhs markası \n marka \n AN1..140 \n Z \n ÖHK'nın kolaylıkla algılayabileceği kısa unvan bilgisi. HHS tarafından belirlenecektir. \n \n \n Açık anahtar \n acikAnahtar \n AN1..1024 \n Z \n HHS’nin mesaj imzalama için paylaştığı açık anahtar \n \n \n HHS Api Bilgileri \n apiBilgileri \n Kompleks: HhsApiBilgi[Array][0..N] \n Z \n Desteklenen Api ve sürüm bilgileri dönülecektir. \n \n \n > api \n api \n AN1..20 \n Z \n Api İsmi Örnek :obh, hbh,gkd \n \n \n > surum \n surum \n AN1..10 \n Z \n Api Sürüm Kodu Örnek: s1.0, s1.0, s2.0 \n \n \n HHS Hizmet Bilgileri \n hizmetBilgileri \n Kompleks: HhsHizmetBilgi[Array][0..N] \n Z \n Desteklenen hizmet ve sürüm bilgileri dönülecektir. \n \n \n > hizmetTipi \n hizmetTipi \n AN1..20 \n Z \n Hizmet Tipi bilgileri.TR.OHVPS.DataCode.HizmetTipi sıralı veri türü değerlerinden birini alır. \n \n \n > surum \n surum \n AN1..10 \n Z \n Api Sürüm Kodu Örnek: s1.0, s1.1, s2.0 \n \n \n Logo Bilgileri \n logoBilgileri \n Kompleks: LogoBilgisi [Array][1..N] \n Z \n HHS'ye ait logo bilgileri. \n \n \n > logoTur \n logoTur \n AN3..50 \n Z \n Logonun türünü belirler. TR.OHVPS.DataCode.LogoTur sıralı veri türü değerlerlerinden birini alır. \n \n \n > logoAdr \n logoAdr \n AN1..255 \n Z \n HHS tarafında tutulan ve YÖS'lerle paylaşılacak olan url adres bilgisidir.  Örnek: https://via.placeholder.com/150?text=0001 \n \n \n > logoArkaPlan \n logoArkaPlan \n AN1 \n Z \n TR.OHVPS.DataCode.LogoArkaPlan sıralı veri türü değerlerlerinden birini alır. \n \n \n > logoFormat \n logoFormat \n AN3 \n Z \n TR.OHVPS.DataCode.LogoFormat sıralı veri türü değerlerlerinden birini alır. \n \n \n Durum \n durum \n AN1 \n Z \n HHS'nin durum bilgisidir.  TR.OHVPS.DataCode.HHSDurumu sıralı veri tipinde alabileceği değerler belirtilmiştir. \n \n \n \n HHS API'de; Açık, Yaygınlaştırma, Geçici Hizmet Veremiyor, Kapalı durumlarındaki HHS'ler listelenecektir.  \nSertifikasyon onayı alan HHS'ler, üretim ortamına geçişte \"Yaygınlaştırma\" durumuna sahip olabilir.  HHS'nin, hangi YÖS'ler ile \"Yaygınlaştırma\" kontrollerini yapacağı, HHS yönetiminde olacaktır. Böylece Üretim Ortamında HHS’nin kendisi tarafından tanımlanmış kısıtlı ÖHK’ya hizmet vermesi ve servislerini test etmesi sağlanabilir olacaktır. HHS'ler kendi kurum kontrollerini yapana kadar, \"Yaygınlaştırma\" durumunda kalabilirler. HHS'nin BKM'ye yapacağı talep ile, HHS \"Yaygınlaştırma\" durumundan \"Açık\" durumuna geçebilecektir. \n Aşağıdaki durumlarda HHS'nin statüsü Geçici Kapalı olarak güncellenebilecektir: \n \n HHS'nin talebi ile uzun süreli (minimum 1 saati aşan) yaşanan teknik sorunlarda G statüsüne alınabilecektir. G statüsüne alınma talebinin HHS tarafından ohvps@bkm.com.tr ye mail atarak iletilmesi beklenmektedir. \n İlgili resmi kurumlardan gelen talep üzerine HHS G statüsüne alınabilir. \n \n YÖS'ler hem A hem G statüsünde olan HHS'leri listeleyebilir. Ancak YÖS uygulamasında G statüsünde olan bir HHS müşteri tarafından seçilirse müşteriye gerekli hata mesajının verilmesi ve ilgili HHS'ye istek atılmaması sağlanmalıdır. \n Hem YOS hem de HHS API için geçerli olacak; logo gönderiminde dikkat edilmesi gerekenler şu şekilde tariflenmiştir: \n \n Logoların ham dosya yerine kurumun yayınlayacağı bir URL üzerinden sunulması gerekmektedir. (Örn: logoURL = https://kurumadi.com.tr/logo.png) Logo BKM tarafında host edilmeyecektir. \n Logo url’in public erişilebilir url olması gereklidir. \n Logo, yatayda veya dikeyde taşma paysız tam oturacak, sınır boyutlarını geçmeyecek ve ortalanmış yerleşime sahip olmalıdır. \n YÖS uygulamasında gösterim esnasında logoların hızlı yüklenmesi ve düşük veri tüketmesi açısından; logo boyutu 250 KB’ın altında olmalıdır. \n HHS ve YÖS’lerin tüm logo türlerini (8 farklı tipte logoyu) zorunlu olarak dönmesi beklenmektedir. \n Circle logo kullanılması gerektiğinde ICON_LOGO logo türü kullanılmalıdır. \n Logolarını güncellemek isteyen kurumların en az 3 iş günü öncesinde BKM’ye bu değişikliği GEÇİT Test/Üretim Ortamı Entegrasyon formu ile bildirmesi gereklidir.  BKM de katılımcılara HHS/YÖS API aracılığı ile güncel logonun çekilmesi gerektiğine dair bilgilendirme yapar. \n Logoları anlık çeken katılımcıların, herhangi bir teknik nedenden dolayı güncel logoyu alamadığı durum olabilir. Bu durumda sistemlerine kaydetmiş olduğu kuruma ait ikon logoyu göstermesi gereklidir. \n HHS ve YÖS’ler API aracılığı ile almış oldukları logoların formatı üzerinde değişiklik (kare, yuvarlak hale getirip resize etmek gibi) yapabilirler. Ancak logonun görsel ve yazılarını etkileyecek bir  değişiklik yapmamalıdırlar. \n YÖS/HHS mobil uygulamasındaki dark mode ve light mode kullanımlarında, hangi logonun kullanılacağına uygulama sahibi karar verecektir. \n YOS API \n YÖS API, YÖS statüsundeki kurumların detay bilgilerini sunan servistir. Bu servis ile aşağıdaki istek/yanıt yapıları ile ihtiyaç duyulabilecek ilgili bilgiler temin edilebilir. YÖS API için “yos_read” scope bilgisi kullanılır. \n YÖS API yanıtında, listelenen yönlendirme ve bildirim adresleri bulunmaktadır. HHS, işlem anında iletilen yonAdr ya da bldrAdr alanlarında gönderilen adreslere yetKod değerini iletmelidir. YÖS API içerisinde yer alan adresleri, rıza isteğinde gönderilen adreslerin doğruluğunu kontrol etme amacıyla kullanılmalıdır. Bu nedenle YÖS API içerisinde listelenen adreslerin hostname seviyesinde yer alması yeterlidir. \n YÖS API içerisinde yer alan YÖS rol bilgileri ve aktiflik/pasiflik durumları birbiriyle ilişkili değildir. \n YÖS'ün sahip olduğu öbhs,hbhs rolleri için herhangi bir fraud ya da teknik sebeplerden ötürü geçici süreyle geri alınabilir. \n YÖS'lerin hizmet verememesi durumunda rollerinin geri alınması yapılmayacaktır. YÖS rolleri sadece ilgili resmi kurumlardan gelen talep üzerine alınabilecektir. \n YÖS aktifliğini korurken problem çözülene kadar geçici olarak alınan roller(öbhs,hbhs) tekrardan aktif hale getirilir. \n GET /yos/{yosKod} \n İşlem Sorgu Örneği =  /yos  ⇨  bu sorgu yöntemi ile tüm YÖS'lerin dizi şeklinde verileri listelenir. \n İşlem Sorgu Örneği =  /yos/2501  ⇨  bu sorgu yöntemi ile gönderilmiş olan yosKodu’na ait bilgiler listelenir ya da “404 Not Found” hatası alır.\nYÖS API Tablo 20’deki istek parametrelerine göre sorgulanabilir.\nİşlem Sorgu Örneği (Belirli Bir Hesap)=  /yos?srlmKrtr=kod&srlmYon=A \n Tablo 22: YOS Bilgileri Sorgulama Yanıtı “Yos” nesnesi \n \n \n \n Alan Adı \n Parametre Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Yös kodu \n kod \n AN4 \n Z \n YÖS'ün kod bilgisi \n \n \n Yös unvanı \n unv \n AN3..140 \n Z \n YÖS unvan bilgisi \n \n \n Yös markası \n marka \n AN1..140 \n Z \n ÖHK'nın kolaylıkla algılayabileceği kısa unvan bilgisi. YÖS tarafından belirlenecektir. \n \n \n YÖS rolleri \n roller \n Array[AN4] \n Z \n YÖS’un rollerini belirten değer. Örnek: [ \"obhs\", \"hbhs\" ]  - obhs - Ödeme Bilgisi Hizmet Sağlayıcı Rolü  - hbhs - Hesap Bilgisi Hizmet Sağlayıcı Rolü \n \n \n Adresler \n adresler \n Kompleks:Adres[Array] [1..N] \n Z \n --- \n \n \n > Yetkilendirme Yöntemi \n yetYntm \n AN1 \n Z \n TR.OHVPS.DataCode.GkdTur sıralı veri türü değerlerlerinden birini alır. Adres detaylarının hangi GKD türüne ait olduğunu belirtir. \n \n \n > Adres Detayları \n adresDetaylari \n adresDetaylari\tKompleks: AdresDetayi[Array] [1..N] \n Z \n \n \n \n >> Temel Adres \n tmlAdr \n AN1..1024 \n Z \n yetYntm değeri “Y” olarak iletildiğinde Yönlendirmeli GKD sürecinde HHS’nin YOS’e authorizasyon kodunu hangi url e göndereceği bilgisini tutar. yetYntm değeri “A” olarak iletildiğinde Ayrık GKD sürecinde HHS’nin YOS’e authorizasyon kodunu hangi url e göndereceği bilgisini tutar. Riza isteklerinde bu değer ile uyumluluğu kontrol edilmelidir. Örnek: https://example.com https://example2.com/path deepLink://example/test deepLink://example2/test \n \n \n >> Açıklama \n aciklama \n AN1..1024 \n İ \n YÖS’ün gönderdiği adrese yönelik vermek istediği açıklama Örnek: WEB bireysel , WEB kurumsal  , APP \n \n \n Açık anahtar \n acikAnahtar \n AN1..1024 \n Z \n YÖS’ün mesaj imzalama için paylaştığı açık anahtar \n \n \n YÖS Api Bilgileri \n apiBilgileri \n Kompleks: YosApiBilgi[Array][0..N] \n Z \n Desteklenen Api ve sürüm bilgileri dönülecektir. \n \n \n > api \n api \n AN1..20 \n Z \n Api İsmi Örnek :ods \n \n \n > surum \n surum \n AN1..10 \n Z \n Api Sürüm Kodu Örnek: s1.0, s2.0 s1.0 \n \n \n Logo Bilgileri \n logoBilgileri \n Kompleks: LogoBilgisi [Array][1..N] \n Z \n YOS’e ait logo bilgileri. \n \n \n > logoTur \n logoTur \n AN3..50 \n Z \n Logonun türünü belirler. TR.OHVPS.DataCode.LogoTur sıralı veri türü değerlerlerinden birini alır. \n \n \n > logoAdr \n logoAdr \n AN1..255 \n Z \n YÖS tarafında tutulan ve HHS’lerle paylaşılacak olan url adres bilgisidir.  Örnek: https://via.placeholder.com/150?text=0001 \n \n \n > logoArkaPlan \n logoArkaPlan \n AN1 \n Z \n TR.OHVPS.DataCode.LogoArkaPlan sıralı veri türü değerlerlerinden birini alır. \n \n \n > logoFormat \n logoFormat \n AN3 \n Z \n TR.OHVPS.DataCode.LogoFormat sıralı veri türü değerlerlerinden birini alır. \n \n \n Durum \n durum \n AN1 \n Z \n YÖS'ün durum bilgisidir.  TR.OHVPS.DataCode.YOSDurumu sıralı veri tipinde alabileceği değerler belirtilmiştir. \n \n \n \n"},{title:"9.\tHesap Bilgisi Hizmeti",frontmatter:{},regularPath:"/v2.0.0/contents/hesap-bilgisi-hizmeti.html",relativePath:"v2.0.0/contents/hesap-bilgisi-hizmeti.md",key:"v-2c81f446",path:"/v2.0.0/contents/hesap-bilgisi-hizmeti.html",headers:[{level:2,title:"Genel Bilgiler",slug:"genel-bilgiler"},{level:2,title:"Hesap Bilgisi Hizmeti İçin Erişim Adresleri",slug:"hesap-bilgisi-hizmeti-icin-erisim-adresleri"},{level:2,title:"ADIM 0: ÖHK'nın hesap/kart bilgilerine erişim için talepte bulunması:",slug:"adim-0-ohk-nın-hesap-kart-bilgilerine-erisim-icin-talepte-bulunması"},{level:2,title:"9.1 ADIM 1: Hesap Bilgisi Rızasının Hazırlanması",slug:"_9-1-adim-1-hesap-bilgisi-rızasının-hazırlanması"},{level:3,title:"POST /hesap-bilgisi-rizasi",slug:"post-hesap-bilgisi-rizasi"},{level:3,title:"Başarılı İstek:",slug:"basarılı-istek"},{level:3,title:"Başarılı Yanıt:",slug:"basarılı-yanıt"},{level:2,title:"İzinler",slug:"izinler"},{level:2,title:"9.2 ADIM 2: Hesap Bilgisi Hizmeti Rızasının Tesisi",slug:"_9-2-adim-2-hesap-bilgisi-hizmeti-rızasının-tesisi"},{level:2,title:"9.3 ADIM 2.1: Hesap Bilgisi Rızasının Sorgulanması",slug:"_9-3-adim-2-1-hesap-bilgisi-rızasının-sorgulanması"},{level:2,title:"9.4 ADIM 2.2: Hesap Bilgisi Rızasının İptali",slug:"_9-4-adim-2-2-hesap-bilgisi-rızasının-iptali"},{level:2,title:"9.5 ADIM 3: Hesap Bilgilerinin Alınması",slug:"_9-5-adim-3-hesap-bilgilerinin-alınması"},{level:2,title:"9.6 ADIM 3.1 ve 3.2: Hesap Bilgilerinin Sorgulanması",slug:"_9-6-adim-3-1-ve-3-2-hesap-bilgilerinin-sorgulanması"},{level:2,title:"9.7 ADIM 3.3 ve 3.4: Hesap Bakiyesinin Sorgulanması",slug:"_9-7-adim-3-3-ve-3-4-hesap-bakiyesinin-sorgulanması"},{level:2,title:"9.8 ADIM 3.5 ve 3.6: İşlemlerin Sorgulanması",slug:"_9-8-adim-3-5-ve-3-6-islemlerin-sorgulanması"},{level:2,title:"9.9 ADIM 4: Kart Bilgilerinin Sorgulanması",slug:"_9-9-adim-4-kart-bilgilerinin-sorgulanması"},{level:2,title:"9.10 ADIM 4.1: Kart Detay Bilgilerinin Sorgulanması",slug:"_9-10-adim-4-1-kart-detay-bilgilerinin-sorgulanması"},{level:2,title:"9.11 ADIM 4.2: Kart Hareket Bilgilerinin Sorgulanması",slug:"_9-11-adim-4-2-kart-hareket-bilgilerinin-sorgulanması"}],content:" 9.\tHesap Bilgisi Hizmeti  \n Genel Bilgiler \n Bu dokümanda belirtilen \"Hesap Bilgisi Hizmeti\" ibaresi hem hesap hem de kart rıza süreçlerini kapsamaktadır. \n Hesap bilgisi sorgulama için HBHS tarafından müşteri rızası tesisinin HHS tamamlanmış olması gerekir. Müşteri rızası tesisi tamamlandıktan sonra, HBHS sorgulamak istediği hesaba ait verileri ilgili erişim adresi üzerinden sorgular. \n \n \n Şekil 10: Hesap Bilgisi Hizmeti Üst Düzey Akışı \n Şekil-10’da sunulan hesap bilgisi hizmeti 5 temel akıştan oluşur: \n 0.\tMüşterinin hesap bilgilerine erişim için talepte bulunması:  ÖHK ÖBHS mobil uygulama ya da web sitesinden hesap bilgilerine erişim işlemini başlatır. \n 1.\tHesap Bilgisi müşteri rızasının hazırlanması: \n HBHS, “hesap/kart bilgilerine erişim” için müşteri rızası tesisi amacıyla HHS’deki hesap bilgisi rızası erişim adresine bir POST isteğinde bulunur ve bir hesap bilgisi rızası nesnesi oluşturur. HHS hesap bilgisi rızası nesnesi için biricik tanımlayacı döner (RızaNo). Hesap bilgisi rızası, müşterinin HBHS’nin hesap/kart bilgilerine erişim izin verdiği alanları için 9.1 ADIM 1: Hesap Bilgisi Rızasının Hazırlanması başlığında incelenebilir. \n 2.\tHesap bilgisi hizmeti müşteri rızasının tesisi: \n HHS, Hesap Bilgisi Rızası servisi ile ÖHK özelinde “Yetki bekleniyor” statüsünde bir rıza nesnesi hazırlar. HHS, GKD’nin başarıyla tamamlanması sonrasında hesap bilgisi rızası nesnesinin yetkilendirildiğini belirtmek için Rıza Durumunu “Rıza Yetkilendirildi” olarak günceller. Nesne yetkilendirildikten sonra HHS nesne ile bir erişim belirteci (access token) ilişkilendirir, Rıza Durumunu “Yetki Kullanıldı” yapar ve bu belirteci HBHS’ye geri döner.  Böylece müşteri rıza tesisi sağlanmış olur. \n Hesap bilgisi rızasına ilişkin temel ilkeler şunlardır: \n \n 1 ÖHK'nın 1 YÖS için 1HHS'de Yetki Bekleniyor, Yetkilendirildi, Yetki Kullanıldı statüsünde 1 rızası olabilir. \n Müşteri rızasının ayrıntıları ÖHK ile HBHS arasında belirlenir. Bu nedenle müşteri rızasının ayrıntıları HHS ekranında değiştirilmemelidir. \n ÖHK, hesap ve kart erişim izni ayrıntılarını yalnızca bir bütün olarak yetkilendirebilir veya geri alabilir. \n Müşteri rızası tesisi esnasında, müşteri HHS arayüzünde erişim için yetkilendirecek hesapları ve kartları seçer. \n Ödeme Sistemine doğrudan katılımcı olmayan HHS'ler, müşterilerine IBAN hizmeti sunmayabildikleri için hesap referansı ile akışlarını kurgulayabilirler. YÖS önyüzlerinde yapılan bilgilendirmelerde, IBAN harici hesap referansı ile işlem yapılabilmesine dikkat edilmelidir. \n \n 2.1\tHesap bilgisi rızasının sorgulanması:  Müşteri rızası  GET/hesap-bilgisi-rizasi/{RizaNo}  çağrısı yapılarak sorgulanır. \n 2.2\tHesap bilgisi müşteri rızasının iptali:  Müşteri rızası  DELETE/hesap-bilgisi-rizasi/{RizaNo}  çağrısı yapılarak iptal edilir. \n 3.1\tHesap bilgilerinin alınması:  Hesap bilgileri ilgili kaynağa (hesaplar, bakiye, işlemler) GET isteği yapılarak gerçekleştirilir. HBHS, müşteri rızasının tesisinden sonrasında (geçerli bir erişim belirticine sahip olduğunda) öncelikle  GET/hesaplar  çağrısı yapacaktır. \n Nezdinde ödeme hesabı bulunduran hesap hizmeti sağlayıcılar(Banka, EPK, Ödeme Kuruluşları) müşterilerine ait hesapları hesap referansı ya da hesap numarası üzerinden takip etmektedir. YÖS'lerin HBH servisleri için hesap referansı veya hesap numarası üzerinden işlem yapılabileceğini bilmeleri, sistemlerini API dokümanında belirtilen akışlara göre uyumlandırmaları ve müşteri bilgilendirmesini (önyüzlerinde hesap no ve hesap referansı ayrımını gözeterek) buna paralel yapmaları beklenmektedir. \n 4.\tKart bilgilerinin alınması:   Kart bilgileri ilgili kaynağa (kartlar, kart detayı, kart hareketleri) GET isteği yapılarak gerçekleştirilir. HBHS, müşteri rızasının tesisinden sonrasında (geçerli bir erişim belirticine sahip olduğunda) öncelikle  GET/kartlar  çağrısı yapacaktır. \n Hesap Bilgisi Hizmeti İçin Erişim Adresleri \n Etki Alanı (Scope) =“hesap_bilgisi” \n \n \n \n No \n Kaynak \n HTTP işlemi \n Erişim Adresi \n Zorunlu / İsteğe Bağlı \n Yetkilendirme Türü \n İmzalama \n Parametre \n İstem Nesnesi \n Yanıt Nesnesi \n \n \n \n \n 1 \n hesap-bilgisi-rizasi \n POST \n /hesap-bilgisi-rizasi \n Z \n İstemci Kimlik Bilgileri \n İmzalı İstek ve Yanıt \n \n HesapBilgisiRizasiIstegi \n HesapBilgisiRizasi \n \n \n 2 \n erisim-belirteci  (GKD için) \n POST \n /erisim-belirteci \n Z \n İstemci Kimlik Bilgileri \n İmzalı İstek ve Yanıt \n \n ErisimBelirteciIstegi \n ErisimBelirteci \n \n \n 2.1 \n hesap-bilgisi-rizasi \n GET \n /hesap-bilgisi-rizasi/{RizaNo} \n Z \n İstemci Kimlik Bilgileri \n İmzalı Yanıt \n \n \n HesapBilgisiRizasi \n \n \n 2.2 \n hesap-bilgisi-rizasi \n DELETE \n /hesap-bilgisi-rizasi/{RizaNo} \n Z \n İstemci Kimlik Bilgileri ve Yetkilendirme Kodu (GKD-Koşullu) \n \n \n \n \n \n \n 3.1 \n hesaplar \n GET \n /hesaplar \n Z \n İstemci Kimlik Bilgileri ve Yetkilendirme Kodu (GKD) \n \n Sayfalama \n \n HesapBilgileri(birden çok hesap) \n \n \n 3.2 \n hesaplar \n GET \n /hesaplar/{hspRef} \n Z \n İstemci Kimlik Bilgileri ve Yetkilendirme Kodu (GKD) \n \n \n \n HesapBilgileri(tek  hesap) \n \n \n 3.3 \n bakiye \n GET \n /hesaplar/{hspRef}/bakiye \n Z \n İstemci Kimlik Bilgileri ve Yetkilendirme Kodu (GKD) \n \n \n \n BakiyeBilgileri(tek  hesap) \n \n \n 3.4 \n bakiye \n GET \n /bakiye \n Z \n İstemci Kimlik Bilgileri ve Yetkilendirme Kodu (GKD) \n \n Sayfalama \n \n BakiyeBilgileri(birden çok hesap) \n \n \n 3.5 \n islemler \n GET \n /hesaplar/{hspRef}/işlemler \n Z \n İstemci Kimlik Bilgileri ve Yetkilendirme Kodu (GKD) \n \n Sayfalama Filtreleme \n \n IslemBilgileri (tek hesap) \n \n \n 4 \n kartlar \n GET \n /kartlar \n Z \n İstemci Kimlik Bilgileri ve Yetkilendirme Kodu (GKD) \n \n Sayfalama Filtreleme \n \n KartBilgileri(birden çok kart) \n \n \n 4.1 \n kartlar \n GET \n /kartlar/{kartRef} \n Z \n İstemci Kimlik Bilgileri ve Yetkilendirme Kodu (GKD) \n \n Sayfalama Filtreleme \n \n KartBilgileri(tek kart) \n \n \n 4.2 \n kart-detay \n GET \n /kartlar/{kartRef}/kart-detay \n Z \n İstemci Kimlik Bilgileri ve Yetkilendirme Kodu (GKD) \n \n Filtreleme \n \n KartDetayBilgileri \n \n \n 4.3 \n kart-hareketleri \n GET \n /kartlar/{kartRef}/kart-hareketleri \n Z \n İstemci Kimlik Bilgileri ve Yetkilendirme Kodu (GKD) \n \n Sayfalama Filtreleme \n \n KartHareketleri \n \n \n \n Tablo 11: Hesap/Kart Bilgisi Hizmeti İçin Erişim Adresleri \n ADIM 0: ÖHK'nın hesap/kart bilgilerine erişim için talepte bulunması: \n ÖHK, HBHS uygulamasında (web arayüzü/mobil uygulama) hesap/kart bilgilerine erişim için talepte bulunur. \n 9.1 ADIM 1: Hesap Bilgisi Rızasının Hazırlanması \n Bu dokümanda belirtilen hesap bilgisi hizmeti ibaresi hem hesap hem de kart rıza süreçlerini kapsamaktadır. \n Bu API çağrısı HBHS'nin HHS'de yeni bir “HesapBilgisiRizasi” nesnesi oluşturmasını ve nesneye erişmek için benzersiz bir rıza numarası ({rizaNo}) dönülmesini sağlar. \n API çağrısının başarıyla sonuçlanması için HBHS'nin istemci kimlik bilgileri yetkisi kullanması yeterlidir.\nBaşarıyla oluşturulan hesap bilgisi rıza kaynağının rıza durumu “Yetki Bekleniyor” olarak düzenlenir.\nÖHK daha önce aldığı rızaya ilişkin erişim tarihleri, izin türlerini ve hesap bilgilerini güncellemek isterse, HBHS önce HHS nezdindeki rızayı iptal etmeli ve sonrasında yeni bir rıza talebinde bulunmalıdır.\n \n \n Şekil 11: Hesap/Kart Bilgisi Müşteri Rızasının Hazırlanması \n \n POST /hesap-bilgisi-rizasi isteğinin (REQUEST) gövdesinde (BODY)  “HesapBilgisiRizasıIstegi” nesnesi (Tablo-12) kullanılır. İstek başarıyla sonuçlanırsa HHS kaynak sunucusunda “HesapBilgisiRizasi” (Tablo-13) nesnesi oluşturulur. \n  POST /hesap-bilgisi-rizasi \n Bu dokümanda belirtilen hesap bilgisi rızası ibaresi hem hesap hem de kart rıza süreçlerini kapsamaktadır. \n Başarılı İstek: \n İSTEK: \n HBHS, bu API erişim adresinden HHS’ye yeni bir HesapBilgisiRizasi oluşturulması için istekte bulunur: \n \n HBHS, ÖHK’nın hesap/kart bilgilerine yönelik rıza başlatma isteği olduğunu HHS’ye bildirir. YÖS'ler sürüm 2.0 için Hesap Bilgisi Rızası isteği gönderdiğinde HHS'nin ÖHK'yı yönlendireceği mobil uygulama içerisinde sürüm 2.0 değişikliklerini içeren, kart bilgilerinin seçimini yapacakları sürümün yüklü olmaması durumunda HHS'ler tarafından  TR.OHVPS.Business.CustomerMobileApplicationHasOlderVersion  hatası verilebilir. \n HBHS, ÖHK’nın, HBHS arayüzünden verdiği rızanın (“Ön Onay”) bir kopyasının HHS nezdinde müşteri tarafından onaylanması için HHS’ye gönderilmesini sağlar. \n HHS; istek mesajında yer alan alanların API dökümanında belirtilen şartları sağlayacak şekilde zorunluluk ve uzunluk kontrollerini yapar.(Zorunlu) Kontrollere istinaden hata oluşması durumunda  ”TR.OHVPS.Resource.InvalidFormat”  hata kodu iletilmeli ve fieldErrors dolu olacak şekilde hatalı alanı belirten detaylı açıklama gönderilmelidir. InvalidFormat hata kodlarında fieldErrors içeriği gönderilmeli ve anlaşılır açıklama ile message, messageTr alanları doldurulması zorunludur. \n HHS, hhsKod’un kendisine ait olduğunu ve istek başlığındaki x-aspsp-code değeri ile aynı olduğunu kontrol eder. Farklı olması durumunda  ”TR.OHVPS.Connection.InvalidASPSP”  hatası dönülür. \n HHS, yosKod’un geçerli bir Ödeme Hizmeti Sağlayıcısı Kodu olduğunu ve istek başlığındaki x-tpp-code değeri ile aynı olduğunu kontrol eder. Farklı olması durumunda  ”TR.OHVPS.Connection.InvalidTPP”  hatası dönülür. \n HHS; YÖS API ile alınan temel adres bilgilerinde yer alan yönlendirme adresleri ile hesap bilgisi rızası nesnesi içerisinde yer alan YÖS  adreslerin uyumlu olup olmadığının kontrollerini yapar. (Zorunlu) Kontrollere istinaden hata oluşması durumunda  ”TR.OHVPS.Business.TPPRedirectionAddressMismatch”  hatası dönülür. \n HHS; kimlik bilgileri nesnesinde iletilen kimlik bilgileri ile ÖHK’nın HHS müşterisi olup olmadığının kontrollerini yapar. Bu kontrol hem bireysel hem de kurumsal ÖHK’lar için yapılmalıdır.(Zorunlu) Kontrollere istinaden hata oluşması durumunda  ”TR.OHVPS.Business.CustomerNotFound”  hatası dönülür. Kurumsal müşteri ile başlatılan rızada yer alan müşteri bilgisinin karşı kurumda Kurumsal müşteri değil; bireysel müşteri olduğu durumda “TR.OHVPS.Business.BusinessCustomerMismatch” hatası dönülür. \n Bir ÖHK'nın 1 YÖS için aktif tek bir rızası olabilir. ÖHK’nın  “Yetkilendirildi” ve “Yetki Kullanıldı” statüsünde rızası varken yeni bir rıza isteği gönderdiğinde HHS tarafından  TR.OHVPS.Business.ConsentAlreadyExists  hatası dönülür.  Güncelleme isteği göndermesi durumunda ise işletilmesi gereken akışlar “Rıza Durumları” başlığından kontrol edilmelidir. \n Hesap bilgi hizmeti rıza isteğinde bulunan ÖHK’nın “Açık Bankacılık Kanal Yetki” tanımı yok ise  ”TR.OHVPS.Business.OpenBankingChannelClosed”  hatası dönülür. HHS insiyatifinde olup HHS bu kontrolü GKD sonrası gerçekleştirebilir. \n Hesap bilgi hizmeti rıza isteğinde 01 ya da 07 izin türü olmak zorundadır. HHS tarafından izin türü içerisinde 01 ya da 07 varlık durumu kontrol edilir. Olmaması durumunda  \"TR.OHVPS.Business.IncorrectPermissionType”  hatası dönülür. \n Hesap bilgi hizmeti rıza isteğinde 01 izin türü bulunmuyor ise 02, 03, 04, 05 ya da 06 izin türü olmamalıdır. 01 izin türü bulunmadığında 02, 03, 04, 05 ya da 06 izin türlerinden biri ya da birkaçı gönderildiğinde  \"TR.OHVPS.Business.IncorrectPermissionType”  hatası dönülür. \n Hesap bilgi hizmeti rıza isteğinde 07 izin türü bulunmuyor ise 08 ya da 09 izin türü olmamalıdır. 07 izin türü bulunmadığında 08 ya da 09 izin türlerinden biri ya da ikisi gönderildiğinde  \"TR.OHVPS.Business.IncorrectPermissionType”  hatası dönülür. \n ÖHK, HHS'de olacak bakiye değişikliklerinden anlık haberdar olmak istiyor ise 06-Anlık Bakiye Bildirimi izin türü seçimi ile rıza başlatması gereklidir. 03-Bakiye Bilgisi izin türü ile birlikte seçilmesi gereklidir. 06 izin türü seçilip 03 izin türü seçilmediği durumda  ”TR.OHVPS.Business.IncorrectPermissionType”  hatası dönülür. \n İzin türü “06: Anlık Bakiye Bildirimi” seçilmiş ise HHS, YÖS'ün KAYNAK_GUNCELLENDI olay tipinde olay aboneliğinin varlığını kontrol eder. Olay abonelik kaydı bulunmuyor ise  ”TR.OHVPS.Business.EventSubscriptionNotFound”  hatası dönülür. \n Hesap bilgi hizmeti rıza isteğinde bulunan ÖHK’nın izin verecek hesap ya da kartı yok ise  ”TR.OHVPS.Business.ProductNotSuitable”  hatası dönülür. İki üründen biri var ise başarılı yanıt dönülür. HHS insiyatifinde olup HHS bu kontrolü GKD sonrası gerçekleştirebilir. \n Erişimin Geçerli Olduğu Son Tarih bilgisi müşteri bağımsız alabileceği minimum değer : Rıza tarihi + 1 gündür. Maksimum rıza süresi bireysel müşteriler için 6 ay, Kurumsal/Tüzel müşteriler için 12 ay olacaktır. Bireysel müşteriler için 6 aydan fazla, kurumsal müşteriler için ise 12 aydan fazla iletildiği durumda  ”TR.OHVPS.Resource.InvalidFormat”  hatası dönülür. \n İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçilmiş ise; İşlem Sorgulama Başlangıç Zamanı, hesap bilgisi rızası verilmesinden  geçmişe  dönük en fazla 12 ay olabilmektedir. 12 aydan fazla gönderilmesi durumunda  ”TR.OHVPS.Resource.InvalidFormat”  hatası dönülür. \n İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçilmiş ise; İşlem Sorgulama Başlangıç Zamanı, hesap bilgisi rızası verilmesinden  geleceğe  dönük en fazla 12 ay sonrası olabilmektedir. 12 aydan fazla gönderilmesi durumunda  ”TR.OHVPS.Resource.InvalidFormat”  hatası dönülür. \n Ayrık GKD desteklemeyen HHS'ye Ayrık GKD yöntemiyle rıza başlatma isteği yapılması durumunda HHS tarafından  ”TR.OHVPS.Business.DecoupledAuthenticationNotSupported”  hatası dönülür. YÖS ilgili işlemi “Yönlendirmeli” akışa çekip süreci ilerletebilir. \n HHS \"gkd\" nesnesi için alan kontrollerini gerçekleştirir. \"yetYntm\" = \"A\" gönderilmiş ise \"ayrikGkd\" nesnesinin dolu gönderilmesi zorunludur. Gönderilmemesi durumunda HHS tarafından  ”TR.OHVPS.Resource.InvalidFormat”  hatası dönülür. \n Ayrık GKD ile başlatılan hesap bilgi hizmeti rıza isteğinde HHS, YÖS’ün AYRIK_GKD_BASARILI ve AYRIK_GKD_BASARISIZ olay tipleri için olay aboneliğinin varlığını kontrol eder. YÖS iki olay tipine de abone olmak zorundadır. Eğer olay aboneliği yoksa HHS tarafından  ”TR.OHVPS.Business.EventSubscriptionNotFound”  hatası dönülür. \n ÖHK'ya ait kimlik verisi(kmlk.kmlkVrs) ile ayrık GKD içerisinde yer alan OHK Tanım Değer alanı (ayrikGkd.ohkTanimDeger) birebir aynı olmalıdır. Aynı olmadığı durumda HHS tarafından  ”TR.OHVPS.Business.CustomerInfoMismatch”  hatası dönülür. \n HHS tarafında ÖHK'nın mobil uygulaması bulunmaması durumu tespit edilebildiği durumda Ayrık GKD ile başlatılan rıza akışlarında hata mesajı vermelidir. HHS tarafından  ”TR.OHVPS.Business.CustomerMobileApplicationNotFound”  hatası dönülür. YÖS ilgili işlemi “Yönlendirmeli” akışa çekip süreci ilerletebilir. \n \n Yukarıdaki kontroller tamamlandıktan sonra HHS, benzersiz “RizaNo” ile “HesapBilgisiRizasi” nesnesi oluşturur ve HBHS’ye döner. \n HHS, HesapBilgisiRizasi oluşturduğu anda durumunu “Yetki Bekleniyor” olarak düzenler. \n Tablo 12: “HesapBilgisiRizasiIstegi” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n HHS tarafından yapılması gereken kontrol ve işlemler \n \n \n \n \n Önceki Rıza No \n oncekiRizaNo \n AN1..128 \n K \n HesapBilgisiRızasiIstegi nesnesinin güncelleme sebebiyle oluşturulması esnasında ÖHK'nın güncelleme yapmak istediği mevcut rıza no bilgisi. Rıza güncelleme yapılmak istendiğinde gönderilmesi zorunludur. \n \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n HHS, hhsKod’un kendisine ait olduğunu ve istek başlığındaki x-aspsp-code değeri ile aynı olduğunu kontrol eder. Hata durumunda TR.OHVPS.Connection.InvalidASPSP hata kodunu döner. \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur \n HHS, yosKod’un geçerli bir Ödeme Hizmeti Sağlayıcısı Kodu olduğunu ve istek başlığındaki x-tpp-code değeri ile aynı olduğunu kontrol eder.  Hata durumunda TR.OHVPS.Connection.InvalidTPP hata kodunu döner. \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n \n >Yetkilendirme Yöntemi \n yetYntm \n AN1 \n İ \n TR.OHVPS.DataCode.GkdTur sıralı veri türü değerlerinden birini alır.   Yetkilendirme yöntemi, HBHS tarafından belirtilmeyebilir. \n HHS, HBHS’nin belirlediği yöntemi dikkate alarak süreci ilgili akışa uygun olarak devam ettirir. Desteklemediği yöntem için (örn: Ayrık GKD) ayrıca hata mesajı verilmelidir. \n \n \n > Yönlenme Adresi \n yonAdr \n AN1..1024 \n K \n Yönlendirmeli güçlü kimlik doğrulama için zorunlu.  YÖS’ün ileteceği adrestir.   Durum kodu(drmKod), yönlendirme adresine parametre olarak eklenmelidir. \n HHS, müşteri uygulama / tarayıcısını bu alanda belirtilen adrese yönlendirir. \n \n \n > Ayrık GKD \n ayrikGkd \n Kompleks:AyrikGkd \n K \n Ayrık güçlü kimlik doğrulama için zorunlu. \n yetYntm = A gönderilmiş ise ayrikGkd nesnesinin dolu gönderilmesi zorunludur.   HHS, YÖS'ün AYRIK_GKD_BASARILI ve AYRIK_GKD_BASARISIZ olay tipleri için olay aboneliğinin varlığını kontrol eder.  Bknz: Ayrık GKD \n \n \n >> OHK Tanım Tip \n ohkTanimTip \n AN8 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım tipleridir.  TR.OHVPS.DataCode.OHKTanimTip  sıralı veri tiplerinden birini alır. \n \n \n \n >> OHK Tanım Değer \n ohkTanimDeger \n AN1..30 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım değeridir. ohkTanimTip'i ile uyumlu değerdir. \n \n \n \n Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n \n > Kimlik Türü \n kmlkTur \n AN1 \n Z \n TR.OHVPS.DataCode.KimlikTur sıralı veri türü değerlerinden birini alır.   Kurum adına yapılan(ticari) işlemlerde kurum kullanıcısının bilgisi iletilmelidir. \n \n \n \n > Kimlik Verisi \n kmlkVrs \n AN1..30 \n Z \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır.   TR.OHVPS.DataCode.KimlikTur değerine göre uzunluk ve formatı değişir.   Kurum adına yapılan(ticari) işlemlerde kurum kullanıcısının bilgisi iletilmelidir. \n \n \n \n > Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n K \n ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür.  TR.OHVPS.DataCode.KurumKimlikTur sıralı veri türü değerlerinden birini alır. \n \n \n \n > Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n K \n ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.  TR.OHVPS.DataCode.KurumKimlikTur değerine göre uzunluk ve formatı değişir. \n \n \n \n > Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur sıralı veri türü değerlerinden birini alır (B: Bireysel, K:Kurumsal) \n \n \n \n Hesap/Kart Bilgisi \n hspBlg \n Kompleks: HesapBilgisi \n Z \n \n \n \n \n >İzin Bilgisi \n iznBlg \n Kompleks: IzinBilgisi \n Z \n \n \n \n \n >> İzin Türü \n iznTur \n Array[AN2] \n Z \n ÖHK tarafından HHS önyüzünde belirlenen izin tipleridir. Bir istekte birden fazla değer bulunabilir, TR.OHVPS.DataCode.IzinTur sıralı veri türü değerlerinden birini alır. \n \n \n \n >> Erişimin Geçerli Olduğu Son Tarih \n erisimIzniSonTrh \n ISODateTime \n Z \n Hesap bilgisi rızasının geçerli olduğu son tarih.   Müşteri YÖS ekranından bu değeri belirleyebilir. Bireysel müşteriler için rıza süresi 6 ay, Kurumsal/Tüzel müşteriler için 12 ay olacaktır.    Bireysel Müşteriler için varsayılan değer : Rıza verilen tarih + 6 ay   Kurumsal Müşteriler için varsayılan değer : Rıza verilen tarih + 12 ay  Bireysel Müşteriler için alabileceği maksimum değer : Rıza tarihi + 6 ay  Kurumsal Müşteriler için alabileceği maksimum değer : Rıza tarihi + 12 ay    Müşteri bağımsız alabileceği minimum değer : Rıza tarihi + 1 gün    Örneğin  04/02/2023’de minimum 05/02/2023 seçilebilir. Bu durumda yeni günün başlangıç saati 00:00:00 olduğu kabul edildiği için; erisimIzniSonTrh değeri 2023-02-06T00:00:00+03:00 olmalıdır.  HHS rıza onay ekranlarında YÖS'ten iletilen erişim izni son tarihi yeni günün başlangıç saati olarak iletildiğinden ÖHK'ya gösterilecek tarih erişim izninin biteceği gün olarak gösterilmelidir.  Örneğe istinaden; ÖHK YÖS’de 05/02/2023 seçmiş ise HHS rıza onay ekranında 06/02/2023 görmemeli, bu iki tarihin aynı, yani 05/02/2023 olacak şekilde gösterilmesi gerekmektedir.      Örnek rıza oluş zamanı  : 2023-02-04T21:20:20+03:00    1 günlük rıza verildiğinde erisimIzniSonTrh değeri:    2023-02-06T00:00:00+03:00 (26 saat 40 sakikalık rıza vermiş oluyor.)    7 günlük rıza verildiğinde erisimIzniSonTrh değeri:  2023-02-12T00:00:00+03:00    1 aylık rıza verildiğinde erisimIzniSonTrh değeri :   2023-03-05-T00:00:00+03:00 \n Bu alanda bir değer bulunmadığı durumda HHS hata dönmelidir. \n \n \n >> İşlem Sorgulama Başlangıç Zamanı \n hesapIslemBslZmn \n ISODateTime \n K \n Hesap bilgisi rızası verilmesinden geçmişe dönük en fazla 12 ay olabilir, daha eski olmaması gerekir.   Varsayılan değeri rıza verilen tarih (işlem zamanı) – 12 aydır.   ÖHK bu alana bir değer girişi sağlamış ise zaman bilgisi üretilirken ekrandan girilen tarihe 00:00:00 zaman bilgisi eklenmelidir. ÖHK değer girişi sağlamamış ise ÖBHS varsayılan değerlerle bu alanı doldurarak, HHS’ye iletir.   Minimum tarihi : Rızanın veriliş tarihi  - 12 ay    Maksimum tarih: Rızanın veriliş tarihi +  12 ay    İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçildiğinde bu alanların doldurulması zorunludur.  İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçilmemiş ise gönderilmemelidir. \n ÖHK tarafından izin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçilmemiş ve  İşlem Sorgulama Başlangıç Zamanı ÖBHS tarafından dolu olarak gönderilmiş ise HHS tarafından işlemin devamına izin verilmez. İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçilmiş ise; HHS bu alanın alabileceği minimum ve maksimum değerlerin sınırlar içerisinde olduğunu kontrol eder. \n \n \n >> İşlem Sorgulama Bitiş Zamanı \n hesapIslemBtsZmn \n ISODateTime \n K \n Hesap bilgisi rızası verilmesinden geleceğe dönük en fazla 12 ay sonrası olabilir, daha ileri bir tarih olmaması gerekir.   Varsayılan değeri: Rıza verilen tarih + 12 aydır. ÖHK bu alana bir değer girişi sağlamış ise girdiği tarihe 1 gün eklenir ve yeni günün ilk saati kabul edilen 00:00:00 saat bilgisini ekler.  ÖHK bu alana bir değer girişi sağlamamış ise ÖBHS varsayılan değerlerle bu alanı doldurarak, HHS’ye iletir.  Minimum tarihi : Rızanın veriliş tarihi  – 12 ay  Maksimum tarihi :  Rızanın veriliş tarihi + 12 ay   İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçildiğinde bu alanların doldurulması zorunludur.  İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçilmemiş ise gönderilmemelidir. Eğer dolu gönderilirse HHS tarafından uygun hata mesajı iletilmelidir. \n ÖHK tarafından izin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçilmemiş ve İşlem Sorgulama Bitiş Zamanı ÖBHS tarafından dolu olarak gönderilmiş ise HHS tarafından işlemin devamına izin verilmez.   İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçilmiş ise; HHS bu alanın alabileceği minimum ve maksimum değerlerin sınırlar içerisinde olduğunu kontrol eder. \n Başarılı Yanıt: \n Tablo 13: HesapBilgisiRizasi nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Önceki Rıza No \n oncekiRizaNo \n AN1..128 \n K \n HesapBilgisiRızasiIstegi nesnesinin güncelleme sebebiyle oluşturulması esnasında ÖHK'nın güncelleme yapmak istediği mevcut rıza no bilgisi. Rıza güncelleme yapılmak istendiğinde gönderilmesi zorunludur. İstekte gönderilen değer aynı şekilde yanıtta dönülmelidir. \n \n \n Riza Bilgileri \n rzBlg \n Kompleks: RizaBilgileri \n Z \n \n \n \n > Rıza No \n rizaNo \n AN1..128 \n Z \n HesapBilgisiRızasi nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n > Oluşturma Zamanı \n olusZmn \n ISODateTime \n Z \n HesapBilgisiRızası nesnesinin oluşturulma zamanı \n \n \n > Güncellenme Zamanı \n gnclZmn \n ISODateTime \n Z \n HesapBilgisiRızası nesnesinin güncellenme zamanı \n \n \n > Rıza Durumu \n rizaDrm \n AN1 \n Z \n TR.OHVPS.DataCode.RizaDurumu sıralı veri tipini değerlerinden birini alır. Örn; hesap bilgi rızasının tesisine dair ilk istek mesajına dönüşte “B: Yetki Bekleniyor” değerini alması beklenir. \n \n \n > Rıza Iptal Detay Kodu \n rizaIptDtyKod \n AN2 \n K \n Rıza durumunun iptal olduğu durumda zorunludur. \n \n \n Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n > Kimlik Türü \n kmlkTur \n AN1 \n Z \n TR.OHVPS.DataCode.KimlikTur sıralı veri türü değerlerinden birini alır. \n \n \n > Kimlik Verisi \n kmlkVrs \n AN1..30 \n Z \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır. TR.OHVPS.DataCode.KimlikTur değerine göre uzunluk ve formatı değişir. \n \n \n > Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n K \n ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür.  TR.OHVPS.DataCode.KurumKimlikTur sıralı veri türü değerlerinden birini alır. \n \n \n > Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n K \n ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.  TR.OHVPS.DataCode.KurumKimlikTur değerine göre uzunluk ve formatı değişir. \n \n \n > Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur sıralı veri türü değerlerinden birini alır (B: Bireysel, K:Kurumsal) \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n > Yetkilendirme Yöntemi \n yetYntm \n AN1 \n Z \n HHS, HBHS’nin belirlediği yöntemi dikkate alarak süreci ilgili akışa uygun olarak devam ettirir. Desteklemediği yöntem için (örn: Ayrık GKD) ayrıca hata mesajı verilmelidir.  TR.OHVPS.DataCode.GkdTur sıralı veri türü değerlerinden birini alır. \n \n \n > Yönlenme Adresi \n yonAdr \n AN1..1024 \n K \n HHS, müşteri uygulama / tarayıcısını yönlendirmeli akışta bu alanda belirtilen YÖS adresine yönlendirir. \n \n \n > Ayrık GKD \n ayrikGkd \n Kompleks:AyrikGkd \n K \n Ayrık güçlü kimlik doğrulama için zorunlu. \n \n \n >> OHK Tanım Tip \n ohkTanimTip \n AN8 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım tipleridir. İstek içerisindeki veri değiştirilmeden iletilir. \n \n \n >> OHK Tanım Değer \n ohkTanimDeger \n AN1..30 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım değeridir. ohkTanimTip'i ile uyumlu değerdir.  İstek içerisindeki veri değiştirilmeden iletilir. \n \n \n > HHS Yönlenme Adresi \n hhsYonAdr \n AN1..1024 \n K \n Yönlendirmeli akış türünde\tGKD doğrulama bilgilerinin girilebilmesi için uygulamadan açılacak yönlendirme sayfasının adresi. Ayrık GKD akışında bu alan dönülmemelidir. \n \n \n > Yetkilendirme Tamamlanma Zamanı \n yetTmmZmn \n ISODateTime \n Z \n Yetkilendirme akışının tamamlanması gereken son zamanı gösterir.  HHS tarafından maksimum 5 dk içinde işlem tamamlanacak şekil zaman damgası oluşturulur. Zaman aşımı olduğunda HHS’nin GKD’ye izin vermeyecek şekilde hata mesajı vermesi gerekmektedir. Rıza durumu Yetkilendirildi statüsüne geçene kadarki süredir. \n \n \n Hesap/Kart Bilgisi \n hspBlg \n Kompleks: HesapBilgisi \n Z \n \n \n \n > İzin Bilgisi \n iznBlg \n Kompleks: IzinBilgisi \n Z \n \n \n \n >> İzin Türü \n iznTur \n Array[AN2] \n Z \n ÖHK tarafından HBHS önyüzünde belirlenen izin tipleridir. Bir istekte birden fazla değer bulunabilir, TR.OHVPS.DataCode.IzinTur sıralı veri türü değerlerinden birini alır. \n \n \n >> Erişimin Geçerli Olduğu Son Tarih \n erisimIzniSonTrh \n ISODateTime \n Z \n Hesap bilgisi rızasının geçerli olduğu son tarih \n \n \n >> İşlem Sorgulama Başlangıç Zamanı \n hesapIslemBslZmn \n ISODateTime \n K \n Hesap hareketlerinin sorgunabileceği başlangıç zamanı. İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçildiğinde bu alanların doldurulması zorunludur. \n \n \n >> İşlem Sorgulama Bitiş Zamanı \n hesapIslemBtsZmn \n ISODateTime \n K \n Hesap hareketlerinin sorgunabileceği bitiş zamanı. İzin türü “Temel işlem Bilgisi” ve/veya “Ayrıntılı İşlem Bilgisi” seçildiğinde bu alanların doldurulması zorunludur. \n \n \n > Ayrıntı Bilgi \n ayrBlg \n Kompleks: AyrintiBilgi \n İ \n \n \n \n > ÖHK Mesaj Alanı \n ohkMsj \n AN1..200 \n İ \n HHS’nin ÖHK’ya göstermek üzere ilettiği mesaj. \n İzinler \n Bir hesap bilgisi rızası kaynağı çağrısına yanıt olarak döndürülen verileri sınırlamak için izin kodları kullanılır. \n Hesap ve karta dair tüm bilgiler hesap bilgisi rızası altında alınacaktır. İzin türleri hesap ve karta göre ayrışmaktadır. \n \n Temel Hesap Bilgisi \n Ayrıntılı Hesap Bilgisi \n Bakiye Bilgisi \n Temel İşlem (Hesap Hareketleri) Bilgisi \n Ayrıntılı İşlem Bilgisi \n Anlık Bakiye Bildirimi \n Temel Kart Bilgisi \n Detaylı Kart Bilgisi \n Ayrıntılı Kart İşlem Bilgisi \n \n ÖHK’ya sunulacak seçimler ve kuralları aşağıdaki gibi olmalıdır. \n \n \n \n Seçim \n Kural \n \n \n \n \n Temel Hesap Bilgisi \n ÖHK seçim yapabilir. Temel Kart Bilgisi seçilmediyse bu izin türünün seçimi zorunludur. \n \n \n Ayrıntılı Hesap Bilgisi \n ÖHK seçim yapabilir. \n \n \n Bakiye Bilgisi \n ÖHK seçim yapabilir. \n \n \n Temel İşlem (Hesap Hareketleri)  Bilgisi \n ÖHK seçim yapabilir. \n \n \n Ayrıntılı İşlem Bilgisi \n ÖHK seçim yapabilir. Ayrıntılı İşlem Bilgisi seçimi Temel İşlem Bilgisi seçimini kapsar. (Ayrıntılı İşlem bilgisi seçildiğinde Temel İşlem Bilgisi de seçili olmalıdır.) \n \n \n Anlık Bakiye Bildirimi \n Bakiye Bilgisi izin türü ile birlikte seçilmesi gereklidir. ÖHK, HHS'de olacak bakiye değişikliklerinden anlık haberdar olmak istiyor ise bu izin türü seçimi ile rıza başlatması gereklidir. \n \n \n Temel Kart Bilgisi \n ÖHK seçim yapabilir. Temel Hesap Bilgisi seçilmediyse bu izin türünün seçimi zorunludur. \n \n \n Detaylı Kart Bilgisi \n ÖHK seçim yapabilir. \n \n \n Ayrıntılı Kart İşlem Bilgisi \n ÖHK seçim yapabilir. \n \n \n \n Aşağıdaki durumlarda, izin kombinasyonlarına izin verilmez. HHS, bu hesap erişim onaylarını 400 (Hatalı İstek) yanıt koduyla reddetmelidir: \n \n İzin dizisinin herhangi bir izin türü içermemesi durumu, \n İzin dizisinde HHS tarafından desteklenmeyen bir izin kodunun yer alması durumu \n 9.2 ADIM 2: Hesap Bilgisi Hizmeti Rızasının Tesisi \n \n \n Şekil 12: Hesap Bilgisi ÖHK Rızasının Tesisi \n Rıza tesisinin başarıyla sonuçlanması için HBHS'nin istemci kimlik bilgileri yetkisi kullanması ve ardından müşterinin HHS tarafından yönlendirmeli veya ayrık GKD ile doğrulanması gerekir. HHS'de oluşturulan ve rıza durumu “Yetki Bekleniyor” olan bir hesap bilgisi rızası, GKD sonrası “Yetkilendirildi” statüsüne güncellenir. HBHS, erişim sağlayacağı hesapları ve kartları hesap bilgisi rızasının tesisinden önce seçer. \n \n \n Yönlendirmeli doğrulama akışında, HBHS ÖHK’yı HHS’ye yönlendirir. \n \n \n HBHS tarafından yönlendirme, bir önceki adımdaki RizaNo’yu içerir. \n \n \n HHS, ÖHK için GKD sürecini işletir. \n ÖHK’yı doğrularsa, \n \n \n ÖHK HBHS üzerinden işlem yapılmasına izin vereceği hesap/kart seçimini yapar. HBHS üzerinden ÖHK’nın verdiği izin bilgilerini ve erişim izninin başlangıç/bitiş tarihi bilgilerini, HHS'ler bilgilendirme amaçlı ÖHK’ya gösterir. \n \n \n Rıza güncelleme akışı ile başlatılan rıza isteklerinde mevcut rıza içerisinde seçili olan hesap/kart bilgileri ÖHK'ya HHS ekranlarında aynı şekilde seçili olarak getirilmelidir. ÖHK'lar mevcut rıza içerisinde izin vermiş olduğu hesap/kart bilgilerini seçili olarak görüntüleyip yeni rıza için izin vermek istediği hesap/kartların seçimini güncelleyebilmelidir. \n \n \n HHS hesap bilgisi rıza kaynağının durumunu “Yetkilendirildi” olarak günceller. \n \n \n HHS, ÖHK’yı “olumlu yönlendirme akışı” ile HBHS tarafından tanımlanan yönlendirme adresine yönlendirir: \n yonAdr?rizaDrm=Y&yetKod=xx&rizaNo=yy&rizaTip=H&drmKod=zzz\n \n \n \n ÖHK’yı doğrulayamazsa, \n \n \n HHS, hesap bilgisi rıza kaynağının durumunu “Yetki İptal” olarak günceller. \n \n \n HHS, ÖHK’yı “olumsuz yönlendirme akışı” ile HBHS tarafından tanımlanan yönlendirme adresine yönlendirir: \n yonAdr?rizaDrm=I &rizaNo=yy&rizaTip=H&rizaIptDtyKod=11&drmKod=zzz\n \n \n \n \n \n \n \n Ayrık doğrulama akışında, HHS, ÖHK’nın hesap bilgisi hizmetini başlattığı uygulamadan farklı olabilecek bir “doğrulama” uygulamasında işlemi doğrulamasını ister. \n \n Ayrık akış HBHS’nin farklı bir kanal kullanarak yetkilendirme isteği göndermesiyle başlatılır. \n Bu yetkilendirme isteği, yetkilendirilecek hesap bilgisi rızasının eşleştirileceği ÖHK’nın bulunması için ilgili veriyi taşır. \n HHS, ödeme hizmeti kullanıcısını doğrular. \n ÖHK verdiği izin tipi dahilinde bilgileri paylaşılacak olan hesapları seçer. Rıza güncelleme akışı ile başlatılan isteklerde ÖHK mevcutta vermiş olduğu hesap ve kartları seçili olarak görüntüler. İlgili seçimler üzerinde güncelleme sağlayarak onay verir. \n HHS, hesap bilgisi rıza kaynağının durumunu “Yetkilendirildi” olarak günceller. \n \n \n \n Başarılı GKD sonrasında (rizaDrm=’Y’) ilgili rıza nesnesi için (belirli bir rizaNo) yetkilendirme kodunun (yetKod) alınmasının ardından erişim belirteci erişim adresine POST çağrısı yapılarak yetkilendirme kodu karşılığında erişim belirteci ve yenileme belirteci alınır. POST /erişim-belirteci erişim noktası EK-3’te açıklanmıştır. \n Erişim belirteci alındıktan sonra; HHS,  hesap bilgisi rızasının durumunu “Yetki Kullanıldı” olarak günceller. Rıza tesisi sağlanmış olur. \n 9.3 ADIM 2.1: Hesap Bilgisi Rızasının Sorgulanması \n GET /hesap-bilgisi-rizasi/{rizaNo} \n ÖHK, HHS üzerinden rıza iptali yapmış olabilir veya ÖHK’nın verdiği rıza süresi dolmuş olabilir.  Bu durumlarda HBHS, rıza alma akışına başlamadan önce, daha önce oluşturulmuş bir HesapBilgisiRizasi kaynağının durumunu, isteğe bağlı olarak alabilir. \n \n YÖS sadece kendi uygulaması üzerinden verilmiş hesap bilgi rızasını sorgulayabilir. YÖS'e ait olmayan bir rıza ile sorgulama yapıldığında HHS tarafından  \"TR.OHVPS.Resource.NotFound\"  hatası dönülür. \n YÖS'e ait rıza sorgulama yapılırken ilgili rıza kaydı bulunamaz ise  ”TR.OHVPS.Resource.NotFound”  hatası dönülür. \n \n Servis başarılı yanıtında Tablo 13’de belirtilen “HesapBilgisiRizasi” nesnesini dönmektedir. \n Durum \nHesapBilgisiRizasi kaynağı için kullanılabilecek durum göstergeleri şu şekildedir: \n \n \n Yetki Bekleniyor \n \n \n Yetkilendirildi \n \n \n Yetki Kullanıldı \n \n \n Yetki Sonlandırıldı \n \n \n Yetki İptal \n \n \n Hesap bilgisi rızası sonlandırıldı ve iptal statüsünde olan rıza'ların güncellenme zamanından(gnclZmn) 6 ay sonrasına kadar sorgulanabilir olması beklenmektedir. HHS'ler ilgili süre sonrasında yapılacak rıza sorgularına  \"TR.OHVPS.Resource.NotFound\"  uyarısı verebilir. YÖS'ler tarafından iptal ve sonlandırıldı statüsünde olan rızalar için sorgulama yapmamalıdır. \n 9.4 ADIM 2.2: Hesap Bilgisi Rızasının İptali \n \n \n \n Şekil 13: Hesap Bilgisi Müşteri Rızasının Geri Alınması \n DELETE /hesap-bilgisi-rizasi/{RizaNo} \n DELETE /hesap-bilgisi-rizasi çağrısı, bir HBHS'nin önceden oluşturulmuş bir hesap erişim rızasını (yetkili olsun veya olmasın) silmesine izin verir. Müşteri, rızasını HHS üzerinden iptal etmek yerine, HBHS üzerinden bu rızasını kaldırmak isteyebilir. \nBu API çağrısı, müşterinin HBHS üzerinden hesap bilgisi rızasını iptal etmesine ve HHS nezdindeki hesap bilgisi rızası nesnesinin silinmesini sağlar. \n \n Rıza durumunun K olduğu durumlarda erişim belirteci kontrolü yapılır. Geçerli bir erişim belirteci yok ise HHS tarafından  ”TR.OHVPS.Connection.InvalidToken”  hatası dönülür. \n İstek başlığında yer alan X-Access-Token ile ilişkili rıza, silinen rizaNo bilgisi ile aynı olup olmadığı kontrol edilir. Farklı olması durumunda  \"TR.OHVPS.Resource.NotFound\"  hatası dönülür. \n Rıza İptali API'sinde ilgili rıza kaydı bulunamaz ise  ”TR.OHVPS.Resource.NotFound”  hatası dönülür. \n Rıza durumu Yetki Sonlandırıldı - S veya Yetki İptal - I ise  \"TR.OHVPS.Resource.ConsentRevoked\"  hatası dönülür. \n \n Müşterinin HBHS’nin veri erişim iznini iptal etmesi durumunda HBHS, HHS’de mevcut olan HesapBilgisiRizasi kaynağını pratik olarak mümkün olan en kısa sürede silmelidir. Bu ise, ilgili kaynağa \n DELETE /hesap-bilgisi-rizasi/{RizaNo} \nçağrısı aracılığı ile yerine getirilir. HBHS ayrıca, sisteminden Hesap/Kart Erişim İzni kaynaklarını da temizlemelidir. \nSöz konusu silme işlemi, kayıtların statüsünün pasife çekilmesi ile gerçekleştirilmelidir. Söz konusu kayıtlar, denetim izlerinin oluşturulması ve saklanmasına ilişkin ikincil düzenleme hükümleri kapsamında güvenli şekilde tutulmalıdır. \nServis istek parametresi olarak sadece path’de iletilen Rıza No bilgisine ihtiyaç duymaktadır. \nÖHK rızası başarı ile silindiğinde HTTP 204 response kodu ile işlem sonucu iletilir. Rıza tipi “I” yani “Yetki İptal” olarak güncellenir ve gnclZmn zaman damgası vurularak güncellenir. \nÖHK ile rıza iptali sırasında kurulacak iletişimde (e-posta, sms gibi) aşağıdaki alanların iletilmesi tavsiye edilmektedir: \nYÖS Adı, HHS adı, Rıza Oluşturma Zamanı, Servis Tipi Bilgisi (HBHS) \n 9.5 ADIM 3: Hesap Bilgilerinin Alınması \n    \n \n   \n Şekil 14: Hesap Bilgilerinin Alınması \n İSTEK: \nMüşteri rızası tesis edilmiş kullanıcı için HBHS API erişim adresinden HHS’ye erişilebilir hesap bilgilerini GET isteği ile sorgular: \n \n Parametrede yer alan değerlerin doğru gönderildiği kontrol edilir. Hatalı gönderilmesi durumunda HHS tarafından  ”TR.OHVPS.Resource.InvalidFormat”  hatası dönülür. Parametrede yer alan değerler gönderilmediği durumda parametredeki varsayılan değerler ile hesap bilgileri dönülür. Varsayılan değerler Tablo 14'de belirtilmiştir. \n Erişim belirteci kontrolü yapılır. Geçerli bir erişim belirteci yok ise HHS tarafından  ”TR.OHVPS.Connection.InvalidToken”  hatası dönülür. \n /hesaplar/{hspRef} ile yapılan istekte;\n \n İstek başlığında yer alan X-Access-Token ile ilişkili rızada, izin verilen hspRef'ler için, hesap bilgisi sorgulanan hspRefe ait rıza ile aynı olup olmadığı kontrol edilir. Farklı olması durumunda  \"TR.OHVPS.Resource.NotFound\"  hatası dönülür. \n İlgili hspRef bulunamaz  ”TR.OHVPS.Resource.NotFound”  hatası dönülür. \n \n \n Rıza durumu kontrol edilir.\n \n RizaDurumu B: Yetki Bekleniyor ya da Y: Yetkilendirildi ise  “TR.OHVPS.Resource.ConsentMismatch”  hatası dönülür. \n YÖS'ün; Rıza İptal - I ya da Yetki Sonlandırıldı - S rıza durumlarında hesap bilgileri servisini çağırmaması beklenir. Bu rıza durumları ile yapılmış çağrılar olduğunda HHS tarafından  ”TR.OHVPS.Resource.ConsentRevoked”  hatası dönülür. \n RizaDurumu “Yetki Kullanıldı” ise kontrollere devam edilir. \n \n \n HHS tarafından ÖHK’nın “01: Temel Hesap Bilgisi” izin türüne sahipliği kontrol edilir. 01 izin türüne sahip değil ise  ”TR.OHVPS.Business.PermissionTypeNotSupported”  hatası dönülür. \n \n Yukarıdaki kontroller tamamlandıktan sonra HHS, \"HesapBilgileri\" nesnesini oluşturur ve HBHS’ye döner. \n \n Hesap bilgisi rızası alınmış ve erişim izni devam eden hesaplar içerisinden herhangi bir hesabın kapatılması ya da pasife alınması durumunda YÖS tarafından yapılan hesap isteğine HHS tarafından hesap bilgisi dönülmelidir.\nKapalı hesap için TR.OHVPS.DataCode.HspDrm veri türünden KAPALI değeri ile, pasif hesap için TR.OHVPS.DataCode.HspDrm veri türünden PASIF değeri ile dönülmelidir. \n 9.6 ADIM 3.1 ve 3.2: Hesap Bilgilerinin Sorgulanması \n GET /hesaplar ve GET /hesaplar/{hspRef} \n Bu erişim noktalarından tüm hesapların veya belirli bir hesabın bilgileri sorgulanır. Hesap bilgisi için daha önce tanımlanmış izin türüne göre (Temel Hesap Bilgisi veya Detaylı Hesap Bilgisi) yanıtında dönülen HesapBilgileri nesnesinin içeriği değişir. Tablo 15’te HesapBilgileri nesnesinin içeriği verilmiştir. \n Hesap Bilgisi Sorgu Örneği (Tüm Hesaplar) =  /hesaplar \nHesap Bilgisi Sorgu Örneği (Belirli Bir Hesap) =  /hesaplar/{hspRef} \nİşlem Sorgu Örneği (Belirli Bir Hesap) =  /hesaplar?\nsyfKytSayi=25&\nsyfNo=1&\nsrlmKrtr= hspRef &\nsrlmYon=A \n Tablo 14: Hesap Bilgileri Sorgulama İsteği Sorgu Parametreleri \n \n \n \n Alan Adı \n Parametre Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n HHS tarafından yapılması gereken kontrol ve işlemler \n \n \n \n \n Sayfa Başına İstenen Kayıt Sayısı \n syfKytSayi \n N3 \n İ \n Sayfa başına istenen kayıt sayısı. Bu alanda iletilen değer 100’den büyük olamaz. \n Bu veri gönderildiği durumda, HHS listesini bu sayı kadar gruplandırarak gönderir. Bu veri gönderilmediğinde sayfadaki kayıt sayısı 100 olarak kullanılır. \n \n \n İstenen Sayfa Numarası \n syfNo \n N3 \n İ \n Cevapta dönecek sayfa numarası 1’den başlayarak artan değerlerle iletilmelidir. \n Bu veri gönderildiği durumda, HHS işlemler listesini bu sayfadaki kayıtları gönderir. Gönderilmediğinde, HHS ilk sayfadaki kayıtları gönderir. \n \n \n Sıralama Kriteri \n srlmKrtr \n AN3..50 \n İ \n Cevapta dönülecek kayıtların sıralama kriterini belirtir. Alabileceği değerler: { “hspRef”} \n Bu veri gönderildiği durumda, HHS listesini bu kritere göre sıralayarak gönderir. Gönderilmediğinde, HHS sıralama kriterini hspRef olarak belirler. \n \n \n Sıralama Yönü \n srlmYon \n AN1 \n İ \n Cevapta dönülecek işlemlerin sıralama yönünü belirtir. Alabileceği değerler:  A: Azalan değerle sıralama Y: Artan değerle sıralama {“A”,”Y”} \n Bu veri gönderildiği durumda, HHS listesini bu yöne göre sıralayarak gönderir. Gönderilmediğinde, HHS sıralama yönünü Azalan olarak belirler. \n \n \n \n Tablo 15: “HesapBilgileri” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Rıza No \n rizaNo \n AN1..128 \n Z \n HesapBilgisiRızası nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n Hesap Temel \n hspTml \n Kompleks: HesapTemel \n Z \n Temel Hesap Bilgileri (Temel Hesap Bilgisi varsayılan izin türü olduğundan Hesap Temel nesnesi zorunlu olarak yanıtta bulunur) \n \n \n > Hesap Referansı \n hspRef \n AN5..40 \n Z \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid). YÖS bazında farklılaşması gerekmez. Bir hesap (IBAN) tek bir hspRef'e karşılık gelmelidir, benzer şekilde bir hspRef tek bir IBAN'a karşılık gelmelidir. Aynı hesap için alınan tüm rızalarda hesap referans bilgisinin değişmemesi gerekmektedir. \n \n \n > Hesap Numarası \n hspNo \n AN26 \n K \n Eğer varsa ödeme hesabına ait IBAN bilgisi \n \n \n > Hesap Sahibi Ünvanı \n hspShb \n AN3..140 \n Z \n Hesap sahibi ya da hesap sahiplerinin ad-soyadı, ticari ünvanı \n \n \n > Şube Adı \n subeAdi \n AN3..50 \n K \n Eğer varsa ödeme hesabının bağlı olduğu şubenin adı \n \n \n > Kısa Ad \n kisaAd \n AN3..50 \n K \n Eğer hesap sahibi hesaba ait bir ad tanımladıysa, tanımlanan hesap adı \n \n \n > Para Birimi \n prBrm \n AN3 \n Z \n Para Birimi. \n \n \n > Hesap Türü \n hspTur \n AN1 \n Z \n Hesabın türü (bireysel veya ticari). TR.OHVPS.DataCode.HspTur sırali veri değerlerinden birini alır. \n \n \n > Hesap Tipi \n hspTip \n AN1..32 \n Z \n Hesabın tipi (VADESİZ, KREDİLİ vb.).TR.OHVPS.DataCode.HspTip sıralı veri değerlerinden birini alır. \n \n \n >Hesap Ürün Adı \n hspUrunAdi \n AN1..140 \n İ \n HHS tarafından atanmış olan ürün adı bilgisidir. HBHS tarafından ÖHK’ya gösterilmesi kullanım kolaylığı sağlayacaktır. \n \n \n > Hesap Durumu \n hspDrm \n AN5..50 \n Z \n Hesabın durumunu belirtir. TR.OHVPS.DataCode.HspDrm sıralı veri türlerinden birini alır. \n \n \n Hesap Detay \n hspDty \n Kompleks: HesapDetay \n K \n Detay Hesap Bilgileri (Temel Hesap Bilgisine ek olarak Detay Hesap Bilgisi izin türü de seçilmişse Hesap Detay nesnesi koşullu olarak yanıtta bulunur) \n \n \n > Açılış Tarihi \n hspAclsTrh \n ISODateTime \n Z \n Belirtilen hesabın açılış tarihi. \n 9.7 ADIM 3.3 ve 3.4: Hesap Bakiyesinin Sorgulanması \n GET /bakiye ve GET /hesaplar/{hspRef}/bakiye \nBu erişim noktalarından tüm hesapların veya belirli bir hesabın bakiyesi sorgulanır.   İstek çağrısına dönülen “BakiyeBilgileri” nesnesi Tablo 17’de verilmiştir. \n \n Erişim belirteci kontrolü yapılır. Geçerli bir erişim belirteci yok ise HHS tarafından  ”TR.OHVPS.Connection.InvalidToken”  hatası dönülür. \n /hesaplar/{hspRef}/bakiye ile yapılan istekte;\n \n İstek başlığında yer alan X-Access-Token ile ilişkili rızada, izin verilen hspRef'ler için, bakiye sorgusundaki hspRefe ait rıza ile aynı olup olmadığı kontrol edilir. Farklı olması durumunda  \"TR.OHVPS.Resource.NotFound\"  hatası dönülür. \n İlgili hspRef bulunamaz  ”TR.OHVPS.Resource.NotFound”  hatası dönülür. \n \n \n Rıza durumu kontrol edilir.\n \n RizaDurumu B: Yetki Bekleniyor ya da Y: Yetkilendirildi ise  “TR.OHVPS.Resource.ConsentMismatch”  hatası dönülür. \n YÖS'ün; Rıza İptal - I ya da Yetki Sonlandırıldı - S rıza durumlarında hesap bakiye servisini çağırmaması beklenir. Bu rıza durumları ile yapılmış çağrılar olduğunda HHS tarafından  ”TR.OHVPS.Resource.ConsentRevoked”  hatası dönülür. \n RizaDurumu “Yetki Kullanıldı” ise kontrollere devam edilir. \n \n \n Hesap Bakiye Sorgulanması yapılırken HHS tarafından ÖHK’nın “03: Bakiye Bilgisi” izin türü sahipliği kontrol edilir. 03 izin türüne sahip değil ise  ”TR.OHVPS.Business.PermissionTypeNotSupported”  hatası dönülür. \n \n Yukarıdaki kontroller tamamlandıktan sonra HHS, \"BakiyeBilgileri\" nesnesini oluşturur ve HBHS’ye döner. \n \n Hesap Bilgisi Rızası alınmış ve erişim izni devam eden hesaplar içerisinde yer alan hesaplardan kapatılmış ya da pasif duruma alınmış olan hesaplar için bakiye isteği yapıldığında HHS tarafından bakiye bilgisi dönülmelidir. \n \n Hesap bakiyelerinin gösterilmesi sırasında aşağıda verilen örnekler gözönünde bulundurulmalıdır. \n Örnek 1 : ÖHK  Hesap Bakiye Tutarı  0 TL,  Kredili Mevduat Hesabı Bakiyesi  3000 TL. ÖHK 1000 TL para çıkışı gerçekleştirdi. Bakiye API'si yanıtı içerisinde iletilen  Kredi Dahil Göstergesi  0 değerini içeriyorsa,  Hesap Bakiye Tutarı  -1000 TL,  Kredili Mevduat Hesabı Bakiyesi  3000 TL olmalıdır. \n Örnek 2 : ÖHK  Hesap Bakiye Tutarı  0 TL,  Kredili Mevduat Hesabı Bakiyesi  3000 TL. ÖHK 1000 TL para çıkışı gerçekleştirdi. Bakiye API'si yanıtı içerisinde iletilen  Kredi Dahil Göstergesi  1 değerini içeriyorsa,  Hesap Bakiye Tutarı  2000 TL,  Kredili Mevduat Hesabı Bakiyesi  3000 TL olmalıdır. \n Örnek 3 : ÖHK  Hesap Bakiye Tutarı  1000 TL,  Kredili Mevduat Hesabı Bakiyesi  3000 TL. ÖHK 1000 TL para çıkışı gerçekleştirdi. Bakiye API'si yanıtı içerisinde iletilen  Kredi Dahil Göstergesi  0 değerini içeriyorsa,  Hesap Bakiye Tutarı  0 TL,  Kredili Mevduat Hesabı Bakiyesi  3000 TL olmalıdır. \n Örnek 4 : ÖHK  Hesap Bakiye Tutarı  1000 TL,  Kredili Mevduat Hesabı Bakiyesi  3000 TL. ÖHK 1000 TL para çıkışı gerçekleştirdi. Bakiye API'si yanıtı içerisinde iletilen  Kredi Dahil Göstergesi  1 değerini içeriyorsa,  Hesap Bakiye Tutarı  3000 TL,  Kredili Mevduat Hesabı Bakiyesi  3000 TL olmalıdır. \n İşlem Sorgu Örneği (Belirli Bir Hesap)=  /bakiye?\nsyfKytSayi=25&\nsyfNo=1&\nsrlmKrtr= hspRef &\nsrlmYon=A \n Tablo 16: “BakiyeBilgileri” Sorgulama İsteği Sorgu Parametreleri \n \n \n \n Alan Adı \n Parametre Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n HHS tarafından yapılması gereken kontrol ve işlemler \n \n \n \n \n Sayfa Başına İstenen Kayıt Sayısı \n syfKytSayi \n N3 \n İ \n Sayfa başına istenen kayıt sayısı. Bu alanda iletilen değer 100’den büyük olamaz. \n Bu veri gönderildiği durumda, HHS listesini bu sayı kadar gruplandırarak gönderir. Bu veri gönderilmediğinde sayfadaki kayıt sayısı 100 olarak kullanılır. \n \n \n İstenen Sayfa Numarasi \n syfNo \n N3 \n İ \n Cevapta dönecek sayfa numarası 1’den başlayarak artan değerlerle iletilmelidir. \n Bu veri gönderildiği durumda, HHS işlemler listesini bu sayfadaki kayıtları gönderir. Gönderilmediğinde, HHS ilk sayfadaki kayıtları gönderir. \n \n \n Sıralama Kriteri \n srlmKrtr \n AN3..50 \n İ \n Cevapta dönülecek kayıtların sıralama kriterini belirtir. Alabileceği değerler: { “hspRef”} \n Bu veri gönderildiği durumda, HHS listesini bu kritere göre sıralayarak gönderir. Gönderilmediğinde, HHS sıralama kriterini hspRef olarak belirler. \n \n \n Sıralama Yönü \n srlmYon \n AN1 \n İ \n Cevapta dönülecek işlemlerin sıralama yönünü belirtir. Alabileceği değerler:  A: Azalan değerle sıralama Y: Artan değerle sıralama {“A”,”Y”} \n Bu veri gönderildiği durumda, HHS listesini bu yöne göre sıralayarak gönderir. Gönderilmediğinde, HHS sıralama yönünü Azalan olarak belirler. \n \n \n \n Tablo 17: “BakiyeBilgileri” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Hesap Referansı \n hspRef \n AN5..40 \n Z \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid). YÖS bazında farklılaşması gerekmez. Bir hesap (IBAN) tek bir hspRef'e karşılık gelmelidir, benzer şekilde bir hspRef tek bir IBAN'a karşılık gelmelidir. Aynı hesap için alınan tüm rızalarda hesap referans bilgisinin değişmemesi gerekmektedir. \n \n \n Bakiye \n bky \n Kompleks:Bakiye \n Z \n \n \n \n > Hesap Bakiye Tutarı \n bkyTtr \n AN1..25 \n Z \n Hesabın bakiyesi. Bloke tutar düşülmeden iletilmelidir.   Tutar alanı regex patterni şu şekildedir:  '^-?\\d{1,18}$|^-?\\d{1,18}\\.\\d{1,5}$' \n \n \n > Blokeli Tutar \n blkTtr \n AN1..24 \n K \n Varsa hesapta blokeli tutar bilgisi.     Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n \n \n > Para Birimi \n prBrm \n AN3 \n Z \n Para birimi. \n \n \n > Bakiye İletilme Zamanı \n bkyZmn \n ISODateTime \n Z \n Bakiyenin iletildiği zaman bilgisi. \n \n \n > KrediliHesap \n krdHsp \n Kompleks: KrediliHesap \n K \n \n \n \n >> Kredili Mevduat Hesabı Bakiyesi \n kulKrdTtr \n AN1..24 \n Z \n Kredili mevduat tutarı. Kredili bir hesap ise zorunlu.   Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n \n \n >> Kredi Dahil Göstergesi \n krdDhlGstr \n AN1 \n Z \n Kredili bir hesap ise zorunlu. Bakiye tutarının kredi tutarı dahil edilerek ya da edilmeden iletildiğini gösterir.   0: Kredi tutarı dahil edilmeden bakiye bilgisi iletilmesi durumu   1: Kredi tutarı dahil edilerek bakiye bilgisi iletilmesi durumu \n 9.8 ADIM 3.5 ve 3.6: İşlemlerin Sorgulanması \n GET /hesaplar/{hspRef}/islemler \n Servis başarılı yanıtında Tablo 19’da belirtilen \"IslemBilgileri\" nesnesini dönmektedir. \n \n Belirli bir hesaba ilişkin işlem bilgileri Tablo 18’deki istek parametrelerine göre sorgulanır. Parametrede yer alan değerlerin doğru gönderildiği kontrol edilir. Hatalı gönderilmesi durumunda  ”TR.OHVPS.Resource.InvalidFormat”  hatası dönülür. \n Erişim belirteci kontrolü yapılır. Geçerli bir erişim belirteci yok ise HHS tarafından  ”TR.OHVPS.Connection.InvalidToken”  hatası dönülür. \n İstek başlığında yer alan X-Access-Token ile ilişkili rızada, izin verilen hspRef'ler için, işlemler sorgusundaki hspRefe ait rıza ile aynı olup olmadığı kontrol edilir. Farklı olması durumunda  \"TR.OHVPS.Resource.NotFound\"  hatası dönülür. \n İlgili hspRef bulunamaz  ”TR.OHVPS.Resource.NotFound”  hatası dönülür. \n Rıza durumu kontrol edilir.\n \n RizaDurumu B: Yetki Bekleniyor ya da Y: Yetkilendirildi ise  “TR.OHVPS.Resource.ConsentMismatch”  hatası dönülür. \n YÖS'ün; Rıza İptal - I ya da Yetki Sonlandırıldı - S rıza durumlarında işlemler servisini çağırmaması beklenir. Bu rıza durumları ile yapılmış çağrılar olduğunda HHS tarafından  ”TR.OHVPS.Resource.ConsentRevoked”  hatası dönülür. \n RizaDurumu “Yetki Kullanıldı” ise kontrollere devam edilir. \n \n \n HHS tarafından ÖHK’nın “04: Temel İşlem (Hesap Hareketleri) Bilgisi” veya \"05: Ayrıntılı İşlem Bilgisi\" izin türüne sahipliği kontrol edilir. 04 veya 05 izin türüne sahip değil ise  ”TR.OHVPS.Business.PermissionTypeNotSupported”   hatası dönülür. \n \n Hesap Bilgisi Rızası alınmış ve erişim izni devam eden hesaplar içerisinde yer alan hesaplardan kapatılmış ya da pasif duruma alınmış olan hesaplar için işlemler isteği yapıldığında HHS tarafından işlemler bilgisi dönülmelidir. \nİşlem bilgisi için daha önce tanımlanmış izin türüne göre yanıtta dönen IslemBilgileri nesnesinin (Temel İşlem Bilgisi veya Temel İşlem Bilgisi ve Detaylı İşlem Bilgisi) içeriği değişir. \nİşlemler servisi hem ÖHK’nın talebi ile YÖS uygulaması üzerinden çağrılabileceği gibi, YÖS’ün ÖHK’sız başlatabileceği otomatik çağrıları ile de yanıt dönebilmektedir. \nHHS, işlemin sistemsel yapılıp yapılmadığını, istek parametreleri içerisinde yer alan PSU-Initiated parametresi ile anlar. Bu parametre “E” ise ÖHK’lı, “H” ise sistemsel yapılmış bir sorgu anlamına gelmektedir.\nÖHK’nın başlattığı sorgular için HHS tarafından belirlenen üst rate limitler dahilinde çağrım yapılabilir. \nYÖS, otomatik yapacağı sorgularda; \n \n Bireysel ÖHK’lar için hesap bazında günde en fazla 4 adet başarı ile sonuçlanan sorgulama yapabilir. 4 adetten fazla yapılması durumunda  ”TR.OHVPS.Connection.ExceededRate”  hatası dönülür. \n Kurumsal ÖHK’lar için hesap bazında saatte en fazla 12 adet başarı ile sonuçlanan sorgulama yapabilir. 12 adetten fazla yapılması durumunda  ”TR.OHVPS.Connection.ExceededRate”  hatası dönülür. \n \n HHS, tutacağı sayaç bilgisi ile bu sayıları kontrol ederek daha fazla sorgulama yapılmasına izin vermeyebilir. \n Aynı istek parametreleri ile yapılan sorgu sonucunda dönecek toplam kayıt sayısı 100’ü aştığında, sayfalama yöntemi ile HHS’nin cevap dönmesi beklenmektedir.  Her bir sayfa için işlemler servisi tekrar çağrılsa da, bu çağrım HHS’nin tuttuğu sayaç değerini arttırmaz. HHS’nin tutacağı sayaçın kontrol parametreleri YÖS kodu, hesap numarası ya da referansı olmalıdır. Sayfa no parametresi varsa ve 1'den büyük ise işlem sayacını arttırmamalıdır. \n ÖHK’nın YÖS uygulaması üzerinden tetiklediği işlemlerde ise;\nbireysel ÖHK’lar  için en fazla 1 aylık,\nkurumsal ÖHK’lar için ise en fazla 1 haftalık bir pencere aralığında sorgulama yapılabilir. Belirtilen tarih aralığından farklı değer ile sorgulama yapıldığında  ”TR.OHVPS.Business.InvalidStartEndTime”  hatası dönülür. \n YÖS, otomatik yapacağı sorgularda hem bireysel hem de kurumsal ÖHK’lar için 24 saatlik bir pencere aralığında sorgulama yapabilir. Belirtilen tarih aralığından farklı değer ile sorgulama yapıldığında  ”TR.OHVPS.Business.InvalidStartEndTime”  hatası dönülür. \n Yeni günün başlangıç saatinin 00:00:00 olduğu kabul edilmiştir. \n Sorgu örnekleri aşağıdaki gibidir:  \n 1 günlük İşlem Sorgu Örneği (Belirli Bir Hesap) =  /hesaplar/{hspRef}/islemler?\nhesapIslemBslTrh=2020-06-01T00:00:00+03:00&\nhesapIslemBtsTrh=2020-06-02T00:00:00+03:00&\nminIslTtr=0&\nmksIslTtr=100000&\nbrcAlc=A&\nsyfKytSayi=25&\nsyfNo=1&\nsrlmKrtr= islGrckZaman &\nsrlmYon=A\n \n \n 1 haftalık İşlem Sorgu Örneği (Belirli Bir Hesap) =  /hesaplar/{hspRef}/islemler?\nhesapIslemBslTrh=2020-06-01T00:00:00+03:00&\nhesapIslemBtsTrh=2020-06-08T00:00:00+03:00&\nminIslTtr=0&\nmksIslTtr=100000&\nbrcAlc=A&\nsyfKytSayi=25&\nsyfNo=1&\nsrlmKrtr= islGrckZaman &\nsrlmYon=A\n \n \n 1 Aylık İşlem Sorgu Örneği (Belirli Bir Hesap) =  /hesaplar/{hspRef}/islemler?\nhesapIslemBslTrh=2020-02-01T00:00:00+03:00&\nhesapIslemBtsTrh=2020-03-01T00:00:00+03:00&\nminIslTtr=0&\nmksIslTtr=100000&\nbrcAlc=A&\nsyfKytSayi=25&\nsyfNo=1&\nsrlmKrtr= islGrckZaman &\nsrlmYon=A\n \n 1 Aylık İşlem Sorgu Örneği (Belirli Bir Hesap) =  /hesaplar/{hspRef}/islemler?\nhesapIslemBslTrh=2020-01-31T00:00:00+03:00&\nhesapIslemBtsTrh=2020-02-28T00:00:00+03:00&\nminIslTtr=0&\nmksIslTtr=100000&\nbrcAlc=A&\nsyfKytSayi=25&\nsyfNo=1&\nsrlmKrtr= islGrckZaman &\nsrlmYon=A\n \n 1 Aylık İşlem Sorgu Örneği (Belirli Bir Hesap) =  /hesaplar/{hspRef}/islemler?\nhesapIslemBslTrh=2020-02-28T00:00:00+03:00&\nhesapIslemBtsTrh=2020-03-28T00:00:00+03:00&\nminIslTtr=0&\nmksIslTtr=100000&\nbrcAlc=A&\nsyfKytSayi=25&\nsyfNo=1&\nsrlmKrtr= islGrckZaman &\nsrlmYon=A\n \n 24 saatlik pencerede yapacağı sistemsel sorgu örneği (Son sorgusunun üzerine 24 saat eklenmesi)  =\n/hesaplar/{hspRef}/islemler?\nhesapIslemBslTrh=2020-06-01T14:10:08+03:00&\nhesapIslemBtsTrh=2020-06-02T14:10:08+03:00&\nminIslTtr=0&\nmksIslTtr=100000&\nbrcAlc=A&\nsyfKytSayi=25&\nsyfNo=1&\nsrlmKrtr= islGrckZaman &\nsrlmYon=A\n \n Önyüzden alınan sorgu parametreleri ile oluşturulan sorgu örneği (Örnek sorgu tarih aralığı 20.02.2023- 25.02.2023 arasındadır)  =\n/hesaplar/{hspRef}/islemler?\nhesapIslemBslTrh=2023-02-20T00:00:00+03:00&\nhesapIslemBtsTrh=2023-02-26T00:00:00+03:00&\nminIslTtr=0&\nmksIslTtr=100000&\nbrcAlc=A&\nsyfKytSayi=25&\nsyfNo=1&\nsrlmKrtr= islGrckZaman &\nsrlmYon=A\n \n Tablo 18: İşlem Listesi Sorgulama İsteği Sorgu Parametreleri \n \n \n \n Alan Adı \n Parametre Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n HHS tarafından yapılması gereken kontrol ve işlemler \n \n \n \n \n İşlem Sorgulama Başlangıç Zamanı \n hesapIslemBslTrh \n ISODateTime \n Z \n Sorgulanacak işlemlerin başlangıç tarihi. \n HHS işlemler listesi dönüşünü bu kritere göre filtreleyerek iletmek zorundadır. ÖHK tarafından tetiklenen sorgularda;hesapIslemBslTrh ve hesapIslemBtsTrh arası fark bireysel ÖHK’lar için en fazla 1 ay,kurumsal ÖHK’lar için ise en fazla 1 hafta olabilir. YÖS tarafından sistemsel yapılan sorgulamalarda hem bireysel, hem de kurumsal ÖHK’lar için;son 24 saat sorgulanabilir. Bu yüzden hesapIslemBtsTrh-24 saat’ten daha uzun bir aralık sorgulanamaz olmalıdır. İstek başlığında yer alan PSU-Initiated alanı “E” ise ÖHK’lı, “H” ise sistemsel yapılmış bir sorgu anlamına gelmektedir. \n \n \n İşlem Sorgulama Bitiş Zamanı \n hesapIslemBtsTrh \n ISODateTime \n Z \n Sorgulanacak işlemlerin bitiş tarihi. \n HHS işlemler listesi dönüşünü bu kritere göre filtreleyerek iletmek zorundadır. YÖS tarafından sistemsel yapılan sorgulamalarda hem bireysel, hem de kurumsal ÖHK’lar için;İleri vadeli işlem emirleri dahil olmadığı için (Sürüm 1.0.2 kapsamında); İşlem Sorgulama Bitiş Zamanı, her zaman, sorgulama zaman damgasını iletecek şekilde (datetime (now)) iletilebilir. \n \n \n En Düşük İşlem Tutarı \n minIslTtr \n AN1..24 \n İ \n Sorgulanacak işlemlerin alabileceği en düşük işlem tutarı.      Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n Bu veri gönderildiği durumda HHS işlemler listesi dönüşünü bu kritere göre filtreleyerek iletmek zorundadır. \n \n \n En Yüksek İşlem Tutarı \n mksIslTtr \n AN1..24 \n İ \n Sorgulanacak işlemlerin alabileceği en yüksek işlem tutarı.    Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n Bu veri gönderildiği durumda HHS işlemler listesi dönüşünü bu kritere göre filtreleyerek iletmek zorundadır. \n \n \n Borç Alacak Göstergesi \n brcAlc \n AN1 \n İ \n TR.OHVPS.DataCode.BrcAlc sıralı veri tipi değerlerinden birini alır. Sorgulanacak işlemlerin borç / alacak kriteri B: Hesaba borç yaratan işlem.A: Hesaba alacak yaratan işlem.{“B”,”A”} \n Bu veri gönderildiği durumda HHS işlemler listesi dönüşünü bu kritere göre filtreleyerek iletmek zorundadır. \n \n \n Sayfa Başına İstenen Kayıt Sayısı \n syfKytSayi \n N3 \n İ \n Sayfa başına istenen kayıt sayısı. Bu alanda iletilen değer 100’den büyük olamaz. \n Bu veri gönderildiği durumda, HHS işlemler listesini bu sayı kadar gruplandırarak gönderir. Bu veri gönderilmediğinde sayfadaki kayıt sayısı 100 olarak kullanılır. \n \n \n İstenen Sayfa Numarasi \n syfNo \n N3 \n İ \n Cevapta dönecek sayfa numarası 1’den başlayarak artan değerlerle iletilmelidir. \n Bu veri gönderildiği durumda, HHS işlemler listesini bu sayfadaki kayıtları gönderir. Gönderilmediğinde, HHS ilk sayfadaki kayıtları gönderir. \n \n \n Sıralama Kriteri \n srlmKrtr \n AN3..50 \n İ \n Cevapta dönülecek işlemlerin sıralama kriterini belirtir. Alabileceği değerler: {“islGrckZaman”} \n Bu veri gönderildiği durumda, HHS işlemler listesini bu kritere göre sıralayarak gönderir. Gönderilmediğinde, HHS sıralama kriterini islGrckZaman olarak belirler. \n \n \n Sıralama Yönü \n srlmYon \n AN1 \n İ \n Cevapta dönülecek işlemlerin sıralama yönünü belirtir. Alabileceği değerler: A: Azalan değerle sıralama Y: Artan değerle sıralama {“A”,”Y”} \n Bu veri gönderildiği durumda, HHS işlemler listesini bu yöne göre sıralayarak gönderir. Gönderilmediğinde, HHS sıralama yönünü Azalan olarak belirler. \n \n \n \n Tablo 19: “IslemBilgileri” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Hesap Referans Numarası \n hspRef \n AN5..40 \n Z \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid). YÖS bazında farklılaşması gerekmez. Bir hesap (IBAN) tek bir hspRef'e karşılık gelmelidir, benzer şekilde bir hspRef tek bir IBAN'a karşılık gelmelidir. Aynı hesap için alınan tüm rızalarda hesap referans bilgisinin değişmemesi gerekmektedir. \n \n \n Islemler \n isller \n Kompleks:Islem[Array] \n K \n Hesaba ilişkin hareketler varsa İşlemler nesnesi dizisi olarak dönülür. İşlemler nesnesi Temel İşlem Bilgileri ve Detay İşlem Bilgileri nesnesinden meydana gelir. İzin türü varsayılan olarak Temel İşlem Bilgilerini içerir. Detay İşlem Bilgileri izin türü de seçildi ise Temel İşlem Bilgilerine ek olarak Detay İşlem Bilgileri de gönderilir. \n \n \n > Temel İşlem Bilgileri \n islTml \n Kompleks:IslemTemel \n Z \n Temel İşlem Bilgileri varsayılan olarak dönülür. \n \n \n >> İşlem Numarası \n islNo \n AN3..50 \n Z \n Hesap hareketinin oluşturulması sırasında atanan ve borç (veya alacak) hareketini tekilleştiren HHS bazında tekil tanımlayıcıdır. Bu değer tek başına tekil olabileceği gibi birden fazla değerin bir araya getirilmesiyle de tekilliği sağlanmış olabilir. Bu değerin en azından hesap numarası (hesNo) bazında tekil olması beklenir. Genellikle kullanılan örnekleri; Instance_Id, Transaction_Id, Transaction_Num, Transaction_TimeStamp,dekont numarası \n \n \n >> İşlem Referans Numarası \n refNo \n AN3..50 \n Z \n İşlemi uçtan uca tanımlayan tekil tanımlayıcıdır. Borç ve alacak hareketinden oluşan bir veya birden fazla işlemler bütünü için atanmış olan ve bu bütünü tekilleştiren (bir biri ile ilişkisini tutan) değerdir.Bu değer hem YÖS’ten gelen değer olabilir (ödeme işlemlerinde kullanılan kkodRef ya da refBlg alanı) hem de HHS içinde takip edilmek için üretilmiş bir değer olabilir. HHS sisteminde 2 değerin de bulunması durumunda;refNo alanını doldurmak için, HHS’nin YÖS’ten gelen değere öncelik vermesi beklenmektedir. YÖS’ten gelen veri örneği: Sipariş Numarası, Fatura Numarası, Karekod Referansı vb. HHS’te üretilen veri örneği: Masraflı havale işleminde hem havale işleminin hem de masraf işleminin aynı referans numarasına sahip olması da örnek olarak gösterilebilir. \n \n \n >> İşlem Tutarı \n islTtr \n AN1..24 \n Z \n İşlem tutarı.    Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n \n \n >> Güncel Bakiye Tutarı \n gnclBky \n AN1..25 \n Z \n İşlem sonrası güncel bakiye bilgisi tutarı.    Tutar alanı regex patterni şu şekildedir: ' ^[\\-\\+]?\\d{1,18}$|^[\\-\\+]?\\d{1,18}\\.\\d{1,5}$ ' \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para birimi. \n \n \n >> İşlem Gerçekleşme Zamanı \n islGrckZaman \n ISODateTime \n Z \n İşlemin gerçekleşme zamanı. \n \n \n >> İşlem Kanalı \n kanal \n AN1 \n Z \n TR.OHVPS.DataCode.OdemeKaynak sıralı veri türü değerlerinden birini alır. \n \n \n >> Borçlandırma Alacaklandırma Göstergesi \n brcAlc \n AN1 \n Z \n TR.OHVPS.DataCode.BrcAlc sıralı veri türü değerlerinden birini alır. İşlemin hesabı borç ya da alacaklandırdığı bilgisidir. \n \n \n >> İşlem Türü \n islTur \n AN3..50 \n Z \n HHS’nin işleme ait ilişkilendirdiği işlem türü değeri. TR.OHVPS.DataCode.IslemTuru sıralı veri türü değerlerinden birini alır. \n \n \n >> İşlem Amacı \n islAmc \n AN2 \n Z \n TR.OHVPS.DataCode.IslemAmaci sırali veri değerlerinden birini alır. Karekod akışında, FAST Karekod Veri Organizasyonundaki 62-08: alanında tanımlı Ödeme Amacı verisi kullanılır. \n \n \n >> Ödeme Sistemi No \n odmStmNo \n AN10..50 \n K \n Ödeme başarılı başlatıldıysa, ödemenin başlatıldığı sistemdeki referans numarası. Gerektiğinde ilgili ödeme sisteminde/HHS’de söz konusu ödemeye karşılık gelen mesajla bağlantı kurmada kullanılır.   Ödeme Hizmeti kullanıcısına işlemin takibi için gösterilebilir.  İşlemin yönlendirildiği ödeme sistemi FAST ya da PÖS ise sistemdeki ilgili mesajın Tarih, GönderenKatilimKodu ve SorguNumarasi değerlerinin birleşiminden oluşur. Bu 3 alan mevcutta kullanıldığı formatta aralarına dikey çizgi (Unicode U+2223) işareti koyularak, birleştirmeli ve iletilmelidir. Örn : Tarih|GönderenKatilimKodu|SorguNumarasi   Ödeme Havale/Virman işlemi ise HHS’nin üretmiş olduğu havale/virman numarasını içerir. Buradaki format da Tarih|GönderenKatilimKodu|Havale-virman numarası şeklinde olmalıdır. Havale/FAST/PÖS  ödeme yöntemleri için tarih alanı yyyy-aa-gg formatında 10 karakter olarak iletilmelidir. \n \n \n > Detay İşlem Bilgileri \n islDty \n Kompleks: IslemDetay \n K \n Detay İşlem Bilgileri dizi olarak gönderilmelidir. \n \n \n >> İşlem Açıklaması \n islAcklm \n AN1..200 \n Z \n HHS tarafından atanan işlem açıklaması. HHS kendi işlem hareketlerine yansıttığı açıklamayı buraya yansıtmalıdır.  HHS'ler tüm hesap hareketlerini YÖS'ler ile paylaşmakla yükümlü olup, hassas veri içeren(örn: faiz, komisyon bilgisi içeren vb.) işlem hareketleri de bu kapsamda değerlendirilerek işlem açıklamasının maskeli olarak iletilmesi sağlanır. Kelimelerin ilk 3 hanesi maskeli olacak şekilde, ancak sakıncalı bulunan kelimeler varsa; (örn: faiz, komiyon vb.) kelimelerin tamamı maskeli olacak şekilde gösterilebilir. \n \n \n >> Karşı Taraf \n krsTrf \n Kompleks:  KarsiTaraf \n K \n Kullanımı işlem bazında değişmektedir. Örnek: FAST işleminde karşı taraf alıcının bilgileridir. Vergi ödemesinde kurum IBAN bilgisi müşteriye gösterilemeyebileceğinden bu alanın boş gelmesi HHS insiyatifindedir. \n \n \n >>> Karşı Maskeli IBAN \n krsMskIBAN \n AN26 \n K \n İlgili hesap hareketinin karşı tarafının maskeli IBAN bilgisi. \n \n \n >>> Karşı Ünvan \n krsUnvan \n AN3..140 \n K \n İlgili hesap hareketinin karşı tarafının ad-soyad ya da ticari ünvan bilgisi. Ünvan bilgisi maskelenmeden iletilmelidir. \n \n \n >>> Karşı Taraf Kimlik Bilgisi \n krsKimlikVrs \n AN1..11 \n İ \n HHS sorumluluğunda YÖS ile paylaşılan Karşı Taraf Kimlik Bilgisi(Kimlik/Kurum Kimlik - TCKN/VKN) \n 9.9 ADIM 4: Kart Bilgilerinin Sorgulanması \n    \n GET /kartlar ve GET /kartlar/{kartRef} \n Bu erişim noktalarından tüm kartların veya belirli bir kartın bilgileri sorgulanır ve kart listesi elde edilir. İlgili sorgu için 07 izin türünün verilmesi yeterlidir. HHS ekranlarında kart seçimi yapılırken sadece aktif/açık statüde olan kartlar listelenecek ve ÖHK'ya seçtirilecektir. Kartın ilgili kanalda listelenme yetkisi bulunmuyorsa ÖHVPS kapsamında listelenmeyebilir. Listelendiği durumda; asıl kart sahibi ile sanal/ek kart sahiplerinin aynı kişi olduğu düşünüldüğünde HHS ekranlarında kart seçimi yapılarak rıza verilirken asıl kart seçilmeden ilgili asıl karta bağlı sanal ve ek kartların ayrıca seçilerek rıza verilmesine izin verilmemelidir. HHS mevcut kanallarında ek ve sanal kart hareketlerini asıl karttan ayırt etmeden müşterisine gösteriyor ise asıl kart seçimi ile birlikte asıl karta bağlı sanal ve/veya ek kart seçimini zorunlu kılmalıdır. Asıl kart hamili dışında bir kişi için ek kart çıkartıldığı durumda ek kart sahibi HHS'de asıl kartı görmeyecek olduğundan sadece kendisine çıkartılan ek kartı listelenecek ve seçerek rıza vermesi sağlanacaktır. Ek kart hamilinin asıl kart hamilinden farklı olduğu durumda asıl karta ait bir rıza olmasa da ek karta rıza verilebilir. \n Her durumda onay ekranında rıza verilen tüm kartların listesini ÖHK'ya göstermesi zorunludur. Kapalı devre çalışan kartlar kapsama dahil değildir. \n YÖS tarafından başlatılan rıza isteklerinde hesap ve kart izin türlerinin seçili olması durumunda HHS ekranlarında hem hesapların hem de kartların listelenmesi sağlanacaktır. Ancak hesap ya da kart bilgilerinden en az birinin seçilmesi yeterlidir. Hem hesap hem kart bilgisi için seçim yapılması zorunluluğu bulunmamaktadır. \n \n Parametrede yer alan değerlerin doğru gönderildiği kontrol edilir. Hatalı gönderilmesi durumunda HHS tarafından  ”TR.OHVPS.Resource.InvalidFormat”  hatası dönülür. Parametrede yer alan değerler gönderilmediği durumda parametredeki varsayılan değerler ile kart bilgileri dönülür. Varsayılan değerler Tablo 20'de belirtilmiştir. \n Erişim belirteci kontrolü yapılır. Geçerli bir erişim belirteci yok ise HHS tarafından  ”TR.OHVPS.Connection.InvalidToken”  hatası dönülür. \n Rıza durumu kontrol edilir.\n \n RizaDurumu B: Yetki Bekleniyor ya da Y: Yetkilendirildi ise  “TR.OHVPS.Resource.ConsentMismatch”  hatası dönülür. \n YÖS'ün; Rıza İptal - I ya da Yetki Sonlandırıldı - S rıza durumlarında kartlar servisini çağırmaması beklenir. Bu rıza durumları ile yapılmış çağrılar olduğunda HHS tarafından  ”TR.OHVPS.Resource.ConsentRevoked”  hatası dönülür. \n RizaDurumu “Yetki Kullanıldı” ise kontrollere devam edilir. \n \n \n İlgili rıza numarasının “07: Temel Kart Bilgisi” izin türüne sahipliği kontrol edilir. 07 izin türüne sahip değil ise  ”TR.OHVPS.Business.PermissionTypeNotSupported”  hatası dönülür. \n \n Yukarıdaki kontroller tamamlandıktan sonra HHS tarafından istek başlığında yer alan X-Access-Token ile ilişkili rıza içerisindeki kart bilgileri dönülür. Kart bilgileri için KartBilgileri nesnesinin içeriği Tablo 21'de verilmiştir. \n Kart Bilgisi Sorgu Örneği (Tüm Kartlar) = /kartlar?syfKytSayi=25&syfNo=1?kartTipi=K\nKart Bilgisi Sorgu Örneği (Belirli Bir Kart) = /kartlar/{kartRef} \n İptal statüsünde olan banka ve ön ödemeli kart tipleri HHS tarafından kartlar sorgusunda dönülmeyecek olup YÖS'ler tarafından ÖHK'ya da gösterilemeyecektir. İptal statülü kredi kart tipi için borç/taksit bilgisi veya artı bakiye olması durumunda kartlar listesinde HHS'ler tarafından dönüş sağlanacak olup YÖS'ler tarafından ÖHK'ya gösterilecektir. İptal statüsünde olup herhangi bir bakiye ve borç olmaması durumunda ilgili kart bilgisi kartlar listesinde HHS tarafından iletilmeyecektir. \n HHS'de açık/aktif statüde yer alan kartlar seçilip rıza tahsis edildikten sonra kartın statüsünün pasif olması durumunda HHS tarafından mevcut kanallarında gösterilen bilgiler kart liste, detay ve hareket sorgulamalarında dönülmelidir. HHS'de kart seçimi yapıp rıza tahsis edildikten sonra ilgili kartın gösterimi özelinde HHS'de kısıtlama getirilmesi durumları için örnekler aşağıda detaylandırılmıştır. \n \n Rıza içerisinde sadece kart olması durumunda ilgili rızanın 09 iptal detay kodu ile iptal edilmesi sağlanacaktır. \n Rıza içerisinde ilgili kartın dışında hesap/kart olması durumunda rıza iptal edilmeyecektir. İlgili kart haricinde kart listesinde farklı bir kart yoksa kart listesi, sorgulandığında  TR.OHVPS.Resource.RestrictedChannelAccess  hata kodu dönülecektir. \n \n Tablo 20: Kart Bilgileri Sorgulama İsteği Sorgu Parametreleri \n \n \n \n Alan Adı \n Parametre Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n HHS tarafından yapılması gereken kontrol ve işlemler \n \n \n \n \n Sayfa Başına İstenen Kayıt Sayısı \n syfKytSayi \n N3 \n İ \n Sayfa başına istenen kayıt sayısı. Bu alanda iletilen değer 100’den büyük olamaz. \n Bu veri gönderildiği durumda, HHS işlemler listesini bu sayı kadar gruplandırarak gönderir. Bu veri gönderilmediğinde sayfadaki kayıt sayısı 100 olarak kullanılır. \n \n \n İstenen Sayfa Numarasi \n syfNo \n N3 \n İ \n Cevapta dönecek sayfa numarası 1’den başlayarak artan değerlerle iletilmelidir. \n Bu veri gönderildiği durumda, HHS işlemler listesini bu sayfadaki kayıtları gönderir. Gönderilmediğinde, HHS ilk sayfadaki kayıtları gönderir. \n \n \n Kart Tipi \n kartTipi \n AN1 \n İ \n Kart tipleri özelinde Banka, Kredi ve Ön Ödemeli kartların ayrıca soruglanması sağlanır. \n Bu veri gönderildiği durumda, HHS kart tipine uygun olarak kart bilgilerini döner. \n \n \n \n Tablo 21: “KartBilgileri” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Rıza No \n rizaNo \n AN1..128 \n Z \n HesapBilgisiRızasi nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n Kart Referans Numarası \n kartRef \n AN5..40 \n Z \n HHS tarafından her bir kart için atanan biricik değerdir (uuid). Bir kart tek bir kartRef'e karşılık gelmelidir, benzer şekilde bir kartRef tek bir karta karşılık gelmelidir. Aynı kart için alınan tüm rızalarda kart referans bilgisinin değişmemesi gerekmektedir. \n \n \n Kart Numarası \n kartNo \n AN15..16 \n Z \n Karta ait numara maskeli olarak iletilmelidir. Maskeleme kuralı kart'ın ilk 6 ve son 4 hanesi açık olarak görünecek şekilde maskelenmelidir. Sanal kart bilgisi için de ilgili numara maskeli olarak iletilmelidir. Örn: 123456******5678 \n \n \n Asıl Kart Numarası \n asilKartNo \n AN15..16 \n K \n Asıl kartlar için ilgili alan iletilmemelidir. Sanal ve ek kartlar için bağlı oldukları asıl kart numaraları iletilmelidir. Ek karta ait sanal kart için asıl kart numarası olarak ek kart numarası iletilmelidir. Kart numarası maskeli iletilmelidir. \n \n \n Kart Tipi \n kartTipi \n AN1 \n Z \n Kartın tipini belirten değerdir. Kart tipleri olarak alabileceği değerler  TR.OHVPS.DataCode.KartTip  sıralı veri türlerinden biridir. \n \n \n Alt Kart Tipi \n altKartTipi \n AN1 \n Z \n Kart Tipleri altında yer alan alt kart tipleridir. Alt kart tipleri olarak alabileceği değerler  TR.OHVPS.DataCode.AltKartTip  sıralı veri türlerinden biridir.  Asıl banka kartı, sanal banka kartı, ek kredi kartı, asıl kredi kartı gibi tüm kart tiplerini ayrıştırmak için asıl ve alt kart tipleri kullanılmaktadır. \n \n \n Kart Formu \n kartFormu \n AN1 \n Z \n Kartın fiziksel ve dijital olduğunu belirten değerdir. Alabileceği değerler  TR.OHVPS.DataCode.KartFormu  sıralı veri türlerinden biridir. \n \n \n Kart Türü \n kartTuru \n AN1 \n Z \n Kartın tipinin bireysel ya da ticari olmasına yönelik olan değerdir.  B:Bireysel, T:Ticari \n \n \n Kart Statüsü \n kartStatu \n AN1 \n Z \n TR.OHVPS.DataCode.KartStatu  sıralı veri türü değerlerinden birini alır.  Kart statüsü için güncelleme yapılamayacak durumda ise iptal statüsü olarak değerlendirilmelidir. Kart statüsü güncellenebilir durumda ise açık ve pasif olarak değerlendirilmelidir. \n \n \n Kart Sahibi Ad/Soyad \n kartSahibi \n AN3..140 \n Z \n Kart sahibi ya da kart sahiplerinin ad-soyadı. \n \n \n Kart Ticari Unvan \n kartTicariUnvan \n AN3..140 \n K \n Kart türü ticari ise ilgili alanda ticari unvan iletilmesi zorunludur. \n \n \n Kart Ürün Adı \n kartUrunAdi \n AN3..140 \n Z \n Kart bilgilerinin ürün adı. Örn : TROY Business Kart \n \n \n Ekstre Türleri \n ekstreTurleri \n Kompleks:EkstreTurleri[Array] \n Z \n Ekstre türleri dizi içerisinde iletilmelidir. \n \n \n > Ekstre Statüsü \n ekstreStatu \n AN1 \n Z \n TR.OHVPS.DataCode.EkstreStatu  sıralı veri türü değerlerinden birini alır.Ekstre türünün durumu iletilmelidir. Pasif olan ekstre türleri de iletilmelidir. A: Aktif : ilgili kartın ekstre türünün kullanıma açık olmasıdır. P: Pasif : İlgili kartın esktre türünün eskiden kullanıldığı ancak şu an devre dışı durumda olmasıdır.  Örnek olarak: İlgili kredi kartının TRY, USD, EUR ekstre türleri açık olduğu durumda üç ekstre türünün de aktif olarak dönmesi beklenmektedir. ÖHK, USD ekstre türünü kapattığı durumda USD pasif ; TRY ve EUR aktif olarak dönmesi beklenmektedir. Böylece ÖHK’nın şu an pasif ama önceden aktif olan esktre türlerinin sorgulanması sağlanabilecektir. Eğer bir ekstre türü için hiç ekstre üretilmemişse, bu durumda HHS’nin ilgili ekstre türünü hiç dönmemesi gerekmektedir. \n \n \n > Para Birimi \n paraBirimi \n AN3 \n Z \n İlgili karta ait ekstre türleri para birimi.(TRY, USD, EUR, GBP) Yurtdışı ekstre olan kartlar için TRY haricinde de değer dönülmesi gerekmektedir. Banka kartlarında ise karta bağlı olan hesap para birimleri iletilmelidir. \n \n \n Kart Rumuz \n kartRumuz \n AN3..140 \n İ \n Kart için rumuz bilgisi var ise gönderilebilir. \n \n \n Kart Şeması \n kartSema \n AN1 \n Z \n TR.OHVPS.DataCode.KartSema  sıralı veri türü değerlerinden birini alır. \n 9.10 ADIM 4.1: Kart Detay Bilgilerinin Sorgulanması \n GET /kartlar/{kartRef}/kart-detay \n KartBilgileri nesnesi ile elde edilen kart listesinde yer alan kartların detayı sorgulanır. Detay ile birlikte KartDetayBilgileri nesnesinin içeriği Tablo 23'de verilmiştir. \n \n Parametrede yer alan ekstreTuru bilgisi Ekstre Türleri haricinde uygun olmayan bir değer gönderildiğinde  ”TR.OHVPS.Business.InvalidCurrencyCode”  hatası dönülür. Bu alan gönderilmiyorsa TRY olarak değerlendirilmelidir. \n Erişim belirteci kontrolü yapılır. Geçerli bir erişim belirteci yok ise HHS tarafından  ”TR.OHVPS.Connection.InvalidToken”  hatası dönülür. \n İstek başlığında yer alan X-Access-Token ile ilişkili rızada, izin verilen kartRef'ler için, kart detay bilgileri sorgulanan kartRefe ait rıza ile aynı olup olmadığı kontrol edilir. Farklı olması durumunda  \"TR.OHVPS.Resource.NotFound\"  hatası dönülür. \n İlgili kartRef bulunamaz  ”TR.OHVPS.Resource.NotFound”  hatası dönülür. \n Rıza durumu kontrol edilir.\n \n B: Yetki Bekleniyor ya da Y: Yetkilendirildi ise  “TR.OHVPS.Resource.ConsentMismatch”  hatası dönülür. \n I: Rıza İptal ya da S: Yetki Sonlandırıldı ise  ”TR.OHVPS.Resource.ConsentRevoked”  hatası dönülür. \n RizaDurumu “K: Yetki Kullanıldı” ise kontrollere devam edilir. \n \n \n İlgili rıza numarasının “08: Detaylı Kart Bilgisi” izin türüne sahipliği kontrol edilir. 08 izin türüne sahip değil ise  ”TR.OHVPS.Business.PermissionTypeNotSupported\"”  hatası dönülür. \n Alt kart tipi Sanal Kart olanlar için detay bilgisi görüntülenmeyecektir.  Sanal kart özelinde detay bilgi sorgulaması yapılması durumunda HHS tarafından  \"TR.OHVPS.Business.CardTypeNotSupported\"  hatası dönülür. \n Kart tipi olarak; iptal statüsünde olan banka ve ön ödemeli kartlar için detay sorgulaması yapılamayacaktır. Kart tipi kredi kartı olup iptal statüsünde olan ve  borcu olmayan bir  kart için de kart detay sorgulaması yapılamayacaktır. Detay sorgulaması yapılamayacak bir kart tipi için HHS'ler tarafından  \"TR.OHVPS.Business.InvalidCardStatus\"  hatası dönülür. \n Rıza içerisinde kanal görüntüleme yetkisi kapatılan kart için detay bilgisi sorgulandığında  TR.OHVPS.Resource.RestrictedChannelAccess  hata kodu dönülecektir. \n İlk kredi kartı oluşan ÖHK'lar henüz ekstre oluşmadığı sebebiyle tarih ve borç bilgileri de oluşmamış olabilir. Bu sebeple ilgili tutar bilgileri sıfır olacak şekilde dönülmelidir. Tarih bilgileri ise varsayılan tarih bilgisi olarak dönülebilir.(Örn:01/01/1900) Bu şekilde gelen bir tarih bilgisi YÖS'ler tarafından ÖHK'ya boş olarak gösterilebilir. \n \n Yukarıdaki kontroller tamamlandıktan sonra HHS tarafından  “KartDetayBilgileri”  nesnesi dönülür. \n HHS'ler kart tipi kredi kartı ise ve karta ait borç/taksit tutar bilgisi bulunuyorsa KartDetayBilgileri nesnesi için başarılı yanıt dönmek zorundadır. Borç bilgisi için tutarlar eksi(-) olacak şekilde iletilmesi beklenmektedir. \n Kart Detay Bilgisi Sorgu Örneği (Tek Bir Kart) = /kartlar/{kartRef}/kart-detay \n Parametre içeren Kart Detay Bilgisi Sorgu Örneği (Tek Bir Kart) =  /kartlar/{kartRef}/kart-detay?ekstreTuru=USD \n Tablo 22: Kart Bilgileri Sorgulama İsteği Sorgu Parametreleri \n \n \n \n Alan Adı \n Parametre Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n HHS tarafından yapılması gereken kontrol ve işlemler \n \n \n \n \n Ekstre Türü \n ekstreTuru \n AN3 \n K \n Kart bilgileri yanıtında dönülen ekstre türleri değerlerini almaktadır. Para birimine uygun olarak kart detay bilgileri sorgulanmaktadır. Ekstre parametresi TRY,USD,EUR,GBP olarak gönderilebilir. Bu alan gönderilmiyorsa TRY değerlendirilmelidir. İlgili para birimine özel ekstre içindeki harcama değeri dönülecektir. \n Ekstre türleri haricinde uygun olmayan bir değer gönderildiğinde hata verilmelidir. \n \n \n \n Tablo 23: “KartDetayBilgileri” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n Kart Tiplerine İstinaden Detaylı Açıklama \n \n \n \n \n Rıza No \n rizaNo \n AN1..128 \n Z \n HesapBilgisiRızasi nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n \n Kart Referans Numarası \n kartRef \n AN5..40 \n Z \n HHS tarafından her bir kart için atanan biricik değerdir (uuid). Bir kart tek bir kartRef'e karşılık gelmelidir, benzer şekilde bir kartRef tek bir karta karşılık gelmelidir. Aynı kart için alınan tüm rızalarda kart referans bilgisinin değişmemesi gerekmektedir. \n \n \n \n Ekstre Türü \n ekstreTuru \n AN3 \n Z \n Ekstre türü TRY,USD,EUR,GBP olarak gönderilebilir. İstek paremetresinde iletilen değer ile aynı değer olmalıdır. \n \n \n \n Toplam Kart Limiti \n toplamLimit \n Kompleks:ToplamLimit \n K \n Karta ait toplam TL limit bilgisi \n Kart tipi kredi kartı ve ön ödemeli kart olanlar için ilgili alanın dönülmesi zorunludur. Kart tipi banka olan kartlar için ilgili alan dönülmemelidir. Ön ödemeli kartlarda, bağlı bulundukları bir hesap olsa bile, sadece üzerlerine yüklenen tutarın gösterilmesi gerekmektedir. \n \n \n > Tutar \n tutar \n AN1..24 \n Z \n Tutar Bilgisi. Limit tutarı için regex patterni şu şekildedir: ' ^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$ ' \n \n \n \n > Para Birimi \n paraBirimi \n AN3 \n Z \n Para Birimi \n \n \n \n Kullanılabilir Kart Limiti \n kullanilabilirLimit \n Kompleks:KullanılabilirLimit \n K \n Karta ait kullanılabilir TL limit bilgisi \n Kart tipi banka olan kartlar için ilgili alan dönülmemelidir. \n \n \n > Tutar \n tutar \n AN1..24 \n Z \n Tutar Bilgisi. Limit tutarı için regex patterni şu şekildedir: ' ^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$ ' \n \n \n \n > Para Birimi \n paraBirimi \n AN3 \n Z \n Para Birimi \n \n \n \n Dönem İçi Hareket Toplamı \n donemIciHareketToplami \n Kompleks:DonemIciHareketToplami \n Z \n Dönem içi hareket toplamı ve kalan ekstre borcunun toplamı dönülmelidir. \n Kart tipi kredi kartı olanlar için ilgili döneme ait hareketlerin toplam tutar bilgisidir. Kart tipi banka ve ön ödemeli kartlar için ilgili dönem içerisinde ay başından itibaren yapılan hareketlerin toplam tutar bilgisi iletilmelidir. \n \n \n > Tutar \n tutar \n AN1..24 \n Z \n Tutar Bilgisi.  Tutar için regex patterni şu şekildedir: ' ^[\\-\\+]?\\d{1,18}$|^[\\-\\+]?\\d{1,18}\\.\\d{1,5}$ ' \n \n \n \n > Para Birimi \n paraBirimi \n AN3 \n Z \n Para Birimi \n \n \n \n Ekstre Borcu \n ekstreBorcu \n Kompleks:EkstreBorcu \n K \n İlgili ekstre türüne uygun olarak ekstre borcu iletilmelidir. \n Kart tipi kredi kartı olanlar için ilgili alanın dönülmesi koşulludur. Ek kredi kartı için ilgili alan varsa dönülmelidir . Kart tipi banka ve ön ödemeli kart olan kartlar için ilgili alan dönülmemelidir. \n \n \n > Tutar \n tutar \n AN1..24 \n Z \n Borç tutarı için regex patterni şu şekildedir: ' ^[\\-\\+]?\\d{1,18}$|^[\\-\\+]?\\d{1,18}\\.\\d{1,5}$ ' \n \n \n \n > Para Birimi \n paraBirimi \n AN3 \n Z \n Para Birimi \n \n \n \n Kalan Ekstre Borcu \n kalanEkstreBorcu \n Kompleks:KalanEkstreBorcu \n K \n İlgili ekstre türüne uygun olarak kalan ekstre borcu iletilmelidir. \n Kart tipi kredi kartı olanlar için ilgili alanın dönülmesi koşulludur. Alt kart tipi ; Asıl ve Dijital kredi kartı için ilgili alanın dönülmesi zorunludur. Ek kredi kartı için ilgili alan varsa dönülmelidir. Kart tipi banka ve ön ödemeli kart olan kartlar için ilgili alan dönülmemelidir. \n \n \n > Tutar \n tutar \n AN1..24 \n Z \n Borç tutarı için regex patterni şu şekildedir: ' ^[\\-\\+]?\\d{1,18}$|^[\\-\\+]?\\d{1,18}\\.\\d{1,5}$ ' \n \n \n \n > Para Birimi \n paraBirimi \n AN3 \n Z \n Para Birimi \n \n \n \n Asgari Ödeme Tutarı \n asgariOdemeTutari \n Kompleks:AsgariOdemeTutari \n K \n İlgili ekstre türüne uygun olarak ekstreye ait asgari ödeme tutarı iletilmelidir. \n Kart tipi kredi kartı olanlar için ilgili alanın dönülmesi koşulludur. Alt kart tipi ; Asıl ve Dijital kredi kartı için ilgili alanın dönülmesi zorunludur. Ek kredi kartı için ilgili alan varsa dönülmelidir. Kart tipi banka ve ön ödemeli kart olan kartlar için ilgili alan dönülmemelidir. \n \n \n > Tutar \n tutar \n AN1..25 \n Z \n Ödeme tutarı için regex patterni şu şekildedir: ' ^[\\-\\+]?\\d{1,18}$|^[\\-\\+]?\\d{1,18}\\.\\d{1,5}$ ' \n \n \n \n > Para Birimi \n paraBirimi \n AN3 \n Z \n Para Birimi \n \n \n \n Kalan Asgari Ödeme Tutarı \n kalanAsgariOdemeTutari \n Kompleks:KalanAsgariOdemeTutari \n K \n İlgili ekstre türüne uygun olarak ekstreye ait kalan asgari ödeme tutarı iletilmelidir. \n Kart tipi kredi kartı olanlar için ilgili alanın dönülmesi koşulludur. Alt kart tipi ; Asıl ve Dijital kredi kartı için ilgili alanın dönülmesi zorunludur. Ek kredi kartı için ilgili alan varsa dönülmelidir. Kart tipi banka ve ön ödemeli kart olan kartlar için ilgili alan dönülmemelidir. \n \n \n > Tutar \n tutar \n AN1..25 \n Z \n Ödeme tutarı için regex patterni şu şekildedir: ' ^[\\-\\+]?\\d{1,18}$|^[\\-\\+]?\\d{1,18}\\.\\d{1,5}$ ' \n \n \n \n > Para Birimi \n paraBirimi \n AN3 \n Z \n Para Birimi \n \n \n \n Hesap Kesim Tarihi \n hesapKesimTarihi \n ISODate \n Z \n Karta ait hesap kesim tarihi iletilmelidir. Tarih formatında iletilmelidir. Örn : 2024-12-23 \n Kart tipi kredi kartı olanlar için hesap kesim tarihi iletilmelidir. Ek kart için asıl kartın hesap kesim tarihi dönülmelidir. Kart tipi banka ve ön ödemeli kart olan kartlar için sorgulama yapılan ayın son takvim günü dönülmelidir. \n \n \n Sonraki Hesap Kesim Tarihi \n sonrakiHesapKesimTarihi \n ISODate \n Z \n Karta ait sonraki hesap kesim tarihi iletilmelidir. Tarih formatında iletilmelidir. Örn : 2024-11-23 \n Kart tipi kredi kartı olanlar için sonraki hesap kesim tarihi iletilmelidir. Ek kart için asıl kartın sonraki hesap kesim tarihi dönülmelidir. Kart tipi banka ve ön ödemeli kart olan kartlar için sorgulama yapılan aydan bir sonraki ayın son takvim günü dönülmelidir \n \n \n Son Ödeme Tarihi \n sonOdemeTarihi \n ISODate \n K \n Kart borcunun ödeneceği son ödeme tarih bilgisi dönülmelidir. Örn : 2024-12-02 \n Kart tipi kredi kartı olanlar için ilgili alan dönülmesi zorunludur. Ek kart için asıl kartın son ödeme tarih bilgisi dönülmelidir. Kart tipi banka ve ön ödemeli kart olan kartlar için ilgili alan dönülmemelidir. \n \n \n Sonraki Son Ödeme Tarihi \n sonrakiSonOdemeTarihi \n ISODate \n K \n Bir sonraki döneme ait kart borcunun son ödeme tarih bilgisi dönülmelidir. Örn : 2025-01-04 \n Kart tipi kredi kartı olanlar için ilgili alan dönülmesi zorunludur. Ek kart için asıl kartın sonraki son ödeme tarih bilgisi dönülmelidir. Kart tipi banka ve ön ödemeli kart olan kartlar için ilgili alan dönülmemelidir. \n \n \n Puan Bilgisi \n puanBilgisi \n Kompleks:PuanBilgisi[Array] \n \n Karta ait puan bilgileri dizi içerisinde iletilmelidir. \n \n \n \n > Puan Değeri \n puanDegeri \n AN1..24 \n K \n Kart için mevcutta yer alan puan değeri varsa iletilmelidir. HHS özelinde puan değeri puan tipine göre birim olarak tutuluyorsa ilgili değer iletilmelidir. Örn: 100 Plus puan bilgisi varsa puan değeri alanında 100 iletilmelidir. \n Tüm kart tipleri için puan bilgisi varsa dönülmelidir. \n \n \n > Puan Tipi \n puanTipi \n AN1..50 \n K \n Puan Tipi olarak HHS özelinde bir puanTipi varsa o bilgi iletilmelidir. Örn: 100 Plus puan bilgisi varsa puan tipi alanında Plus değeri iletilmelidir. \n Tüm kart tipleri için puan bilgisi varsa dönülmelidir. \n \n \n Nakit Çekim Limiti \n nakitCekimLimiti \n Kompleks:NakitCekimLimiti \n K \n Karta ait nakit çekim limit değeri iletilmelidir. Ekstre türü TRY dışında olan kartlar için de TRY para biriminde geçerli olan limit iletilmelidir. \n Kart tipi kredi kartı olanlar için ilgili alan dönülmesi zorunludur. Kart tipi banka ve ön ödemeli kart olan kartlar için ilgili alan dönülmemelidir. \n \n \n > Tutar \n tutar \n AN1..24 \n Z \n Limit tutarı için regex patterni şu şekildedir: ' ^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$ ' \n \n \n \n > Para Birimi \n paraBirimi \n AN3 \n Z \n Para Birimi \n \n \n \n Kullanılabilir Nakit Çekim Limiti \n kullanilabilirNakitCekimLimiti \n Kompleks:KullanilabilirNakitCekimLimiti \n K \n Karta ait kullanılabilir nakit çekim limit değeri iletilmelidir. Ekstre türü TRY dışında olan kartlar için de TRY para biriminde geçerli olan limit iletilmelidir. \n Kart tipi kredi kartı olanlar için ilgili alan dönülmesi zorunludur. Kart tipi banka ve ön ödemeli kart olan kartlar için ilgili alan dönülmemelidir. \n \n \n > Tutar \n tutar \n AN1..24 \n Z \n Limit tutarı için regex patterni şu şekildedir: ' ^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$ ' \n \n \n \n > Para Birimi \n paraBirimi \n AN3 \n Z \n Para Birimi \n \n \n \n Kalan Toplam Taksit Tutarı \n kalanToplamTaksitTutari \n Kompleks:KalanToplamTaksitTutari \n K \n Karta ait tüm kalan taksitlerin toplam değeri iletilmelidir. \n Kart tipi kredi kartı olanlar için ilgili alan dönülmesi zorunludur. Kart tipi banka ve ön ödemeli kart olan kartlar için ilgili alan dönülmemelidir. \n \n \n > Tutar \n tutar \n AN1..24 \n Z \n Taksit tutarı için regex patterni şu şekildedir: ' ^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$ ' \n \n \n \n > Para Birimi \n paraBirimi \n AN3 \n Z \n Para Birimi \n \n \n \n Dönem Taksit Tutar Bilgisi \n donemTaksitTutarBilgisi \n Kompleks:DonemTaksitTutarBilgisi[array] \n K \n Kart Tipi kredi kartı olanlar için taksit bilgisi varsa taksit içeren dönemlerin dizi halinde iletilmesi zorunludur. \n \n \n \n > Dönem Değeri \n donemDegeri \n N3 \n Z \n Taksitli işlemler dönülmesi sebebiyle dönem değeri minimum 1 olacak şekilde dönülmelidir. \n \n \n \n > Dönem Taksit Tutarı \n donemTaksitTutari \n Kompleks:DonemTaksitTutari \n Z \n İlgili dönem değeri içerisindeki toplam taksit tutar bilgisi iletilmelidir. \n \n \n \n >> Tutar \n tutar \n AN1..25 \n Z \n Taksit tutarı için regex patterni şu şekildedir: ' ^[\\-\\+]?\\d{1,18}$|^[\\-\\+]?\\d{1,18}\\.\\d{1,5}$ ' \n \n \n \n >> Para Birimi \n paraBirimi \n AN3 \n Z \n Para Birimi \n 9.11 ADIM 4.2: Kart Hareket Bilgilerinin Sorgulanması \n GET /kartlar/{kartRef}/kart-hareketleri \n KartBilgileri nesnesi ile elde edilen kart listesinde yer alan kartların işlem/hareket bilgileri sorgulanır. Kart hareketleri için \"KartHareketleri\" nesnesinin içeriği Tablo 25'de verilmiştir. \n \n Bir karta ilişkin işlem bilgileri Tablo 24’deki istek parametrelerine göre sorgulanır. Parametrede yer alan değerlerin doğru gönderildiği kontrol edilir. Hatalı gönderilmesi durumunda HHS tarafından  ”TR.OHVPS.Resource.InvalidFormat”  hatası dönülür. Parametrede yer alan isteğe bağlı alanlar gönderilmediği durumda parametredeki varsayılan değerler ile kart hareketleri dönülür. \n Parametrede yer alan ekstreTuru bilgisi Ekstre Türleri haricinde uygun olmayan bir değer gönderildiğinde  ”TR.OHVPS.Business.InvalidCurrencyCode”  hatası dönülür. Bu alan gönderilmiyorsa TRY olarak değerlendirilmelidir. \n Erişim belirteci kontrolü yapılır. Geçerli bir erişim belirteci yok ise HHS tarafından  ”TR.OHVPS.Connection.InvalidToken”  hatası dönülür. \n İstek başlığında yer alan X-Access-Token ile ilişkili rızada, izin verilen kartRef'ler için, kart hareket bilgileri sorgusunda yer alan kartRefe ait rıza ile aynı olup olmadığı kontrol edilir. Farklı olması durumunda  \"TR.OHVPS.Resource.NotFound\"  hatası dönülür. \n İlgili kartRef bulunamaz ise  ”TR.OHVPS.Resource.NotFound”  hatası dönülür. \n Rıza durumu kontrol edilir.\n \n B: Yetki Bekleniyor ya da Y: Yetkilendirildi ise  “TR.OHVPS.Resource.ConsentMismatch”  hatası dönülür. \n I: Rıza İptal ya da S: Yetki Sonlandırıldı ise  ”TR.OHVPS.Resource.ConsentRevoked”  hatası dönülür. \n RizaDurumu “K: Yetki Kullanıldı” ise kontrollere devam edilir. \n \n \n Kart Hareket Bilgilerinin Sorgulanması yapılırken HHS tarafından ÖHK’nın “09:  Ayrıntılı Kart İşlem Bilgisi” izin türüne sahipliği kontrol edilir. 09 izin türüne sahip değil ise  ”TR.OHVPS.Business.PermissionTypeNotSupported”  hatası dönülür. \n Kart tipi olarak; iptal statüsünde olan banka ve ön ödemeli kartlar için hareket sorgulaması yapılamayacaktır. Kart tipi kredi kartı olup iptal statüsünde olan ve borcu olmayan bir kart için de kart hareket sorgulaması yapılamayacaktır. Hareket sorgulaması yapılamayacak bir kart tipi için HHS'ler tarafından  \"TR.OHVPS.Business.InvalidCardStatus\"  hatası dönülmelidir. \n -Rıza içerisinde kanal görüntüleme yetkisi kapatılan kart için hareket bilgisi sorgulandığında  TR.OHVPS.Resource.RestrictedChannelAccess  hata kodu dönülecektir. \n İptal statüsünde olan kart tipleri için geçmişe dönük hareket sorgulaması yapılamayacaktır. Örneğin; Kredi Kartı için -12 ile 18 arası olan dönem değeri iptal statüsünde olan kredi kartı için 0 ile 18 arasında yapılabilecektir. Tüm kart tipleri için belirtilen parametrede yer alan dönem değerinin uygun gönderilmediği durumda  ”TR.OHVPS.Business.InvalidPeriodValue”  hatası dönülür. \n \n Yukarıdaki kontroller tamamlandıktan sonra HHS tarafından \"KartHareketleri\" nesnesi dönülür. \n \n HHS'ler kart tipi kredi kartı ise ve karta ait borç/taksit tutar bilgisi bulunuyorsa KartHareketleri nesnesi için başarılı yanıt dönmek zorundadır. \n Kart tipi Banka Kartı olanlarda dönem içi olarak sorgulama yapılan aya ait ilgili banka kartı ile yapılan kart hareketleri görüntülenecektir. (Banka kartı ile yapılan Para Çekme/Yatırma, banka kartı ile yapılan POS'tan Alışveriş vb.). Banka kartında dönem değerinin \"-1\" gönderilmesi durumunda bir önceki aya ait kart hareketleri görüntülenecektir. \n Kart hareketleri yanıtında hareket bilgileri işlem tarihinine göre sıralı olarak iletilmelidir. İşlem tarihi en güncel tarihten geriye dönük olacak şekilde listelenmelidir. \n Kart hareketlerinde ekstre türleri dışında yapılan bir işlem varsa hangi ekstre türüne dahil edilerek gösteriliyorsa gönderilmelidir.\n \n Örn: 100 JPY'lik bir harcama işlemi TRY biriminde çevirilip 23 TRY olarak TRY ekstre türünde gösteriliyorsa ilgili işlem için işlem tutarı 23 TRY, orijinal işlem tutarı ise 100 JPY olarak değerlendirilmelidir. \n \n \n \n Tablo 24: Kart Hareket Bilgileri Sorgulama İsteği Sorgu Parametreleri \n \n \n \n Alan Adı \n Parametre Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n HHS tarafından yapılması gereken kontrol ve işlemler \n \n \n \n \n Dönem Değeri \n donemDegeri \n N3 \n Z \n Kart hareketlerinin sorgulanacağı döneme ait değerdir.  Dönem içi : 0 Geçmiş Ay/Ekstre : -1 ile -12 arası Taksit : 1 ile 18 arası  Provizyon : 99  Kart tipine göre alabileceği dönem değerleri ise ;  Banka Kartı : 0 ve -1 Kredi Kartı : -12 ile 18 arası ve 99 (Sanal alt kart tipi hariç diğer tüm alt kart tiplerinde bu değerler geçerlidir.)  Alt kart tipi sanal kart tipinde ise alabileceği değerler 0 ve 99'dur. Ön Ödemeli Kart : 0 ve -1 \n İptal statüsünde olan kart tipleri için geçmişe dönük hareket sorgulaması yapılamayacaktır. Örneğin; Kredi Kartı için -12 ile 18 arası olan dönem değeri iptal statüsünde olan kredi kartı için 0 ile 18 arasında yapılabilecektir.  Tüm kart tipleri için belirtilen dönem değerinin uygun gönderilmediği durumda hata verilmelidir. \n \n \n Ekstre Turu \n ekstreTuru \n AN3 \n K \n Kart bilgileri yanıtında dönülen ekstre türleri değerlerini almaktadır. Para birimine uygun olarak kart detay bilgileri sorgulanmaktadır. Ekstre parametresi TRY,USD,EUR,GBP olarak gönderilebilir. Bu alan gönderilmiyorsa TRY değerlendirilmelidir. İlgili para birimine özel ekstre içindeki harcama değeri dönülecektir. \n Ekstre türleri haricinde uygun olmayan bir değer gönderildiğinde hata verilmelidir. \n \n \n Sayfa Başına İstenen Kayıt Sayısı \n syfKytSayi \n N3 \n İ \n Sayfa başına istenen kayıt sayısı. Bu alanda iletilen değer 100’den büyük olamaz. \n Bu veri gönderildiği durumda, HHS işlemler listesini bu sayı kadar gruplandırarak gönderir. Bu veri gönderilmediğinde sayfadaki kayıt sayısı 100 olarak kullanılır. \n \n \n İstenen Sayfa Numarasi \n syfNo \n N3 \n İ \n Cevapta dönecek sayfa numarası 1’den başlayarak artan değerlerle iletilmelidir. \n Bu veri gönderildiği durumda, HHS işlemler listesini bu sayfadaki kayıtları gönderir. Gönderilmediğinde, HHS ilk sayfadaki kayıtları gönderir. \n \n \n Borç Alacak Göstergesi \n brcAlc \n AN1 \n İ \n TR.OHVPS.DataCode.BrcAlc sıralı veri tipi değerlerinden birini alır. Sorgulanacak işlemlerin borç / alacak kriteri B: Karta borç yaratan işlem.A: Karta alacak yaratan işlem. N: Finansal olmayan işlem {“B”,”A”,”N”} \n Bu veri gönderildiği durumda HHS işlemler listesi dönüşünü bu kritere göre filtreleyerek iletmek zorundadır. \n \n \n Sıralama Yönü \n srlmYon \n AN1 \n İ \n Cevapta dönülecek işlemlerin sıralama yönünü belirtir. Alabileceği değerler: A: Azalan değerle sıralama Y: Artan değerle sıralama {“A”,”Y”} \n Bu veri gönderildiği durumda, HHS kart hareketlerini  sıralama kriteri işlem tarihi  olacak şekilde ilgili yöne uygun olarak sıralayarak gönderir. Gönderilmediğinde, HHS sıralama yönünü Azalan olarak belirler. \n \n \n \n Tablo 25: “KartHareketleri” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n Kart Tiplerine İstinaden Detaylı Açıklama \n \n \n \n \n Kart Referans Numarası \n kartRef \n AN5..40 \n Z \n HHS tarafından her bir kart için atanan biricik değerdir (uuid). Bir kart tek bir kartRef'e karşılık gelmelidir, benzer şekilde bir kartRef tek bir karta karşılık gelmelidir. Aynı kart için alınan tüm rızalarda kart referans bilgisinin değişmemesi gerekmektedir. \n \n \n \n Dönem Değeri \n donemDegeri \n N3 \n Z \n Kart hareketlerinin sorgulanacağı döneme ait değerdir. \n \n \n \n Dönem Başlangıç Tarihi \n donemBaslangicTarihi \n ISODate \n Z \n Sorgulama yapılan ekstre dönemine göre ilgili döneme ait başlangıç tarih bilgisidir. Kart tipi kredi kartı olanlar için ilgili döneme ait başlangıç tarihi iletilmelidir. Kart tipi banka kartı ve ön ödemeli kart olanlar için sorgulama yapılan ayın başlangıç tarihi iletilmelidir. \n \n \n \n Dönem Bitiş Tarihi \n donemBitisTarihi \n ISODate \n Z \n Sorgulama yapılan ekstre dönemine göre ilgili döneme ait bitiş tarih bilgisidir. Kart tipi kredi kartı olanlar için ilgili döneme ait bitiş tarihi iletilmelidir. Kart tipi banka kartı ve ön ödemeli kart olanlar için sorgulama yapılan ayın bitiş tarihi iletilmelidir. \n \n \n \n Ekstre Türü \n ekstreTuru \n AN3 \n Z \n Ekstre türü TRY,USD,EUR,GBP olarak gönderilebilir. İstek paremetresinde iletilen değer ile aynı değer olmalıdır. \n \n \n \n Ekstre Borcu \n ekstreBorcu \n Kompleks:EkstreBorcu \n K \n Sorgulama yapılan geçmiş döneme için ekstre türüne uygun olarak ekstre borcu iletilmelidir. \n Kart tipi kredi kartı olanlar için sadece geçmiş dönem değerine istinaden ilgili alan iletilmelidir. \n \n \n > Tutar \n tutar \n AN1..24 \n Z \n Borç tutarı için regex patterni şu şekildedir: ' ^[\\-\\+]?\\d{1,18}$|^[\\-\\+]?\\d{1,18}\\.\\d{1,5}$ ' \n \n \n \n > Para Birimi \n paraBirimi \n AN3 \n Z \n Para Birimi \n \n \n \n Asgari Ödeme Tutarı \n asgariOdemeTutari \n Kompleks:AsgariOdemeTutari \n K \n İlgili geçmiş dönem için ekstre türüne uygun olarak ekstreye ait asgari ödeme tutarı iletilmelidir. \n Kart tipi kredi kartı olanlar için sadece geçmiş dönem değerine istinaden ilgili alan iletilmelidir. \n \n \n > Tutar \n tutar \n AN1..25 \n Z \n Ödeme tutarı için regex patterni şu şekildedir: ' ^[\\-\\+]?\\d{1,18}$|^[\\-\\+]?\\d{1,18}\\.\\d{1,5}$ ' \n \n \n \n > Para Birimi \n paraBirimi \n AN3 \n Z \n Para Birimi \n \n \n \n Dönem Taksit Tutarı \n donemTaksitTutari \n Kompleks:DonemTaksitTutari \n K \n İstek parametresinde iletilen ilgili dönem değeri içerisindeki toplam taksit tutar bilgisi iletilmelidir. \n Kart tipi kredi kartı olanlar için taksit bilgisi varsa ilgili alan iletilmelidir. \n \n \n > Tutar \n tutar \n AN1..25 \n Z \n Dönem taksit tutarı için regex patterni şu şekildedir: ' ^[\\-\\+]?\\d{1,18}$|^[\\-\\+]?\\d{1,18}\\.\\d{1,5}$ ' \n \n \n \n > Para Birimi \n paraBirimi \n AN3 \n Z \n Para Birimi \n \n \n \n Hesap Kesim Tarihi \n hesapKesimTarihi \n ISODate \n K \n Karta ait sorgulanan döneme ait hesap kesim tarihi iletilmelidir. Tarih formatında iletilmelidir. Örn : 2024-11-23 \n Kart tipi kredi kartı olanlar için sadece geçmiş dönem değerine istinaden ilgili alan iletilmelidir. \n \n \n Son Ödeme Tarihi \n sonOdemeTarihi \n ISODate \n K \n Karta ait sorgulanan dönem için son ödeme tarih bilgisi dönülmelidir. Örn : 2024-12-02 \n Kart tipi kredi kartı olanlar için sadece geçmiş dönem değerine istinaden ilgili alan iletilmelidir. \n \n \n Hareket Bilgileri \n hareketBilgileri \n Kompleks Alan: HareketBilgileri[array] \n K \n Dizi halinde liste olacaktır. \n \n \n \n > İşlem Numarası \n islemNo \n AN3..50 \n Z \n Kart hareketinin oluşturulması sırasında atanan ve borç (veya alacak) hareketini tekilleştiren HHS bazında tekil tanımlayıcıdır. Bu değer tek başına tekil olabileceği gibi birden fazla değerin bir araya getirilmesiyle de tekilliği sağlanmış olabilir. Bu değerin en azından kart referans numarası bazında tekil olması beklenir. Genellikle kullanılan örnekleri; Instance_Id, Transaction_Id, Transaction_Num, Transaction_TimeStamp \n \n \n \n > İşlem Tutarı \n islemTutari \n Kompleks:IslemTutari \n Z \n Yapılan işleme ait tutar bilgisi. Taksitli bir işlem ise ilgili dönemdeki taksit tutarı iletilecektir. ÖHK, HHS'de ilgili dönem sorguladığında hangi tutarı görüntülüyorsa ilgili tutar dönülecektir. İşleme ait sadece puan bilgisiyle kazanım, kullanım, iade veya iptal varsa ve tutar bilgisi yoksa ilgili tutar değeri sıfır gönderilmelidir. Puana dair değerler ise PuanBilgileri alanı içerisinde gönderilmelidir. \n \n \n \n >> Tutar \n tutar \n AN1..24 \n Z \n İşlem tutarı için regex patterni şu şekildedir: ' ^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$ ' \n \n \n \n >> Para Birimi \n paraBirimi \n AN3 \n Z \n Para Birimi. Ekstre türü ile aynı olması gerekmektedir. \n \n \n \n > Orijinal İşlem Tutarı \n orijinalIslemTutari \n Kompleks:OrijinalIslemTutari \n K \n Ekstre türü dışında yapılan işleme ait tutar bilgisi. Örneğin; ekstre türü TRY gönderildiği durumda işlem 100 JPY ise işlem tutarı alanında 100 değeri iletilmelidir. \n \n \n \n >> Tutar \n tutar \n AN1..24 \n Z \n İşlem tutarı için regex patterni şu şekildedir: ' ^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$ ' \n \n \n \n >> Para Birimi \n paraBirimi \n AN3 \n Z \n Para Birimi. Örneğin; 100 JPY ise işlem tutar para birimi alanında JPY değeri iletilmelidir. \n \n \n \n > İşlem Tarihi \n islemTarihi \n ISODateTime \n Z \n İşlemin gerçekleştiği zaman bilgisi. Taksitli işlemlerde içinde bulunulan dönem özelinde ilgili taksitin yansıyacağı tarih değeri dönülmelidir. \n \n \n \n > Borç Alacak Göstergesi \n borcAlacak \n AN1 \n Z \n TR.OHVPS.DataCode.BrcAlc sıralı veri tipi değerlerinden birini alır. Sorgulanacak işlemlerin borç / alacak kriteri B: Karta borç yaratan işlem.A: Karta alacak yaratan işlem. N: Finansal olmayan işlem {“B”,”A”,”N”} \n \n \n \n > İşlem Açıklaması \n islemAciklamasi \n AN1..200 \n Z \n Alışveriş işlemi olması durumunda sadece işyeri adını içeren açıklama, diğer işlemler için mevcut işlem açıklaması iletilir. HHS'ler tüm kart hareketlerini YÖS'ler ile paylaşmakla yükümlü olup, hassas veri içeren(örn: faiz, komisyon bilgisi içeren vb.) işlem hareketleri de bu kapsamda değerlendirilerek işlem açıklamasının maskeli olarak iletilmesi sağlanır. Kelimelerin ilk 3 hanesi maskeli olacak şekilde, ancak sakıncalı bulunan kelimeler varsa; (örn: faiz, komiyon vb.) kelimelerin tamamı maskeli olacak şekilde gösterilebilir. \n \n \n \n > İşlem Puan Bilgileri \n islemPuanBilgileri \n Kompleks: IslemPuanBilgileri[Array] \n K \n İlgili işlem sonrası kazanılan veya kullanılan bir puan değeri varsa iletilmesi gerekmektedir. İlgili puan bilgi veya bilgileri dizi içerisinde iletilmelidir. \n İlgili alanda koşula uygun olarak değer dönülecekse; kart tipi kredi, banka ve ön ödemeli kartı olanlar için dönülmesi zorunludur. \n \n \n >> İşlem Puanı \n islemPuani \n AN1..24 \n K \n İşleme dair kazanılan veya kullanılan puan değeri iletilmelidir. Örn: 100 Plus kazanılmış bir işlem için 100 değeri iletilmelidir. \n \n \n \n >> İşlem Puan Birimi \n islemPuanBirimi \n AN1..50 \n K \n İşleme dair kazanılan veya kullanılan puan birimi iletilmelidir. Örn: 100 Plus kazanılmış bir işlem için Plus değeri iletilmelidir. \n \n \n \n >> İşlem Puan Durumu \n islemPuanDurumu \n AN2 \n K \n İlgili işlem sonucunda puan bilgisinin bir kazanım, kullanım, iade ve iptal durumlarına yönelik değer iletilmelidir. TR.OHVPS.DataCode.IslemPuanDurumu değerlerinden birini alır. 01: Puan Kazanımı 02: Puan Kullanımı 03: Puan İade 04: Puan İptal \n \n \n \n > Toplam Taksit Tutarı \n toplamTaksitTutari \n Kompleks:ToplamTaksitTutari \n K \n İlgili işlem taksitli bir işlem ise o işleme ait toplam taksit tutarı iletilmelidir. İlgili işlem tek çekim bir işlem ise o işlemde ilgili alan iletilmemelidir. \n Kart tipi kredi kartı olanlar için ilgili alan dönülmesi zorunludur. Kart tipi banka ve ön ödemeli kart olan kartlar için ilgili alan dönülmemelidir. \n \n \n >> Tutar \n tutar \n AN1..24 \n Z \n Taksit Tutar Bilgisi \n \n \n \n >> Para Birimi \n paraBirimi \n AN3 \n Z \n Para Birimi \n \n \n \n > Toplam Taksit Sayısı \n toplamTaksitSayisi \n N2 \n K \n İlgili işlem taksitli bir işlem ise o işleme ait toplam taksit sayısı iletilmelidir. İlgili işlem tek çekim bir işlem ise o işlemde ilgili alan iletilmemelidir. \n Kart tipi kredi kartı olanlar için ilgili alan dönülmesi zorunludur. Kart tipi banka ve ön ödemeli kart olan kartlar için ilgili alan dönülmemelidir. \n \n \n > İlgili Taksit Dönemi \n taksitDonemi \n N2 \n K \n Taksitli işlem olması durumunda işleme ait ilgili taksit dönem bilgisi. Örneğin: 3 taksitli bir işlemde 2. taksit yansımışsa 2 olarak gönderilmelidir. \n Kart tipi kredi kartı olanlar için ilgili alan dönülmesi zorunludur. Kart tipi banka ve ön ödemeli kart olan kartlar için ilgili alan dönülmemelidir. \n \n \n > Satıcı Kategori Kodu \n saticiKategoriKodu \n AN4 \n K \n Satıcı Kategori Kodu(MCC) varsa iletilmesi zorunludur. Alışveriş işlemlerinde gönderimi zorunludur. \n İlgili alanda koşula uygun olarak değer dönülecekse; kart tipi kredi ve banka kartı olanlar için dönülmesi zorunludur. \n \n \n \n"},{title:"2.Kapsam ve Dayanak",frontmatter:{},regularPath:"/v2.0.0/contents/kapsam-ve-dayanak.html",relativePath:"v2.0.0/contents/kapsam-ve-dayanak.md",key:"v-143b3106",path:"/v2.0.0/contents/kapsam-ve-dayanak.html",content:" 2.Kapsam ve Dayanak \n 12 Kasım 2019’da güncellenen “ 6493 sayılı Ödeme ve Menkul Kıymet Mutabakat Sistemleri, Ödeme Hizmetleri ve Elektronik Para Kuruluşları Hakkında Kanun ”un (Kanun) 12’nci maddesine yeni eklenen ve  Ödeme Hizmetleri Direktifi 2 'de (Payment Services Directive 2, PSD2) bulunan iki yeni ödeme hizmeti aşağıdaki gibi tanımlanmıştır (Şekil-1: Ödeme Hizmetleri Veri Paylaşım Servisleri): \n \n Ödeme Emri Başlatma Hizmeti : ÖHK’nın isteği üzerine başka bir ödeme hizmeti sağlayıcısında bulunan  ödeme hesabıyla  ilgili sunulan ödeme emri başlatma hizmeti [Madde 12, birinci fıkra, (f) bendi] \n Hesap Bilgisi Hizmeti : ÖHK’nın onayının alınması koşuluyla, ÖHK’nın ödeme hizmeti sağlayıcıları nezdinde bulunan bir veya daha fazla  ödeme hesabına  ilişkin konsolide edilmiş bilgilerin çevrim içi platformlarda sunulması hizmeti [Madde 12, birinci fıkra, (g) bendi] \n \n   \n Şekil 1: Ödeme Hizmetleri Veri Paylaşım Servisleri (ÖHVPS)- tanıtım \n Kanunun 14/A maddesinin ikinci fıkrasına göre , Kanunun 12’nci maddesinin birinci fıkrasının (f) veya (g) bentlerinde yer alan ödeme hizmetleri ile ilgili işlemlerin yürütülmesine ilişkin usul ve esaslar ile taraflarca uyulması gereken teknik ve operasyonel gereklilikler ikincil düzenlemeler uyarınca Türkiye Cumhuriyet Merkez Bankası (TCMB) tarafından belirlenir. Kanunun 12’nci maddesinin birinci fıkrasının (f) veya (g) bentlerinde yer alan ödeme hizmetlerinde kullanılan veri paylaşım servisleri  ödeme hizmetleri veri paylaşım servisleri (ÖHVPS)  olarak adlandırılmaktadır. \n Ödeme Hizmetleri ve Elektronik Para İhracı ile Ödeme Hizmeti Sağlayıcıları Hakkında Yönetmelik’in (Yönetmelik) 59’uncu maddesinin birinci fıkrası uyarınca hazırlanan bu belgede söz konusu ödeme hizmetlerini sunacak ödeme hizmeti sağlayıcısının, ödeme hesabının bulunduğu ödeme hizmeti sağlayıcısının, varsa ilgili diğer tarafların ve bu hizmetlerin sunulması için taraflar arasında kurulacak bağlantının teknik ve operasyonel gereklilikleri açıklanmaktadır. \n Düzenlemeler kapsamında yetkilendirilen üçüncü taraf hizmet sağlayıcısı  (Yetkili Ödeme Hizmeti Sağlayıcısı, YÖS) , ödeme hizmeti kullanıcılarının  Hesap Hizmeti Sağlayıcıları (HHS)  nezdindeki ödeme hesaplarına ulaşarak ödeme emri başlatma ve hesap bilgisi sağlama hizmetlerinden (ödeme hizmetleri veri paylaşım servislerinden) faydalanmasına aracılık eder. Ödeme hizmetleri veri paylaşım servisleri kapsamında iki tip YÖS bulunmaktadır:  1) Hesap Bilgisi Hizmeti Sağlayıcısı (HBHS) ve 2) Ödeme Emri Başlatma Hizmeti Sağlayıcısı (ÖBHS). \n Hesap Bilgisi Hizmeti Sağlayıcısı (HBHS) ÖHK’nın farklı Hesap Hizmeti Sağlayıcıları (HHS) nezdindeki hesaplarının bilgilerini derleyerek çevrim içi platformlarda  toplu şekilde  sunar. Ödeme Emri Başlatma Hizmeti Sağlayıcısı (ÖBHS) ise talebi üzerine ÖHK’nın HHS’de bulunan ödeme hesabından ödeme işlemi başlatır. \n ÖHVPS’nin üst düzey gösterimi Şekil-2’de verilmiştir. \n   \n Şekil 2: Ödeme Hizmetleri Veri Paylaşım Servisleri (ÖHVPS) -üst düzey gösterim \n Ödeme Hizmetleri Veri Paylaşım Servislerinin HHS’ler tarafından  GEÇİT  vasıtasıyla sunulduğu uygulama mimarisi ise Şekil-3’te sunulmuştur. \n  \n Şekil 3: ÖHVPS'nin GEÇİT vasıtasıyla sunumu \n"},{title:"12.\tOlay Bildirim",frontmatter:{},regularPath:"/v2.0.0/contents/olay-bildirim.html",relativePath:"v2.0.0/contents/olay-bildirim.md",key:"v-448b4d1d",path:"/v2.0.0/contents/olay-bildirim.html",headers:[{level:2,title:"Genel Bilgiler",slug:"genel-bilgiler"},{level:2,title:"Olay Abonelik Servisleri (OAS)",slug:"olay-abonelik-servisleri-oas"},{level:2,title:"ADIM 1: Olay Aboneliğinin gerçekleştirilmesi",slug:"adim-1-olay-aboneliginin-gerceklestirilmesi"},{level:2,title:"ADIM 2: Olay Aboneliğinin güncellenmesi",slug:"adim-2-olay-aboneliginin-guncellenmesi"},{level:2,title:"ADIM 3: Olay Aboneliğinin sorgulanması",slug:"adim-3-olay-aboneliginin-sorgulanması"},{level:2,title:"ADIM 4: Olay Aboneliğinin iptali",slug:"adim-4-olay-aboneliginin-iptali"},{level:2,title:"ADIM 5: Olay Aboneliğinin İletilemeyen Olayları",slug:"adim-5-olay-aboneliginin-iletilemeyen-olayları"},{level:2,title:"ADIM 6: Sistem Olay Dinleme",slug:"adim-6-sistem-olay-dinleme"},{level:2,title:"Olay Dinleme Servisleri (ODS)",slug:"olay-dinleme-servisleri-ods"},{level:2,title:"ADIM 1: Olay Dinleme",slug:"adim-1-olay-dinleme"},{level:2,title:"ADIM 2:  Sistem Olay Dinleme",slug:"adim-2-sistem-olay-dinleme"}],content:" 12.\tOlay Bildirim  \n Genel Bilgiler \n Olay Bildirim Abonelik API servisleri, HHS'lerin sunmuş oldukları olay bildirimlerini takip etmek amacıyla abonelik akışlarını tanımlar. \n YÖS'ler olay bildirimlerini takip edebilmek için talep ettikleri abonelik hizmetlerini belirterek HHS'ler özelinde bir abonelik kaydı oluştururlar. Bu abonelik kaydını okuyabilir, güncelleyebilir ya da silebilirler. \n Olay bildirimleri HHS'ler tarafından 2 yöntem ile sağlanır. İlki olay bildirimlerinin anlık olarak iletilmesi, diğeri ise anlık iletilemeyen olayların toplu olarak iletilmesidir. \n Olay Bildirimi 2 API ile yönetilecektir. \n 1 - Olay Abonelik Servisleri (OAS) \n2 - Olay Dinleme Servisleri  (ODS) \n Olay Abonelik ve Olay Dinleme API'lerinin istek ve yanıt başlığında beklenen parametreler ÖBH,HBH,GKD API'lerinden farklıdır.\n 3.15. İstek Başlığı  ve  3.16. Yanıt Başlığı  bölümlerinde zorunlu parametreler ve açıklamaları belirtilmiştir. \n Olay Abonelik Servisleri (OAS) \n Olay abonelik Servisleri; HHS'ler tarafından sunulacak olay bildirim abonelik servislerini ve iletilemeyen olaylar servisini içermektedir. \n HHS'nin sunacağı bu API ile YÖS'ler şu adımları gerçekleştirebilir. \n \n YÖS'ün olay bildirimlerini dinleyebilmek için öncelikle dinlemek istediği olaylara ait olay tipleri ve kaynak tiplerini belirlemesi gerekmektedir. \n Olay tipleri ve kaynak tiplerinin neler olacağı \"Olay Tipleri ve Kaynak Tipleri İlişkisi\" tablosunda belirtilmiştir. \n YÖS, belirlediği olaylar için HHS'ye olay abonelik endpointi aracılığı ile abonelik başlatır. \n YÖS, abonelik numarası aracılığı ile abonelik bilgilerini görüntüleyebilir, güncelleyebilir, silebilir. \n YÖS, olay bildirimlerini bu abonelik sayesinde kendisinin sunacağı Olay Dinleme API'si ile dinler. \n HHS anlık iletemediği olaylarını biriktirerek, iletilemeyen olaylar endpointi ile YÖS'e sunar. \n \n HHS'ler \"Olay Tipleri ve Kaynak Tipleri İlişkisi\" tablosunda belirlenen olay ve kaynak tiplerinin tümü için YÖS'lere bildirim sunmak zorundadır. \n Olay Abonelik Servislerinde Idempotency kurallarının işletilmesine gerek bulunmamaktadır. \n Nezdinde ödeme hesabı bulunduran bazı hesap hizmeti sağlayıcılar(EPK, Ödeme Kuruluşları) müşterilerine ait hesapları, diğer HHS'lerdeki havuz hesaplarını kullanarak yönetiyor olabilir. Bu durum ilgili hesap hizmeti sağlayıcılarının, ÖHVPS kapsamında HHS olduğu rolde sunması gereken olay bildirim servisleri ile ilgili uyması gereken kuralları değiştirmemektedir. İlgili hesap hizmeti sağlayıcılarının standartlara uygun şekilde YÖS'lere bildirimleri yapması gerekmektedir. \n YÖS'ler sahip oldukları rol özelinde olay abonelik servislerinden faydalanabilir. Bu yüzden olay bildirim etki alanı (scope) değerleri hesap_bilgisi ve/veya odeme_emri olarak belirlenmiştir. \n Olay Abonelik Servisine ait API Endpointleri aşağıdaki tabloda listelenmiştir. \n Olay Abonelik Servisleri için Erişim Adresleri (Endpoints) \n Etki Alanı (Scope) =“hesap_bilgisi”  \"odeme_emri\" \n \n \n \n No \n Kaynak \n HTTP işlemi \n Erişim Adresi \n Zorunlu (Z)/ İsteğe Bağlı(İ) \n Yetkilendirme Türü \n İmzalama \n Parametre \n İstem Nesnesi \n Yanıt Nesnesi \n \n \n \n \n 1 \n olay-abonelik \n POST \n /olay-abonelik \n Z \n İstemci Kimlik Bilgileri \n İmzalı İstek ve Yanıt \n \n OlayAbonelikİstegi \n OlayAbonelik \n \n \n 2 \n olay-abonelik \n GET \n /olay-abonelik \n Z \n İstemci Kimlik Bilgileri \n İmzalı Yanıt \n \n - \n OlayAbonelik \n \n \n 3 \n olay-abonelik/{olayAbonelikNo} \n PUT \n /olay-abonelik/{olayAbonelikNo} \n Z \n İstemci Kimlik Bilgileri \n İmzalı İstek ve Yanıt \n \n OlayAbonelik \n OlayAbonelik \n \n \n 4 \n olay-abonelik/{olayAbonelikNo} \n DELETE \n /olay-abonelik/{olayAbonelikNo} \n Z \n İstemci Kimlik Bilgileri \n - \n - \n - \n - \n \n \n 5 \n olay-abonelik/{olayAbonelikNo}/iletilemeyen-olaylar \n GET \n /olay-abonelik/{olayAbonelikNo}/iletilemeyen-olaylar \n Z \n İstemci Kimlik Bilgileri \n - \n Sayfalama \n \n Olaylar \n \n \n 6 \n sistem-olay-dinleme \n POST \n sistem-olay-dinleme \n Z \n İstemci Kimlik Bilgileri \n - \n - \n Olaylar \n - \n ADIM 1: Olay Aboneliğinin gerçekleştirilmesi \n POST /olay-abonelik \n HHS'nin olay abonelik hizmeti sunduğu servistir.\nYÖS, seçeceği olay-kaynak tipleri için bu servis aracılığı ile abone olabilir. HHS POST işlemi sonucunda, YÖS adına bir olay abonelik kaynağı oluşturur ve tekil tanımlayıcı olan olayAbonelikNo değerini döner. olayAbonelikNo üretilirken farklı YÖS'ler için aynı değer kullanılamaz. olayAbonelikNo evrensel tekil olmalıdır. \n1 YÖS'ün 1 HHS'de 1 adet abonelik kaydı olabilir. \nBaşarılı POST isteği sonucu HTTP 201 cevabı ile iletilmelidir. \n YÖS tarafından daha önce oluşturulmuş olay abonelik kaydı varsa  \"HTTP 400 -TR.OHVPS.Business.EventSubscriptionAlreadyExists\"  hatasıyla uyarı mesajını döner. \n Olay Abonelik kaydı oluşturmak isteyen YÖS'ün ODS API tanımı HHS tarafından kontrol edilmelidir. YÖS'ün tanımı olmaması halinde  \"HTTP 400-TR.OHVPS.Business.InvalidContent\"  hatası verilmelidir. \n Olay Abonelik kaydı oluşturmak isteyen YÖS tarafından olay tipi ve kaynak tipi için iletilen değerler olması gereken sıralı veri tülerinden(TR.OHVPS.DataCode.OlayTip ve TR.OHVPS.DataCode.KaynakTip) farklı ise HHS tarafından   \"TR.OHVPS.Business.EventSubscriptionNotFound\"  hatası verilmelidir. \n Abonelik üzerinde görüntüleme, güncelleme, silme işlemlerini gerçekleştirebilir.\nYÖS'ün Aboneliği devam ettiği sürece; YÖS'ün açacağı Olay Dinleme API'sine, HHS tarafından abonelik kapsamında olay bildirimleri iletilir. \n BKM'nin sunacağı abonelik servisleri için HHS ve YÖS'lerin abonelik isteği yapmasına gerek bulunmamaktadır. BKM üretim ortamı tanımları yapılırken katılımcıları abonelik servislerine üye yapacaktır. BKM'nin sunacağı abonelik servislerinin olay tipi \"HHS_YOS_GUNCELLENDI\"dir. HHS ve YÖS API ile sunulan bilgilerde bir değişiklik olduğunda yapılacak olay bildirimlerini sağlar.\nÖrneğin; HHS logo bilgilerinde yapılacak bir değişiklik sonrasında, YÖS'lere yapılacak bildirim ile logo bilgisini değişen HHS'nin hhsKod değerini iletir. YÖS, HHS API'yi  hhsKod ile çağırarak HHS'nin güncel bilgilerini alır. Güncel bilgiler ile kendi sistemini günceller. \n Olay tipi ve kaynak tipine ekleme yapıldıkça YÖS'lerin olay abonelik kayıtlarını yeni tipleri içerecek şekilde güncel tutması gerekmektedir. \n OlayAbonelikIstegi nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n HHS tarafından yapılması gereken kontrol ve işlemler \n \n \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n \n Abonelik Tipleri \n abonelikTipleri \n Kompleks: abonelikTipleri[Array][1..N] \n Z \n \n \n \n \n > Olay Tipi \n olayTipi \n AN1..36 \n Z \n YÖS abone olmak istediği olay tiplerini TR.OHVPS.DataCode.OlayTip sıralı veri tiplerinden değer ya da değerler ile doldurur. \n \"Olay Tipleri ve Kaynak Tipleri İlişkisi\" tablosunda \"Olay Bildirim Yapan\" kolonu \"HHS\" olan olay tipleri ile veri girişine izin verilir. \n \n \n > Kaynak Tipi \n kaynakTipi \n AN1..36 \n Z \n Olay tiplerinin tanımlanabildiği kaynak listesi bulunmaktadır. Bu listeye uygun kaynak tipleri iletilmelidir. \n HHS, YÖS API üzerinden YÖS'ün rollerini alarak uygun kaynak tiplerine kayıt olmasını sağlar. \n \n \n \n OlayAbonelik nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Olay Abonelik Numarası \n olayAbonelikNo \n AN1..64 \n Z \n YÖS özelinde oluşturulan tekil tanımlayıcıdır. Farklı YÖS'ler için aynı değer kullanılamaz. \n \n \n Olay Abonelik Oluşturulma zamanı \n olusturmaZamani \n ISODateTime \n Z \n Olay Abonelik nesnesinin oluşturulma zaman damgası \n \n \n Olay Abonelik Güncelleme zamanı \n guncellemeZamani \n ISODateTime \n Z \n Olay Abonelik nesnesinin güncelleme zaman damgası iletilebilir. İlk değeri olay abonelik oluşturma zamanı bilgisidir. \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n Abonelik Tipleri \n abonelikTipleri \n Kompleks: abonelikTipleri[Array][1..N] \n Z \n OlayAbonelikIstegi nesnesi içerisinde iletilen değerlerin yanıt içerisinde dönmesi beklenmektedir. \n \n \n > Olay Tipi \n olayTipi \n AN1..36 \n Z \n \n \n \n > Kaynak Tipi \n kaynakTipi \n AN1..36 \n Z \n \n \n \n \n Olay Tipleri ve Kaynak Tipleri İlişkisi \n * Anlık : Olay gerçekleştikten sonra maksimum 5 saniye içerisindeki zaman \n \n \n \n Olay Tipleri \n YÖS Rolü \n Kaynak Tipleri \n Olay Oluşturulma durumu \n KaynakNo \n Asıl verinin elde edileceği API \n Olay Bildirimini Yapan \n Olay Bildirim Zamanı \n Retry Policy \n \n \n \n \n KAYNAK_GUNCELLENDI \n ÖBH \n ODEME_EMRI \n Tüm ödeme durum değişikliklerinde \n odmEmrNo \n GET /odeme-emri/{odemeEmriNo} \n HHS \n *Anlık \n 30 Dakika - 3 Deneme \n \n \n \n ÖBH \n ILERI_TARIHLI_ODEME_EMRI_RIZASI \n Rıza iptal detay kodu ‘02’ : Kullanıcı İsteği ile HHS üzerinden İptal durumunda \n rizaNo \n GET /ileri-tarihli-odeme-emri-rizasi/{rizaNo} \n HHS \n *Anlık \n 30 Dakika - 3 Deneme \n \n \n \n ÖBH \n ILERI_TARIHLI_ODEME_EMRI \n Tüm ödeme durum değişikliklerinde, ödeme emri içerisinde yer alan tutar, talimat tarihi değişikliklerinde \n odmEmrNo \n GET /ileri-tarihli-odeme-emri/{odemeEmriNo} \n HHS \n *Anlık \n 30 Dakika - 3 Deneme \n \n \n \n ÖBH \n DUZENLI_ODEME_EMRI_RIZASI \n Rıza iptal detay kodu ‘02’ : Kullanıcı İsteği ile HHS üzerinden İptal durumunda \n rizaNo \n GET /duzenli-odeme-emri-rizasi/{rizaNo} \n HHS \n *Anlık \n 30 Dakika - 3 Deneme \n \n \n \n ÖBH \n DUZENLI_ODEME_PLANI \n Düzenli ödeme planı içerisinde yer alan herhangi bir alan için değişiklik olduğu durumda \n tlmtNo \n /duzenli-odeme-emri/{tlmtNo}/odeme-plani \n HHS \n *Anlık \n 30 Dakika - 3 Deneme \n \n \n \n ÖBH \n DUZENLI_ODEME_EMRI \n Düzenli ödeme emri içerisinde gönderen hesap ve açıklama alanlarına dair değişiklik olduğu durumda \n tlmtNo \n /duzenli-odeme-emri/{tlmtNo} \n HHS \n *Anlık \n 30 Dakika - 3 Deneme \n \n \n \n HBH \n HESAP_BILGISI_RIZASI \n Rıza iptal detay kodu ‘02’ : Kullanıcı İsteği ile HHS üzerinden İptal durumunda \n rizaNo \n GET /hesap-bilgisi-rizasi/{rizaNo} \n HHS \n *Anlık \n 30 Dakika - 3 Deneme \n \n \n \n HBH \n BAKIYE \n Bakiye nesnesindeki tutarla ilgili bir bilgi değiştiğinde ve HBH rızası içerisinde \"06-Anlık Bakiye Bildirimi\" izin türü varsa oluşturulur. Mevcutta alınmış rızalar için  bakiye kaynak tipi özelinde 06 izin türü gerektiğinden; mevcut rızanın yenilenmesine dair müşteriye bilgilendirme yapılarak 06 izin türünü kapsayan yeni rıza alınması süreci YÖS tarafından gerçekleştirilebilir. Bloke tutar değişikliği için olay oluşturma ve bildirimi HHS inisiyatifindedir. KrdHsp içerisinde yer alan kulKrdTtr değerinin değiştiği durumda olay bildirim gönderilmesi gerekmektedir. \n hspRef \n GET /hesaplar/{hspRef}/bakiye, GET /hesaplar/{hspRef}/islemler \n HHS \n Maksimum 10 dakika içerisinde \n Retry policy uygulanmamalıdır. İlk istek gönderilemediği durumda İletilemeyen Olaylara eklenmelidir. \n \n \n \n HBH \n KART_BILGILERI \n Kart bilgileri nesnesindeki kart statüsü veya ekstre türleri içerisinde sadece yeni bir esktre türü eklendiğinde oluşturulur. Ekstre türünde azaltma yönünde güncelleme varsa olay bildirimi gönderilmemelidir. YÖS'e kart statüsünün veya ekstre türlerinin değiştiğine dair olay bildirimi gönderilir. \n kartRef \n GET /kartlar,  GET /kartlar/{kartRef},   GET /kartlar/{kartRef}/kart-detay,  GET /kartlar/{kartRef}/kart-hareketleri \n HHS \n *Anlık \n 1 Dakika 3 kez \n \n \n \n HBH \n COKLU_ISLEM_TALEBI ( bulk-data) \n İlgili API İlke ve kurallarına eklendiğinde güncellenecektir. \n \n \n HHS \n \n 30 Dakika - 3 Deneme \n \n \n AYRIK_GKD_BASARILI \n ÖBH \n ODEME_EMRI_RIZASI \n HHS sisteminde ÖHK kendini doğruladığında rıza oluşturulur. YÖS'e rıza oluşturulduğuna dair bildirim yapılır. YÖS yetkod değerini sorgulama sonucunda elde eder. \n RizaNo \n GET /yetkilendirme-kodu?rizaNo={rizaNo}}&rizaTip=O \n HHS \n *Anlık \n 1 Dakika 3 kez \n \n \n \n HBH \n HESAP_BILGISI_RIZASI \n HHS sisteminde ÖHK kendini doğruladığında rıza oluşturulur. YÖS'e rıza oluşturulduğuna dair bildirim yapılır. YÖS yetkod değerini sorgulama sonucunda elde eder. \n RizaNo \n GET /yetkilendirme-kodu?rizaNo={rizaNo}&rizaTip=H \n HHS \n *Anlık \n 1 Dakika 3 kez \n \n \n \n ÖBH \n ILERI_TARIHLI_ODEME_EMRI_RIZASI \n HHS sisteminde ÖHK kendini doğruladığında rıza oluşturulur. YÖS'e rıza oluşturulduğuna dair bildirim yapılır. YÖS yetkod değerini sorgulama sonucunda elde eder. \n RizaNo \n GET /yetkilendirme-kodu?rizaNo={rizaNo}}&rizaTip=I \n HHS \n *Anlık \n 1 Dakika 3 kez \n \n \n \n ÖBH \n DUZENLI_ODEME_EMRI_RIZASI \n HHS sisteminde ÖHK kendini doğruladığında rıza oluşturulur. YÖS'e rıza oluşturulduğuna dair bildirim yapılır. YÖS yetkod değerini sorgulama sonucunda elde eder. \n RizaNo \n GET /yetkilendirme-kodu?rizaNo={rizaNo}}&rizaTip=D \n HHS \n *Anlık \n 1 Dakika 3 kez \n \n \n AYRIK_GKD_BASARISIZ \n ÖBH \n ODEME_EMRI_RIZASI \n HHS sisteminde ÖHK kendini doğruladıktan sonra yaptığı kontroller neticesinde logine izin vermez ise YÖS'e bildirim yapılır. YÖS rıza durumunu sorgulayarak işlemin neden iletilmediğine dair bilgi edinebilir. \n RizaNo \n GET /odeme-emri-rizasi/{RizaNo} \n HHS \n *Anlık \n 1 Dakika 3 kez \n \n \n \n HBH \n HESAP_BILGISI_RIZASI \n HHS sisteminde ÖHK kendini doğruladıktan sonra yaptığı kontroller neticesinde logine izin vermez ise YÖS'e bildirim yapılır. YÖS rıza durumunu sorgulayarak işlemin neden iletilmediğine dair bilgi edinebilir. \n RizaNo \n GET /hesap-bilgisi-rizasi/{RizaNo} \n HHS \n *Anlık \n 1 Dakika 3 kez \n \n \n \n ÖBH \n ILERI_TARIHLI_ODEME_EMRI_RIZASI \n HHS sisteminde ÖHK kendini doğruladıktan sonra yaptığı kontroller neticesinde logine izin vermez ise YÖS'e bildirim yapılır. YÖS rıza durumunu sorgulayarak işlemin neden iletilmediğine dair bilgi edinebilir. \n RizaNo \n GET /yetkilendirme-kodu?rizaNo={rizaNo}}&rizaTip=I \n HHS \n *Anlık \n 1 Dakika 3 kez \n \n \n \n ÖBH \n DUZENLI_ODEME_EMRI_RIZASI \n HHS sisteminde ÖHK kendini doğruladıktan sonra yaptığı kontroller neticesinde logine izin vermez ise YÖS'e bildirim yapılır. YÖS rıza durumunu sorgulayarak işlemin neden iletilmediğine dair bilgi edinebilir. \n RizaNo \n GET /yetkilendirme-kodu?rizaNo={rizaNo}}&rizaTip=D \n HHS \n *Anlık \n 1 Dakika 3 kez \n \n \n HHS_YOS_GUNCELLENDI \n \n \n BKM sistemi tarafından üretilecek olayları dinlemek için kullanılacak kaynak tipidir. YÖS ve HHS'lerin BKM'ye abonelik oluşturmasına gerek bulunmamaktadır. BKM HHS ve YÖS üretim ortamı tanımı yaparken aboneliklerini başlatacaktır.   (HHS yaygınlaştırma durumundayken de aboneliği başlatılacaktır.) \n \n \n HHS \n \n \n \n \n \n YÖS \n HHS \n HHS bilgilerinde değişiklik olduğunda, YÖS'ün hhsKod ile sorgulama yapması ve değişen bilgiyi güncellemesi beklenmektedir. \n hhsKod \n GET /hhs/{hhsKod} \n BKM \n *Anlık \n 5 Dakika - 3 Deneme \n \n \n \n HHS \n YOS \n YÖS bilgilerinde değişiklik olduğunda, HHS'nin yosKod ile sorgulama yapması ve değişen bilgiyi güncellemesi beklenmektedir. \n yosKod \n GET /yos/{yosKod} \n BKM \n *Anlık \n 5 Dakika - 3 Deneme \n \n \n \n * Anlık : Olay gerçekleştikten sonra maksimum 5 saniye içerisindeki zaman \n ADIM 2: Olay Aboneliğinin güncellenmesi \n PUT\tolay-abonelik/{olayAbonelikNo} \n YÖS'ün olay aboneliğine ait abonelik tiplerini güncelleyebildiği servistir. Olay aboneliği oluşturulduğu zaman HHS tarafından iletilen olayAbonelikNo aracılığı ile güncelleme işlemi yapılır. YÖS abone olmak istediği olay-kayıt tiplerininin son halini güncelleme servisi ile HHS'ye iletir. HHS bu bilgilerle eski abonelik tiplerinin yerini değiştirir. \n Başarılı PUT isteği sonucu HTTP 200 cevabı ile iletilmelidir. \n OlayAbonelikIstegi nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n HHS tarafından yapılması gereken kontrol ve işlemler \n \n \n \n \n Olay Abonelik Numarası \n olayAbonelikNo \n AN1..64 \n Z \n YÖS özelinde oluşturulan tekil tanımlayıcıdır. Farklı YÖS'ler için aynı değer kullanılamaz. \n HHS geçerli bir olay abonelik numarası olduğunun kontrolünü yapar. \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n \n Abonelik Tipleri \n abonelikTipleri \n Kompleks: abonelikTipleri[Array][1..N] \n Z \n HHS Sisteminde, YÖS'ün eski abonelikleri yeni aboneliklerle güncellenmelidir. \n \n \n \n > Olay Tipi \n olayTipi \n AN1..36 \n Z \n YÖS abone olmak istediği olay tiplerini TR.OHVPS.DataCode.OlayTip sıralı veri tiplerinden değer ya da değerler ile doldurur. \n \"Olay Tipleri ve Kaynak Tipleri İlişkisi\" tablosunda \"Olay Bildirim Yapan\" kolonu \"HHS\" olan olay tipleri ile veri girişine izin verilir.  Olay tipi AYRIK_GKD_BASARILI ve AYRIK_GKD_BASARISIZ için, YÖS'ün ODS API'yi sunması zorunludur. HHS, bu olay tipleri özelinde YÖS API üzerinden YÖS'ün bu API'yi sunduğunu kontrol eder ve eğer sunmuyor ise TR.OHVPS.Business.InvalidContent hatası dönerek kayıt işlemini gerçekleştirmez. \n \n \n > Kaynak Tipi \n kaynakTipi \n AN1..36 \n Z \n Olay tiplerinin tanımlanabildiği kaynak listesi bulunmaktadır. Bu listeye uygun kaynak tipleri iletilmelidir. \n HHS, YÖS API üzerinden YÖS'ün rollerini alarak uygun kaynak tiplerine kayıt olmasına izin verir. \n \n \n \n OlayAbonelik nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Olay Abonelik Numarası \n olayAbonelikNo \n AN1..64 \n Z \n YÖS özelinde oluşturulan tekil tanımlayıcıdır. Farklı YÖS'ler için aynı değer kullanılamaz. \n \n \n Olay Abonelik Oluşturulma zamanı \n olusturmaZamani \n ISODateTime \n Z \n Olay Abonelik nesnesinin oluşturulma zaman damgası \n \n \n Olay Abonelik Güncelleme zamanı \n guncellemeZamani \n ISODateTime \n Z \n Olay Abonelik nesnesinin güncelleme zaman damgası \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n Abonelik Tipleri \n abonelikTipleri \n Kompleks: abonelikTipleri[Array][1..N] \n Z \n OlayAbonelikIstegi nesnesi içerisinde iletilen değerlerin yanıt içerisinde dönmesi beklenmektedir. \n \n \n > Olay Tipi \n olayTipi \n AN1..36 \n Z \n OlayAbonelikIstegi nesnesi içerisinde iletilen değerlerin yanıt içerisinde dönmesi beklenmektedir. \n \n \n > Kaynak Tipi \n kaynakTipi \n AN1..36 \n Z \n OlayAbonelikIstegi nesnesi içerisinde iletilen değerlerin yanıt içerisinde dönmesi beklenmektedir. \n ADIM 3: Olay Aboneliğinin sorgulanması \n GET /olay-abonelik \n YÖS olay abonelik bilgilerini sorgulamak isteyebilir. HHS, YÖS'e ait aktif durumdaki abonelik bilgisini iletir.\nBaşarılı GET sonucu HTTP 200 kodu ile iletilmelidir. \n OlayAbonelik nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Olay Abonelik Numarası \n olayAbonelikNo \n AN1..64 \n Z \n YÖS özelinde oluşturulan tekil tanımlayıcıdır. Farklı YÖS'ler için aynı değer kullanılamaz. \n \n \n Olay Abonelik Oluşturulma zamanı \n olusturmaZamani \n ISODateTime \n Z \n Olay Abonelik nesnesinin oluşturulma zaman damgası \n \n \n Olay Abonelik Güncelleme zamanı \n guncellemeZamani \n ISODateTime \n Z \n Olay Abonelik nesnesinin güncelleme zaman damgası \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n Abonelik Tipleri \n abonelikTipleri \n Kompleks: abonelikTipleri[Array][1..N] \n Z \n YÖS'ün abone olduğu olay - kaynak listesini döner. \n \n \n > Olay Tipi \n olayTipi \n AN1..36 \n Z \n TR.OHVPS.DataCode.OlayTip sıralı veri tiplerinden değerler içerir. \n \n \n > Kaynak Tipi \n kaynakTipi \n AN1..36 \n Z \n TR.OHVPS.DataCode.KaynakTip sıralı veri tiplerinden değerler içerir. \n ADIM 4: Olay Aboneliğinin iptali \n DELETE /olay-abonelik/olayAbonelikNo \n YÖS'ün abonelik kaydını silmesi için HHS'nin sunduğu servistir.  Başarılı silme işlemi sonucu HTTP 204 ile YÖS'e iletilir. \n ADIM 5: Olay Aboneliğinin İletilemeyen Olayları \n GET /iletilemeyen-olaylar \n HHS kaynaklar üzerinde oluşacak olayları YÖS'e POST/olay-dinleme servisi ile gönderim sağlamaktadır. Bu gönderim belli bir yeniden gönderim politası (retry-policy) ile yapılmalıdır.  Ancak yine de iletilemeyen olaylar olursa (YÖS servisinden HTTP 202 alamama durumu) YÖS'e iletilemeyen-olaylar servisi üzerinden sunulmalıdır. Yani yeniden gönderim politikası sonunda gönderilemeyen olaylar bu servis ile sunulmalıdır. \n Aynı kaynak numarası ile aynı olay-kaynak tipinde, 1 YÖS’e ait, 1 adet iletilemeyen olay kaydı olabilir. \n Bu serviste 1 gün öncesinden sorgu anına kadar tüm kayıtlarına ait iletilemeyen olaylar listelenmelidir.\nÖrnek sorgu zamanı : 2023-04-06T15:14:00+03:00\nHHS'nin sunacağı veri 2023-04-05T00:00:00+03:00  ile 2023-04-06T15:14:00+03:00 arasında olmalıdır.\nSıralama yönü olay tarihine göre artan şekilde olmalıdır. Sayfalama 100'er kayıt dönülerek yapılmalıdır. \n YÖS tarafından iletilemeyen olaylar isteği 10 dakikada bir olacak şekilde yapılabilir. HHS bu limite uygun işlem kısıtı uygulayabilir. \n İşlem Sorgu Örneği GET İşlem Sorgu Örneği  : /iletilemeyen-olaylar?syfNo=1&olyZmnBslTrh=2024-01-08T16:42:00+03:00&olyZmnBtsTrh=2024-01-09T17:09:00+03:00 \n Örneğin; \n olyZmnBslTrh : 07/01/2024 10:00:00+03:00\n olyZmnBtsTrh : 09/01/2024 16:00:00+03:00\n Sorgu Zamanı : 09/01/2024 10:15:00+03:00 \n Yanıt içerisinde yer alan veriye ait tarih aralığı : 08/01/2024 00:00:00+03:00 - 09/01/2024 10:15:00+03:00 olmalıdır. \n Başlangıç ve bitiş zaman aralığı örnekte yer alan şekilde seçilse dahi ilgili servis yanıtı için öncelikle sorgu zamanına bakılıp 1 gün öncesinden sorgu anına kadar tüm kayıtların iletilemeyen olaylar içerisinde listelenmesi sağlanmalıdır. \n İlgili tarih aralığında uygun veri olmaması halinde yanıt gövdesi boş olacak şekilde dönülmelidir. \n İletilemeyen Olaylar Sorgulama İsteği Sorgu Parametreleri \n \n \n \n Alan Adı \n Parametre Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n HHS tarafından yapılması gereken kontrol ve işlemler \n \n \n \n \n İstenen Sayfa Numarasi \n syfNo \n N3 \n İ \n Cevapta dönecek sayfa numarası 1’den başlayarak artan değerlerle iletilmelidir. \n Bu veri gönderildiği durumda, HHS İletilemeyen Olaylar listesine ait bu sayfadaki kayıtları göndermelidir. Gönderilmediğinde, HHS ilk sayfadaki kayıtları göndermelidir. \n \n \n Olay Zamanı Başlangıç Tarihi \n olyZmnBslTrh \n ISODateTime \n İ \n Sorgulanacak Olay Zamanına ait başlangıç tarihi \n HHS'ler iletilemeyen olaylar listesi dönüşünü bu kritere göre filtreleyerek iletmek zorundadır. YÖS tarafından tetiklenen sorgularda; olyZmnBslTrh iletilmediği durumda ya da 1 gün öncesinin başlangıç saatine göre daha geri bir zaman dilimi gönderildiğinde, başlangıç zamanı(olyZmnBslTrh) değeri sorgu zamanından 1 gün öncesine ait günün başlangıç zamanı olarak kabul edilmelidir. \n \n \n Olay Zamanı Bitiş Tarihi \n olyZmnBtsTrh \n ISODateTime \n İ \n Sorgulanacak Olay Zamanına ait bitiş tarihi \n HHS'ler iletilemeyen olaylar listesi dönüşünü bu kritere göre filtreleyerek iletmek zorundadır. YÖS tarafından tetiklenen sorgularda; olyZmnBtsTrh iletilmediği durumda ya da sorgu zamanından daha ileri bir zaman dilimi gönderildiğinde, bitiş zamanı(olyZmnBtsTrh) değeri sorgu zamanı olarak kabul edilmelidir. \n \n \n \n Tablo 17: Olaylar nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n Olaylar \n olaylar \n Kompleks: Olaylar \n Z \n \n \n \n >Olay No \n olayNo \n AN1..64 \n Z \n Olaya ait evrensel tekil numaradır. \n \n \n >Olay Zamani \n olayZamani \n ISODateTime \n Z \n Olayın oluştuğu tarih bilgisidir. \n \n \n >Olay Tipi \n olayTipi \n AN1..36 \n Z \n TR.OHVPS.DataCode.OlayTip sıralı veri tiplerinden birini alır. \n \n \n >Kaynak Tipi \n kaynakTipi \n AN1..36 \n Z \n TR.OHVPS.DataCode.KaynakTip sıralı veri tiplerinden birini alır. \n \n \n >Kaynak Numarası \n kaynakNo \n AN1..128 \n Z \n Güncellenen kaynağa ait HHS sistemindeki tekil tanımlayıcı. \n \n \n \n Kaynak numarasında gönderilen değer ile ilgili kaynağı sorgulayarak almak YÖS'ün insiyatifindedir. \n ADIM 6: Sistem Olay Dinleme \n POST /sistem-olay-dinleme \n HHS'lerin sistem olaylarını dinleme amacıyla açması gereken endpoint bilgisidir. \n YÖS API içerisinde yapılan değişikliklerde, BKM tarafından HHS'lere olay bildirimlerini yapılır. \n Olaylar yanıt nesnesi içerisinde 1 adet kayıt yer almalıdır. \n Başarılı POST isteği sonucu HTTP 202 Accepted kodu ile dönülmelidir. \n HHS'den başarılı yanıt alınamadığı durumda, 5 dakika aralıklarla 3 kez deneme yapılacaktır. Hata alınmaya devam edilmesi durumunda başka bir aksiyon alınmayacaktır. \n Olay Dinleme Servisleri (ODS) \n YÖS sunacağı Olay Dinleme Servisi ile hem HHS'den hem de BKM'den gelen olayların bildirimini dinleyebilir. YÖS'ler HHS'de yer alan olay abonelik kayıtlarını iptal edebilir ancak BKM Sistem Olay Dinleme servisinin ileteceği bildirimlerin alınması zorunlu olduğundan ODS API her zaman aktif olmalıdır. \n HHS'den gelecek olay bildirimlerini olay-dinleme endpointi ile dinlerken, BKM'den gelecek olay bildirimlerini sistem-olay-dinleme endpointi ile dinlemelidir. \n Olay Dinleme Servislerinde Idempotency kurallarının işletilmesine gerek bulunmamaktadır. \n Olay Dinleme Servisine ait API Endpointleri aşağıdaki tabloda listelenmiştir. \n Olay Dinleme Servisleri için Erişim Adresleri (Endpoints) \n Etki Alanı (Scope) =“olay_dinleme” \n \n \n \n No \n Kaynak \n HTTP işlemi \n Erişim Adresi \n Zorunlu (Z)/ İsteğe Bağlı(İ) \n Yetkilendirme Türü \n İmzalama \n Parametre \n İstem Nesnesi \n Yanıt Nesnesi \n \n \n \n \n 1 \n olay-dinleme \n POST \n /olay-dinleme \n Z \n İstemci Kimlik Bilgileri \n İmzalı İstek \n - \n Olaylar \n - \n \n \n 2 \n sistem-olay-dinleme \n POST \n /olay-dinleme \n Z \n İstemci Kimlik Bilgileri \n - \n - \n Olaylar \n - \n ADIM 1: Olay Dinleme \n POST /olay-dinleme \n Olay abonelik servisi ile abone olunan olaylar, olay dinleme servisi ile YÖS'e iletilir.\nOlaylar yanıt nesnesi içerisinde en fazla 100 kayıt gönderilmelidir.\nBaşarılı POST isteği sonucu HTTP 202 Accepted ile dönülmelidir. \n HHS'nin işlem hata aldığında, başarılı işlem olana kadar 3 kez deneme yapılması gerekmektedir.\nİlk istekle son istek arasında 30 dakika olacak şekilde, zamana yayarak bu denemelerin yapılması gerekmektedir. (Exponential backoff policy uygulanması beklenmektedir. )\nHHS kendi sistemini yormayacak şekilde, belirleyeceği kurallar dahilinde bu geliştirmeyi yapmalıdır. \n Tablo 17: Olaylar nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format \n Zorunlu / Koşullu /  İsteğe bağlı \n Açıklama \n \n \n \n \n >Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n >>Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n >> Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n >Olaylar \n olaylar \n Kompleks: Olaylar \n Z \n \n \n \n >>Olay Numarası \n olayNo \n AN1..64 \n Z \n Olaya ait atanmış tekil kimlik numarası \n \n \n >>Olay Zamanı \n olayZamani \n ISODateTime \n Z \n Olayın oluşma zamanı \n \n \n >>Olay Tipi \n olayTipi \n AN1..36 \n > \n TR.OHVPS.DataCode.OlayTip sıralı veri tiplerinden birini alır. \n \n \n >>Kaynak Tipi \n kaynakTipi \n AN1..36 \n Z \n TR.OHVPS.DataCode.KaynakTip sıralı veri tiplerinden birini alır. \n \n \n >>Kaynak Numarası \n kaynakNo \n AN1..128 \n Z \n Güncellenen kaynağa ait HHS sistemindeki tekil tanımlayıcı. \n ADIM 2:  Sistem Olay Dinleme \n POST /sistem-olay-dinleme \n YÖS'lerin sistem olaylarını dinleme amacıyla açması gereken endpoint bilgisidir. \n HHS API içerisinde yapılan değişikliklerde, BKM tarafından YÖS'lere olay bildirimlerini yapılır. \n Olaylar yanıt nesnesi içerisinde 1 adet kayıt yer almalıdır. \n Başarılı POST isteği sonucu HTTP 202 Accepted kodu ile dönülmelidir. \n YÖS'ten başarılı yanıt alınamadığı durumda, 5 dakika aralıklarla 3 kez deneme yapılacaktır. Hata alınmaya devam edilmesi durumunda başka bir aksiyon alınmayacaktır. \n"},{title:"7.\tİleri Tarihli Ödeme Emri Başlatma Hizmeti",frontmatter:{},regularPath:"/v2.0.0/contents/ileri-tarihli-odeme-emri-hizmeti.html",relativePath:"v2.0.0/contents/ileri-tarihli-odeme-emri-hizmeti.md",key:"v-c07c3efa",path:"/v2.0.0/contents/ileri-tarihli-odeme-emri-hizmeti.html",headers:[{level:2,title:"İleri Tarihli Ödeme Emri Başlatma Hizmeti için Erişim Adresleri (Endpoints)",slug:"ileri-tarihli-odeme-emri-baslatma-hizmeti-icin-erisim-adresleri-endpoints"},{level:2,title:"7.1.\tADIM 0 - İleri Tarihli Ödeme Emri Rızası Başlatma Isteği",slug:"_7-1-adim-0-ileri-tarihli-odeme-emri-rızası-baslatma-istegi"},{level:2,title:"7.2.\tADIM 1 - İleri Tarihli Ödeme Emri Rızasının Hazırlanması",slug:"_7-2-adim-1-ileri-tarihli-odeme-emri-rızasının-hazırlanması"},{level:2,title:"7.3.\tADIM 2- İleri Tarihli Ödeme Emri Rızasının Yetkilendirilmesi",slug:"_7-3-adim-2-ileri-tarihli-odeme-emri-rızasının-yetkilendirilmesi"},{level:2,title:"7.4.\tADIM 2.1 – İleri Tarihli Ödeme Emri Rızasının Sorgulanması (isteğe bağlı)",slug:"_7-4-adim-2-1-ileri-tarihli-odeme-emri-rızasının-sorgulanması-istege-baglı"},{level:2,title:"7.5.\tADIM 3- İleri Tarihli Ödeme Emrinin Oluşturulması",slug:"_7-5-adim-3-ileri-tarihli-odeme-emrinin-olusturulması"},{level:2,title:"7.6.\tADIM 3.1- İleri Tarihli Ödeme Emri Sorgusu (İsteğe bağlı)",slug:"_7-6-adim-3-1-ileri-tarihli-odeme-emri-sorgusu-istege-baglı"},{level:2,title:"7.7.\tADIM 4- İleri Tarihli Ödeme Emri Rıza İptali",slug:"_7-7-adim-4-ileri-tarihli-odeme-emri-rıza-iptali"}],content:' 7.\tİleri Tarihli Ödeme Emri Başlatma Hizmeti \n Ödeme hizmeti kullanıcısının ileri bir tarihte gerçekleşmesini istediği ödeme emirlerinde bu hizmeti kullanabilir. Ödemenin Havale / PÖS / FAST ödeme sistemlerinden hangisi ile gerçekleşeceğine, ödeme günü geldiğinde HHS karar verir. \n İleri tarihli ödeme hizmetini online bankacılık sistemlerinde sunan HHS\'lerin, ÖHVPS üzerinden bu hizmetleri sunması zorunludur. Mevcutta online kanallarından bu hizmeti sundukları müşteri segmentine (bireysel,kurumsal vb.), ÖHVPS üzerinden hizmet sunmaya devam etmeleri gerekmektedir. YÖS, bireysel müşteri özelinde ileri tarihli ödeme hizmeti vermeyen HHS\'ye ileri tarihli bir ödeme emri rızası isteği yapması durumunda HHS tarafından  TR.OHVPS.Business.IndividualCustomerNotSupported"  hatası , kurumsal müşteri özelinde ileri tarihli ödeme emri rızası isteği yapıldığında HHS tarafından  TR.OHVPS.Business.CorporateCustomerNotSupported  hatası verilmelidir. \n HHS\'ler ileri tarihli ödeme emri hizmetini sunuş bilgilerini HHS API aracılığı ile yayınlayacaklardır. YÖS, ileri tarihli ödeme hizmeti başlatabileceği HHS\'lerin listesini HHS API\'de yer alan "hizmetTipi":"02" parametresi ile alabilir. YÖS, ileri tarihli ödeme hizmeti sunmayan HHS\'ye ileri tarihli bir ödeme emri rızası isteği yapması durumunda HHS tarafından  TR.OHVPS.Business.ScheduledPaymentNotSupported  hatası iletilmelidir. \n İleri tarihli ödeme emri güncelleme hizmeti YÖS üzerinden yapılamayacaktır. ÖHK aktif olan düzenli ödeme talimat rızasını iptal ederek, yeniden oluşturabilecektir. \n HHS üzerinden ilgili güncelleme hizmeti sağlanabilir. İleri tarihli talimat içerisinde yapılan güncelleme sonucunda olay bildirim ile YÖS\'e bildirim sağlanacaktır. HHS üzerinden güncelleme yapılırken talimat tarihine dair ileri bir tarihe güncelleme adımı olmamalıdır. Sadece ilk oluşturulan talimat tarihinden öncesi olacak şekilde güncelleme yapılmasına izin verilmelidir. \n İleri Tarili Ödeme Emri Başlatma Hizmeti 5 temel akışdan oluşur: \n \n İleri Tarihli Ödeme Emri Rıza Başlatma İsteğinin tetiklenmesi:  ÖHK ÖBHS mobil uygulama ya da websitesinden ileri tarihli ödeme emrini başlatır. \n İleri Tarihli Ödeme Emri Rıza Hazırlanması:  ÖBHS, “İleri Tarihli Ödeme Emri Başlatma” işlemi için izin oluşturulması isteğini HHS’ye iletir. \n İleri Tarihli Ödeme Emri Rızasının Yetkilendirilmesi:  HHS, gerekli gördüğü durumlarda ÖHK’yı GKD ile doğrular ve ileri tarihli ödeme emri rızasına erişim için erişim belirteci tanımlanmasını temin eder. \n İleri Tarihli Ödeme Emrinin Başlatılması:  ÖBHS, “ileri tarihli ödeme emri”ni HHS’ye iletir. \n İleri Tarihli Ödeme Emri Rıza Durumu, İleri Tarihli Ödeme Emri Durumu, İleri Tarihli Ödeme Emri Detayı Sorguları:  ÖBHS, İleri Tarihli Ödeme Emri Rıza Durumu, İleri Tarihli Ödeme Emri Durumu, İleri Tarihli Ödeme Emri Detayı bilgilerini isteğe bağlı olarak sorgulayabilir. \n \n Nezdinde ödeme hesabı bulunduran hesap hizmeti sağlayıcılar(Banka, EPK, Ödeme Kuruluşları)  müşterilerine ait hesapları hesap referansı ya da hesap numarası üzerinden takip etmektedir. YÖS\'lerin hem HBH hem de ÖBH servisleri için hesap referansı veya hesap numarası üzerinden işlem yapılabileceğini bilmeleri, sistemlerini API dokümanında belirtilen akışlara göre uyumlandırmaları ve müşteri bilgilendirmesini(önyüzlerinde hesap no ve hesap referansı ayrımını gözeterek) buna paralel yapmaları beklenmektedir. \n YÖS\'ler gönderen hesap seçimini aşağıdaki yöntemlerden biri ya da birkaçı ile sağlayabilirler: \n \n YÖS, müşterisinin ödeme hesabını HHS ekranından seçtirebilir. \n YÖS, müşterisinden Hesap Bilgisi rızası alır. Rıza aldığı hesaplar üzerinden hesap referansı aracılığı ile ileri tarihli ödeme emri başlatabilir. \n YÖS, müşterisinin ödeme hesabını elle girmesine olanak tanıyabilir. IBAN\'ı olmayan HHS\'ler ileri tarihli ödeme emri rızası adımında  TR.OHVPS.Business.IBANNotSupported  hatasını vermelidir. IBAN\'ı olan HHS\'lerin bu akışı desteklemesi zorunludur. \n YÖS; müşterisinin hesap referansını elle girmesini sağlayabilir. Hesap Referansı bilgisi ile başlatılan ileri tarihli ödeme emri işlemlerinde HHS seçimi zorunludur. \n \n Ödeme Sistemine doğrudan katılımcı olmayan HHS\'ler, müşterilerine IBAN sunmadıkları için, YÖS\'ler hesap referansı ile ödeme başlatabilirler. Bunların dışındaki HHS\'lerin, gönderen IBAN veya hesap referansı ile ödeme akışını desteklemesi zorunludur. \n İleri Tarihli Ödeme Emri Başlatma Hizmeti için Erişim Adresleri (Endpoints) \n İleri Tarihli Ödeme Emri Başlatma Hizmeti İçin Erişim Adreslerinin Etki Alanı (Scope) = “odeme_emri” olarak belirtilmelidir. Ödeme Emri Hizmeti ile aynı etki alanı(scope) kullanılmaktadır. \n Tablo : İleri Tarihli Ödeme Emri Başlatma Hizmeti İçin Erişim Adresleri \n \n \n \n No \n Kaynak \n HTTP işlemi \n Erişim Adresi \n Zorunlu / İsteğe Bağlı \n Yetkilendirme Türü \n İmzalama \n İstem Nesnesi \n Yanıt Nesnesi \n \n \n \n \n 1 \n ileri-tarihli-odeme-emri-rizasi \n POST \n /ileri-tarihli-odeme-emri-rizasi \n Z \n İstemci Kimlik Bilgileri \n İmzalı İstek ve Yanıt \n IleriTarihliOdemeEmriRizasiIstegi \n IleriTarihliOdemeEmriRizasi \n \n \n 2 \n erisim-belirteci (GKD için) \n POST \n /erisim-belirteci \n Z \n İstemci Kimlik Bilgileri \n İmzalı İstek ve Yanıt \n ErisimBelirteciIstegi \n ErisimBelirteci \n \n \n 3 \n ileri-tarihli-odeme-emri-rizasi \n GET \n /ileri-tarihli-odeme-emri-rizasi/{rizaNo} \n Z \n İstemci Kimlik Bilgileri \n İmzalı Yanıt \n - \n IleriTarihliOdemeEmriRizaYaniti \n \n \n 4 \n ileri-tarihli-odeme-emri \n POST \n /ileri-tarihli-odeme-emri \n Z \n İstemci Kimlik Bilgileri & Yetkilendirme Kodu (GKD) \n İmzalı İstek ve Yanıt \n IleriTarihliOdemeEmriIstegi \n IleriTarihliOdemeEmri \n \n \n 5 \n ileri-tarihli-odeme-emri \n GET \n /ileri-tarihli-odeme-emri/{odmEmriNo} \n Z \n İstemci Kimlik Bilgileri & Yetkilendirme Kodu (GKD) \n İmzalı Yanıt \n - \n IleriTarihliOdemeEmri \n \n \n 6 \n ileri-tarihli-odeme-emri-rizasi-iptal \n DELETE \n /ileri-tarihli-odeme-emri-rizasi/{rizaNo} \n Z \n İstemci Kimlik Bilgileri \n - \n - \n - \n 7.1.\tADIM 0 - İleri Tarihli Ödeme Emri Rızası Başlatma Isteği \n \n ÖHK, ÖBHS uygulamasında (web arayüzü/mobil uygulama) ileri tarihli ödeme emri rızası sürecini başlatır. \n Gönderen hesap detaylarının bu aşamada belirtilmesi zorunlu değildir. \n 7.2.\tADIM 1 - İleri Tarihli Ödeme Emri Rızasının Hazırlanması \n   \n Şekil : İleri Tarihli Ödeme Emri Rızasının Hazırlanması \n \n \n ÖBHS, ödeme hizmeti kullanıcı hesabının bulunduğu HHS’ye bağlanarak ileri tarihli ödeme emri rıza kaynağının oluşturulmasını (ileriTarihliOdemeEmriRizasi) sağlar. \n \n \n POST isteği TLS protokolü tesis edilen iletişim katmanı üzerinden gerçekleştirilir. TLS için nitelikli sertifikalar kullanılır. \n \n \n POST isteğinin başlığındaki alanlar ve istemcinin sertifikasındaki özel alanlar kullanılarak istemcinin yetkilendirilmesi sağlanır: \n \n İstekte bulunan ÖBHS yetkilendirilmiş olduğu geçit tarafından kontrol edilir. \n İstekte bulunan yetkilendirilmiş ödeme hizmeti sağlayıcısı ÖBHS rolüne sahipliği geçit tarafından kontrol edilir. \n HHS tarafından, istek başlığındaki x-aspsp-code ile katilimciBlg içerisinde yer alan hhsKod değeri ile aynı olduğunu kontrol edilir. Farklı olması durumunda  “TR.OHVPS.Connection.InvalidASPSP”  hatası dönülür. \n \n \n \n POST başarılı olursa, HHS, ileri tarihli ödeme emri için içeride rıza olup olmamasına bakılmaksızın yeni bir rıza tanımlayıcısı RizaNo içeren ileriTarihliOdemeEmriRizasi  yanıt olarak döner. \n \n \n 1 ÖHK\'nın 1 YÖS için 1HHS\'de istediği kadar rızası olabilir. \n \n \n HHS tarafında RizaDurumu değişkeninin durumu “Yetki Bekleniyor” olarak güncellenir. \n \n \n YÖS’ün doğrulama ekranı olarak ÖHK’ya açacağı URL adresini de ilgili rıza numarasına göre oluşturur. Burada 2 farklı yöntemle URL oluşturabilir. \n \n Statik URL  : \nHHS’nin base pathi/alt-dizin/{rızaNo} \nÖrnek hhsYonAdr : https://xbank.com.tr/ohvps/cb54834e36f742d09af3d534ece3352a \nBu adres için ilgili doğrulama sayfası önden hazırlanmalı ve ÖHK’nın doğrulama sayfasına erişimi için yayınlanmış olmalıdır (publish edilmelidir). \n Dinamik URL : \nHHS’nin base pathi/alt-dizin/GKD Karşılama Ekranı?rizano={rızano} \nÖrnek: https://xbank.com.tr/ohvps/gkd?rizano=cb54834e36f742d09af3d534ece3352a \n \n \n \n POST /ileri-tarihli-odeme-emri-rizasi \n İSTEK: \n ÖBHS, bu API erişim adresinden HHS’ye yeni bir IleriTarihliOdemeEmriRizasi oluşturulması için istekte bulunur: \n \n ÖBHS, ileri tarihli ödeme emri başlatma isteği olduğunu HHS’ye bildirir. \n ÖBHS, ÖHK’nın, ÖBHS arayüzünden verdiği rızanın (“Ön Onay”) bir kopyasının HHS nezdinde müşteri tarafından onaylanması için HHS’ye gönderilmesini sağlar. \n HHS\'ler ileri tarihli ödeme emri hizmetini sunuş bilgilerini HHS API aracılığı ile yayınlayacaklardır. YÖS, ileri tarihli ödeme hizmeti başlatabileceği HHS\'lerin listesini HHS API\'de yer alan "hizmetTipi":"02" parametresi ile alabilir. YÖS, ileri tarihli ödeme hizmeti sunmayan HHS\'ye ileri tarihli bir ödeme emri rızası isteği yapması durumunda HHS tarafından  TR.OHVPS.Business.ScheduledPaymentNotSupported  hatası iletilmelidir. \n HHS; istek mesajında yer alan alanların ÖHVPS API İlke ve Kuralları dökümanında belirtilen şartları sağlayacak şekilde zorunluluk, uzunluk ve içerik kontrollerini yapar. (Zorunlu) Kontrollere istinaden hata oluşması durumunda  "TR.OHVPS.Resource.InvalidFormat"  hata kodu iletilmeli ve fieldErrors dolu olacak şekilde hatalı alanı belirten detaylı açıklama gönderilmelidir. InvalidFormat hata kodlarında fieldErrors içeriği gönderilmeli ve anlaşılır açıklama ile message, messageTr alanları doldurulması zorunludur. \n HHS, hhsKod’un kendisine ait olduğunu ve istek başlığındaki x-aspsp-code değeri ile aynı olduğunu kontrol eder. Farklı olması durumunda  ”TR.OHVPS.Connection.InvalidASPSP”  hatası dönülür. \n HHS, yosKod’un geçerli bir Ödeme Hizmeti Sağlayıcısı Kodu olduğunu ve istek başlığındaki x-tpp-code değeri ile aynı olduğunu kontrol eder. Farklı olması durumunda  ”TR.OHVPS.Connection.InvalidTPP”  hatası dönülür. \n HHS, bireysel müşteri özelinde ileri tarihli ödeme hizmetini kendi kanallarında sunmuyor ise HHS\'ye ileri tarihli bir ödeme emri rızası isteği yapması durumunda HHS tarafından  "TR.OHVPS.Business.IndividualCustomerNotSupported"  hatası ,\nkurumsal müşteri özelinde ileri tarihli ödeme emri rızası isteği yapıldığında HHS tarafından  "TR.OHVPS.Business.CorporateCustomerNotSupported"  hatası dönülür. \n HHS; YÖS API ile alınan ÖBHS bilgilerinin içerisinde yer alan yönlendirme adresleri ile ileri tarihli ödeme emri rızası nesnesi request mesajında paylaşılan adreslerin uyumlu olup olmadığının kontrollerini yapar. (Zorunlu) Kontrollere istinaden hata oluşması durumunda  "TR.OHVPS.Business.TPPRedirectionAddressMismatch"  hatası dönülür. \n Tek seferlik ödeme işlemlerinde (gönderen kimlik bilgilerinin boş olduğu durumda) ve işyeri ödemelerinde ileri tarihli ödeme emri rızası başlatılmamalıdır. YÖS tarafından başlatılan ileri tarihli ödeme emri rızası işleminde bu gönderen kimlik boş olması ve/veya işyeri ödeme bilgilerinin iletilmesi durumunda  "TR.OHVPS.Resource.OneTimePaymentNotSupport"  hatası dönülür. \n HHS; kimlik bilgileri nesnesinde yer alan kimlik bilgisi ile ÖHK’nın HHS müşterisi olup olmadığının kontrollerini yapar. Bu kontrol hem bireysel hem de kurumsal ÖHK’lar için yapılmalıdır.  (Koşullu Zorunlu) Kontrollere istinaden hata oluşması durumunda  "TR.OHVPS.Business.CustomerNotFound"  hatası dönülür. \n İleri Tarihli Ödeme Emri Başlatma Hizmeti rıza isteğinde bulunan ÖHK’nın “Açık Bankacılık Kanal Yetki” tanımı yok ise  "TR.OHVPS.Business.OpenBankingChannelClosed"  hatası dönülür. HHS insiyatifinde olup HHS bu kontrolü GKD sonrası gerçekleştirebilir. \n İleri tarihli ödeme emri rızasında alıcı hesap bilgileri Karekod ya da Kolas ile belirlenebilir. HHS online kanallarında ileri tarihli ödeme hizmetini Karekod ve Kolas aracılığı ile kabul ediyorsa, ÖHVPS servisleri ile de kabul etmek zorundadır. YÖS tarafından ileri tarihli ödeme emri rızası isteği içerisinde alıcı bilgisi için karekod ya da kolas kompleks alanları yer alması durumunda , destek vermeyen HHS\'ler tarafından  TR.OHVPS.Business.RecipientAccountTypeNotSupported  hatası dönülür. \n HHS "gkd" nesnesi için alan kontrollerini gerçekleştirir. "yetYntm" = "A" gönderilmiş ise "ayrikGkd" nesnesinin dolu gönderilmesi zorunludur. Gönderilmemesi durumunda HHS tarafından  "TR.OHVPS.Resource.InvalidFormat"  hatası dönülür. \n Ayrık GKD desteklemeyen HHS\'ye Ayrık GKD yöntemiyle rıza başlatma isteği yapılması durumunda HHS tarafından  "TR.OHVPS.Business.DecoupledAuthenticationNotSupported"  hatası dönülür. YÖS ilgili işlemi “Yönlendirmeli” akışa çekip süreci ilerletebilir. \n Ayrık GKD ile başlatılan rıza akışlarında HHS, YÖS\'ün AYRIK_GKD_BASARILI ve AYRIK_GKD_BASARISIZ olay tipleri için olay aboneliğinin varlığını kontrol eder. YÖS iki olay tipine de abone olmak zorundadır. Eğer olay aboneliği yoksa HHS tarafından  "TR.OHVPS.Business.EventSubscriptionNotFound"  hatası dönülür. \n Rıza başlatma akışı içerisinde kimlik bilgisinin, ÖHK\'ya ait kimlik verisi(kmlk.kmlkVrs) ile ayrık GKD içerisinde yer alan OHK Tanım Değer alanı (ayrikGkd.ohkTanimDeger) birebir aynı olmalıdır. Aynı olmadığı durumda HHS tarafından  "TR.OHVPS.Business.CustomerInfoMismatch"  hatası dönülür. \n HHS tarafında ÖHK\'nın mobil uygulaması bulunmaması durumu tespit edilebildiği durumda Ayrık GKD ile başlatılan rıza akışlarında HHS tarafından  "TR.OHVPS.Business.CustomerMobileApplicationNotFound"  hatası dönülür. YÖS ilgili işlemi “Yönlendirmeli” akışa çekip süreci ilerletebilir. \n HHS kimlik bilgisi ile gönderen ünvanının uyumlu olduğunu kontrol eder. HHS\'ler EFT/FAST işlemlerinde kabul ettikleri kontrol kriterleri ile işleme izin verebilirler. (Zorunlu) Kontrollere istinaden hata oluşması durumunda  "TR.OHVPS.Business.IncorrectSenderTitle"  hatası dönülür. \n Gönderen Hesap Numarası ÖBHS tarafından iletildiği durumda;\n \n IBAN’ın doğruluğu (kontrol basamağı doğrulaması) kontrol edilir. Kontrollere istinaden hata oluşması durumunda   "TR.OHVPS.Business.InvalidAccount"  hatası dönülür. \n IBAN içerisindeki HHS kodunun istek başlığındaki HHS kodu ile aynı olduğu (hesabın HHS’ye aitliğinin kontrolü) kontrol edilir. Kontrollere istinaden hata oluşması durumunda   "TR.OHVPS.Business.AccountCodeMismatch"  hatası dönülür. \n Hesap numarasının ÖHK’ya ait olduğu kontrol edilir.Kontrollere istinaden hata oluşması durumunda   "TR.OHVPS.Business.CustomerAccountMismatch"  hatası dönülür. \n HHS’ye özel ödeme izni verilmeyen farklı statülerin bulunması durumu kontrol edilir. (İlgili hesabın para transfer işlemine yetkisi olmaması) Kontrollere istinaden hata oluşması durumunda   "TR.OHVPS.Business.AccountUnauthorized"  hatası dönülür. \n HHS’de gönderen hesabın aktifliği kontrol edilir. Kontrollere istinaden hata oluşması durumunda   "TR.OHVPS.Business.AccountInactive"  hatası dönülür. \n \n \n Gönderen Hesap Numarası için, Hesap Referansı kullanılıyorsa Hesap Numarası kullanılmayabilir. Hesap referansı ile ileri tarihli ödeme emri rızası başlatılacak ise HHS hesap referansı değeri ile ilişkilendirilmiş mevcut bir hesap bilgisi rızası var mı kontrol etmelidir. Eğer aktif bir rızası yok ise  "TR.OHVPS.Business.ActiveConsentNotFound"  hatası dönülür. \n Talimat tarihi, talimat verilen günün tarihinden minimum 1 gün sonrası, maksimum ise 1 yıl sonrası olacak şekilde seçilebilir. Belirtilen tarih aralığı dışında ÖBHS tarafından talimat tarihi iletilmesi durumunda HHS tarafından  "TR.OHVPS.Business.InvalidOrderDateRange"  hatası dönülür. \n Talimati tarih bilgisi için ödeme gününün iş gününe gelmediği ve HHS\'nin FAST/Havale ile anlık ödeme başlatamadığı durumda,  HHS tarafıdan  "TR.OHVPS.Business.OrderDateNotWorkDay"  hata mesajı ile işlemi kesmelidir. YÖS, ÖHK\'ya tarih bilgisini güncelletebilir ya da kendisi otomatik atama yapabilir. Sonrasında tekrar rıza talebinde bulunmalıdır. \n \n Yukarıdaki kontroller tamamlandıktan sonra HHS, ödeme için benzersiz “RizaNo” ile “IleriTarihliOdemeEmriRizasi” nesnesi oluşturur ve ÖBHS’ye döner. \n HHS, IleriTarihliOdemeEmriRizasi oluşturduğu anda durumunu “Yetki Bekleniyor” olarak düzenler. \n Hesap bakiye kontrolünün rıza aşamasında yapılmaması gerekmektedir. Çünkü ÖHK ileri tarihli ödeme emri gerçekleşene kadar hesabına para eklemesi yapabilir. \n  BAŞARILI İSTEK: \n Tablo : “IleriTarihliOdemeEmriRizasiIstegi” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n HHS tarafından ileri tarihli ödeme emri rızası oluşturulması sırasında yapılması gereken kontrol ve işlemler \n \n \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n HHS, hhsKod’un kendisine ait olduğunu ve istek başlığındaki x-aspsp-code değeri ile aynı olduğunu kontrol eder. \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n HHS, yosKod’un geçerli bir Ödeme Hizmeti Sağlayıcısı Kodu olduğunu ve istek başlığındaki x-tpp-code değeri ile aynı olduğunu kontrol eder. \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n \n > Yetkilendirme Yöntemi \n yetYntm \n AN1 \n İ \n TR.OHVPS.DataCode.GkdTur  sıralı veri türü değerlerinden birini alır. Yetkilendirme yöntemi, ÖBHS tarafından belirtilmeyebilir. \n HHS, HBHS’nin belirlediği yöntemi dikkate alarak süreci ilgili akışa uygun olarak devam ettirir. Desteklemediği yöntem için (örn: Ayrık GKD) ayrıca hata mesajı verilmelidir. \n \n \n > Yönlenme Adresi \n yonAdr \n AN1..1024 \n K \n Yönlendirmeli güçlü kimlik doğrulama için zorunlu.  YÖS’ün ileteceği adrestir.  Durum kodu(drmKod), yönlendirme adresine parametre olarak eklenmelidir. \n HHS, müşteri uygulama / tarayıcısını bu alanda belirtilen adrese yönlendirir. \n \n \n > Ayrık GKD \n ayrikGkd \n Kompleks:AyrikGkd \n K \n Ayrık güçlü kimlik doğrulama için zorunlu. \n yetYntm = A gönderilmiş ise ayrikGkd nesnesinin dolu gönderilmesi zorunludur.   HHS, YÖS\'ün AYRIK_GKD_BASARILI ve AYRIK_GKD_BASARISIZ olay tipleri için olay aboneliğinin varlığını kontrol eder.  Bknz: Ayrık GKD \n \n \n >> OHK Tanım Tip \n ohkTanimTip \n AN8 \n K \n ÖHK\'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım tipleridir.  TR.OHVPS.DataCode.ohkTanimTip  sıralı veri tiplerinden birini alır. \n \n \n \n >> OHK Tanım Değer \n ohkTanimDeger \n AN1..30 \n K \n ÖHK\'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım değeridir. ohkTanimTip\'i ile uyumlu değerdir. \n \n \n \n Ödeme Başlatma \n odmBsltm \n Kompleks: OdemeBaslatma \n Z \n \n \n \n \n > Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n \n >> Kimlik Türü \n kmlkTur \n AN1 \n Z \n TR.OHVPS.DataCode.KimlikTur  sıralı veri türü değerlerinden birini alır. \n Çerçeve sözleşme kapsamındaki ödemelerde kullanımı zorunludur. HHS geçerli bir Kimlik Numarası Türü olduğunu kontrol eder. Kurum adına yapılan (ticari) ödemelerde, kurum adına işlem yapan kullanıcının kimlik türünün bu alanda gönderilmesi zorunludur. \n \n \n >> Kimlik Verisi \n kmlkVrs \n AN1..30 \n Z \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır. TR.OHVPS.DataCode.KimlikTur  değerine göre uzunluk ve formatı değişir. \n Çerçeve sözleşme kapsamındaki ödemelerde kullanımı zorunludur. HHS, ÖBHS tarafından iletilmesi durumunda Kimlik Verisi üzeriden çapraz kontroller uygulamalı ve Kimlik Verisini temel alarak GKD gerçekleştirmelidir.  Pasaport numarasına ilişkin kontroller HHS\'nin halihazırda kullandığı veri, akış ve tabi olduğu diğer düzenlemelerdeki işleyiş ile aynı şekilde ele alınmalıdır.  Kurum adına yapılan (ticari) ödemelerde, kurum adına işlem yapan kullanıcının kimlik türünün bu alanda gönderilmesi zorunludur. \n \n \n >> Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n Z \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür. TR.OHVPS.DataCode.KurumKimlikTur  sıralı veri türü değerlerinden birini alır. \n Kurum adına yapılan (ticari) ödemelerde kullanımı zorunludur.  HHS geçerli bir Kurum Kimlik Numarası Türü olduğunu kontrol eder. \n \n \n >> Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n Z \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.   TR.OHVPS.DataCode.KurumKimlikTur  değerine göre uzunluk ve formatı değişir. \n Kurum adına yapılan (ticari) ödemelerde kullanımı zorunludur.  HHS, ÖBHS tarafından iletilmesi durumunda Kurum Kimlik Verisi üzeriden çapraz kontroller uygulamalıdır. \n \n \n >> Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur  sıralı veri türü değerlerinden birini alır  (B: Bireysel, K:Kurumsal) \n Kurum adına yapılan ödemelerde K değerini alır. Kurum Kimlik Türü ve Kurum Kimlik Verisi alanlarının girilmiş olduğu çapraz olarak kontrol edilir. \n \n \n > İşlem Tutarı \n islTtr \n Kompleks:Tutar \n Z \n \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para Birimi.  Karekod akışında, FAST Karekod Veri Organizasyonundaki  53: (Para Birimi)  alanında tanımlı Para Birimi verisi kullanılır. \n HHS geçerli bir para birimi olduğu kontrol eder. \n \n \n >> Tutar \n ttr \n AN1..24 \n Z \n ÖBHS\'nin ön yüzde kullanıcıdan teyit aldığı tutar.   Karekod akışında, FAST Karekod Veri Organizasyonundaki  54: (Tutar)  alanında tanımlı Tutar verisi kullanılır.   Tutar alanı regex patterni şu şekildedir: \'^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$\' \n \n \n \n > Gönderen \n gon \n Kompleks:Hesap \n Z \n \n \n \n \n >> Ünvan \n unv \n AN3..140 \n Z \n Gönderenin ünvanıdır.  HHS, bu bilgiyi ÖBHS sisteminden gelen veri yerine FAST’a iletirken kendi sisteminden alabilir. \n HHS’nin bu veri ile kendi sistemlerindeki verinin farklı olması ve Kimlik Numarası ile eşleşmemesi durumunda ileri tarihli ödeme emri başlatma isteği reddedilir.  ÖBHS verisi ile HHS verisinin farklılaşması durumunun ise risk değerlendirme sistemlerine girdi olarak kullanması tavsiye edilir. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n İ \n ÖBHS\'nin ön yüzünden daha önce kayıt altına alınmış hesaplar arasından seçtirdiği veya müşteriye girdiği IBAN’dır.  ÖBHS tarafından iletilmediği durumda, gönderen hesap bilgisini müşteri tarafından HHS’nin dijital kanalında GKD sonrasında seçilebilir. Bu amaçla ÖBHS arayüzünde HHS seçtirilmelidir.  Hesap Referansı kullanılıyorsa Hesap Numarası kullanılmayabilir. Hesap referansı ile ileri tarihli ödeme emri rızası başlatılacak ise HHS hesap referansı değeri ile ilişkilendirilmiş mevcut bir hesap bilgisi rızası var mı kontrol etmelidir.   Ödeme Sistemine doğrudan katılımcı olmayan ÖHS\'ler müşterilerine IBAN sunmadıkları için hspRef üzerinden ödeme başlatabilirler. Bu durumda hesap numarası boş olacaktır. \n ÖBHS tarafından iletildiği durumda; IBAN içerisindeki HHS kodunun istek başlığındaki HHS kodu ile aynı olduğu (hesabın HHS’ye aitliğinin kontrolü), IBAN’ın doğruluğu (kontrol basamağı doğrulaması), Hesap numarasının ÖHK’ya ait olduğu, HHS’ye özel ödeme izni verilmeyen farklı statülerin bulunması durumu kontrol edilir. \n \n \n >> Hesap Referansı \n hspRef \n AN5..40 \n İ \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid). YÖS bazında farklılaşması gerekmez.  ÖBHS’nin aynı zamanda HBHS olduğu durumda müşteri rızası tesis edilmiş bir hesabın referansı üzerinden de ödeme başaltılabilir.  Hesap Numarası kullanılıyorsa Hesap Referansı kullanılmayabilir.   Ödeme Sistemine doğrudan katılımcı olmayan HHS\'ler müşterilerine IBAN sunmadıkları için hspRef üzerinden ödeme başlatabilirler. Bu durumda hesap numarası boş olacaktır. \n HspRef\'e bağlı IBAN değiştiğinde yeni IBAN\'ın da ilgili HspRef ile ilişkilendirilmesi beklenmektedir. Bu durumda, HBHS, HspRef ile sorguya geldiğinde HHS\'nin yeni IBAN ve hesap hareketlerini dönebilmesi mümkün olacaktır. HspRef’in, IBAN değiştiğinde değiştirilmemesi tavsiye edilmektedir. \n \n \n > Alıcı \n alc \n Kompleks:Hesap \n Z \n \n \n \n \n >> Ünvan \n unv \n AN3..140 \n K \n Kolay Adres Sistemi  kullanılmıyorsa zorunludur.  Alıcının ünvanıdır. ÖBHS ekranlarından girişi yapılabileceği gibi ÖBHS’nin kayıtlı alıcılarından yapılan seçimle de doldurup gönderebildiği bilgi olabilir.  FAST-TR Karekod Veri Organizasyonunda;  İşyeri tarafından sunulan uzun karekod yapısının  59:  alanında tanımlı İşyeri adı alanıdır, Kişiden Kişiye Ödeme Karekod Yapısının  07:  alanında tanımlı    Ödeme Alıcısının Adı ve Soyadı  alanıdır. \n \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n K \n Alıcının Hesap Numarası (IBAN)  alanıdır.   Kolay Adres Sistemi  kullanılmıyorsa zorunludur.  Karekod akışında, FAST Karekod Veri Organizasyonundaki  30-01:  alanında tanımlı İş Yeri IBAN verisi kullanılır.  Alıcının birden fazla hesabının kullanılabilir olduğu durumlarda (özellikle işyeri ödemelerinde HHS nezdindeki hesap (on-us havale akışı) tercih edilmelidir. \n HHS (Gönderen Katılımcı) tarafından IBAN doğrulaması (kontrol basamağı doğrulaması) yapılır. \n \n \n >> Kolay Adres \n kolas \n Kompleks:Kolas \n K \n Talimatın gerçekleşeceği ana kadar KOLAS tanımınında değişiklik olabileceği için,  KOLAS ile yapılan ileri tarihli işlemler, talimatın verildiği anda çözülen IBAN\'a yapılacaktır. \n Kolas ile ileri tarihli ödeme emri hizmeti desteklenmiyorsa; HHS tarafından hata dönülmelidir. \n \n \n >>> Kolas Türü \n kolasTur \n AN1 \n Z \n TR.OHVPS.DataCode.KolasTur  sıralı veri türü değerlerinden birini alır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n HHS (Gönderen FAST katılımcısı) tarafından KOLAS Servisine yapılan sorguda girdi olarak kullanılır. \n \n \n >>> Kolas Değeri \n kolasDgr \n AN7..50 \n Z \n Müşterinin eklediği, HHS (FAST katılımcısı) tarafından doğrulanmış Kolay Adres değeridir. Alabileceği değerler BKM “Kolay Adresleme Sistemi Uygulama Kuralları” belgesinde tanımlıdır.  Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n HHS (Gönderen FAST katılımcısı) tarafından KOLAS Servisine yapılan sorguda girdi olarak kullanılır. \n \n \n > Karekod \n kkod \n Kompleks:Karekod \n K \n Karekod ile yapılan ileri tarihli işlemler, talimatın verildiği anda çözülen IBAN\'a yapılacaktır. \n Karekod ile ileri tarihli ödeme emri hizmeti desteklenmiyorsa; HHS tarafından hata dönülmelidir. \n \n \n >> Akış Türü \n aksTur \n AN2 \n Z \n TR.OHVPS.DataCode.KareKodAksTur  sıralı veri değerlerinden birini alır. Kolay Adresi Sistemi ile birlikte kullanılmaz. \n \n \n \n >> Referansı \n kkodRef \n AN1..12 \n K \n Karekod referans numarasını  gösterir. Okunan karekodda referans değeri varsa kullanılması zorunludur.  Karekod ilke ve kurallar belgesinde tanımlandığı şekilde kullanılması gerekmektedir.  Kolay Adresi Sistemi ile birlikte kullanılmaz. \n \n \n \n >> Üretici Kodu \n kkodUrtcKod \n AN4 \n Z \n Karekod üreticisinin kodu.  Ödeme Hizmeti Sağlayıcıları ve TCMB tarafından uygun görülen ödeme sistemi işleticisi TR Karekod üretebilmek için BKM’ye kayıt başvurusu yaparak karekod üretici kodu alabileceklerdir. Bankalar EFT kodlarını kullanacak olup ayrıca kayıt yaptırmalarına gerek bulunmamaktadır. 4 haneden kısa değerlerin sol tarafı ’0’ karakteri ile tamamlanmalıdır. \n \n \n \n > Ödeme Ayrıntıları \n odmAyr \n Kompleks: OdemeAyrintilari \n Z \n \n \n \n \n >> Ödeme Kaynağı \n odmKynk \n AN1 \n Z \n Ödemenin başlatıldığı kaynağı belirtir.  TR.OHVPS.DataCode.OdemeKaynak  sıralı veri veri değerlerinden “O” değeri atanarak iletilmelidir. “O” değeri “Açık bankacılık aracılığı ile gönderilen ödemelerde kullanılır.” anlamını taşımaktadır. \n HHS, YÖS\'ün API deseninde "O" kodunu ilettiğini kontrol eder. \n \n \n >> Ödeme Amacı \n odmAmc \n AN2 \n Z \n TR.OHVPS.DataCode.OdemeAmaci  sıralı veri değerlerinden birini alır. Karekod akışında, FAST Karekod Veri Organizasyonundaki 62-08: alanında tanımlı Ödeme Amacı verisi kullanılır. \n HHS geçerli bir Ödeme Amacı kodu olduğunu kontrol eder. \n \n \n >> Referans Bilgisi \n refBlg \n AN1..140 \n K \n Ödemeye özel  Referans Bilgisi  alanıdır. Karekod işlemi değil ise zorunludur.  -\tKişiden kişiye fon aktarımlarında: Gün içerisinde ÖHK özelinde, her işleme özel biricik olarak oluşturulan referans bilgisidir.  Karekod P2P akışı için referans bilgisi (Karekod referans numarası değil, işleme özel üretilecek referans bilgisidir.) YÖS tarafından atanacaktır.   -\tE-ticaret işlemlerinde sipariş/takip numarası/müşteri/abone numarası  -\tİşyeri Ödemesi Karekod akışında, FAST Karekod Veri Organizasyonundaki  -\t62-01: alanında tanımlı Fatura Numarası   -\t62-06: alanında tanımlı Müşteri Numarası   verilerinden biri kullanılır. \n YÖS bu değeri ÖHK’yı HHS’ye yönlendirmeden önceki ekranda göstermeli, ve HHS bu değeri GKD için kullandığı önyüzünde “işlem doğrulama kodunun” bir unsuru olarak yine ÖHK’ya göstermelidir. \n \n \n >> Açıklama \n odmAcklm \n AN1..200 \n İ \n ÖBHS’nin ÖHK’dan aldığı ya da kendisinin atadığı işlem açıklaması bilgisi.  FAST/PÖS sistemi üzerinden yapılan ödemeler için açıklama bilgisi girilirse boşluk karakteri girilerek geçilemez. En az bir alfasayısal karakter girilmesi zorunludur. \n \n \n \n >> Talimat Tarihi \n tlmtTrh \n ISODate \n Z \n ÖHK tarafından talep edilen, ödeme gerçekleşme zamanıdır. \n Talimat verilen günün tarihinden minimum 1 gün sonrası,maksimum ise 1 yıl sonrası olacak şekilde seçilebilir. \n  BAŞARILI YANIT: \n POST işleminin RESPONSE gövdesini (BODY) oluşturan “IleriTarihliOdemeEmriRizasi” nesnesi Tablo’da parametrelerden oluşur: \n Tablo : “IleriTarihliOdemeEmriRizasi” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n \n \n \n \n Riza Bilgileri \n rzBlg \n Kompleks: RizaBilgileri \n Z \n \n \n \n > Rıza No \n rizaNo \n AN1..128 \n Z \n IleriTarihliOdemeEmriRızasi nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n > Oluşturma Zamanı \n olusZmn \n ISODateTime \n Z \n IleriTarihliOdemeEmriRizasi nesnesinin oluşturulma zamanı \n \n \n > Güncellenme Zamanı \n gnclZmn \n ISODateTime \n Z \n IleriTarihliOdemeEmriRizasi nesnesinin güncellenme zamanı \n \n \n > Rıza Durumu \n rizaDrm \n AN1 \n Z \n TR.OHVPS.DataCode.RizaDurumu  sıralı veri tipini değerlerinden birini alır. \n \n \n > Rıza Iptal Detay Kodu \n rizaIptDtyKod \n AN2 \n K \n Rıza durumunun iptal olduğu durumda zorunludur. Alabileceği değerler 4. Bölümde detaylandırılmıştır. \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n > Yetkilendirme Yöntemi \n yetYntm \n AN1 \n Z \n TR.OHVPS.DataCode.GkdTur  sıralı veri türü değerlerinden birini alır.  HHS, ÖBHS’nin belirlediği yöntemi dikkate alarak kendi belirlediği yöntemi kullanır. \n \n \n > Yönlenme Adresi \n yonAdr \n AN1..1024 \n K \n Yönlendirmeli güçlü kimlik doğrulama için zorunlu. HHS, müşteri uygulama / tarayıcısını yönlendirmeli akışta bu alanda belirtilen YÖS adresine yönlendirir. \n \n \n > Ayrık GKD \n ayrikGkd \n Kompleks:AyrikGkd \n K \n Ayrık güçlü kimlik doğrulama için zorunlu. \n \n \n >> OHK Tanım Tip \n ohkTanimTip \n AN8 \n K \n ÖHK\'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım tipleridir. İstek içerisindeki veri değiştirilmeden iletilir. \n \n \n >> OHK Tanım Değer \n ohkTanimDeger \n AN1..30 \n K \n ÖHK\'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım değeridir. ohkTanimTip\'i ile uyumlu değerdir.  İstek içerisindeki veri değiştirilmeden iletilir. \n \n \n > HHS Yönlenme Adresi \n hhsYonAdr \n AN1..1024 \n K \n Yönlendirmeli akış türünde GKD doğrulama bilgilerinin girilebilmesi için uygulamadan açılacak yönlendirme sayfasının adresi. Ayrık GKD akışında bu alan dönülmemelidir. \n \n \n > Yetkilendirme Tamamlanma Zamanı \n yetTmmZmn \n ISODateTime \n Z \n Yetkilendirme akışının tamamlanması gereken son zamanı gösterir.   HHS tarafından maksimum 5 dk içinde işlem tamamlanacak şekil zaman damgası oluşturulur. Zaman aşımı olduğunda HHS’nin GKD’ye izin vermeyecek şekilde hata mesajı vermesi gerekmektedir.  Rıza durumu Yetkilendirildi statüsüne geçene kadarki süredir. \n \n \n Ödeme Başlatma \n odmBsltm \n Kompleks: OdemeBaslatma \n Z \n \n \n \n > Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n >> Kimlik Türü \n kmlkTur \n AN1 \n Z \n TR.OHVPS.DataCode.KimlikTur  sıralı veri türü değerlerinden birini alır. \n \n \n >> Kimlik Verisi \n kmlkVrs \n AN1..30 \n Z \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır. TR.OHVPS.DataCode.KimlikTur  değerine göre uzunluk ve formatı değişir. \n \n \n >> Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n Z \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür. TR.OHVPS.DataCode.KurumKimlikTur  sıralı veri türü değerlerinden birini alır. \n \n \n >> Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n Z \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.   TR.OHVPS.DataCode.KurumKimlikTur  değerine göre uzunluk ve formatı değişir. \n \n \n >> Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur  sıralı veri türü değerlerinden birini alır  (B: Bireysel, K:Kurumsal) \n \n \n > İşlem Tutarı \n islTtr \n Kompleks:Tutar \n Z \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para Birimi.  Karekod akışında, FAST Karekod Veri Organizasyonundaki  53: (Para Birimi)  alanında tanımlı Para Birimi verisi kullanılır. \n \n \n >> Tutar \n ttr \n AN1..24 \n Z \n ÖBHS\'nin ön yüzde kullanıcıdan teyit aldığı tutar.   Karekod akışında, FAST Karekod Veri Organizasyonundaki  54: (Tutar)  alanında tanımlı Tutar verisi kullanılır.   Tutar alanı regex patterni şu şekildedir: \'^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$\' \n \n \n > Gönderen \n gon \n Kompleks:Hesap \n Z \n \n \n \n >> Ünvan \n unv \n AN3..140 \n Z \n Gönderenin ünvanıdır.  HHS, bu bilgiyi ÖBHS sisteminden gelen veri yerine FAST’a iletirken kendi sisteminden alabilir.   Tek seferlik ödeme dışında YÖS\'ün gönderen ünvanını göndermesi zorunludur. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n İ \n ÖBHS\'nin ön yüzünden daha önce kayıt altına alınmış hesaplar arasından seçtirdiği veya müşteriye girdiği IBAN’dır.  ÖBHS tarafından iletilmediği durumda, gönderen hesap bilgisini müşteri tarafından HHS’nin dijital kanalında GKD sonrasında seçilebilir. Bu amaçla ÖBHS arayüzünde HHS seçtirilmelidir.   GKD sonrası HHS ekranında seçilen Hesap Numarası POST işleminin yanıtında dönülemez ancak isteğe bağlı GET sorgusu ile dönülebilir.    Hesap Referansı kullanılıyorsa Hesap Numarası kullanılmayabilir.   Ödeme Sistemine doğrudan katılımcı olmayan ÖHS\'ler müşterilerine IBAN sunmadıkları için hspRef üzerinden ödeme başlatabilirler. Bu durumda hesap numarası boş olacaktır. \n \n \n >> Hesap Referansı \n hspRef \n AN5..40 \n İ \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid). YÖS bazında farklılaşması gerekmez.  ÖBHS’nin aynı zamanda HBHS olduğu durumda müşteri rızası tesis edilmiş bir hesabın referansı üzerinden de ödeme başaltılabilir.   GKD sonrası HHS ekranında seçilen Hesap Referansı POST işleminin yanıtında dönülemez ancak isteğe bağlı GET sorgusu ile dönülebilir.    Hesap Numarası kullanılıyorsa Hesap Referansı kullanılmayabilir.    Ödeme Sistemine doğrudan katılımcı olmayan ÖHS\'ler müşterilerine IBAN sunmadıkları için hspRef üzerinden ödeme başlatabilirler. Bu durumda hesap numarası boş olacaktır. \n \n \n > Alıcı \n alc \n Kompleks:Hesap \n Z \n \n \n \n >> Ünvan \n unv \n AN3..140 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen adres kaydı yaptırmış olan alıcının maskeli ad-soyadı veya maskeli ticari ünvan bilgisidir. Kolas’tan dönen “account owner” alanı kullanılmalıdır. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen ünvan bilgisidir. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n Z \n ÖBHS tarafından istek mesajında iletilip doğrulanan veya Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen alıcı maskeli IBAN bilgisidir. \n \n \n >> Kolay Adres \n kolas \n Kompleks:Kolas \n K \n \n \n \n >>> Kolas Türü \n kolasTur \n AN1 \n Z \n TR.OHVPS.DataCode.KolasTur  sıralı veri türü değerlerinden birini alır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n \n \n >>> Kolas Değeri \n kolasDgr \n AN7..50 \n Z \n Müşterinin eklediği, HHS (FAST katılımcısı) tarafından doğrulanmış Kolay Adres değeridir. Alabileceği değerler BKM “Kolay Adresleme Sistemi Uygulama Kuralları” belgesinde tanımlıdır.  Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n \n \n >>> Kolas Referans Numarası \n kolasRefNo \n N12 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı KOLAS tarafından ilgili sorguya özel olarak üretilmiş referans numarasıdır. \n \n \n >>> Kolas Hesap Türü \n kolasHspTur \n AN1 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı hesap türü bilgisidir:   TR.OHVPS.DataCode.KolasHspTur  sıralı veri değerlerinden birini alır. \n \n \n > Karekod \n kkod \n Kompleks:Karekod \n K \n \n \n \n >> Akış Türü \n aksTur \n AN2 \n Z \n TR.OHVPS.DataCode.KareKodAksTur  sıralı veri değerlerinden birini alır. Kolay Adresi Sistemi ile birlikte kullanılmaz. \n \n \n >> Referansı \n kkodRef \n AN1..12 \n K \n Karekod referans numarasını  gösterir. \n \n \n >> Üretici Kodu \n kkodUrtcKod \n AN4 \n Z \n Karekod üreticisinin kodu.  Ödeme Hizmeti Sağlayıcıları ve TCMB tarafından uygun görülen ödeme sistemi işleticisi TR Karekod üretebilmek için BKM’ye kayıt başvurusu yaparak karekod üretici kodu alabileceklerdir. Bankalar EFT kodlarını kullanacak olup ayrıca kayıt yaptırmalarına gerek bulunmamaktadır. 4 haneden kısa değerlerin sol tarafı ’0’ karakteri ile tamamlanmalıdır. \n \n \n > Ödeme Ayrıntıları \n odmAyr \n Kompleks: OdemeAyrintilari \n Z \n \n \n \n >> Ödeme Kaynağı \n odmKynk \n AN1 \n Z \n Ödemenin başlatıldığı kaynağı belirtir.  TR.OHVPS.DataCode.OdemeKaynak  sıralı veri değerlerinden “O” değerini alır. “O” değeri “Açık bankacılık aracılığı ile gönderilen ödemelerde kullanılır.” anlamını taşımaktadır. \n \n \n >> Ödeme Amacı \n odmAmc \n AN2 \n Z \n TR.OHVPS.DataCode.OdemeAmaci  sıralı veri değerlerinden birini alır. Karekod akışında, FAST Karekod Veri Organizasyonundaki 62-08: alanında tanımlı Ödeme Amacı verisi kullanılır. \n \n \n >> Referans Bilgisi \n refBlg \n AN1..140 \n K \n Ödemeye özel  Referans Bilgisi  alanıdır. Karekod işlemi değil ise zorunludur.  -\tKişiden kişiye fon aktarımlarda: Gün içerisinde ÖHK özelinde, her işleme özel biricik olarak oluşturulan referans bilgisidir.  Karekod P2P akışı için referans bilgisi (Karekod referans numarası değil, işleme özel üretilecek referans bilgisidir.) YÖS tarafından atanacaktır.  -\tE-ticaret işlemlerinde sipariş/takip numarası/müşteri/abone numarası  - İşyeri Ödemesi Karekod akışında, FAST Karekod Veri Organizasyonundaki  -\t62-01: alanında tanımlı Fatura Numarası   -\t62-06: alanında tanımlı Müşteri Numarası   verilerinden biri kullanılır. \n \n \n >> Açıklama \n odmAcklm \n AN1..200 \n İ \n ÖBHS’nin ÖHK’dan aldığı ya da kendisinin atadığı işlem açıklaması bilgisi.  FAST/PÖS sistemi üzerinden yapılan ödemeler için açıklama bilgisi girilirse boşluk karakteri girilerek geçilemez. En az bir alfasayısal karakter girilmesi zorunludur. \n \n \n >> ÖHK Mesaj Alanı \n ohkMsj \n AN1..200 \n İ \n HHS’nin ÖHK’ya göstermek üzere ilettiği mesaj. \n \n \n >> Talimat Tarihi \n tlmtTrh \n ISODate \n Z \n ÖHK tarafından talep edilen, ödeme gerçekleşme zamanıdır. Talimat verilen günün tarihinden minimum 1 gün sonrası,maksimum ise 1 yıl sonrası olacak şekilde seçilebilir. Belirtilen tarih aralığı dışında ÖBHS tarafından talimat tarihi iletilmesi durumunda HHS tarafından  TR.OHVPS.Business.InvalidOrderDateRange  hatası verilmelidir. \n 7.3.\tADIM 2- İleri Tarihli Ödeme Emri Rızasının Yetkilendirilmesi \n   \n Şekil : İleri Tarihli Ödeme Emri Rızasının Yetkilendirilmesi \n ÖBHS, ÖHK’nın ileri tarihli ödeme emrini yetkilendirmesi isteğini iletir. Ödeme emrinin yetkilendirilmesi, HHS tarafından gerçekleştirilen Yönlendirme veya Ayrık GKD yöntemiyle yapılır. \n \n \n Yönlendirmeli doğrulama akışında , ÖBHS ÖHK’yı HHS’ye yönlendirir. \n \n ÖBHS tarafından yönlendirme, bir önceki adımdaki RizaNo’yu içerir. \n Yönlendirmenin RizaNo’yu içermesi sayesinde, HHS hangi ödeme emriyle ilişkili olarak yönlendirme yapıldığını ilişkilendirebilir. \n HHS, ÖHK için GKD sürecini işletir. \n \n ÖHK’yı doğrularsa, \n \n ÖHK -bir önceki adımda seçmediyse- borçlu hesabını seçer. \n HHS, ileri tarihli ödeme emri rıza kaynağının durumunu “Yetkilendirildi” olarak günceller. \n HHS, ÖHK’yı “olumlu yönlendirme akışı” ile ÖBHS tarafından tanımlanan yönlendirme adresine yönlendirir: \n \n \n \n yonAdr?rizaDrm=Y&yetKod=xx&rizaNo=yy&rizaTip=I&drmKod=zzz\n \n ÖHK’yı doğrulayamazsa, \n1. HHS, ileri tarihli ödeme emri rıza kaynağının durumunu “Yetki İptal” olarak günceller. \n2. HHS, ÖHK’yı “olumsuz yönlendirme akışı” ile ÖBHS tarafından tanımlanan yönlendirme adresine yönlendirir: \n yonAdr?rizaDrm=I&rizaNo=yy&rizaTip=I&drmKod=zzz\n \n HHS tarafında oluşabilecek bir hata durumunun YÖS’e aktarılması gerektiği durumlar olabilir. Bu durumda yonlendirme adresinde hata kodu parametresi zorunlu olarak iletilmelidir. \nHata açıklamalarının neler olabileceği ve YÖS’ün kendi uygulamasında bu hatayı ne şekilde göstereceği aşağıda tariflenmiştir. \n yonAdr?rizaDrm=I&rizaNo=yy&rizaTip=I&rizaIptDtyKod=11&drmKod=zzz\n \n URL’de iletilen “Rıza İptal Detay Kodu” Rıza durumları bölümünde (4. Bölüm) belirtilen hata kodları ile aynı olacak şekilde tasarlanmıştır. GKD sırasında yapılması gereken kontroller 5.3 bölümünde detaylandırılmıştır. \n \n Ayrık doğrulama akışında , HHS, ÖHK’nın ileri tarihli ödeme emri rızasını başlattığı uygulamadan farklı olabilecek bir “doğrulama” uygulamasında işlemi doğrulamasını ister.\n \n Ayrık akış ÖBHS’nin farklı bir kanal kullanarak yetkilendirme isteği göndermesiyle başlatılır. \n Bu yetkilendirme isteği, yetkilendirilecek ödeme emri rızasının eşleştirileceği ÖHK’nın bulunması için ilgili veriyi taşır. \n HHS, ÖHK’yı doğrular. \n ÖHK, bir önceki adımda seçmediyse- borçlandırılacak hesabını seçer. \n HHS, ileri tarihli ödeme emri rıza kaynağının durumunu “Yetkilendirildi” olarak günceller. \n \n \n \n Başarılı GKD sonrasında (rizaDrm=’Y’) ilgili rıza nesnesi için (belirli bir rizaNo) yetkilendirme kodunun (yetKod) alınmasının ardından erişim belirteci erişim adresine POST çağrısı yapılarak yetkilendirme kodu karşılığında erişim belirteci ve yenileme belirteci alınır. POST /erişim-belirteci erişim noktası EK-3’te açıklanmıştır. \n Erişim belirteci alındıktan sonra; HHS, ileri tarihli ödeme emri rıza kaynağının durumunu “Yetki Kullanıldı” olarak günceller. \n 7.4.\tADIM 2.1 – İleri Tarihli Ödeme Emri Rızasının Sorgulanması (isteğe bağlı) \n   \n Şekil 7: “IleriTarihliOdemeEmriRizasi” nesnesinin sorgulanması (isteğe bağlı) \n GKD işleminin başarıyla tamamlanıp İleri Tarihli Ödeme Emri Rızasının yetkilendirilmesi esnasında, gönderen hesap seçiminin HHS ekranında yapıldığı durumlar olabilir. Bu durumlarda ileri tarihli ödeme emri isteğinde gönderen hesap bilgileri alanının zorunlu olması nedeniyle,  IleriTarihliOdemeEmriRizasi  nesnesi sorgulanarak gönderen hesap bilgileri (hesap numarası ve/veya hesap referansı) alınmalıdır. HHS, “ ADIM 2 -Ileri Tarihli Ödeme Emri Rızasının Yetkilendirilmesi ” akışında ÖHK’nın hesapları arasında seçim yapmasını ve seçilen hesap bilgisinin  IleriTarihliOdemeEmriRizasi  nesnesine işler. \n \n Sorgulama yapılan İleri Tarihli Ödeme Emri HHS tarafında bulunmuyor ise  "TR.OHVPS.Resource.NotFound"  hatası dönülür. \n \n GET /ileri-tarihli-odeme-emri-rizasi/{RizaNo} \n ÖBHS, mevcut durumunu kontrol etmek için, oluşturulan bir  IleriTarihliOdemeEmriRizasi  kaynağının durumunu isteğe bağlı olarak alabilir. \n Durum \n IleriTarihliOdemeEmriRizasi  kaynağı için kullanılabilecek durum göstergeleri şu şekildedir: \n \n Yetki Bekleniyor \n Yetkilendirildi \n Yetki Kullanıldı \n Yetki Ödeme Emrine/Talimata Dönüştü \n Yetki Sonlandırıldı \n Yetki İptal \n \n İleri Tarihli Ödeme emri rıza durum değişiklikleri 4.2 bölümünde detaylandırılmıştır. \n BAŞARILI YANIT: \n GET /ileri-tarihli-odeme-emri-rizasi/{rizaNo}  yanıtının (RESPONSE) gövdesinde (BODY)  “IleriTarihliOdemeEmriRizasiİstegi” nesnesi kullanılır. İstek başarıyla sonuçlanırsa HHS kaynak sunucusunda “IleriTarihliOdemeEmriRizasi” nesnesi oluşturulur. \n Gönderen Hesap Bilgisinin, ADIM 2 (İleri Tarihli Ödeme Emri Rızasının Yetkilendirilmesi) sonrasında HHS ekranından seçildiği akışta “IleriTarihliOdemeEmriRizasi” nesnesi güncellenir ve ÖBHS  GET /ileri-tarihli-odeme-emri-rizasi/{rizaNo}  isteği yaparak güncel gönderen hesap bilgisi bilgisini de içeren “IleriTarihliOdemeEmriRizasi” nesnesini çekmelidir. \n 7.5.\tADIM 3- İleri Tarihli Ödeme Emrinin Oluşturulması \n   \n Şekil 8: İleri Tarihli Ödeme Emrinin Oluşturulması \n POST /ileri-tarihli-odeme-emri \n ÖHK’nın Güçlü Kimlik Doğrulama ile işlemi yetkilendirmesi sonrasında, ÖBHS OdemeEmri kaynağını oluşturur. \n İleri Tarihli Ödeme emri (IleriTarihliOdemeEmri) uygun ödeme kaynağına POST isteği yapılarak başlatılır. \n \n Erişim Belirteci kontrolü yapılır. Geçerli bir Erişim Belirteci yok ise  "TR.OHVPS.Connection.InvalidToken"  hatası dönülür. \n HHS; istek mesajında yer alan alanların ÖHVPS API İlke ve Kuralları dökümanında belirtilen şartları sağlayacak şekilde zorunluluk, uzunluk ve içerik kontrollerini yapar. (Zorunlu) Kontrollere istinaden hata oluşması durumunda  "TR.OHVPS.Resource.InvalidFormat"  hatası dönülür. \n HHS, hhsKod’un kendisine ait olduğunu ve istek başlığındaki x-aspsp-code değeri ile aynı olduğunu kontrol eder. Farklı olması durumunda  ”TR.OHVPS.Connection.InvalidASPSP”  hatası dönülür. \n HHS, yosKod’un geçerli bir Ödeme Hizmeti Sağlayıcısı Kodu olduğunu ve istek başlığındaki x-tpp-code değeri ile aynı olduğunu kontrol eder. Farklı olması durumunda  ”TR.OHVPS.Connection.InvalidTPP”  hatası dönülür. \n Rıza durumu kontrol edilir.\n \n B: Yetki Bekleniyor, Y: Yetkilendirildi  ya da E: Yetki Ödeme Emrine Dönüştü ise  “TR.OHVPS.Resource.ConsentMismatch”  hatası dönülür. \n I: Rıza İptal ya da S: Yetki Sonlandırıldı ise  ”TR.OHVPS.Resource.ConsentRevoked”  hatası dönülür. \n RizaDurumu “K: Yetki Kullanıldı” ise kontrollere devam edilir. \n \n \n POST /ileri-tarihli-odeme-emri-rizasi ile POST /ileri-tarihli-odeme-emri isteklerinde istek alanların aynı olması beklenmektedir. HHS tarafından kontrolü sağlanmalıdır. İleri Tarihli Ödeme Emri rızasında gönderilen değerlerden farklı bir değer gönderildiği durumda  “TR.OHVPS.Business.FieldMismatch”  hatası dönülür. \n \n Yukarıdaki kontroller tamamlandıktan sonra, içerisinde odmEmriNo ve odmDrm değişkenleri de bulunan IleriTarihliOdemeEmri nesnesi ÖBHS’ye döner ve RizaDurumu değişkenin değeri “Yetki Ödeme Emrine/Talimata Dönüştü” olarak güncellenir. \n \n POST verisindeki Gönderen Hesap Numarası ve Alıcı Hesap Numarasının aynı bankaya aitse HAVALE değilse FAST veya PÖS iş akışına geçilir. \n \n BAŞARILI İSTEK: \n Tablo 9: “IleriTarihliOdemeEmriIstegi” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n HHS tarafından ileri tarihli ödeme emri oluşturulması sırasında yapılması gereken kontrol ve işlemler \n FAST A01 PÖS M01 mesaj mapping \n \n \n \n \n Riza Bilgileri \n rzBlg \n Kompleks: RizaBilgileri \n Z \n \n \n \n \n \n > Rıza No \n rizaNo \n AN1..128 \n Z \n OdemeEmriRızasi nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n \n \n > Oluşturma Zamanı \n olusZmn \n ISODateTime \n Z \n OdemeEmriRizasi nesnesinin oluşturulma zamanı \n \n \n \n \n > Rıza Durumu \n rizaDrm \n AN1 \n Z \n TR.OHVPS.DataCode.RizaDurumu  sıralı veri tipini değerlerinden birini alır. \n \n \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n HHS, hhsKod’un kendisine ait olduğunu ve istek başlığındaki x-aspsp-code değeri ile aynı olduğunu kontrol eder. \n Gönderen katılımcı kodu (yani bankanın FAST/PÖS’teki Katılımcı kodu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n HHS, yosKod’un geçerli bir Ödeme Hizmeti Sağlayıcısı Kodu olduğunu ve istek başlığındaki x-tpp-code değeri ile aynı olduğunu kontrol eder. \n YosKod \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n \n \n >Yetkilendirme Yöntemi \n yetYntm \n AN1 \n Z \n TR.OHVPS.DataCode.GkdTur  sıralı veri türü değerlerinden birini alır. \n \n \n \n \n >Yönlendirme Adresi \n yonAdr \n AN1..1024 \n K \n Yönlendirmeli güçlü kimlik doğrulama için zorunludur. HHS, müşteri uygulama / tarayıcısını yönlendirmeli akışta bu alanda belirtilen YÖS adresine yönlendirir. \n \n \n \n \n >Ayrık GKD \n ayrikGkd \n Kompleks:AyrikGkd \n K \n Ayrık güçlü kimlik doğrulama için zorunlu. \n yetYntm = A gönderilmiş ise ayrikGkd nesnesinin dolu gönderilmesi zorunludur. yetYntm = Y için bu nesne iletilmemelidir. \n \n \n \n >>OHK Tanım Tip \n ohkTanimTip \n AN8 \n K \n ÖHK\'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım tipleridir. İstek içerisindeki veri değiştirilmeden iletilir. \n \n \n \n \n >>OHK Tanım Değer \n ohkTanimDeger \n AN1..30 \n K \n ÖHK\'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım değeridir. ohkTanimTip\'i ile uyumlu değerdir.  İstek içerisindeki veri değiştirilmeden iletilir. \n \n \n \n \n >HHS Yönlenme Adresi \n hhsYonAdr \n AN1..1024 \n K \n Yönlendirmeli akış türünde GKD doğrulama bilgilerinin girilebilmesi için uygulamadan açılacak yönlendirme sayfasının adresi. Ayrık GKD akışında bu alan dönülmemelidir. \n \n \n \n \n >Yetkilendirme Tamamlanma Zamanı \n yetTmmZmn \n ISODateTime \n Z \n Yetkilendirme akışının tamamlanması gereken son zamanı gösterir.   Rıza durumu Yetkilendirildi statüsüne geçene kadarki süredir. \n \n \n \n \n Ödeme Başlatma \n odmBsltm \n Kompleks: OdemeBaslatma \n Z \n \n \n \n \n \n > Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n \n \n >> Kimlik Türü \n kmlkTur \n AN1 \n Z \n TR.OHVPS.DataCode.KimlikTur  sıralı veri türü değerlerinden birini alır. \n Çerçeve sözleşme kapsamındaki ödemelerde kullanımı zorunludur. İleri Tarihli Ödeme Emri Rizası Nesnesindeki Kimlik Numarası Türü verisi ile aynı olmalıdır. Kurum adına yapılan (ticari) ödemelerde, kurum adına işlem yapan kullanıcının kimlik türünün bu alanda gönderilmesi zorunludur. \n \n \n \n >> Kimlik Verisi \n kmlkVrs \n AN1..30 \n Z \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır. TR.OHVPS.DataCode.KimlikTur  değerine göre uzunluk ve formatı değişir. \n Çerçeve sözleşme kapsamındaki ödemelerde kullanımı zorunludur. HHS, ÖBHS tarafından iletilmesi durumunda Kimlik Verisi üzeriden çapraz kontroller uygulamalı ve Kimlik Verisini temel alarak GKD gerçekleştirmelidir. İleri Tarihli Ödeme Emri Rizası Nesnesindeki Kimlik Numarası verisi ile aynı olmalıdır. Gerçek kişi tarafından yapılan ödemelerde, 1. HHS, Gönderen Adı ve Gönderen Hesap Numarasını ileri tarihli ödeme emri isteğinde (Havale/FAST/PÖS) gönderir. - Gönderen Adı ve diğer tüm müşteri bilgileri, Kimlik Numarası üzerinden elde edillir. Pasaport numarasına ilişkin kontroller HHS\'nin halihazırda kullandığı veri, akış ve tabi olduğu diğer düzenlemelerdeki işleyiş ile aynı şekilde ele alınmalıdır. Kurum adına yapılan (ticari) ödemelerde, kurum adına işlem yapan kullanıcının kimlik verisi bu alanda gönderilebilmesi zorunludur. \n GonKimN / Psp \n \n \n >> Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür. TR.OHVPS.DataCode.KurumKimlikTur  sıralı veri türü değerlerinden birini alır. \n Kurum adına yapılan (ticari) ödemelerde kullanımı zorunludur. İleri Tarihli Ödeme Emri Rizası Nesnesindeki Kurum Kimlik Türü verisi ile aynı olmalıdır. \n \n \n \n >> Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.   TR.OHVPS.DataCode.KurumKimlikTur  değerine göre uzunluk ve formatı değişir. \n Kurum adına yapılan (ticari) ödemelerde kullanımı zorunludur. İleri Tarihli Ödeme Emri Rizası Nesnesindeki Kurum Kimlik Verisi ile aynı olmalıdır. \n GonKimN / VKN \n \n \n >> Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur  sıralı veri türü değerlerinden birini alır  (B: Bireysel, K:Kurumsal) \n Kurum adına yapılan ödemelerde K değerini alır. Kurum Kimlik Türü ve Kurum Kimlik Verisi alanlarının giilmiş olduğu çapraz olarak kontrol edilir.  İleri Tarihli Ödeme Emri Rizası Nesnesindeki ÖHK Türü ile aynı olmalıdır. \n \n \n \n > İşlem Tutarı \n islTtr \n Kompleks:Tutar \n Z \n \n \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para Birimi.  Karekod akışında, FAST Karekod Veri Organizasyonundaki  53: (Para Birimi)  alanında tanımlı Para Birimi verisi kullanılır. \n İleri Tarihli Ödeme Emri Rizası Nesnesindeki Para Birimi verisi ile aynı olmalıdır. \n \n \n \n >> Tutar \n ttr \n AN1..24 \n Z \n ÖBHS\'nin ön yüzde kullanıcıdan teyit aldığı tutar.   Karekod akışında, FAST Karekod Veri Organizasyonundaki  54: (Tutar)  alanında tanımlı Tutar verisi kullanılır.   Tutar alanı regex patterni şu şekildedir: \'^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$\' \n İleri Tarihli Ödeme Emri Rizası Nesnesindeki İşlem Tutarı verisi ile aynı olmalıdır. HHS işlem tutarı ödeme mesajında (Havale/FAST/PÖS) aynen taşınmak durumundadır. \n Ttr \n \n \n > Gönderen \n gon \n Kompleks:Hesap \n Z \n \n \n \n \n \n >> Ünvan \n unv \n AN3..140 \n Z \n Gönderen kişinin ad soyad ya da ticari ünvan bilgisi. \n HHS ve ÖBHS verisi tutarlı olmalıdır.  ÖBHS verisi ile HHS verisinin farklılaşması durumunun ise risk değerlendirme sistemlerine girdi olarak kullanması tavsiye edilir. \n GonAd \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n K \n ÖBHS\'nin ön yüzünden seçtirdiği/kullanıcıya girdiği IBAN Hesap numarası ya da Hesap Referansı alanlarından en az birinin dolu olarak gelmesi gerekmektedir. \n İleri Tarihli Ödeme Emri Rizası Yanıtı Nesnesindeki Gönderen Hesap Numarası verisi ile aynı olmalıdır. \n GonHesN \n \n \n >> Hesap Referansı \n hspRef \n AN5..40 \n K \n ÖBHS’nin aynı zamanda HBHS olduğu durumda müşteri rızası tesis edilmiş bir hesabın referansı üzerinden de ödeme başlatılabilir. GKD sonrası HHS ekranında seçilen Hesap Referansı POST işleminin yanıtında dönülemez ancak isteğe bağlı GET sorgusu ile dönülebilir. Hesap Numarası kullanılıyorsa Hesap Referansı kullanılmayabilir.   Ödeme Sistemine doğrudan katılımcı olmayan ÖHS\'ler müşterilerine IBAN sunmadıkları için hspRef üzerinden ödeme başlatabilirler. Bu durumda hesap numarası boş olacaktır. \n \n \n \n \n > Alıcı \n alc \n Kompleks:Hesap \n Z \n \n \n \n \n \n >> Ünvan \n unv \n AN3..140 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen adres kaydı yaptırmış olan alıcının maskeli ad-soyadı veya maskeli ticari ünvan bilgisidir. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen ünvan bilgisidir. \n YÖS’ten alıcı ad soyad bilgisi geliyorsa ve HHS\'nin kontrolünden başarılı bir şekilde geçti ise HHS\'nin tekrar alıcı ad soyad bilgisi için giriş yaptırmasına gerek bulunmamaktadır. \n AlAd \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n Z \n Alıcının Hesap Numarası alanıdır (IBAN). Kolay Adres  sorgusunda dönülen adres kaydı yaptırmış olan alıcının maskeli IBAN bilgisidir. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen IBAN bilgisidir. Karekod akışında, FAST Karekod Veri Organizasyonundaki 30-01: alanında tanımlı İş Yeri IBAN verisi kullanılır. \n İleri Tarihli Ödeme Emri Rizası Yanıtı Nesnesindeki Alıcı Hesap Numarası verisi ile aynı olmalıdır.  Kontroller başarıyla sonuçlanırsa, bilgi FAST/PÖS AlHesN alanına doğrudan aktarır ve FAST/PÖS Alan Katılımcı Kodu (AlKK) olarak Alıcı HHS Kodu kullanılır.  KOLAS sorgusu sonucunda ileri tarihli ödeme emrinde iletilen maskeli bilgi ile HHS’nin kendi ileri tarihli ödeme emri rızası isteğinde tuttuğu KOLAS sorgusundan dönülen bilgi maskelenerek karşılaştırılır. Eğer aynı değilse uygun hata kodu dönülerek işlem sonlandırılır. \n AlHesN \n \n \n >> Kolay Adres \n kolas \n Kompleks:Kolas \n K \n \n \n \n \n \n >>> Kolas Türü \n kolasTur \n AN1 \n Z \n Müşterinin sorgulamak istediği Kolay Adres Tipi değeridir.  TR.OHVPS.DataCode.KolasTur  sıralı veri türü değerlerinden birini alır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n İleri Tarihli Ödeme Emri Rizası Yanıtı Nesnesindeki Kolay Adres Tipi verisi ile aynı olmalıdır. \n \n \n \n >>> Kolas Değeri \n kolasDgr \n AN7..50 \n Z \n Müşterinin eklediği, HHS (FAST katılımcısı) tarafından doğrulanmış Kolay Adres değeridir. Alabileceği değerler BKM “Kolay Adresleme Sistemi Uygulama Kuralları” belgesinde tanımlıdır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n İleri Tarihli Ödeme Emri Rizası Yanıtı Nesnesindeki Kolay Adres Değeri verisi ile aynı olmalıdır. \n FAST (KolasRef) \n \n \n >>> Kolas Referans Numarası \n kolasRefNo \n N12 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı KOLAS tarafından ilgili sorguya özel olarak üretilmiş referans numarasıdır. \n \n KolasRef ( hem FAST hem de PÖS için aynı) \n \n \n >>> Kolas Hesap Türü \n kolasHspTur \n AN1 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı hesap türü bilgisidir:   TR.OHVPS.DataCode.KolasHspTur  sıralı veri değerlerinden birini alır. \n \n \n \n \n > Karekod \n kkod \n Kompleks:Karekod \n K \n \n \n \n \n \n >> Akış Türü \n aksTur \n AN2 \n Z \n Karekod Akış Türü Karekod ödemesinin hangi akışla gerçekleştirildiğini gösterir.  Kolay Adresi Sistemi ile birlikte kullanılmaz.  01: FAST katılımcısından dinamik doğrulama hizmeti alınan işyeri ödemesi  02: FAST katılımcısından statik doğrulama hizmeti alınan işyeri ödemesi 03: Kişiden kişiye ödemeler \n İleri Tarihli Ödeme Emri Rizası Nesnesindeki Kare Kod Akış Türü verisi ile aynı olmalıdır. \n FAST: KrkdAksTur \n \n \n >> Referansı \n kkodRef \n AN1..12 \n K \n Karekod referans numarasını gösterir.  Okunan karekodda referans değeri varsa kullanılması zorunludur. Kolay Adresi Sistemi ile birlikte kullanılmaz. \n İleri Tarihli Ödeme Emri Rizası Nesnesindeki Karekod Referansı verisi ile aynı olmalıdır.  Çevrimiçi doğrulama hizmeti alınmayan statik karekodlar için Referans numarasının bulunmadığı durumlarda HHS tarafından “NONREF” ifadesi girilir. \n FAST: Karekod Referansı (KrkdRef) \n \n \n >> Üretici Kodu \n kkodUrtcKod \n AN4 \n Z \n Karekod üreticisinin kodu.  Ödeme Hizmeti Sağlayıcıları ve TCMB tarafından uygun görülen ödeme sistemi işleticisi TR Karekod üretebilmek için BKM’ye kayıt başvurusu yaparak karekod üretici kodu alabileceklerdir. Bankalar EFT kodlarını kullanacak olup ayrıca kayıt yaptırmalarına gerek bulunmamaktadır. 4 haneden kısa değerlerin sol tarafı ’0’ karakteri ile tamamlanmalıdır. \n \n \n \n \n > Ödeme Ayrıntıları \n odmAyr \n Kompleks: OdemeAyrintilari \n Z \n \n \n \n \n \n >> Ödeme Kaynağı \n odmKynk \n AN1 \n Z \n Ödemenin başlatıldığı kaynağı belirtir.  TR.OHVPS.DataCode.OdemeKaynak  sıralı veri değerlerinden “O” değeri atanarak iletilmelidir. “O” değeri “Açık bankacılık aracılığı ile gönderilen ödemelerde kullanılır.” anlamını taşımaktadır. \n İleri Tarihli Ödeme Emri Rizası Nesnesindeki Ödeme Kaynağı verisi ile aynı olmalıdır. HHS tarafından ödeme mesajında (FAST/PÖS) aynen taşınmak durumundadır. \n FAST/PÖS: OdmKynk \n \n \n >> Ödeme Amacı \n odmAmc \n AN2 \n Z \n TR.OHVPS.DataCode.OdemeAmaci  sıralı veri değerlerinden birini alır. \n İleri Tarihli Ödeme Emri Rizası Nesnesindeki Ödeme Amacı verisi ile aynı olmalıdır. HHS tarafından ödeme mesajında (FAST/PÖS) aynen taşınmak durumundadır. \n FAST (OdmAmc)/PÖS(OdmAmaci) \n \n \n >> Referans Bilgisi \n refBlg \n AN1..140 \n K \n Ödemeye özel  Referans Bilgisi  alanıdır. Karekod işlemi değil ise zorunludur.  -\tKişiden kişiye fon aktarımlarda: Gün içerisinde ÖHK özelinde, her işleme özel biricik olarak oluşturulan referans bilgisidir.  Karekod P2P akışı için referans bilgisi (Karekod referans numarası değil, işleme özel üretilecek referans bilgisidir.) YÖS tarafından atanacaktır.  -\tE-ticaret işlemlerinde sipariş/takip numarası/müşteri/abone numarası  -İşyeri Ödemesi Karekod akışında, FAST Karekod Veri Organizasyonundaki  -\t62-01: alanında tanımlı Fatura Numarası   -\t62-06: alanında tanımlı Müşteri Numarası   verilerinden biri kullanılır. \n İleri Tarihli Ödeme Emri Rizası Nesnesindeki Referans Bilgisi verisi ile aynı olmalıdır. \n RefBlg (Hem FAST hem de PÖS için aynı) \n \n \n >> Açıklama \n odmAcklm \n AN1..200 \n İ \n ÖBHS’nin ÖHK’dan aldığı ya da kendisinin atadığı işlem açıklaması bilgisi.  FAST/PÖS sistemi üzerinden yapılan ödemeler için açıklama bilgisi girilirse boşluk karakteri girilerek geçilemez. En az bir alfasayısal karakter girilmesi zorunludur. \n \n FAST/PÖS Acklm \n \n \n >> ÖHK Mesaj Alanı \n ohkMsj \n AN1..200 \n İ \n HHS’nin ÖHK’ya göstermek üzere ilettiği mesaj. \n \n \n \n \n >> Talimat Tarihi \n tlmtTrh \n ISODate \n Z \n ÖHK tarafından talep edilen, ödeme gerçekleşme zamanıdır. Talimat verilen günün tarihinden minimum 1 gün sonrası,maksimum ise 1 yıl sonrası olacak şekilde seçilebilir. \n \n \n \n \n \n BAŞARILI YANIT: \n POST işleminin RESPONSE gövdesini (BODY) oluşturan “IleriTarihliOdemeEmri” nesnesi Tablo-10’daki parametrelerden oluşur: \n Tablo 10: “IleriTarihliOdemeEmri” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n \n \n \n \n Riza Bilgileri \n rzBlg \n Kompleks: RizaBilgileri \n Z \n \n \n \n > Rıza No \n rizaNo \n AN1..128 \n Z \n OdemeEmriRızasi nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n > Oluşturma Zamanı \n olusZmn \n ISODateTime \n Z \n OdemeEmriRizasi nesnesinin oluşturulma zamanıdır. \n \n \n > Rıza Durumu \n rizaDrm \n AN1 \n Z \n TR.OHVPS.DataCode.RizaDurumu  sıralı veri tipini değerlerinden birini alır. \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n > Yetkilendirme Yöntemi \n yetYntm \n AN1 \n Z \n TR.OHVPS.DataCode.GkdTur  sıralı veri türü değerlerinden birini alır. \n \n \n > Yönlenme Adresi \n yonAdr \n AN1..1024 \n Z \n Yönlendirmeli güçlü kimlik doğrulama için zorunlu. HHS, müşteri uygulama / tarayıcısını yönlendirmeli akışta bu alanda belirtilen YÖS adresine yönlendirir. \n \n \n > Ayrık GKD \n ayrikGkd \n Kompleks:AyrikGkd \n K \n Ayrık güçlü kimlik doğrulama için zorunlu. \n \n \n >> OHK Tanım Tip \n ohkTanimTip \n AN8 \n K \n ÖHK\'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım tipleridir. İstek içerisindeki veri değiştirilmeden iletilir. \n \n \n >> OHK Tanım Değer \n ohkTanimDeger \n AN1..30 \n K \n ÖHK\'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım değeridir. ohkTanimTip\'i ile uyumlu değerdir.  İstek içerisindeki veri değiştirilmeden iletilir. \n \n \n > HHS Yönlenme Adresi \n hhsYonAdr \n AN1..1024 \n K \n Yönlendirmeli akış türünde GKD doğrulama bilgilerinin girilebilmesi için uygulamadan açılacak yönlendirme sayfasının adresi. Ayrık GKD akışında bu alan dönülmemelidir. \n \n \n > Yetkilendirme Tamamlanma Zamanı \n yetTmmZmn \n ISODateTime \n Z \n Yetkilendirme akışının tamamlanması gereken son zamanı gösterir.   Rıza durumu Yetkilendirildi statüsüne geçene kadarki süredir. \n \n \n Emir Bilgileri \n emrBlg \n Kompleks: EmirBilgileri \n Z \n \n \n \n > Ödeme Emri Numarası \n odmEmriNo \n AN1..128 \n Z \n IleriTarihliOdemeEmri nesnesinin UID\'sidir. IleriTarihliOdemeEmri İlişkin sorgular bu ID üzerinden yapılır. \n \n \n > Ödeme Emri Zaman \n odmEmriZmn \n ISODateTime \n Z \n IleriTarihliOdemeEmri nesnesinin oluşturulduğu zaman bilgisi. \n \n \n Ödeme Başlatma \n odmBsltm \n Kompleks: OdemeBaslatma \n Z \n \n \n \n > Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n >> Kimlik Türü \n kmlkTur \n AN1 \n Z \n TR.OHVPS.DataCode.KimlikTur  sıralı veri türü değerlerinden birini alır. \n \n \n >> Kimlik Verisi \n kmlkVrs \n AN1..30 \n Z \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır. TR.OHVPS.DataCode.KimlikTur  değerine göre uzunluk ve formatı değişir. \n \n \n >> Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür. TR.OHVPS.DataCode.KurumKimlikTur  sıralı veri türü değerlerinden birini alır. \n \n \n >> Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.   TR.OHVPS.DataCode.KurumKimlikTur  değerine göre uzunluk ve formatı değişir. \n \n \n >> Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur  sıralı veri türü değerlerinden birini alır  (B: Bireysel, K:Kurumsal) \n \n \n > İşlem Tutarı \n islTtr \n Kompleks:Tutar \n Z \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para Birimi.  Karekod akışında, FAST Karekod Veri Organizasyonundaki  53: (Para Birimi)  alanında tanımlı Para Birimi verisi kullanılır. \n \n \n >> Tutar \n ttr \n AN1..24 \n Z \n ÖBHS\'nin ön yüzde kullanıcıdan teyit aldığı tutar.   Karekod akışında, FAST Karekod Veri Organizasyonundaki  54: (Tutar)  alanında tanımlı Tutar verisi kullanılır.    Tutar alanı regex patterni şu şekildedir: \'^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$\' \n \n \n > Gerçekleşen İşlem Tutarı \n grckIslTtr \n Kompleks:GerceklesenTutar \n K \n Kısmi ödeme gerçekleştiren işlemler özelinde gerçekleşen tutar bilgisi. odmDrm:01 ,02 ve 06 olduğu durumda gönderilmesi zorunludur. \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para Birimi.  Karekod akışında, FAST Karekod Veri Organizasyonundaki  53: (Para Birimi)  alanında tanımlı Para Birimi verisi kullanılır. \n \n \n >> Tutar \n ttr \n AN1..24 \n Z \n Talimat gerçekleştiğinde ödeme yapılan tutar bilgisi.   Karekod akışında, FAST Karekod Veri Organizasyonundaki  54: (Tutar)  alanında tanımlı Tutar verisi kullanılır.    Tutar alanı regex patterni şu şekildedir: \'^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$\' \n \n \n > Gönderen \n gon \n Kompleks:Hesap \n Z \n \n \n \n >> Ünvan \n unv \n AN3..140 \n Z \n Gönderen kişinin ad soyad ya da ticari ünvan bilgisi. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n K \n ÖBHS tarafından iletilip doğrulanan veya HHS ekranında seçilen Gönderen Hesap Numarası dönülür. \n \n \n >> Hesap Referansı \n hspRef \n AN5..40 \n K \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid)  YÖS bazında farklılaşması gerekmez. ÖBHS’nin aynı zamanda HBHS olduğu durumda müşteri rızası tesis edilmiş bir hesabın referansı üzerinden de ödeme başaltılabilir. GKD sonrası HHS ekranında seçilen Hesap Referansı POST işleminin yanıtında dönülemez ancak isteğe bağlı GET sorgusu ile dönülebilir. Hesap Numarası kullanılıyorsa Hesap Referansı kullanılmayabilir.  Ödeme Sistemine doğrudan katılımcı olmayan ÖHS\'ler müşterilerine IBAN sunmadıkları için hspRef üzerinden ödeme başlatabilirler. Bu durumda hesap numarası boş olacaktır. \n \n \n > Alıcı \n alc \n Kompleks:Hesap \n Z \n \n \n \n >> Ünvan \n unv \n AN3..140 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen adres kaydı yaptırmış olan alıcının maskeli ad-soyadı veya maskeli ticari ünvan bilgisidir. Kolas’tan dönen “account owner” alanı kullanılmalıdır. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen ünvan bilgisidir. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n Z \n Alıcının Hesap Numarası alanıdır (IBAN). Kolay Adres  sorgusunda dönülen adres kaydı yaptırmış olan alıcının maskeli IBAN bilgisidir. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen IBAN bilgisidir. Karekod akışında, FAST Karekod Veri Organizasyonundaki 30-01: alanında tanımlı İş Yeri IBAN verisi kullanılır. \n \n \n >> Kolay Adres \n kolas \n Kompleks:Kolas \n K \n \n \n \n >>> Kolas Türü \n kolasTur \n AN1 \n Z \n Müşterinin sorgulamak istediği Kolay Adres Tipi değeridir.  TR.OHVPS.DataCode.KolasTur  sıralı veri türü değerlerinden birini alır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n \n \n >>> Kolas Değeri \n kolasDgr \n AN7..50 \n Z \n Müşterinin eklediği, HHS (FAST katılımcısı) tarafından doğrulanmış Kolay Adres değeridir. Alabileceği değerler BKM “Kolay Adresleme Sistemi Uygulama Kuralları” belgesinde tanımlıdır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n \n \n >>> Kolas Referans Numarası \n kolasRefNo \n N12 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı KOLAS tarafından ilgili sorguya özel olarak üretilmiş referans numarasıdır. \n \n \n >>> Kolas Hesap Türü \n kolasHspTur \n AN1 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı hesap türü bilgisidir:   TR.OHVPS.DataCode.KolasHspTur  sıralı veri değerlerinden birini alır. \n \n \n > Karekod \n kkod \n Kompleks:Karekod \n K \n \n \n \n >> Akış Türü \n aksTur \n AN2 \n Z \n Karekod Akış Türü Karekod ödemesinin hangi akışla gerçekleştirildiğini gösterir.  Kolay Adresi Sistemi ile birlikte kullanılmaz.  01: FAST katılımcısından dinamik doğrulama hizmeti alınan işyeri ödemesi  02: FAST katılımcısından statik doğrulama hizmeti alınan işyeri ödemesi 03: Kişiden kişiye ödemeler \n \n \n >> Referansı \n kkodRef \n AN1..12 \n K \n Karekod referans numarasını gösterir.  Okunan karekodda referans değeri varsa kullanılması zorunludur. Kolay Adresi Sistemi ile birlikte kullanılmaz. \n \n \n >> Üretici Kodu \n kkodUrtcKod \n AN4 \n Z \n Karekod üreticisinin kodu.  Ödeme Hizmeti Sağlayıcıları ve TCMB tarafından uygun görülen ödeme sistemi işleticisi TR Karekod üretebilmek için BKM’ye kayıt başvurusu yaparak karekod üretici kodu alabileceklerdir. Bankalar EFT kodlarını kullanacak olup ayrıca kayıt yaptırmalarına gerek bulunmamaktadır. 4 haneden kısa değerlerin sol tarafı ’0’ karakteri ile tamamlanmalıdır. \n \n \n > Ödeme Ayrıntıları \n odmAyr \n Kompleks: OdemeAyrintilari \n Z \n \n \n \n >> Ödeme Kaynağı \n odmKynk \n AN1 \n Z \n Ödemenin başlatıldığı kaynağı belirtir.  TR.OHVPS.DataCode.OdemeKaynak  sıralı veri değerlerinden “O”  değerini alır. “O” değeri “Açık bankacılık aracılığı ile gönderilen ödemelerde kullanılır.” anlamını taşımaktadır. \n \n \n >> Ödeme Durumu \n odmDrm \n AN2 \n Z \n TR.OHVPS.DataCode.OdemeDurumu  sıralı veri değerlerinden birini alır.      Ödeme Durumu alanı ile ilgili olarak HHS’ler tarafından YÖS’lere  IleriTarihliOdemeEmri servisi yanıtında  04:Onayda Bekliyor, 05:Ödeme Bekleniyor yanıtları gönderilebilir. 04:Onayda Bekliyor  ve  05:Ödeme Bekleniyor  durumları oluştuktan sonra YÖS tarafından ileri tarihli ödeme emri sorgulaması yapılarak ödeme durumunun güncel değeri öğrenilir. Güncel değerler  01:Gerçekleşti,03:Gerçekleşmedi , 06:Kısmen Gerçekleşti  ve  07:İptal Edildi  durumları olabilir. \n \n \n >> Ödeme Amacı \n odmAmc \n AN2 \n Z \n TR.OHVPS.DataCode.OdemeAmaci  sıralı veri değerlerinden birini alır. \n \n \n >> Referans Bilgisi \n refBlg \n AN1..140 \n K \n Ödemeye özel  Referans Bilgisi  alanıdır. Karekod işlemi değil ise zorunludur.  -\tKişiden kişiye fon aktarımlarda: Gün içerisinde ÖHK özelinde, her işleme özel biricik olarak oluşturulan referans bilgisidir.  Karekod P2P akışı için referans bilgisi (Karekod referans numarası değil, işleme özel üretilecek referans bilgisidir.) YÖS tarafından atanacaktır.  -\tE-ticaret işlemlerinde sipariş/takip numarası/müşteri/abone numarası  - İşyeri Ödemesi Karekod akışında, FAST Karekod Veri Organizasyonundaki  -\t62-01: alanında tanımlı Fatura Numarası   -\t62-06: alanında tanımlı Müşteri Numarası   verilerinden biri kullanılır. \n \n \n >> Açıklama \n odmAcklm \n AN1..200 \n İ \n ÖBHS’nin ÖHK’dan aldığı ya da kendisinin atadığı işlem açıklaması bilgisi.  FAST/PÖS sistemi üzerinden yapılan ödemeler için açıklama bilgisi girilirse boşluk karakteri girilerek geçilemez. En az bir alfasayısal karakter girilmesi zorunludur. \n \n \n >> ÖHK Mesaj Alanı \n ohkMsj \n AN1..200 \n İ \n HHS’nin ÖHK’ya göstermek üzere ilettiği mesaj. \n \n \n >> Ödeme Sistemi \n odmStm \n AN1 \n K \n TR.OHVPS.DataCode.OdemeSistemi  sıralı veri değerlerinden birini alır. odmDrm:01, 02 ve 06 olduğu durumda gönderilmesi zorunludur. \n \n \n >> Ödeme Sistem Numarası \n odmStmNo \n AN10..50 \n K \n Ödeme başarılı başlatıldıysa, ödemenin başlatıldığı sistemdeki referans numarası. Gerektiğinde ilgili ödeme sisteminde/HHS’de söz konusu ödemeye karşılık gelen mesajla bağlantı kurmada kullanılır.   Ödeme Hizmeti kullanıcısına işlemin takibi için gösterilebilir.  İşlemin yönlendirildiği ödeme sistemi FAST ya da PÖS ise sistemdeki ilgili mesajın Tarih, GönderenKatilimKodu ve SorguNumarasi değerlerinin birleşiminden oluşur. Bu 3 alan mevcutta kullanıldığı formatta aralarına dikey çizgi (Unicode U+2223) işareti koyularak, birleştirmeli ve iletilmelidir. Örn : Tarih|GönderenKatilimKodu|SorguNumarasi   Ödeme Havale/Virman işlemi ise HHS’nin üretmiş olduğu havale/virman numarasını içerir. Buradaki format da Tarih|GönderenKatilimKodu|Havale-virman numarası şeklinde olmalıdır. Havale/FAST/PÖS  ödeme yöntemleri için tarih alanı yyyy-aa-gg formatında 10 karakter olarak iletilmelidir. odmDrm:01, 02 ve 06 olduğu durumda gönderilmesi zorunludur. \n \n \n >> Talimat Tarihi \n tlmtTrh \n ISODate \n Z \n ÖHK tarafından talep edilen, ödeme gerçekleşme zamanıdır. Talimat verilen günün tarihinden minimum 1 gün sonrası,maksimum ise 1 yıl sonrası olacak şekilde seçilebilir. \n \n \n >> Gerçekleşen Ödeme Zamanı \n grckOdmZmn \n ISODateTime \n K \n Gerçekleşen ödeme işlemine ait zaman bilgisi. odmDrm:01, 02 ve 06 olduğu durumda gönderilmesi zorunludur. \n 7.6.\tADIM 3.1- İleri Tarihli Ödeme Emri Sorgusu (İsteğe bağlı) \n   \n Şekil 9: İleri Tarihli Ödeme Emri Sorgusu \n GET /ileri-tarihli-odeme-emri/{odmEmriNo} \n ÖBHS, bu erişim adresi aracılığıyla ileri tarihli ödeme emrini sorgulayabilir. Maksimum ödemenin gerçekleşeceği günün 15 gün sonrasına kadar sorgulama yapılabilir. Sonrasında yapılacak sorgulamalarda erişim belirtecinin yetki süresi sonlandığı için HHS  "TR.OHVPS.Resource.ConsentRevoked"  hatasını dönmelidir.\nİptal edilmiş talimatın bilgileri sorgulanmak istendiğinde de yine  "TR.OHVPS.Resource.ConsentRevoked"  hatası verilmelidir. \n YÖS sadece kendi uygulaması üzerinden verilmiş ileri tarihli ödemeleri sorgulayabilir. Erişim izni olmayan bir ödeme emri numarası ile sorgulama yaptığında HHS\'den  "TR.OHVPS.Resource.NotFound"  hatasını alır. \n Kısmi ödemelerde, kısmen gerçekleşen ödeme tutarı, "gerçekleşen işlem tutarı"(grckIslTtr) alanında gönderilirken, gönderilmesi talep edilen tutar alanı(rıza başlatma isteğinde ki tutar) da "işlem tutarı"(islTtr) alanında gönderilmeye devam edilmelidir. \n Gerçekleşen işlem tutarı ve para birimi, ödeme gerçekleşme zamanı alanları, ödeme gününden itibaren dolu olarak gelir. \n BAŞARILI YANIT: \n GET /ileri-tarihli-odeme-emri/{odmEmriNo} yanıtının (RESPONSE) gövdesinde (BODY)  “IleriTarihliOdemeEmri” nesnesi bulunur. İstek başarıyla sonuçlanırsa HHS kaynak sunucusunda Tablo-10’da yer alan parametreleri içeren “IleriTarihliOdemeEmri” nesnesi döner. \n 7.7.\tADIM 4- İleri Tarihli Ödeme Emri Rıza İptali \n \n Şekil 10: İleri Tarihli Ödeme Emri Rızası İptali \n DELETE /ileri-tarihli-odeme-emri-rizasi/{rizaNo} \n ÖBHS, bu erişim adresi aracılığıyla ileri tarihli ödeme emri rızasını iptal edebilir. \n DELETE /ileri-tarihli-odeme-emri-rizasi çağrısı, bir ÖBHS\'nin önceden oluşturulmuş bir ileri tarihli ödeme emri rızasını silmesine izin verir. Müşteri, rızasını HHS üzerinden iptal etmek yerine, ÖBHS üzerinden bu rızasını kaldırmak isteyebilir. \n \n Erişim belirteci kontrolü yapılır. Geçerli bir erişim belirteci yok ise HHS tarafından  ”TR.OHVPS.Connection.InvalidToken”  hatası dönülür. \n İstek başlığında yer alan X-Access-Token ile ilişkili rıza, silinen rizaNo bilgisi ile aynı olup olmadığı kontrol edilir. Farklı olması durumunda  "TR.OHVPS.Resource.NotFound"  hatası dönülür. \n İptal edilmek istenen İleri Tarihli Ödeme Emri Rızası HHS tarafında bulunmuyor ise  ”TR.OHVPS.ResourceNotFound”  hatası dönülür. \n Rıza durumu Yetki Sonlandırıldı - S veya Yetki İptal - I ise  "TR.OHVPS.Resource.ConsentRevoked"  hatası dönülür. \n İptal edilmek istenen İleri Tarihli Ödeme Emri Rızası’nın ödeme durumu 04 ya da 05 değil ise  ”TR.OHVPS.Business.TransactionCompleted”  hatası dönülür. \n \n Yukarıda kontroller başarıyla tamamlandıktan sonra sırasıyla aşağıdaki işlemler yapılır. \n \n odmDrm değeri 04 ve 05 olan kayıtlar 07 durum kodu ile güncellenmelidir. \n İlişkili ileri tarihli ödeme emri talimatı iptal edilmelidir. \n Rıza iptal edilmelidir. \n \n Bu API çağrısı, müşterinin ÖBHS üzerinden ileri tarihli ödeme emri rızasını iptal etmesine ve HHS nezdindeki ileri tarihli ödeme emri rızası nesnesinin silinmesini sağlar.\nMüşterinin ÖBHS’nin veri erişim iznini iptal etmesi durumunda ÖBHS, HHS’de mevcut olan IleriTarihliOdemeEmriRizasi\'na dair rıza ve talimat bilgilerini pratik olarak mümkün olan en kısa sürede silmelidir. Bu ise, ilgili kaynağa\nDELETE /ileri-tarihli-odeme-emri-rizasi/{RizaNo}\nçağrısı aracılığı ile yerine getirilir. \n Servis istek parametresi olarak sadece path’de iletilen Rıza No bilgisine ihtiyaç duymaktadır.\nÖHK rızası YÖS üzerinden başarı ile silindiğinde HTTP 204 response kodu ile işlem sonucu iletilir. Rıza tipi “I” yani “Yetki İptal” ve durum kodu "03" olarak güncellenir ve gnclZmn zaman damgası vurularak güncellenir.\nÖHK ile rıza iptali sırasında kurulacak iletişimde (e-posta, sms gibi) aşağıdaki alanların iletilmesi tavsiye edilmektedir:\nYÖS Adı, HHS adı, Rıza Oluşturma Zamanı, Servis Tipi Bilgisi (ÖBHS) \n'},{title:"6.\tÖdeme Emri Başlatma Hizmeti",frontmatter:{},regularPath:"/v2.0.0/contents/odeme-emri-baslatma-hizmeti.html",relativePath:"v2.0.0/contents/odeme-emri-baslatma-hizmeti.md",key:"v-29ce59bd",path:"/v2.0.0/contents/odeme-emri-baslatma-hizmeti.html",headers:[{level:3,title:"Ödeme Emri Başlatma Hizmeti için Erişim Adresleri (Endpoints)",slug:"odeme-emri-baslatma-hizmeti-icin-erisim-adresleri-endpoints"},{level:2,title:"6.1.\tADIM 0 - Ödeme Emri Başlatma Isteği",slug:"_6-1-adim-0-odeme-emri-baslatma-istegi"},{level:2,title:"6.2.\tADIM 1 - Ödeme Emri Rızasının Hazırlanması",slug:"_6-2-adim-1-odeme-emri-rızasının-hazırlanması"},{level:2,title:"6.3.\tADIM 2- Ödeme Emri Rızasının Yetkilendirilmesi",slug:"_6-3-adim-2-odeme-emri-rızasının-yetkilendirilmesi"},{level:2,title:"6.4.\tADIM 2.1 – Ödeme Emri Rızasının Sorgulanması (isteğe bağlı)",slug:"_6-4-adim-2-1-odeme-emri-rızasının-sorgulanması-istege-baglı"},{level:2,title:"6.5.\tADIM 3- Ödeme Emrinin Oluşturulması",slug:"_6-5-adim-3-odeme-emrinin-olusturulması"},{level:2,title:"6.6.\tADIM 3.1- Ödeme Emri Sorgusu (İsteğe bağlı)",slug:"_6-6-adim-3-1-odeme-emri-sorgusu-istege-baglı"},{level:3,title:"GET /odeme-emri/{odemeEmriNo}",slug:"get-odeme-emri-odemeemrino"}],content:" 6.\tÖdeme Emri Başlatma Hizmeti \n Ödeme emri başlatma işlemi havale, FAST ya da PÖS ödemesiyle sonuçlanabilir. Ödeme işleminin amacı kişiden kişiye para transferi, e-ticaret ödemesi gibi farklı ödeme türleri olabilir. Ödemenin amacına göre ÖBHS’nin ileteceği veri setinde farklılaşmalar olabilir. \n Ödeme Emri Başlatma Hizmeti 5 temel akışdan oluşur: \n \n Ödeme Emri Başlatma İsteğinin tetiklenmesi:  ÖHK ÖBHS mobil uygulama ya da websitesinden ödeme emrini başlatır. \n Ödeme Emri Rıza Hazırlanması:  ÖBHS, “Ödeme Emri Başlatma” işlemi için izin oluşturulması isteğini HHS’ye iletir. \n Ödeme Emri Rızasının Yetkilendirilmesi:  HHS, gerekli gördüğü durumlarda ÖHK’yı GKD ile doğrular ve ödeme emri rızasına erişim için erişim belirteci tanımlanmasını temin eder. \n Ödeme Emrinin Başlatılması:  ÖBHS, “ödeme emri”ni HHS’ye iletir. \n Ödeme Emri Rıza Durumu, Ödeme Emri Durumu, Ödeme Emri Detayı Sorguları:  ÖBHS, Ödeme Emri Rıza Durumu, Ödeme Emri Durumu, Ödeme Emri Detayı bilgilerini isteğe bağlı olarak sorgulayabilir. \n \n Nezdinde ödeme hesabı bulunduran hesap hizmeti sağlayıcılar(Banka, EPK, Ödeme Kuruluşları)  müşterilerine ait hesapları hesap referansı ya da hesap numarası üzerinden takip etmektedir. YÖS'lerin hem HBH hem de ÖBH servisleri için hesap referansı veya hesap numarası üzerinden işlem yapılabileceğini bilmeleri, sistemlerini API dokümanında belirtilen akışlara göre uyumlandırmaları ve müşteri bilgilendirmesini(önyüzlerinde hesap no ve hesap referansı ayrımını gözeterek) buna paralel yapmaları beklenmektedir. \n YÖS'ler gönderen hesap seçimini aşağıdaki yöntemlerden biri ya da birkaçı ile sağlayabilirler: \n \n YÖS, müşterisinin ödeme hesabını HHS ekranından seçtirebilir. \n YÖS, müşterisinden Hesap Bilgisi rızası alır. Rıza aldığı hesaplar üzerinden hesap referansı aracılığı ile ödeme emri başlatabilir. \n YÖS, müşterisinin ödeme hesabını elle girmesine olanak tanıyabilir. IBAN'ı olmayan HHS'ler ödeme emri rızası adımında  TR.OHVPS.Business.IBANNotSupported  hatasını vermelidir. IBAN'ı olan HHS'lerin bu akışı desteklemesi zorunludur. \n YÖS; müşterisinin hesap referansını elle girmesini sağlayabilir. Hesap Referansı bilgisi ile başlatılan ödeme emri işlemlerinde HHS seçimi zorunludur. \n \n Ödeme Sistemine doğrudan katılımcı olmayan HHS'ler, müşterilerine IBAN sunmadıkları için, YÖS'ler hesap referansı ile ödeme başlatabilirler. Bunların dışındaki HHS'lerin, gönderen IBAN veya hesap referansı ile ödeme akışını desteklemesi zorunludur. \n \n Şekil 4: Ödeme Emri Başlatma Hizmeti Üst Düzey İş Akışı \n Ödeme Emri Başlatma Hizmeti için Erişim Adresleri (Endpoints) \n Ödeme Emri Başlatma Hizmeti İçin Erişim Adreslerinin Etki Alanı (Scope) = “odeme_emri” olarak belirtilmelidir. \n Tablo 6: Ödeme Emri Başlatma Hizmeti İçin Erişim Adresleri \n \n \n \n No \n Kaynak \n HTTP işlemi \n Erişim Adresi \n Zorunlu / İsteğe Bağlı \n Yetkilendirme Türü \n İmzalama \n İstem Nesnesi \n Yanıt Nesnesi \n \n \n \n \n 1 \n odeme-emri-rizasi \n POST \n /odeme-emri-rizasi \n Z \n İstemci Kimlik Bilgileri \n İmzalı İstek ve Yanıt \n OdemeEmriRizasiIstegi \n OdemeEmriRizasi \n \n \n 2 \n erisim-belirteci (GKD için) \n POST \n /erisim-belirteci \n Z \n İstemci Kimlik Bilgileri \n İmzalı İstek ve Yanıt \n ErisimBelirteciIstegi \n ErisimBelirteci \n \n \n 2.1 \n odeme-emri-rizasi \n GET \n /odeme-emri-rizasi/{rizaNo} \n Z \n İstemci Kimlik Bilgileri \n İmzalı Yanıt \n - \n OdemeEmriRizaYaniti \n \n \n 3 \n odeme-emri \n POST \n /odeme-emri \n Z \n İstemci Kimlik Bilgileri & Yetkilendirme Kodu (GKD) \n İmzalı İstek ve Yanıt \n OdemeEmriIstegi \n OdemeEmri \n \n \n 3.1 \n odeme-emri \n GET \n /odeme-emri/{odemeEmriNo} \n Z \n İstemci Kimlik Bilgileri & Yetkilendirme Kodu (GKD) \n İmzalı Yanıt \n - \n OdemeEmri \n 6.1.\tADIM 0 - Ödeme Emri Başlatma Isteği \n \n ÖHK, ÖBHS uygulamasında (web arayüzü/mobil uygulama) ödeme emri başlatma işlemine onay verir. \n Gönderen hesap detaylarının bu aşamada belirtilmesi zorunlu değildir. \n 6.2.\tADIM 1 - Ödeme Emri Rızasının Hazırlanması \n   \n Şekil 5: Ödeme Emri Rızasının Hazırlanması \n \n \n ÖBHS, ödeme hizmeti kullanıcı hesabının bulunduğu HHS’ye bağlanarak ödeme emri rıza kaynağının oluşturulmasını (odemeEmriRizasi) sağlar. \n \n \n POST isteği TLS protokolü tesis edilen iletişim katmanı üzerinden gerçekleştirilir. TLS için nitelikli sertifikalar kullanılır. \n \n \n POST isteğinin başlığındaki alanlar ve istemcinin sertifikasındaki özel alanlar kullanılarak istemcinin yetkilendirilmesi sağlanır: \n \n İstekte bulunan ÖBHS yetkilendirilmiş olduğu geçit tarafından kontrol edilir. \n İstekte bulunan yetkilendirilmiş ödeme hizmeti sağlayıcısı ÖBHS rolüne sahipliği geçit tarafından kontrol edilir. \n HHS tarafından, istek başlığındaki x-aspsp-code ile katilimciBlg içerisinde yer alan hhsKod değeri ile aynı olduğunu kontrol edilir. Farklı olması durumunda  “TR.OHVPS.Connection.InvalidASPSP”  hatası dönülür. \n \n \n \n POST başarılı olursa, HHS, ödeme emri için içeride rıza olup olmamasına bakılmaksızın yeni bir rıza tanımlayıcısı RizaNo içeren odemeEmriRizasi  yanıt olarak döner. \n \n \n 1 ÖHK'nın 1 YÖS için 1HHS'de istediği kadar rızası olabilir. \n \n \n HHS tarafında RizaDurumu değişkeninin durumu “Yetki Bekleniyor” olarak güncellenir. \n \n \n YÖS’ün doğrulama ekranı olarak ÖHK’ya açacağı URL adresini de ilgili rıza numarasına göre oluşturur. Burada 2 farklı yöntemle URL oluşturabilir. \n \n Statik URL  : \nHHS’nin base pathi/alt-dizin/{rızaNo} \nÖrnek hhsYonAdr : https://xbank.com.tr/ohvps/cb54834e36f742d09af3d534ece3352a \nBu adres için ilgili doğrulama sayfası önden hazırlanmalı ve ÖHK’nın doğrulama sayfasına erişimi için yayınlanmış olmalıdır (publish edilmelidir). \n Dinamik URL : \nHHS’nin base pathi/alt-dizin/GKD Karşılama Ekranı?rizano={rızano} \nÖrnek: https://xbank.com.tr/ohvps/gkd?rizano=cb54834e36f742d09af3d534ece3352a \n \n \n \n POST /odeme-emri-rizasi \n İSTEK: \n ÖBHS, bu API erişim adresinden HHS’ye yeni bir OdemeEmriRizasi oluşturulması için istekte bulunur: \n \n ÖBHS, ödeme emri başlatma isteği olduğunu HHS’ye bildirir. \n ÖBHS, ÖHK’nın, ÖBHS arayüzünden verdiği rızanın (“Ön Onay”) bir kopyasının HHS nezdinde müşteri tarafından onaylanması için HHS’ye gönderilmesini sağlar. \n HHS; istek mesajında yer alan alanların ÖHVPS API İlke ve Kuralları dökümanında belirtilen şartları sağlayacak şekilde zorunluluk, uzunluk ve içerik kontrollerini yapar. (Zorunlu) Kontrollere istinaden hata oluşması durumunda  \"TR.OHVPS.Resource.InvalidFormat\"  hata kodu iletilmeli ve fieldErrors dolu olacak şekilde hatalı alanı belirten detaylı açıklama gönderilmelidir. InvalidFormat hata kodlarında fieldErrors içeriği gönderilmeli ve anlaşılır açıklama ile message, messageTr alanları doldurulması zorunludur. \n HHS, hhsKod’un kendisine ait olduğunu ve istek başlığındaki x-aspsp-code değeri ile aynı olduğunu kontrol eder. Farklı olması durumunda  ”TR.OHVPS.Connection.InvalidASPSP”  hatası dönülür. \n HHS, yosKod’un geçerli bir Ödeme Hizmeti Sağlayıcısı Kodu olduğunu ve istek başlığındaki x-tpp-code değeri ile aynı olduğunu kontrol eder. Farklı olması durumunda  ”TR.OHVPS.Connection.InvalidTPP”  hatası dönülür. \n HHS; YÖS API ile alınan ÖBHS bilgilerinin içerisinde yer alan yönlendirme adresleri ile ödeme emri rızası nesnesi request mesajında paylaşılan adreslerin uyumlu olup olmadığının kontrollerini yapar. (Zorunlu) Kontrollere istinaden hata oluşması durumunda  \"TR.OHVPS.Business.TPPRedirectionAddressMismatch\"  hatası dönülür. \n HHS; kimlik bilgileri nesnesinde eğer kimlik bilgileri iletilmiş ise; bu veri ile ÖHK’nın HHS müşterisi olup olmadığının kontrollerini yapar. Bu kontrol hem bireysel hem de kurumsal ÖHK’lar için yapılmalıdır. (Koşullu Zorunlu) Kontrollere istinaden hata oluşması durumunda  \"TR.OHVPS.Business.CustomerNotFound\"  hatası dönülür. Kurumsal müşteri ile başlatılan rızada yer alan müşteri bilgisinin karşı kurumda Kurumsal müşteri değil; bireysel müşteri olduğu durumda  TR.OHVPS.Business.BusinessCustomerMismatch  hatası dönülür. \n Ödeme Emri Başlatma Hizmeti rıza isteğinde bulunan ÖHK’nın “Açık Bankacılık Kanal Yetki” tanımı yok ise  \"TR.OHVPS.Business.OpenBankingChannelClosed\"  hatası dönülür. HHS insiyatifinde olup HHS bu kontrolü GKD sonrası gerçekleştirebilir. \n HHS \"gkd\" nesnesi için alan kontrollerini gerçekleştirir. \"yetYntm\" = \"A\" gönderilmiş ise \"ayrikGkd\" nesnesinin dolu gönderilmesi zorunludur. Gönderilmemesi durumunda HHS tarafından  \"TR.OHVPS.Resource.InvalidFormat\"  hatası dönülür. \n Ayrık GKD desteklemeyen HHS'ye Ayrık GKD yöntemiyle rıza başlatma isteği yapılması durumunda HHS tarafından  \"TR.OHVPS.Business.DecoupledAuthenticationNotSupported\"  hatası dönülür. YÖS ilgili işlemi “Yönlendirmeli” akışa çekip süreci ilerletebilir. \n Ayrık GKD ile başlatılan rıza akışlarında HHS, YÖS'ün AYRIK_GKD_BASARILI ve AYRIK_GKD_BASARISIZ olay tipleri için olay aboneliğinin varlığını kontrol eder. YÖS iki olay tipine de abone olmak zorundadır. Eğer olay aboneliği yoksa HHS tarafından  \"TR.OHVPS.Business.EventSubscriptionNotFound\"  hatası dönülür. \n Rıza başlatma akışı içerisinde kimlik bilgisinin olduğu durumlarda; ÖHK'ya ait kimlik verisi(kmlk.kmlkVrs) ile ayrık GKD içerisinde yer alan OHK Tanım Değer alanı (ayrikGkd.ohkTanimDeger) birebir aynı olmalıdır. Aynı olmadığı durumda HHS tarafından  \"TR.OHVPS.Business.CustomerInfoMismatch\"  hatası dönülür. Kimlik alanı içermeyen tek seferlik ödeme emri akışlarında bu kural geçerli değildir. GSM ve IBAN değerleri sadece tek seferlik ödemelerde kullanılabilir. \n HHS tarafında ÖHK'nın mobil uygulaması bulunmaması durumu tespit edilebildiği durumda Ayrık GKD ile başlatılan rıza akışlarında HHS tarafından  \"TR.OHVPS.Business.CustomerMobileApplicationNotFound\"  hatası dönülür. YÖS ilgili işlemi “Yönlendirmeli” akışa çekip süreci ilerletebilir. \n HHS kimlik bilgisi ile gönderen ünvanının uyumlu olduğunu kontrol eder. HHS'ler EFT/FAST işlemlerinde kabul ettikleri kontrol kriterleri ile işleme izin verebilirler. (Zorunlu) Kontrollere istinaden hata oluşması durumunda  \"TR.OHVPS.Business.IncorrectSenderTitle\"  hatası dönülür. \n Gönderen Hesap Numarası ÖBHS tarafından iletildiği durumda;\n \n IBAN’ın doğruluğu (kontrol basamağı doğrulaması) kontrol edilir. Kontrollere istinaden hata oluşması durumunda   \"TR.OHVPS.Business.InvalidAccount\"  hatası dönülür. \n IBAN içerisindeki HHS kodunun istek başlığındaki HHS kodu ile aynı olduğu (hesabın HHS’ye aitliğinin kontrolü) kontrol edilir. Kontrollere istinaden hata oluşması durumunda   \"TR.OHVPS.Business.AccountCodeMismatch\"  hatası dönülür. \n Hesap numarasının ÖHK’ya ait olduğu kontrol edilir. Kontrollere istinaden hata oluşması durumunda   \"TR.OHVPS.Business.CustomerAccountMismatch\"  hatası dönülür. \n HHS’ye özel ödeme izni verilmeyen farklı statülerin bulunması durumu kontrol edilir. (İlgili hesabın para transfer işlemine yetkisi olmaması) Kontrollere istinaden hata oluşması durumunda   \"TR.OHVPS.Business.AccountUnauthorized\"  hatası dönülür. \n HHS’de gönderen hesabın aktifliği kontrol edilir. Kontrollere istinaden hata oluşması durumunda   \"TR.OHVPS.Business.AccountInactive\"  hatası dönülür. \n \n \n Gönderen Hesap Numarası için, Hesap Referansı kullanılıyorsa Hesap Numarası kullanılmayabilir. Hesap referansı ile ödeme emri rızası başlatılacak ise HHS hesap referansı değeri ile ilişkilendirilmiş mevcut bir hesap bilgisi rızası var mı kontrol etmelidir. Eğer aktif bir rızası yok ise  \"TR.OHVPS.Business.ActiveConsentNotFound\"  hatası dönülür. \n Hesap bakiye kontrolünün rıza aşamasında yapılmaması gerekmektedir. Çünkü ÖHK ödeme emri gerçekleşene kadar hesabına para eklemesi yapabilir. \n \n Tek Seferlik Ödeme \n \n Tek seferlik ödeme akışı YÖS'ten HHS'ye giden istekte, gönderen kimlik bilgilerinin olmadığı durumda gerçekleşir. Gönderen kimlik bilgisi olmadığında, KOLAS sorgusu yapılamayacağından ötürü, HHS tarafından  \"TR.OHVPS.Resource.OneTimePaymentNotSupport\"  hatası dönülmelidir. ÖHK'nın YÖS'ün müşterisi olmadığı durumda tek seferlik ödeme başlatılabilir. \n Tek seferlik ödeme akışı hem işyeri ödemelerinde hem de kişiden kişiye para transferlerinde kullanılabilen bir akıştır. İşyeri tarafından başlatılan tek seferlik ödeme işlemlerinde katılımcılar gönderen ÖHK'dan ücret alınamaz. \n Tek seferlik ödeme akışı sadece bireysel müşteriler için kullanılabilir. Kurumsal müşteri ile ödeme emri başlatılması durumunda  \"TR.OHVPS.Resource.OneTimePaymentNotSupport\"  hatası dönülür.\nTek seferlik ödeme akışında hem yönlendirmeli hem de ayrık GKD akışı ile müşteri yetkilendirmesi sağlanabilir. \n Aşağıdaki senaryolar tek seferlik ödemeye örnek olarak gösterilebilir. \nİşyeri Ödemesi akışı örneği: Bir e-ticaret sitesinde, üye olmadan alışveriş yapılması ve ödemenin YÖS tarafından kimlik bilgisi olmadan başlatılması \nKişiden kişiye para transferi akışı örneği: QR veya diğer yöntemler ile alıcı bilgilerinin gönderici ile paylaşılması ve YÖS üzerinden gönderici bilgileri olmadan alıcıya para transferi yapılması için rıza verilmesi \n \n Yukarıdaki kontroller tamamlandıktan sonra HHS, ödeme için benzersiz “RizaNo” ile “OdemeEmriRizasi” nesnesi oluşturur ve ÖBHS’ye döner.  HHS, OdemeEmriRizasi oluşturduğu anda durumunu “Yetki Bekleniyor” olarak düzenler. \n POST /odeme-emri-rizasi  isteğinin (REQUEST) gövdesinde (BODY)  “odemeEmriRizasiIstegi” nesnesi (Tablo-7) kullanılır. İstek başarıyla sonuçlanırsa HHS kaynak sunucusunda “odemeEmriRizasi” (Tablo-8) nesnesi oluşturulur. \n  BAŞARILI İSTEK: \n Tablo 7: “OdemeEmriRizasiIstegi” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n HHS tarafından ödeme emri rızası oluşturulması sırasında yapılması gereken kontrol ve işlemler \n \n \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n HHS, hhsKod’un kendisine ait olduğunu ve istek başlığındaki x-aspsp-code değeri ile aynı olduğunu kontrol eder. \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n HHS, yosKod’un geçerli bir Ödeme Hizmeti Sağlayıcısı Kodu olduğunu ve istek başlığındaki x-tpp-code değeri ile aynı olduğunu kontrol eder. \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n \n > Yetkilendirme Yöntemi \n yetYntm \n AN1 \n İ \n TR.OHVPS.DataCode.GkdTur  sıralı veri türü değerlerinden birini alır. Yetkilendirme yöntemi, ÖBHS tarafından belirtilmeyebilir. \n HHS, HBHS’nin belirlediği yöntemi dikkate alarak süreci ilgili akışa uygun olarak devam ettirir. Desteklemediği yöntem için (örn: Ayrık GKD) ayrıca hata mesajı verilmelidir. \n \n \n > Yönlenme Adresi \n yonAdr \n AN1..1024 \n K \n Yönlendirmeli güçlü kimlik doğrulama için zorunlu.  YÖS’ün ileteceği adrestir.  Durum kodu(drmKod), yönlendirme adresine parametre olarak eklenmelidir. \n HHS, müşteri uygulama / tarayıcısını bu alanda belirtilen adrese yönlendirir. \n \n \n > Ayrık GKD \n ayrikGkd \n Kompleks:AyrikGkd \n K \n Ayrık güçlü kimlik doğrulama için zorunlu. \n yetYntm = A gönderilmiş ise ayrikGkd nesnesinin dolu gönderilmesi zorunludur.   HHS, YÖS'ün AYRIK_GKD_BASARILI ve AYRIK_GKD_BASARISIZ olay tipleri için olay aboneliğinin varlığını kontrol eder.  Bknz: Ayrık GKD \n \n \n >> OHK Tanım Tip \n ohkTanimTip \n AN8 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım tipleridir.  TR.OHVPS.DataCode.ohkTanimTip  sıralı veri tiplerinden birini alır. \n \n \n \n >> OHK Tanım Değer \n ohkTanimDeger \n AN1..30 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım değeridir. ohkTanimTip'i ile uyumlu değerdir. \n \n \n \n Ödeme Başlatma \n odmBsltm \n Kompleks: OdemeBaslatma \n Z \n \n \n \n \n > Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n \n >> Kimlik Türü \n kmlkTur \n AN1 \n K \n TR.OHVPS.DataCode.KimlikTur  sıralı veri türü değerlerinden birini alır. \n Çerçeve sözleşme kapsamındaki ödemelerde kullanımı zorunludur. HHS geçerli bir Kimlik Numarası Türü olduğunu kontrol eder. Kurum adına yapılan (ticari) ödemelerde, kurum adına işlem yapan kullanıcının kimlik türünün bu alanda gönderilmesi zorunludur. \n \n \n >> Kimlik Verisi \n kmlkVrs \n AN1..30 \n K \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır. TR.OHVPS.DataCode.KimlikTur  değerine göre uzunluk ve formatı değişir. \n Çerçeve sözleşme kapsamındaki ödemelerde kullanımı zorunludur. HHS, ÖBHS tarafından iletilmesi durumunda Kimlik Verisi üzeriden çapraz kontroller uygulamalı ve Kimlik Verisini temel alarak GKD gerçekleştirmelidir.  Pasaport numarasına ilişkin kontroller HHS'nin halihazırda kullandığı veri, akış ve tabi olduğu diğer düzenlemelerdeki işleyiş ile aynı şekilde ele alınmalıdır.  Kurum adına yapılan (ticari) ödemelerde, kurum adına işlem yapan kullanıcının kimlik türünün bu alanda gönderilmesi zorunludur. \n \n \n >> Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür. TR.OHVPS.DataCode.KurumKimlikTur  sıralı veri türü değerlerinden birini alır. \n Kurum adına yapılan (ticari) ödemelerde kullanımı zorunludur.  HHS geçerli bir Kurum Kimlik Numarası Türü olduğunu kontrol eder. \n \n \n >> Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.   TR.OHVPS.DataCode.KurumKimlikTur  değerine göre uzunluk ve formatı değişir. \n Kurum adına yapılan (ticari) ödemelerde kullanımı zorunludur.  HHS, ÖBHS tarafından iletilmesi durumunda Kurum Kimlik Verisi üzeriden çapraz kontroller uygulamalıdır. \n \n \n >> Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur  sıralı veri türü değerlerinden birini alır  (B: Bireysel, K:Kurumsal) \n Kurum adına yapılan ödemelerde K değerini alır. Kurum Kimlik Türü ve Kurum Kimlik Verisi alanlarının girilmiş olduğu çapraz olarak kontrol edilir. \n \n \n > İşlem Tutarı \n islTtr \n Kompleks:Tutar \n Z \n \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para Birimi.  Karekod akışında, FAST Karekod Veri Organizasyonundaki  53: (Para Birimi)  alanında tanımlı Para Birimi verisi kullanılır. \n HHS geçerli bir para birimi olduğu kontrol eder. \n \n \n >> Tutar \n ttr \n AN1..24 \n Z \n ÖBHS'nin ön yüzde kullanıcıdan teyit aldığı tutar.   Karekod akışında, FAST Karekod Veri Organizasyonundaki  54: (Tutar)  alanında tanımlı Tutar verisi kullanılır.   Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n \n \n \n > Gönderen \n gon \n Kompleks:Hesap \n İ \n \n \n \n \n >> Ünvan \n unv \n AN3..140 \n K \n Gönderenin ünvanıdır.  HHS, bu bilgiyi ÖBHS sisteminden gelen veri yerine FAST’a iletirken kendi sisteminden alabilir.  Tek seferlik ödeme dışında YÖS'ün gönderen ünvanını göndermesi zorunludur. \n HHS’nin bu veri ile kendi sistemlerindeki verinin farklı olması ve Kimlik Numarası ile eşleşmemesi durumunda ödeme emri başlatma isteği reddedilir.  ÖBHS verisi ile HHS verisinin farklılaşması durumunun ise risk değerlendirme sistemlerine girdi olarak kullanması tavsiye edilir. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n İ \n ÖBHS'nin ön yüzünden daha önce kayıt altına alınmış hesaplar arasından seçtirdiği veya müşteriye girdiği IBAN’dır.  ÖBHS tarafından iletilmediği durumda, gönderen hesap bilgisini müşteri tarafından HHS’nin dijital kanalında GKD sonrasında seçilebilir. Bu amaçla ÖBHS arayüzünde HHS seçtirilmelidir.  Hesap Referansı kullanılıyorsa Hesap Numarası kullanılmayabilir. Hesap referansı ile ödeme emri rızası başlatılacak ise HHS hesap referansı değeri ile ilişkilendirilmiş mevcut bir hesap bilgisi rızası var mı kontrol etmelidir.   Ödeme Sistemine doğrudan katılımcı olmayan ÖHS'ler müşterilerine IBAN sunmadıkları için hspRef üzerinden ödeme başlatabilirler. Bu durumda hesap numarası boş olacaktır. \n ÖBHS tarafından iletildiği durumda; IBAN içerisindeki HHS kodunun istek başlığındaki HHS kodu ile aynı olduğu (hesabın HHS’ye aitliğinin kontrolü), IBAN’ın doğruluğu (kontrol basamağı doğrulaması), Hesap numarasının ÖHK’ya ait olduğu, HHS’ye özel ödeme izni verilmeyen farklı statülerin bulunması durumu kontrol edilir. \n \n \n >> Hesap Referansı \n hspRef \n AN5..40 \n İ \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid). YÖS bazında farklılaşması gerekmez.  ÖBHS’nin aynı zamanda HBHS olduğu durumda müşteri rızası tesis edilmiş bir hesabın referansı üzerinden de ödeme başaltılabilir.  Hesap Numarası kullanılıyorsa Hesap Referansı kullanılmayabilir.   Ödeme Sistemine doğrudan katılımcı olmayan HHS'ler müşterilerine IBAN sunmadıkları için hspRef üzerinden ödeme başlatabilirler. Bu durumda hesap numarası boş olacaktır. \n HspRef'e bağlı IBAN değiştiğinde yeni IBAN'ın da ilgili HspRef ile ilişkilendirilmesi beklenmektedir. Bu durumda, HBHS, HspRef ile sorguya geldiğinde HHS'nin yeni IBAN ve hesap hareketlerini dönebilmesi mümkün olacaktır. HspRef’in, IBAN değiştiğinde değiştirilmemesi tavsiye edilmektedir. \n \n \n > Alıcı \n alc \n Kompleks:Hesap \n Z \n \n \n \n \n >> Ünvan \n unv \n AN3..140 \n K \n Kolay Adres Sistemi  kullanılmıyorsa zorunludur.  Alıcının ünvanıdır. ÖBHS ekranlarından girişi yapılabileceği gibi ÖBHS’nin kayıtlı alıcılarından yapılan seçimle de doldurup gönderebildiği bilgi olabilir.  FAST-TR Karekod Veri Organizasyonunda;  İşyeri tarafından sunulan uzun karekod yapısının  59:  alanında tanımlı İşyeri adı alanıdır, Kişiden Kişiye Ödeme Karekod Yapısının  07:  alanında tanımlı    Ödeme Alıcısının Adı ve Soyadı  alanıdır.  FAST-TR Karekod dışındaki iş yeri ödemelerinde; yine ünvan alanında işyeri adı bilgisi gönderilmelidir. \n \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n K \n Alıcının Hesap Numarası (IBAN)  alanıdır.   Kolay Adres Sistemi  kullanılmıyorsa zorunludur.  Karekod akışında, FAST Karekod Veri Organizasyonundaki  30-01:  alanında tanımlı İş Yeri IBAN verisi kullanılır.  Alıcının birden fazla hesabının kullanılabilir olduğu durumlarda (özellikle işyeri ödemelerinde HHS nezdindeki hesap (on-us havale akışı) tercih edilmelidir. \n HHS (Gönderen Katılımcı) tarafından IBAN doğrulaması (kontrol basamağı doğrulaması) yapılır. \n \n \n >> Kolay Adres \n kolas \n Kompleks:Kolas \n K \n \n Tek seferlik ödemelerde ( kimlik bilgileri boş iletildiğinde) KOLAS nesnesi dolu iletiliyorsa; HHS tarafından hata dönülmelidir \n \n \n >>> Kolas Türü \n kolasTur \n AN1 \n Z \n TR.OHVPS.DataCode.KolasTur  sıralı veri türü değerlerinden birini alır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n HHS (Gönderen FAST katılımcısı) tarafından KOLAS Servisine yapılan sorguda girdi olarak kullanılır. \n \n \n >>> Kolas Değeri \n kolasDgr \n AN7..50 \n Z \n Müşterinin eklediği, HHS (FAST katılımcısı) tarafından doğrulanmış Kolay Adres değeridir. Alabileceği değerler BKM “Kolay Adresleme Sistemi Uygulama Kuralları” belgesinde tanımlıdır.  Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n HHS (Gönderen FAST katılımcısı) tarafından KOLAS Servisine yapılan sorguda girdi olarak kullanılır. \n \n \n > Karekod \n kkod \n Kompleks:Karekod \n K \n \n \n \n \n >> Akış Türü \n aksTur \n AN2 \n Z \n TR.OHVPS.DataCode.KareKodAksTur  sıralı veri değerlerinden birini alır. Kolay Adresi Sistemi ile birlikte kullanılmaz. \n \n \n \n >> Referansı \n kkodRef \n AN1..12 \n K \n Karekod referans numarasını  gösterir. Okunan karekodda referans değeri varsa kullanılması zorunludur.  Karekod ilke ve kurallar belgesinde tanımlandığı şekilde kullanılması gerekmektedir.  Kolay Adresi Sistemi ile birlikte kullanılmaz. \n \n \n \n >> Üretici Kodu \n kkodUrtcKod \n AN4 \n Z \n Karekod üreticisinin kodu.  Ödeme Hizmeti Sağlayıcıları ve TCMB tarafından uygun görülen ödeme sistemi işleticisi TR Karekod üretebilmek için BKM’ye kayıt başvurusu yaparak karekod üretici kodu alabileceklerdir. Bankalar EFT kodlarını kullanacak olup ayrıca kayıt yaptırmalarına gerek bulunmamaktadır. 4 haneden kısa değerlerin sol tarafı ’0’ karakteri ile tamamlanmalıdır. \n \n \n \n > Ödeme Ayrıntıları \n odmAyr \n Kompleks: OdemeAyrintilari \n Z \n \n \n \n \n >> Ödeme Kaynağı \n odmKynk \n AN1 \n Z \n Ödemenin başlatıldığı kaynağı belirtir.  TR.OHVPS.DataCode.OdemeKaynak  sıralı veri veri değerlerinden “O” değeri atanarak iletilmelidir. “O” değeri “Açık bankacılık aracılığı ile gönderilen ödemelerde kullanılır.” anlamını taşımaktadır. \n HHS, YÖS'ün API deseninde \"O\" kodunu ilettiğini kontrol eder. \n \n \n >> Ödeme Amacı \n odmAmc \n AN2 \n Z \n TR.OHVPS.DataCode.OdemeAmaci  sıralı veri değerlerinden birini alır. Karekod akışında, FAST Karekod Veri Organizasyonundaki 62-08: alanında tanımlı Ödeme Amacı verisi kullanılır. \n HHS geçerli bir Ödeme Amacı kodu olduğunu kontrol eder. \n \n \n >> Referans Bilgisi \n refBlg \n AN1..140 \n K \n Ödemeye özel  Referans Bilgisi  alanıdır. Karekod işlemi değil ise zorunludur.  -\tKişiden kişiye fon aktarımlarında: Gün içerisinde ÖHK özelinde, her işleme özel biricik olarak oluşturulan referans bilgisidir.  Karekod P2P akışı için referans bilgisi (Karekod referans numarası değil, işleme özel üretilecek referans bilgisidir.) YÖS tarafından atanacaktır.   -\tE-ticaret işlemlerinde sipariş/takip numarası/müşteri/abone numarası  -\tİşyeri Ödemesi Karekod akışında, FAST Karekod Veri Organizasyonundaki  -\t62-01: alanında tanımlı Fatura Numarası   -\t62-06: alanında tanımlı Müşteri Numarası   verilerinden biri kullanılır. \n YÖS bu değeri ÖHK’yı HHS’ye yönlendirmeden önceki ekranda göstermeli, ve HHS bu değeri GKD için kullandığı önyüzünde “işlem doğrulama kodunun” bir unsuru olarak yine ÖHK’ya göstermelidir. \n \n \n >> Açıklama \n odmAcklm \n AN1..200 \n İ \n ÖBHS’nin ÖHK’dan aldığı ya da kendisinin atadığı işlem açıklaması bilgisi.  FAST/PÖS sistemi üzerinden yapılan ödemeler için açıklama bilgisi girilirse boşluk karakteri girilerek geçilemez. En az bir alfasayısal karakter girilmesi zorunludur. \n \n \n \n İşyeri Ödeme Bilgileri \n isyOdmBlg \n Kompleks:IsyeriOdemeBilgileri \n K \n İşyeri ödemelerinde kullanılabilecek alanlardır. Karekodlu işyeri ödemesi akışında bu alanlar dolu geldiği için isteğe bağlı olarak gönderilebilir. isyOdmBlg alanlarının en az birinin dolu olması durumunda istekte yer alır.  İşyeri Ödeme Bilgileri, YÖS uygulama önyüzünde ÖHK’nın bildiği ve girişi yapılması beklenen bir bilgi olmamalıdır. YÖS tarafından sistemsel olarak doldurulması gereklidir. \n \n \n \n > İşyeri Kategori Kodu \n isyKtgKod \n AN4 \n K \n İşlemin, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). Ödeme Amacı = ‘06’ ya da ‘04’ olan ödeme işlemleri için doldurulabilir.  4 karakterden küçük değerlerin başına 0 eklenerek iletilmesi gereklidir. \n \n \n \n > Alt İşyeri Kategori Kodu \n altIsyKtgKod \n AN4 \n K \n İşlem alt işyerinden gerçekleştiriliyorsa, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). 4 karakterden küçük değerlerin başına 0 eklenerek iletilmesi gereklidir. \n \n \n \n >Üye İş Yeri Tekil Kimlik \n genelUyeIsyeriNo \n AN8 \n K \n İşyeri kayıt sisteminde kayıtlı İşyeri için BKM tarafından üretilmiş olan genel işyeri numarasıdır (GlobalMerchantId) 8 haneden küçük gönderiminde başa ‘0’ eklenmelidir. Örnek değer ‘01630618’ \n  BAŞARILI YANIT: \n POST işleminin RESPONSE gövdesini (BODY) oluşturan “OdemeEmriRizasi” nesnesi Tablo-8’deki parametrelerden oluşur: \n Tablo 8: “OdemeEmriRizasi” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n \n \n \n \n Riza Bilgileri \n rzBlg \n Kompleks: RizaBilgileri \n Z \n \n \n \n > Rıza No \n rizaNo \n AN1..128 \n Z \n OdemeEmriRızasi nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n > Oluşturma Zamanı \n olusZmn \n ISODateTime \n Z \n OdemeEmriRizasi nesnesinin oluşturulma zamanı \n \n \n > Güncellenme Zamanı \n gnclZmn \n ISODateTime \n Z \n OdemeEmriRizasi nesnesinin güncellenme zamanı \n \n \n > Rıza Durumu \n rizaDrm \n AN1 \n Z \n TR.OHVPS.DataCode.RizaDurumu  sıralı veri tipini değerlerinden birini alır. \n \n \n > Rıza Iptal Detay Kodu \n rizaIptDtyKod \n AN2 \n K \n Rıza durumunun iptal olduğu durumda zorunludur. Alabileceği değerler 4. Bölümde detaylandırılmıştır. \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n > Yetkilendirme Yöntemi \n yetYntm \n AN1 \n Z \n TR.OHVPS.DataCode.GkdTur  sıralı veri türü değerlerinden birini alır.  HHS, ÖBHS’nin belirlediği yöntemi dikkate alarak kendi belirlediği yöntemi kullanır. \n \n \n > Yönlenme Adresi \n yonAdr \n AN1..1024 \n K \n Yönlendirmeli güçlü kimlik doğrulama için zorunlu. HHS, müşteri uygulama / tarayıcısını yönlendirmeli akışta bu alanda belirtilen YÖS adresine yönlendirir. \n \n \n \n \n \n \n \n \n \n > Ayrık GKD \n ayrikGkd \n Kompleks:AyrikGkd \n K \n Ayrık güçlü kimlik doğrulama için zorunlu. \n \n \n >> OHK Tanım Tip \n ohkTanimTip \n AN8 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım tipleridir. İstek içerisindeki veri değiştirilmeden iletilir. \n \n \n >> OHK Tanım Değer \n ohkTanimDeger \n AN1..30 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım değeridir. ohkTanimTip'i ile uyumlu değerdir.  İstek içerisindeki veri değiştirilmeden iletilir. \n \n \n > HHS Yönlenme Adresi \n hhsYonAdr \n AN1..1024 \n K \n Yönlendirmeli akış türünde GKD doğrulama bilgilerinin girilebilmesi için uygulamadan açılacak yönlendirme sayfasının adresi. Ayrık GKD akışında bu alan dönülmemelidir. \n \n \n > Yetkilendirme Tamamlanma Zamanı \n yetTmmZmn \n ISODateTime \n Z \n Yetkilendirme akışının tamamlanması gereken son zamanı gösterir.   HHS tarafından maksimum 5 dk içinde işlem tamamlanacak şekil zaman damgası oluşturulur. Zaman aşımı olduğunda HHS’nin GKD’ye izin vermeyecek şekilde hata mesajı vermesi gerekmektedir.  Rıza durumu Yetkilendirildi statüsüne geçene kadarki süredir. \n \n \n Ödeme Başlatma \n odmBsltm \n Kompleks: OdemeBaslatma \n Z \n \n \n \n > Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n >> Kimlik Türü \n kmlkTur \n AN1 \n K \n TR.OHVPS.DataCode.KimlikTur  sıralı veri türü değerlerinden birini alır. \n \n \n >> Kimlik Verisi \n kmlkVrs \n AN1..30 \n K \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır. TR.OHVPS.DataCode.KimlikTur  değerine göre uzunluk ve formatı değişir. \n \n \n >> Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür. TR.OHVPS.DataCode.KurumKimlikTur  sıralı veri türü değerlerinden birini alır. \n \n \n >> Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.   TR.OHVPS.DataCode.KurumKimlikTur  değerine göre uzunluk ve formatı değişir. \n \n \n >> Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur  sıralı veri türü değerlerinden birini alır  (B: Bireysel, K:Kurumsal) \n \n \n > İşlem Tutarı \n islTtr \n Kompleks:Tutar \n Z \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para Birimi.  Karekod akışında, FAST Karekod Veri Organizasyonundaki  53: (Para Birimi)  alanında tanımlı Para Birimi verisi kullanılır. \n \n \n >> Tutar \n ttr \n AN1..24 \n Z \n ÖBHS'nin ön yüzde kullanıcıdan teyit aldığı tutar.   Karekod akışında, FAST Karekod Veri Organizasyonundaki  54: (Tutar)  alanında tanımlı Tutar verisi kullanılır.   Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n \n \n > Gönderen \n gon \n Kompleks:Hesap \n İ \n \n \n \n >> Ünvan \n unv \n AN3..140 \n K \n Gönderenin ünvanıdır.  HHS, bu bilgiyi ÖBHS sisteminden gelen veri yerine FAST’a iletirken kendi sisteminden alabilir.   Tek seferlik ödeme dışında YÖS'ün gönderen ünvanını göndermesi zorunludur. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n İ \n ÖBHS'nin ön yüzünden daha önce kayıt altına alınmış hesaplar arasından seçtirdiği veya müşteriye girdiği IBAN’dır.  ÖBHS tarafından iletilmediği durumda, gönderen hesap bilgisini müşteri tarafından HHS’nin dijital kanalında GKD sonrasında seçilebilir. Bu amaçla ÖBHS arayüzünde HHS seçtirilmelidir.   GKD sonrası HHS ekranında seçilen Hesap Numarası POST işleminin yanıtında dönülemez ancak isteğe bağlı GET sorgusu ile dönülebilir.    Hesap Referansı kullanılıyorsa Hesap Numarası kullanılmayabilir.   Ödeme Sistemine doğrudan katılımcı olmayan ÖHS'ler müşterilerine IBAN sunmadıkları için hspRef üzerinden ödeme başlatabilirler. Bu durumda hesap numarası boş olacaktır. \n \n \n >> Hesap Referansı \n hspRef \n AN5..40 \n İ \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid). YÖS bazında farklılaşması gerekmez.  ÖBHS’nin aynı zamanda HBHS olduğu durumda müşteri rızası tesis edilmiş bir hesabın referansı üzerinden de ödeme başaltılabilir.   GKD sonrası HHS ekranında seçilen Hesap Referansı POST işleminin yanıtında dönülemez ancak isteğe bağlı GET sorgusu ile dönülebilir.    Hesap Numarası kullanılıyorsa Hesap Referansı kullanılmayabilir.    Ödeme Sistemine doğrudan katılımcı olmayan ÖHS'ler müşterilerine IBAN sunmadıkları için hspRef üzerinden ödeme başlatabilirler. Bu durumda hesap numarası boş olacaktır. \n \n \n > Alıcı \n alc \n Kompleks:Hesap \n Z \n \n \n \n >> Ünvan \n unv \n AN3..140 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen adres kaydı yaptırmış olan alıcının maskeli ad-soyadı veya maskeli ticari ünvan bilgisidir. Kolas’tan dönen “account owner” alanı kullanılmalıdır. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen ünvan bilgisidir. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n Z \n ÖBHS tarafından istek mesajında iletilip doğrulanan veya Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen alıcı maskeli IBAN bilgisidir. \n \n \n >> Kolay Adres \n kolas \n Kompleks:Kolas \n K \n \n \n \n >>> Kolas Türü \n kolasTur \n AN1 \n Z \n TR.OHVPS.DataCode.KolasTur  sıralı veri türü değerlerinden birini alır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n \n \n >>> Kolas Değeri \n kolasDgr \n AN7..50 \n Z \n Müşterinin eklediği, HHS (FAST katılımcısı) tarafından doğrulanmış Kolay Adres değeridir. Alabileceği değerler BKM “Kolay Adresleme Sistemi Uygulama Kuralları” belgesinde tanımlıdır.  Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n \n \n >>> Kolas Referans Numarası \n kolasRefNo \n N12 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı KOLAS tarafından ilgili sorguya özel olarak üretilmiş referans numarasıdır. \n \n \n >>> Kolas Hesap Türü \n kolasHspTur \n AN1 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı hesap türü bilgisidir:   TR.OHVPS.DataCode.KolasHspTur  sıralı veri değerlerinden birini alır. \n \n \n > Karekod \n kkod \n Kompleks:Karekod \n K \n \n \n \n >> Akış Türü \n aksTur \n AN2 \n Z \n TR.OHVPS.DataCode.KareKodAksTur  sıralı veri değerlerinden birini alır. Kolay Adresi Sistemi ile birlikte kullanılmaz. \n \n \n >> Referansı \n kkodRef \n AN1..12 \n K \n Karekod referans numarasını  gösterir. \n \n \n >> Üretici Kodu \n kkodUrtcKod \n AN4 \n Z \n Karekod üreticisinin kodu.  Ödeme Hizmeti Sağlayıcıları ve TCMB tarafından uygun görülen ödeme sistemi işleticisi TR Karekod üretebilmek için BKM’ye kayıt başvurusu yaparak karekod üretici kodu alabileceklerdir. Bankalar EFT kodlarını kullanacak olup ayrıca kayıt yaptırmalarına gerek bulunmamaktadır. 4 haneden kısa değerlerin sol tarafı ’0’ karakteri ile tamamlanmalıdır. \n \n \n > Ödeme Ayrıntıları \n odmAyr \n Kompleks: OdemeAyrintilari \n Z \n \n \n \n >> Ödeme Kaynağı \n odmKynk \n AN1 \n Z \n Ödemenin başlatıldığı kaynağı belirtir.  TR.OHVPS.DataCode.OdemeKaynak  sıralı veri değerlerinden “O” değerini alır. “O” değeri “Açık bankacılık aracılığı ile gönderilen ödemelerde kullanılır.” anlamını taşımaktadır. \n \n \n >> Ödeme Amacı \n odmAmc \n AN2 \n Z \n TR.OHVPS.DataCode.OdemeAmaci  sıralı veri değerlerinden birini alır. Karekod akışında, FAST Karekod Veri Organizasyonundaki 62-08: alanında tanımlı Ödeme Amacı verisi kullanılır. \n \n \n >> Referans Bilgisi \n refBlg \n AN1..140 \n K \n Ödemeye özel  Referans Bilgisi  alanıdır. Karekod işlemi değil ise zorunludur.  -\tKişiden kişiye fon aktarımlarda: Gün içerisinde ÖHK özelinde, her işleme özel biricik olarak oluşturulan referans bilgisidir.  Karekod P2P akışı için referans bilgisi (Karekod referans numarası değil, işleme özel üretilecek referans bilgisidir.) YÖS tarafından atanacaktır.  -\tE-ticaret işlemlerinde sipariş/takip numarası/müşteri/abone numarası  - İşyeri Ödemesi Karekod akışında, FAST Karekod Veri Organizasyonundaki  -\t62-01: alanında tanımlı Fatura Numarası   -\t62-06: alanında tanımlı Müşteri Numarası   verilerinden biri kullanılır. \n \n \n >> Açıklama \n odmAcklm \n AN1..200 \n İ \n ÖBHS’nin ÖHK’dan aldığı ya da kendisinin atadığı işlem açıklaması bilgisi.  FAST/PÖS sistemi üzerinden yapılan ödemeler için açıklama bilgisi girilirse boşluk karakteri girilerek geçilemez. En az bir alfasayısal karakter girilmesi zorunludur. \n \n \n >> ÖHK Mesaj Alanı \n ohkMsj \n AN1..200 \n İ \n HHS’nin ÖHK’ya göstermek üzere ilettiği mesaj. \n \n \n >> Ödeme Sistemi \n odmStm \n AN1 \n Z \n TR.OHVPS.DataCode.OdemeSistemi  sıralı veri değerlerinden birini alır. \n \n \n >> Beklenen Ödeme Zamanı \n bekOdmZmn \n ISODateTime \n K \n İşlemin yönlendirildiği ödeme sistemi PÖS ise ve PÖS işlem saatleri dışında ise işlemin yapılabileceği ilk zaman bilgisidir. Bu alan ileri vadeli ödemeler için düşünülmüştür. İlk fazda doldurulmasına gerek olmadığı düşünülmektedir. \n \n \n İşyeri Ödeme Bilgileri \n isyOdmBlg \n Kompleks:IsyeriOdemeBilgileri \n K \n İşyeri ödemelerinde kullanılabilecek alanlardır. Karekodlu işyeri ödemesi akışında bu alanlar dolu geldiği için isteğe bağlı olarak gönderilebilir. isyOdmBlg alanlarının en az birinin dolu olması durumunda yanıtta yer alır. \n \n \n > İşyeri Kategori Kodu \n isyKtgKod \n AN4 \n K \n İşlemin, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). Ödeme Amacı = ‘06’ ya da ‘04’ olan ödeme işlemleri için doldurulabilir. \n \n \n > Alt İşyeri Kategori Kodu \n altIsyKtgKod \n AN4 \n K \n İşlem alt işyerinden gerçekleştiriliyorsa, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). \n \n \n >Üye İş Yeri Tekil Kimlik \n genelUyeIsyeriNo \n AN8 \n K \n İşyeri kayıt sisteminde kayıtlı İşyeri için BKM tarafından üretilmiş olan genel işyeri numarasıdır (GlobalMerchantId) 8 haneden küçük gönderiminde başa ‘0’ eklenmelidir. Örnek değer ‘01630618’ \n 6.3.\tADIM 2- Ödeme Emri Rızasının Yetkilendirilmesi \n   \n Şekil 6: Ödeme Emri Rızasının Yetkilendirilmesi \n ÖBHS, ÖHK’nın ödeme emrini yetkilendirmesi isteğini iletir. Ödeme emrinin yetkilendirilmesi, HHS tarafından gerçekleştirilen Yönlendirme veya Ayrık GKD yöntemiyle yapılır. \n \n \n Yönlendirmeli doğrulama akışında , ÖBHS ÖHK’yı HHS’ye yönlendirir. \n \n ÖBHS tarafından yönlendirme, bir önceki adımdaki RizaNo’yu içerir. \n Yönlendirmenin RizaNo’yu içermesi sayesinde, HHS hangi ödeme emriyle ilişkili olarak yönlendirme yapıldığını ilişkilendirebilir. \n HHS, ÖHK için GKD sürecini işletir. \n \n ÖHK’yı doğrularsa, \n \n ÖHK -bir önceki adımda seçmediyse- borçlu hesabını seçer. \n HHS, ödeme emri rıza kaynağının durumunu “Yetkilendirildi” olarak günceller. \n HHS, ÖHK’yı “olumlu yönlendirme akışı” ile ÖBHS tarafından tanımlanan yönlendirme adresine yönlendirir: \n \n \n \n yonAdr?rizaDrm=Y&yetKod=xx&rizaNo=yy&rizaTip=O&drmKod=zzz\n \n ÖHK’yı doğrulayamazsa, \n1. HHS, ödeme emri rıza kaynağının durumunu “Yetki İptal” olarak günceller. \n2. HHS, ÖHK’yı “olumsuz yönlendirme akışı” ile ÖBHS tarafından tanımlanan yönlendirme adresine yönlendirir: \n yonAdr?rizaDrm=I&rizaNo=yy&rizaTip=O&drmKod=zzz\n \n HHS tarafında oluşabilecek bir hata durumunun YÖS’e aktarılması gerektiği durumlar olabilir. Bu durumda yonlendirme adresinde hata kodu parametresi zorunlu olarak iletilmelidir. \nHata açıklamalarının neler olabileceği ve YÖS’ün kendi uygulamasında bu hatayı ne şekilde göstereceği aşağıda tariflenmiştir. \n yonAdr?rizaDrm=I&rizaNo=yy&rizaTip=O&rizaIptDtyKod=11&drmKod=zzz\n \n URL’de iletilen “Rıza İptal Detay Kodu” Rıza durumları bölümünde (4. Bölüm) belirtilen hata kodları ile aynı olacak şekilde tasarlanmıştır. GKD sırasında yapılması gereken kontroller 5.3 bölümünde detaylandırılmıştır. \n \n Ayrık doğrulama akışında , HHS, ÖHK’nın ödeme emrini başlattığı uygulamadan farklı olabilecek bir “doğrulama” uygulamasında işlemi doğrulamasını ister.\n \n Ayrık akış ÖBHS’nin farklı bir kanal kullanarak yetkilendirme isteği göndermesiyle başlatılır. \n Bu yetkilendirme isteği, yetkilendirilecek ödeme emri rızasının eşleştirileceği ÖHK’nın bulunması için ilgili veriyi taşır. \n HHS, ÖHK’yı doğrular. \n ÖHK -bir önceki adımda seçmediyse- borçlandırılacak hesabını seçer. \n HHS, ödeme emri rıza kaynağının durumunu “Yetkilendirildi” olarak günceller. \n \n \n \n Başarılı GKD sonrasında (rizaDrm=’Y’) ilgili rıza nesnesi için (belirli bir rizaNo) yetkilendirme kodunun (yetKod) alınmasının ardından erişim belirteci erişim adresine POST çağrısı yapılarak yetkilendirme kodu karşılığında erişim belirteci ve yenileme belirteci alınır. POST /erişim-belirteci erişim noktası EK-3’te açıklanmıştır. \n Erişim belirteci alındıktan sonra; HHS, ödeme emri rıza kaynağının durumunu “Yetki Kullanıldı” olarak günceller. \n 6.4.\tADIM 2.1 – Ödeme Emri Rızasının Sorgulanması (isteğe bağlı) \n   \n Şekil 7: “odemeEmriRizasi” nesnesinin sorgulanması (isteğe bağlı) \n GKD işleminin başarıyla tamamlanıp Ödeme Emri Rızasının yetkilendirilmesi esnasında, gönderen hesap seçiminin HHS ekranında yapıldığı durumlar olabilir. Bu durumlarda ödeme emri isteğinde gönderen hesap bilgileri alanının zorunlu olması nedeniyle,  OdemeEmriRizasi  nesnesi sorgulanarak gönderen hesap bilgileri (hesap numarası ve/veya hesap referansı) alınmalıdır. HHS, “ ADIM 2 -Ödeme Emri Rızasının Yetkilendirilmesi ” akışında ÖHK’nın hesapları arasında seçim yapmasını ve seçilen hesap bilgisinin  OdemeEmriRizasi  nesnesine işler. \n GET /odeme-emri-rizasi/{RizaNo} \n ÖBHS, mevcut durumunu kontrol etmek için, oluşturulan bir  OdemeEmriRizasi  kaynağının durumunu isteğe bağlı olarak alabilir. \n \n Sorgulama yapılan ödeme emri rızası HHS tarafında bulunmuyor ise  \"TR.OHVPS.ResourceNotFound\"  hatası dönülür. \n \n Servis başarılı yanıtında Tablo 8’de belirtilen \"OdemeEmriRizasi\" nesnesini dönmektedir. \n Durum \n OdemeEmriRizasi  kaynağı için kullanılabilecek durum göstergeleri şu şekildedir: \n \n Yetki Bekleniyor \n Yetkilendirildi \n Yetki Kullanıldı \n Yetki Ödeme Emrine Dönüştü \n Yetki Sonlandırıldı \n Yetki İptal \n \n Ödeme Emri Rızası sonlandırıldı ve iptal statüsünde olan rıza'ların güncellenme zamanından(gnclZmn) 6 ay sonrasına kadar sorgulanabilir olması beklenmektedir. HHS'ler ilgili süre sonrasında yapılacak rıza sorgularına \" TR.OHVPS.Resource.NotFound\"  uyarısı verebilir. YÖS'ler tarafından iptal ve sonlandırıldı statüsünde olan rızalar için sorgulama yapmamalıdır. \n Ödeme emri rıza durum değişiklikleri 4.2 bölümünde detaylandırılmıştır. \n BAŞARILI YANIT: \n GET /odeme-emri-rizasi/{RizaNo}  yanıtının (RESPONSE) gövdesinde (BODY)  “OdemeEmriRizasiİstegi” nesnesi kullanılır. İstek başarıyla sonuçlanırsa HHS kaynak sunucusunda Tablo-8’de yer alan parametreleri içeren “OdemeEmriRizasi” oluşturulur. \n Gönderen Hesap Bilgisinin, ADIM 2 (Ödeme Emri Rızasının Yetkilendirilmesi) sonrasında HHS ekranından seçildiği akışta “OdemeEmriRizasi” nesnesi güncellenir ve ÖBHS  GET /odeme-emri-rizasi/{RizaNo}  isteği yaparak güncel gönderen hesap bilgisi bilgisini de içeren “OdemeEmriRizasi” nesnesini çekmelidir. \n Çerçeve sözleşme kapsamında olmayan tek seferlik ödeme işlemlerinde, Kimlik Türü ve Kimlik Verisi bilgilerinin ödeme emri rızası sırasında gönderimi zorunlu değildir. Başarılı GKD sonrası, yani erişim belirteci alındığında, ödeme emri oluşmadan önce, YÖS’ün ödeme emri rızasını sorgulayarak bu bilgileri alması ve ödeme emrini oluştururken Kimlik Türü, Kimlik Verisi ve Gönderen Ünvan alanlarını dolu olarak göndermesi beklenmektedir.  Ancak rıza durumu “Yetki Bekleniyor - B”, “Yetkilendirildi - Y” ve “Yetki İptal - I” statülerinde ise, ödeme emri rızası sorgulamasında, HHS’nin Kimlik Türü ve Kimlik Verisi bilgisini YÖS ile paylaşmaması gerekmektedir. \n 6.5.\tADIM 3- Ödeme Emrinin Oluşturulması \n   \n Şekil 8: Ödeme Emrinin Oluşturulması \n POST /odeme-emri \n ÖHK’nın Güçlü Kimlik Doğrulama ile işlemi yetkilendirmesi sonrasında, ÖBHS OdemeEmri kaynağını oluşturur. \n Ödeme emri (OdemeEmri) uygun ödeme kaynağına POST isteği yapılarak başlatılır. \n \n Erişim Belirteci kontrolü yapılır. Geçerli bir Erişim Belirteci yok ise  \"TR.OHVPS.Connection.InvalidToken\"  hatası dönülür. \n HHS; istek mesajında yer alan alanların ÖHVPS API İlke ve Kuralları dökümanında belirtilen şartları sağlayacak şekilde zorunluluk, uzunluk ve içerik kontrollerini yapar. (Zorunlu) Kontrollere istinaden hata oluşması durumunda  \"TR.OHVPS.Resource.InvalidFormat\"  hatası dönülür. \n HHS, hhsKod’un kendisine ait olduğunu ve istek başlığındaki x-aspsp-code değeri ile aynı olduğunu kontrol eder. Farklı olması durumunda  ”TR.OHVPS.Connection.InvalidASPSP”  hatası dönülür. \n HHS, yosKod’un geçerli bir Ödeme Hizmeti Sağlayıcısı Kodu olduğunu ve istek başlığındaki x-tpp-code değeri ile aynı olduğunu kontrol eder. Farklı olması durumunda  ”TR.OHVPS.Connection.InvalidTPP”  hatası dönülür. \n Rıza durumu kontrol edilir.\n \n B: Yetki Bekleniyor, Y: Yetkilendirildi  ya da E: Yetki Ödeme Emrine Dönüştü ise  “TR.OHVPS.Resource.ConsentMismatch”  hatası dönülür. \n I: Rıza İptal ya da S: Yetki Sonlandırıldı ise  ”TR.OHVPS.Resource.ConsentRevoked”  hatası dönülür. \n RizaDurumu “K: Yetki Kullanıldı” ise kontrollere devam edilir. \n \n \n POST /odeme-emri-rizasi ile POST /odeme-emri isteklerinde istek alanların aynı olması beklenmektedir. HHS tarafından kontrolü sağlanmalıdır. Ödeme emri rızasında gönderilen değerlerden farklı bir değer gönderildiği durumda  “TR.OHVPS.Business.FieldMismatch”  hatası dönülür. \n HHS tarafından Ödeme Emrinin Oluşturulması API'sine istek yapıldığında müşterinin bakiyesi kontrol edilir. Bakiye yetersiz ise HHS tarafından  \"TR.OHVPS.Business.BalanceInsufficient\"  hatası dönülür. Müşterinin hesabında bakiye olması ancak günlük işlem limitine takılması durumunda ise  TR.OHVPS.Business.ExceededTransactionLimit  hatası dönülür. \n \n Yukarıdaki kontroller tamamlandıktan sonra, içerisinde OdemeEmriNo ve OdemeEmriDurumu değişkenleri de bulunan OdemeEmri nesnesi ÖBHS’ye döner ve RizaDurumu değişkenin değeri “Yetki Ödeme Emrine Dönüştü” olarak güncellenir. \n \n POST verisindeki Gönderen Hesap Numarası ve Alıcı Hesap Numarasının aynı bankaya aitse HAVALE değilse FAST veya PÖS iş akışına geçilir. \n OdemeEmriDurumu “Gerçekleşti” / “Gönderildi” / “Gerçekleşmedi” olarak güncellenir. \n \n BAŞARILI İSTEK: \n Tablo 9: “OdemeEmriIstegi” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n HHS tarafından ödeme emri oluşturulması sırasında yapılması gereken kontrol ve işlemler \n FAST A01 PÖS M01 mesaj mapping \n \n \n \n \n Riza Bilgileri \n rzBlg \n Kompleks: RizaBilgileri \n Z \n \n \n \n \n \n > Rıza No \n rizaNo \n AN1..128 \n Z \n OdemeEmriRızasi nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n \n \n > Oluşturma Zamanı \n olusZmn \n ISODateTime \n Z \n OdemeEmriRizasi nesnesinin oluşturulma zamanı \n \n \n \n \n > Rıza Durumu \n rizaDrm \n AN1 \n Z \n TR.OHVPS.DataCode.RizaDurumu  sıralı veri tipini değerlerinden birini alır. \n \n \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n HHS, hhsKod’un kendisine ait olduğunu ve istek başlığındaki x-aspsp-code değeri ile aynı olduğunu kontrol eder. \n Gönderen katılımcı kodu (yani bankanın FAST/PÖS’teki Katılımcı kodu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n HHS, yosKod’un geçerli bir Ödeme Hizmeti Sağlayıcısı Kodu olduğunu ve istek başlığındaki x-tpp-code değeri ile aynı olduğunu kontrol eder. \n YosKod \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n \n \n >Yetkilendirme Yöntemi \n yetYntm \n AN1 \n Z \n TR.OHVPS.DataCode.GkdTur  sıralı veri türü değerlerinden birini alır. \n \n \n \n \n >Yönlendirme Adresi \n yonAdr \n AN1..1024 \n K \n Yönlendirmeli güçlü kimlik doğrulama için zorunludur. HHS, müşteri uygulama / tarayıcısını yönlendirmeli akışta bu alanda belirtilen YÖS adresine yönlendirir. \n \n \n \n \n \n \n \n \n \n \n \n \n \n >Ayrık GKD \n ayrikGkd \n Kompleks:AyrikGkd \n K \n Ayrık güçlü kimlik doğrulama için zorunlu. \n yetYntm = A gönderilmiş ise ayrikGkd nesnesinin dolu gönderilmesi zorunludur. yetYntm = Y için bu nesne iletilmemelidir. \n \n \n \n >>OHK Tanım Tip \n ohkTanimTip \n AN8 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım tipleridir. İstek içerisindeki veri değiştirilmeden iletilir. \n \n \n \n \n >>OHK Tanım Değer \n ohkTanimDeger \n AN1..30 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım değeridir. ohkTanimTip'i ile uyumlu değerdir.  İstek içerisindeki veri değiştirilmeden iletilir. \n \n \n \n \n >HHS Yönlenme Adresi \n hhsYonAdr \n AN1..1024 \n K \n Yönlendirmeli akış türünde GKD doğrulama bilgilerinin girilebilmesi için uygulamadan açılacak yönlendirme sayfasının adresi. Ayrık GKD akışında bu alan dönülmemelidir. \n \n \n \n \n >Yetkilendirme Tamamlanma Zamanı \n yetTmmZmn \n ISODateTime \n Z \n Yetkilendirme akışının tamamlanması gereken son zamanı gösterir.   Rıza durumu Yetkilendirildi statüsüne geçene kadarki süredir. \n \n \n \n \n Ödeme Başlatma \n odmBsltm \n Kompleks: OdemeBaslatma \n Z \n \n \n \n \n \n > Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n \n \n >> Kimlik Türü \n kmlkTur \n AN1 \n Z \n TR.OHVPS.DataCode.KimlikTur  sıralı veri türü değerlerinden birini alır. \n Çerçeve sözleşme kapsamındaki ödemelerde kullanımı zorunludur. Ödeme Emri Rizası Nesnesindeki Kimlik Numarası Türü verisi ile aynı olmalıdır. Kurum adına yapılan (ticari) ödemelerde, kurum adına işlem yapan kullanıcının kimlik türünün bu alanda gönderilmesi zorunludur. \n \n \n \n >> Kimlik Verisi \n kmlkVrs \n AN1..30 \n Z \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır. TR.OHVPS.DataCode.KimlikTur  değerine göre uzunluk ve formatı değişir. \n Çerçeve sözleşme kapsamındaki ödemelerde kullanımı zorunludur. HHS, ÖBHS tarafından iletilmesi durumunda Kimlik Verisi üzeriden çapraz kontroller uygulamalı ve Kimlik Verisini temel alarak GKD gerçekleştirmelidir. Ödeme Emri Rizası Nesnesindeki Kimlik Numarası verisi ile aynı olmalıdır. Gerçek kişi tarafından yapılan ödemelerde, 1. HHS, Gönderen Adı ve Gönderen Hesap Numarasını ödeme emri isteğinde (Havale/FAST/PÖS) gönderir. - Gönderen Adı ve diğer tüm müşteri bilgileri, Kimlik Numarası üzerinden elde edillir. Pasaport numarasına ilişkin kontroller HHS'nin halihazırda kullandığı veri, akış ve tabi olduğu diğer düzenlemelerdeki işleyiş ile aynı şekilde ele alınmalıdır. Kurum adına yapılan (ticari) ödemelerde, kurum adına işlem yapan kullanıcının kimlik verisi bu alanda gönderilebilmesi zorunludur. \n GonKimN / Psp \n \n \n >> Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür. TR.OHVPS.DataCode.KurumKimlikTur  sıralı veri türü değerlerinden birini alır. \n Kurum adına yapılan (ticari) ödemelerde kullanımı zorunludur. Ödeme Emri Rizası Nesnesindeki Kurum Kimlik Türü verisi ile aynı olmalıdır. \n \n \n \n >> Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.   TR.OHVPS.DataCode.KurumKimlikTur  değerine göre uzunluk ve formatı değişir. \n Kurum adına yapılan (ticari) ödemelerde kullanımı zorunludur. Ödeme Emri Rizası Nesnesindeki Kurum Kimlik Verisi ile aynı olmalıdır. \n GonKimN / VKN \n \n \n >> Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur  sıralı veri türü değerlerinden birini alır  (B: Bireysel, K:Kurumsal) \n Kurum adına yapılan ödemelerde K değerini alır. Kurum Kimlik Türü ve Kurum Kimlik Verisi alanlarının giilmiş olduğu çapraz olarak kontrol edilir.  Ödeme Emri Rizası Nesnesindeki ÖHK Türü ile aynı olmalıdır. \n \n \n \n > İşlem Tutarı \n islTtr \n Kompleks:Tutar \n Z \n \n \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para Birimi.  Karekod akışında, FAST Karekod Veri Organizasyonundaki  53: (Para Birimi)  alanında tanımlı Para Birimi verisi kullanılır. \n Ödeme Emri Rizası Nesnesindeki Para Birimi verisi ile aynı olmalıdır. \n \n \n \n >> Tutar \n ttr \n AN1..24 \n Z \n ÖBHS'nin ön yüzde kullanıcıdan teyit aldığı tutar.   Karekod akışında, FAST Karekod Veri Organizasyonundaki  54: (Tutar)  alanında tanımlı Tutar verisi kullanılır.   Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n Ödeme Emri Rizası Nesnesindeki İşlem Tutarı verisi ile aynı olmalıdır. HHS işlem tutarı ödeme mesajında (Havale/FAST/PÖS) aynen taşınmak durumundadır. \n Ttr \n \n \n > Gönderen \n gon \n Kompleks:Hesap \n Z \n \n \n \n \n \n >> Ünvan \n unv \n AN3..140 \n Z \n Gönderen kişinin ad soyad ya da ticari ünvan bilgisi. \n HHS ve ÖBHS verisi tutarlı olmalıdır.  ÖBHS verisi ile HHS verisinin farklılaşması durumunun ise risk değerlendirme sistemlerine girdi olarak kullanması tavsiye edilir. \n GonAd \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n K \n ÖBHS'nin ön yüzünden seçtirdiği/kullanıcıya girdiği IBAN Hesap numarası ya da Hesap Referansı alanlarından en az birinin dolu olarak gelmesi gerekmektedir. \n Ödeme Emri Rizası Yanıtı Nesnesindeki Gönderen Hesap Numarası verisi ile aynı olmalıdır. \n GonHesN \n \n \n >> Hesap Referansı \n hspRef \n AN5..40 \n K \n ÖBHS’nin aynı zamanda HBHS olduğu durumda müşteri rızası tesis edilmiş bir hesabın referansı üzerinden de ödeme başlatılabilir. GKD sonrası HHS ekranında seçilen Hesap Referansı POST işleminin yanıtında dönülemez ancak isteğe bağlı GET sorgusu ile dönülebilir. Hesap Numarası kullanılıyorsa Hesap Referansı kullanılmayabilir.   Ödeme Sistemine doğrudan katılımcı olmayan ÖHS'ler müşterilerine IBAN sunmadıkları için hspRef üzerinden ödeme başlatabilirler. Bu durumda hesap numarası boş olacaktır. \n \n \n \n \n > Alıcı \n alc \n Kompleks:Hesap \n Z \n \n \n \n \n \n >> Ünvan \n unv \n AN3..140 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen adres kaydı yaptırmış olan alıcının maskeli ad-soyadı veya maskeli ticari ünvan bilgisidir. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen ünvan bilgisidir. \n YÖS’ten alıcı ad soyad bilgisi geliyorsa ve HHS'nin kontrolünden başarılı bir şekilde geçti ise HHS'nin tekrar alıcı ad soyad bilgisi için giriş yaptırmasına gerek bulunmamaktadır. \n AlAd \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n Z \n Alıcının Hesap Numarası alanıdır (IBAN). Kolay Adres  sorgusunda dönülen adres kaydı yaptırmış olan alıcının maskeli IBAN bilgisidir. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen IBAN bilgisidir. Karekod akışında, FAST Karekod Veri Organizasyonundaki 30-01: alanında tanımlı İş Yeri IBAN verisi kullanılır. \n Ödeme Emri Rizası Yanıtı Nesnesindeki Alıcı Hesap Numarası verisi ile aynı olmalıdır.  Kontroller başarıyla sonuçlanırsa, bilgi FAST/PÖS AlHesN alanına doğrudan aktarır ve FAST/PÖS Alan Katılımcı Kodu (AlKK) olarak Alıcı HHS Kodu kullanılır.  KOLAS sorgusu sonucunda ödeme emrinde iletilen maskeli bilgi ile HHS’nin kendi ödeme emri rızası isteğinde tuttuğu KOLAS sorgusundan dönülen bilgi maskelenerek karşılaştırılır. Eğer aynı değilse uygun hata kodu dönülerek işlem sonlandırılır. \n AlHesN \n \n \n >> Kolay Adres \n kolas \n Kompleks:Kolas \n K \n \n \n \n \n \n >>> Kolas Türü \n kolasTur \n AN1 \n Z \n Müşterinin sorgulamak istediği Kolay Adres Tipi değeridir.  TR.OHVPS.DataCode.KolasTur  sıralı veri türü değerlerinden birini alır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n Ödeme Emri Rizası Yanıtı Nesnesindeki Kolay Adres Tipi verisi ile aynı olmalıdır. \n \n \n \n >>> Kolas Değeri \n kolasDgr \n AN7..50 \n Z \n Müşterinin eklediği, HHS (FAST katılımcısı) tarafından doğrulanmış Kolay Adres değeridir. Alabileceği değerler BKM “Kolay Adresleme Sistemi Uygulama Kuralları” belgesinde tanımlıdır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n Ödeme Emri Rizası Yanıtı Nesnesindeki Kolay Adres Değeri verisi ile aynı olmalıdır. \n FAST (KolasRef) \n \n \n >>> Kolas Referans Numarası \n kolasRefNo \n N12 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı KOLAS tarafından ilgili sorguya özel olarak üretilmiş referans numarasıdır. \n \n KolasRef ( hem FAST hem de PÖS için aynı) \n \n \n >>> Kolas Hesap Türü \n kolasHspTur \n AN1 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı hesap türü bilgisidir:   TR.OHVPS.DataCode.KolasHspTur  sıralı veri değerlerinden birini alır. \n \n \n \n \n > Karekod \n kkod \n Kompleks:Karekod \n K \n \n \n \n \n \n >> Akış Türü \n aksTur \n AN2 \n Z \n Karekod Akış Türü Karekod ödemesinin hangi akışla gerçekleştirildiğini gösterir.  Kolay Adresi Sistemi ile birlikte kullanılmaz.  01: FAST katılımcısından dinamik doğrulama hizmeti alınan işyeri ödemesi  02: FAST katılımcısından statik doğrulama hizmeti alınan işyeri ödemesi 03: Kişiden kişiye ödemeler \n Ödeme Emri Rizası Nesnesindeki Kare Kod Akış Türü verisi ile aynı olmalıdır. \n FAST: KrkdAksTur \n \n \n >> Referansı \n kkodRef \n AN1..12 \n K \n Karekod referans numarasını gösterir.  Okunan karekodda referans değeri varsa kullanılması zorunludur. Kolay Adresi Sistemi ile birlikte kullanılmaz. \n Ödeme Emri Rizası Nesnesindeki Karekod Referansı verisi ile aynı olmalıdır.  Çevrimiçi doğrulama hizmeti alınmayan statik karekodlar için Referans numarasının bulunmadığı durumlarda HHS tarafından “NONREF” ifadesi girilir. \n FAST: Karekod Referansı (KrkdRef) \n \n \n >> Üretici Kodu \n kkodUrtcKod \n AN4 \n Z \n Karekod üreticisinin kodu.  Ödeme Hizmeti Sağlayıcıları ve TCMB tarafından uygun görülen ödeme sistemi işleticisi TR Karekod üretebilmek için BKM’ye kayıt başvurusu yaparak karekod üretici kodu alabileceklerdir. Bankalar EFT kodlarını kullanacak olup ayrıca kayıt yaptırmalarına gerek bulunmamaktadır. 4 haneden kısa değerlerin sol tarafı ’0’ karakteri ile tamamlanmalıdır. \n \n \n \n \n > Ödeme Ayrıntıları \n odmAyr \n Kompleks: OdemeAyrintilari \n Z \n \n \n \n \n \n >> Ödeme Kaynağı \n odmKynk \n AN1 \n Z \n Ödemenin başlatıldığı kaynağı belirtir.  TR.OHVPS.DataCode.OdemeKaynak  sıralı veri değerlerinden “O” değeri atanarak iletilmelidir. “O” değeri “Açık bankacılık aracılığı ile gönderilen ödemelerde kullanılır.” anlamını taşımaktadır. \n Ödeme Emri Rizası Nesnesindeki Ödeme Kaynağı verisi ile aynı olmalıdır. HHS tarafından ödeme mesajında (FAST/PÖS) aynen taşınmak durumundadır. \n FAST/PÖS: OdmKynk \n \n \n >> Ödeme Amacı \n odmAmc \n AN2 \n Z \n TR.OHVPS.DataCode.OdemeAmaci  sıralı veri değerlerinden birini alır. \n Ödeme Emri Rizası Nesnesindeki Ödeme Amacı verisi ile aynı olmalıdır. HHS tarafından ödeme mesajında (FAST/PÖS) aynen taşınmak durumundadır. \n FAST (OdmAmc)/PÖS(OdmAmaci) \n \n \n >> Referans Bilgisi \n refBlg \n AN1..140 \n K \n Ödemeye özel  Referans Bilgisi  alanıdır. Karekod işlemi değil ise zorunludur.  -\tKişiden kişiye fon aktarımlarda: Gün içerisinde ÖHK özelinde, her işleme özel biricik olarak oluşturulan referans bilgisidir.  Karekod P2P akışı için referans bilgisi (Karekod referans numarası değil, işleme özel üretilecek referans bilgisidir.) YÖS tarafından atanacaktır.  -\tE-ticaret işlemlerinde sipariş/takip numarası/müşteri/abone numarası  -İşyeri Ödemesi Karekod akışında, FAST Karekod Veri Organizasyonundaki  -\t62-01: alanında tanımlı Fatura Numarası   -\t62-06: alanında tanımlı Müşteri Numarası   verilerinden biri kullanılır. \n Ödeme Emri Rizası Nesnesindeki Referans Bilgisi verisi ile aynı olmalıdır. \n RefBlg (Hem FAST hem de PÖS için aynı) \n \n \n >> Açıklama \n odmAcklm \n AN1..200 \n İ \n ÖBHS’nin ÖHK’dan aldığı ya da kendisinin atadığı işlem açıklaması bilgisi.  FAST/PÖS sistemi üzerinden yapılan ödemeler için açıklama bilgisi girilirse boşluk karakteri girilerek geçilemez. En az bir alfasayısal karakter girilmesi zorunludur. \n \n FAST/PÖS Acklm \n \n \n >> ÖHK Mesaj Alanı \n ohkMsj \n AN1..200 \n İ \n HHS’nin ÖHK’ya göstermek üzere ilettiği mesaj. \n \n \n \n \n >> Ödeme Sistemi \n odmStm \n AN1 \n Z \n TR.OHVPS.DataCode.OdemeSistemi  sıralı veri değerlerinden birini alır. \n Ödeme Emri Rizası Nesnesindeki Ödeme Sistemi verisi ile aynı olmalıdır. \n \n \n \n >> Beklenen Ödeme Zamanı \n bekOdmZmn \n ISODateTime \n K \n İşlemin yönlendirildiği ödeme sistemi PÖS ise ve PÖS işlem saatleri dışında ise işlemin yapılabileceği ilk zaman bilgisi \n \n \n \n \n İşyeri Ödeme Bilgileri \n isyOdmBlg \n Kompleks:IsyeriOdemeBilgileri \n K \n İşyeri ödemelerinde kullanılabilecek alanlardır. Karekodlu işyeri ödemesi akışında bu alanlar dolu geldiği için isteğe bağlı olarak gönderilebilir. isyOdmBlg alanlarının en az birinin dolu olması durumunda istekte yer alır.  İşyeri Ödeme Bilgileri, YÖS uygulama önyüzünde ÖHK’nın bildiği ve girişi yapılması beklenen bir bilgi olmamalıdır. YÖS tarafından sistemsel olarak doldurulması gereklidir. \n \n \n \n \n > İşyeri Kategori Kodu \n isyKtgKod \n AN4 \n K \n İşlemin, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). Ödeme Amacı = ‘06’ ya da ‘04’ olan ödeme işlemleri için doldurulabilir. 4 karakterden küçük değerlerin başına 0 eklenerek iletilmesi gereklidir. \n \n \n \n \n > Alt İşyeri Kategori Kodu \n altIsyKtgKod \n AN4 \n K \n İşlem alt işyerinden gerçekleştiriliyorsa, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). 4 karakterden küçük değerlerin başına 0 eklenerek iletilmesi gereklidir. \n \n \n \n \n >Üye İş Yeri Tekil Kimlik \n genelUyeIsyeriNo \n AN8 \n K \n İşyeri kayıt sisteminde kayıtlı İşyeri için BKM tarafından üretilmiş olan genel işyeri numarasıdır (GlobalMerchantId) 8 haneden küçük gönderiminde başa ‘0’ eklenmelidir. Örnek değer ‘01630618’ \n \n \n \n \n \n BAŞARILI YANIT: \n POST işleminin RESPONSE gövdesini (BODY) oluşturan “OdemeEmri” nesnesi Tablo-10’daki parametrelerden oluşur: \n Tablo 10: “OdemeEmri” nesnesi \n \n \n \n Alan Adı \n JSON Alan Adı \n Format: Veri modeli İsmi \n Zorunlu / Koşullu / İsteğe bağlı \n Açıklama \n \n \n \n \n Riza Bilgileri \n rzBlg \n Kompleks: RizaBilgileri \n Z \n \n \n \n > Rıza No \n rizaNo \n AN1..128 \n Z \n OdemeEmriRızasi nesnesinin oluşturulması esnasında HHS kaynak sunucusu tarafından atanan biricik tanımlayıcı \n \n \n > Oluşturma Zamanı \n olusZmn \n ISODateTime \n Z \n OdemeEmriRizasi nesnesinin oluşturulma zamanıdır. \n \n \n > Rıza Durumu \n rizaDrm \n AN1 \n Z \n TR.OHVPS.DataCode.RizaDurumu  sıralı veri tipini değerlerinden birini alır. \n \n \n Katılımcı Bilgisi \n katilimciBlg \n Kompleks:KatilimciBilgisi \n Z \n Katılımcılara atanmış kod bilgileridir. \n \n \n >Hesap Hizmeti Sağlayıcısı Kodu \n hhsKod \n AN4 \n Z \n İsteğin iletildiği Hesap Hizmeti Sağlayıcısının kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n \n \n > Yetkili Ödeme Hizmeti Sağlayıcısı Kodu \n yosKod \n AN4 \n Z \n İsteği gönderen Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur. \n \n \n GKD \n gkd \n Kompleks:Gkd \n Z \n \n \n \n > Yetkilendirme Yöntemi \n yetYntm \n AN1 \n Z \n TR.OHVPS.DataCode.GkdTur  sıralı veri türü değerlerinden birini alır. \n \n \n > Yönlenme Adresi \n yonAdr \n AN1..1024 \n Z \n Yönlendirmeli güçlü kimlik doğrulama için zorunlu. HHS, müşteri uygulama / tarayıcısını yönlendirmeli akışta bu alanda belirtilen YÖS adresine yönlendirir. \n \n \n > Ayrık GKD \n ayrikGkd \n Kompleks:AyrikGkd \n K \n Ayrık güçlü kimlik doğrulama için zorunlu. \n \n \n >> OHK Tanım Tip \n ohkTanimTip \n AN8 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım tipleridir. İstek içerisindeki veri değiştirilmeden iletilir. \n \n \n >> OHK Tanım Değer \n ohkTanimDeger \n AN1..30 \n K \n ÖHK'nın HHS uygulaması tarafından tanınmasını sağlayacak tanım değeridir. ohkTanimTip'i ile uyumlu değerdir.  İstek içerisindeki veri değiştirilmeden iletilir. \n \n \n > HHS Yönlenme Adresi \n hhsYonAdr \n AN1..1024 \n K \n Yönlendirmeli akış türünde GKD doğrulama bilgilerinin girilebilmesi için uygulamadan açılacak yönlendirme sayfasının adresi. Ayrık GKD akışında bu alan dönülmemelidir. \n \n \n > Yetkilendirme Tamamlanma Zamanı \n yetTmmZmn \n ISODateTime \n Z \n Yetkilendirme akışının tamamlanması gereken son zamanı gösterir.   Rıza durumu Yetkilendirildi statüsüne geçene kadarki süredir. \n \n \n Emir Bilgileri \n emrBlg \n Kompleks: EmirBilgileri \n Z \n \n \n \n > Ödeme Emri Numarası \n odmEmriNo \n AN1..128 \n Z \n odemeEmri nesnesinin UID'sidir. OdemeEmrine İlişkin sorgular bu ID üzerinden yapılır. \n \n \n > Ödeme Emri Zaman \n odmEmriZmn \n ISODateTime \n Z \n odemeEmri nesnesinin oluşturulma zamanıdır. \n \n \n Ödeme Başlatma \n odmBsltm \n Kompleks: OdemeBaslatma \n Z \n \n \n \n > Kimlik \n kmlk \n Kompleks:Kimlik \n Z \n \n \n \n >> Kimlik Türü \n kmlkTur \n AN1 \n Z \n TR.OHVPS.DataCode.KimlikTur  sıralı veri türü değerlerinden birini alır. \n \n \n >> Kimlik Verisi \n kmlkVrs \n AN1..30 \n Z \n HHS nezdinde kullanıcı doğrulamasında kullanılan tanımlayıcıdır. TR.OHVPS.DataCode.KimlikTur  değerine göre uzunluk ve formatı değişir. \n \n \n >> Kurum Kimlik Türü \n krmKmlkTur \n AN1 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik türüdür. TR.OHVPS.DataCode.KurumKimlikTur  sıralı veri türü değerlerinden birini alır. \n \n \n >> Kurum Kimlik Verisi \n krmKmlkVrs \n AN1..30 \n K \n Kurum adına yapılan ödemelerde ÖHK’nın altında tanımlı olduğu tüzel kişilik için kullanılan kurum kimlik verisidir.   TR.OHVPS.DataCode.KurumKimlikTur  değerine göre uzunluk ve formatı değişir. \n \n \n >> Ödeme Hizmeti Kullanıcısı Türü \n ohkTur \n AN1 \n Z \n TR.OHVPS.DataCode.OhkTur  sıralı veri türü değerlerinden birini alır  (B: Bireysel, K:Kurumsal) \n \n \n > İşlem Tutarı \n islTtr \n Kompleks:Tutar \n Z \n \n \n \n >> Para Birimi \n prBrm \n AN3 \n Z \n Para Birimi.  Karekod akışında, FAST Karekod Veri Organizasyonundaki  53: (Para Birimi)  alanında tanımlı Para Birimi verisi kullanılır. \n \n \n >> Tutar \n ttr \n AN1..24 \n Z \n ÖBHS'nin ön yüzde kullanıcıdan teyit aldığı tutar.   Karekod akışında, FAST Karekod Veri Organizasyonundaki  54: (Tutar)  alanında tanımlı Tutar verisi kullanılır.    Tutar alanı regex patterni şu şekildedir: '^\\d{1,18}$|^\\d{1,18}\\.\\d{1,5}$' \n \n \n > Gönderen \n gon \n Kompleks:Hesap \n Z \n \n \n \n >> Ünvan \n unv \n AN3..140 \n Z \n Gönderen kişinin ad soyad ya da ticari ünvan bilgisi. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n K \n ÖBHS tarafından iletilip doğrulanan veya HHS ekranında seçilen Gönderen Hesap Numarası dönülür. \n \n \n >> Hesap Referansı \n hspRef \n AN5..40 \n K \n HHS tarafından hesap için atanan biricik tanımlıyıcıdır (uuid)  YÖS bazında farklılaşması gerekmez. ÖBHS’nin aynı zamanda HBHS olduğu durumda müşteri rızası tesis edilmiş bir hesabın referansı üzerinden de ödeme başaltılabilir. GKD sonrası HHS ekranında seçilen Hesap Referansı POST işleminin yanıtında dönülemez ancak isteğe bağlı GET sorgusu ile dönülebilir. Hesap Numarası kullanılıyorsa Hesap Referansı kullanılmayabilir.  Ödeme Sistemine doğrudan katılımcı olmayan ÖHS'ler müşterilerine IBAN sunmadıkları için hspRef üzerinden ödeme başlatabilirler. Bu durumda hesap numarası boş olacaktır. \n \n \n > Alıcı \n alc \n Kompleks:Hesap \n Z \n \n \n \n >> Ünvan \n unv \n AN3..140 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen adres kaydı yaptırmış olan alıcının maskeli ad-soyadı veya maskeli ticari ünvan bilgisidir. Kolas’tan dönen “account owner” alanı kullanılmalıdır. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen ünvan bilgisidir. \n \n \n >> Hesap Numarası \n hspNo \n AN26 \n Z \n Alıcının Hesap Numarası alanıdır (IBAN). Kolay Adres  sorgusunda dönülen adres kaydı yaptırmış olan alıcının maskeli IBAN bilgisidir. Kolay adres değil ise ÖBHS tarafından istek mesajında iletilen IBAN bilgisidir. Karekod akışında, FAST Karekod Veri Organizasyonundaki 30-01: alanında tanımlı İş Yeri IBAN verisi kullanılır. \n \n \n >> Kolay Adres \n kolas \n Kompleks:Kolas \n K \n \n \n \n >>> Kolas Türü \n kolasTur \n AN1 \n Z \n Müşterinin sorgulamak istediği Kolay Adres Tipi değeridir.  TR.OHVPS.DataCode.KolasTur  sıralı veri türü değerlerinden birini alır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n \n \n >>> Kolas Değeri \n kolasDgr \n AN7..50 \n Z \n Müşterinin eklediği, HHS (FAST katılımcısı) tarafından doğrulanmış Kolay Adres değeridir. Alabileceği değerler BKM “Kolay Adresleme Sistemi Uygulama Kuralları” belgesinde tanımlıdır.  Alıcı Hesap Numarası girilmediyse kullanımı zorunludur ve  Kolay Adres Tipi  alanıyla birlikte kullanılır. \n \n \n >>> Kolas Referans Numarası \n kolasRefNo \n N12 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı KOLAS tarafından ilgili sorguya özel olarak üretilmiş referans numarasıdır. \n \n \n >>> Kolas Hesap Türü \n kolasHspTur \n AN1 \n Z \n Kolay Adres Alıcı Sorgusunda başarılı sorgu sonucunda dönülen, BKM Kolay Adresleme Sistemi Uygulama Kuralları’nda tanımlı hesap türü bilgisidir:   TR.OHVPS.DataCode.KolasHspTur  sıralı veri değerlerinden birini alır. \n \n \n > Karekod \n kkod \n Kompleks:Karekod \n K \n \n \n \n >> Akış Türü \n aksTur \n AN2 \n Z \n Karekod Akış Türü Karekod ödemesinin hangi akışla gerçekleştirildiğini gösterir.  Kolay Adresi Sistemi ile birlikte kullanılmaz.  01: FAST katılımcısından dinamik doğrulama hizmeti alınan işyeri ödemesi  02: FAST katılımcısından statik doğrulama hizmeti alınan işyeri ödemesi 03: Kişiden kişiye ödemeler \n \n \n >> Referansı \n kkodRef \n AN1..12 \n K \n Karekod referans numarasını gösterir.  Okunan karekodda referans değeri varsa kullanılması zorunludur. Kolay Adresi Sistemi ile birlikte kullanılmaz. \n \n \n >> Üretici Kodu \n kkodUrtcKod \n AN4 \n Z \n Karekod üreticisinin kodu.  Ödeme Hizmeti Sağlayıcıları ve TCMB tarafından uygun görülen ödeme sistemi işleticisi TR Karekod üretebilmek için BKM’ye kayıt başvurusu yaparak karekod üretici kodu alabileceklerdir. Bankalar EFT kodlarını kullanacak olup ayrıca kayıt yaptırmalarına gerek bulunmamaktadır. 4 haneden kısa değerlerin sol tarafı ’0’ karakteri ile tamamlanmalıdır. \n \n \n > Ödeme Ayrıntıları \n odmAyr \n Kompleks: OdemeAyrintilari \n Z \n \n \n \n >> Ödeme Kaynağı \n odmKynk \n AN1 \n Z \n Ödemenin başlatıldığı kaynağı belirtir.  TR.OHVPS.DataCode.OdemeKaynak  sıralı veri değerlerinden “O”  değerini alır. “O” değeri “Açık bankacılık aracılığı ile gönderilen ödemelerde kullanılır.” anlamını taşımaktadır. \n \n \n >> Ödeme Durumu \n odmDrm \n AN2 \n Z \n TR.OHVPS.DataCode.OdemeDurumu  sıralı veri değerlerinden birini alır.      Ödeme Durumu alanı ile ilgili olarak HHS’ler tarafından YÖS’lere  OdemeEmri servisi yanıtında 02:Gönderildi, 04:Onayda Bekliyor,05:İşleme Alındı yanıtları gönderilebilir.   05:İşleme Alındı  durumu YÖS tarafından müşteriye gösterilmeyen bir koddur. Bu kod dönüldüğünde YÖS uygulamasında ÖHK’ya ödeme durumu  02:Gönderildi  olarak gösterilir. İşlemin son durumunun teyidi için YÖS ödeme emri sorgulaması yapmalıdır.   02:Gönderildi  durumu oluştuktan sonra YÖS tarafından ödeme emri sorgulaması yapılarak ödeme durumunun güncel değeri öğrenilir. Güncel değerler  01:Gerçekleşti,03:Gerçekleşmedi  durumları olabilir. \n \n \n >> Ödeme Amacı \n odmAmc \n AN2 \n Z \n TR.OHVPS.DataCode.OdemeAmaci  sıralı veri değerlerinden birini alır. \n \n \n >> Referans Bilgisi \n refBlg \n AN1..140 \n K \n Ödemeye özel  Referans Bilgisi  alanıdır. Karekod işlemi değil ise zorunludur.  -\tKişiden kişiye fon aktarımlarda: Gün içerisinde ÖHK özelinde, her işleme özel biricik olarak oluşturulan referans bilgisidir.  Karekod P2P akışı için referans bilgisi (Karekod referans numarası değil, işleme özel üretilecek referans bilgisidir.) YÖS tarafından atanacaktır.  -\tE-ticaret işlemlerinde sipariş/takip numarası/müşteri/abone numarası  - İşyeri Ödemesi Karekod akışında, FAST Karekod Veri Organizasyonundaki  -\t62-01: alanında tanımlı Fatura Numarası   -\t62-06: alanında tanımlı Müşteri Numarası   verilerinden biri kullanılır. \n \n \n >> Açıklama \n odmAcklm \n AN1..200 \n İ \n ÖBHS’nin ÖHK’dan aldığı ya da kendisinin atadığı işlem açıklaması bilgisi.  FAST/PÖS sistemi üzerinden yapılan ödemeler için açıklama bilgisi girilirse boşluk karakteri girilerek geçilemez. En az bir alfasayısal karakter girilmesi zorunludur. \n \n \n >> ÖHK Mesaj Alanı \n ohkMsj \n AN1..200 \n İ \n HHS’nin ÖHK’ya göstermek üzere ilettiği mesaj. \n \n \n >> Ödeme Sistemi \n odmStm \n AN1 \n Z \n TR.OHVPS.DataCode.OdemeSistemi  sıralı veri değerlerinden birini alır. \n \n \n >> Ödeme Sistem Numarası \n odmStmNo \n AN10..50 \n K \n Ödeme başarılı başlatıldıysa, ödemenin başlatıldığı sistemdeki referans numarası. Gerektiğinde ilgili ödeme sisteminde/HHS’de söz konusu ödemeye karşılık gelen mesajla bağlantı kurmada kullanılır.   Ödeme Hizmeti kullanıcısına işlemin takibi için gösterilebilir.  İşlemin yönlendirildiği ödeme sistemi FAST ya da PÖS ise sistemdeki ilgili mesajın Tarih, GönderenKatilimKodu ve SorguNumarasi değerlerinin birleşiminden oluşur. Bu 3 alan mevcutta kullanıldığı formatta aralarına dikey çizgi (Unicode U+2223) işareti koyularak, birleştirmeli ve iletilmelidir. Örn : Tarih|GönderenKatilimKodu|SorguNumarasi   Ödeme Havale/Virman işlemi ise HHS’nin üretmiş olduğu havale/virman numarasını içerir. Buradaki format da Tarih|GönderenKatilimKodu|Havale-virman numarası şeklinde olmalıdır. Havale/FAST/PÖS  ödeme yöntemleri için tarih alanı yyyy-aa-gg formatında 10 karakter olarak iletilmelidir. \n \n \n >> Beklenen Ödeme Zamanı \n bekOdmZmn \n ISODateTime \n K \n İşlemin yönlendirildiği ödeme sistemi PÖS ise ve PÖS işlem saatleri dışında ise işlemin yapılabileceği ilk zaman bilgisi \n \n \n İşyeri Ödeme Bilgileri \n isyOdmBlg \n Kompleks:IsyeriOdemeBilgileri \n K \n İşyeri ödemelerinde kullanılabilecek alanlardır. Karekodlu işyeri ödemesi akışında bu alanlar dolu geldiği için isteğe bağlı olarak gönderilebilir. isyOdmBlg alanlarının en az birinin dolu olması durumunda yanıtta yer alır. \n \n \n > İşyeri Kategori Kodu \n isyKtgKod \n AN4 \n K \n İşlemin, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). Ödeme Amacı = ‘06’ ya da ‘04’ olan ödeme işlemleri için doldurulabilir. \n \n \n > Alt İşyeri Kategori Kodu \n altIsyKtgKod \n AN4 \n K \n İşlem alt işyerinden gerçekleştiriliyorsa, ISO 18245:2003 uyumlu İşyeri Kategori Kodudur (Merchant Category Code, MCC). \n \n \n >Üye İş Yeri Tekil Kimlik \n genelUyeIsyeriNo \n AN8 \n K \n İşyeri kayıt sisteminde kayıtlı İşyeri için BKM tarafından üretilmiş olan genel işyeri numarasıdır (GlobalMerchantId) 8 haneden küçük gönderiminde başa ‘0’ eklenmelidir. Örnek değer ‘01630618’ \n 6.6.\tADIM 3.1- Ödeme Emri Sorgusu (İsteğe bağlı) \n   \n Şekil 9: Ödeme Emri Sorgusu \n GET /odeme-emri/{odemeEmriNo} \n ÖBHS, bu erişim adresi aracılığıyla ödeme emrini sorgulayabilir. \n BAŞARILI YANIT: \n GET /odeme-emri/{odemeEmriNo} yanıtının (RESPONSE) gövdesinde (BODY)  “OdemeEmri” nesnesi bulunur. İstek başarıyla sonuçlanırsa HHS kaynak sunucusunda Tablo-10’da yer alan parametreleri içeren “OdemeEmri” nesnesi döner. \n \n İstek başlığında yer alan X-Access-Token ile ilişkili rızada, yer alan odemeEmriNo için, ödeme emri sorgusundaki odemeEmriNo bilgisinin aynı olup olmadığı kontrol edilir. Farklı olması durumunda  \"TR.OHVPS.Resource.NotFound\"  hatası dönülür. \n Sorgulama yapılan ödeme emri numarası HHS tarafında bulunmuyor ise  \"TR.OHVPS.ResourceNotFound\"  hatası dönülür. \n \n"},{frontmatter:{},regularPath:"/v2.0.0/contents/tanim-ve-kisitlamalar.html",relativePath:"v2.0.0/contents/tanim-ve-kisitlamalar.md",key:"v-bfbd2b46",path:"/v2.0.0/contents/tanim-ve-kisitlamalar.html",content:"  1.\tTanım ve Kısaltmalar   \n Tablo 1: Tanım ve Kısaltmalar \n \n \n \n Kısaltma \n Tanım \n Açıklama \n İngilizce Açıklama \n İngilizce Kısaltma \n \n \n \n \n ÇS \n Çerçeve Sözleşme \n Ödeme hizmeti sağlayıcısı ile müşteri arasında tekil veya süreklilik arz eden ödeme işlemlerinin yürütülmesine ve mümkün olan durumlarda ödeme hesabının açılmasına ilişkin usul ve esasları belirleyen sözleşme \n \n \n \n \n EPK \n Elektronik Para Kuruluşu \n Kanun kapsamında elektronik para ihraç etme yetkisi verilen tüzel kişi \n Electronic Money Institution \n EMI \n \n \n FAST \n Fonların Anlık ve Sürekli Transferi \n TCMB tarafından işletilen Fonların Anlık ve Sürekli Transferi Sistemi \n \n \n \n \n FAST TR-Karekod \n FAST-TR Karekod Teknik İlke ve Kurallar Rehberi \n TR Karekod’un FAST Sistemi aracılığıyla gerçekleşecek işlemlerde kullanılmasına ilişkin detaylı teknik ilke ve kurallarını içeren doküman \n \n \n \n \n GEÇİT \n BKM API Geçidi \n Bankalararası Kart Merkezi (BKM) tarafından geliştirilen ve taraflara standart Açık Bankacılık işlemleri sunulmasını sağlayan API Geçidi uygulaması \n \n \n \n \n GKD \n Güçlü Kimlik Doğrulama \n Kimlik doğrulamada kullanılan ve bir bileşenin ele geçirilmesinin diğer bileşenin güvenliğini tehlikeye atmayacağı en az iki bileşenden oluşan, bu iki bileşenin de müşterinin bildiği, sahip olduğu veya biyometrik bir karakteristiği olan bileşen sınıflarından farklı ikisine ait olacak şekilde seçildiği yöntem \n Strong Customer Authentication \n SCA \n \n \n İB \n İşlem Bilgisi \n Gerçekleştirilen işleme ilişkin işlem zamanını, işlemin niteliğini ve ödeme işlemi için ödeme emrinin masraf, komisyon ve ücretler de dahil hesabın borçlandırılacağı toplam tutarını ve ödemenin göndereni ile alıcısını veya toplu ödeme emrinin masraf, komisyon ve ücretler de dahil hesabın borçlandırılacağı toplam tutarını ve göndereni ile alıcılarını içeren bilgi \n \n \n \n \n İDK \n İşlem Doğrulama Kodu \n Kimlik doğrulama yöntemlerinden biriyle kendisini sisteme tanıtan bir müşterinin gerçekleştirmek istediği işleme özgü olmak ve belirli bir geçerlilik süresi içinde işlem onayında kullanılmak üzere oluşturulan, finansal sonuç doğrunan işlemlerde kişiye onay anında ilgili işlem bilgisi (İB) ile birlikte gösterilen, alıcı veya tutarın değişmesiyle geçersiz hale gelen bilgi \n Authentication Code \n AC \n \n \n KOLAS \n Kolay Adresleme Servisi \n Fon transferlerinde hesap numarası ile ad soyad yerine kullanılan ve belirli bir hesap ile eşleştirilmiş telefon numarası, e-posta adresi, T.C. Kimlik Numarası (TCKN), Vergi Kimlik Numarası (VKN), Yabancı Kimlik Numarası veya Pasaport Numarası gibi Kolay Adres bilgilerinin kaydedilmesini, güncellenmesini ve sorgulamasını sağlayan katman servis \n \n \n \n \n HBHS \n Hesap Bilgisi Hizmeti Sağlayıcısı \n Kanunun 12 inci maddesinin birinci fıkrasının (g) bendinde tanımlanan ödeme hizmetini (hesap bilgisi hizmetini) sunan tüzel kişi \n Account Information Service Provider \n AISP \n \n \n HHS \n Hesap Hizmeti Sağlayıcısı \n Nezdinde ödeme hesabı bulunan ödeme hizmeti sağlayıcısı \n Account Servicing Payment Service Provider \n ASPSP \n \n \n ÖBHS \n Ödeme Emri Başlatma Hizmeti Sağlayıcısı \n Kanunun 12 inci maddesinin birinci fıkrasının (f) bendinde tanımlanan ödeme hizmetini (ödeme emri başlatma hizmetini) sunan tüzel kişi \n Payment Initiation Service Provider \n PISP \n \n \n ÖDK \n Ödeme Kuruluşu \n Ödeme hizmeti sağlamak ve gerçekleştirmek için Kanun kapsamında yetkilendirilmiş tüzel kişi \n Payment Institution \n PI \n \n \n ÖH \n Ödeme Hesabı \n Ödeme hizmeti kullanıcısı adına açılan ve ödeme işleminin yürütülmesinde kullanılan hesap \n Payment Account \n PA \n \n \n ÖHK \n Ödeme Hizmeti Kullanıcısı (Müşteri) \n Gönderen, alıcı veya her ikisi sıfatıyla belirli bir ödeme hizmetinden faydalanan gerçek veya tüzel kişi \n Payment Service User \n PSU \n \n \n ÖHS \n Ödeme Hizmeti Sağlayıcısı \n 5411 sayılı Kanun kapsamındaki bankalar, EPK, ÖDK ve Posta ve Telgraf Teşkilatı Anonim Şirketi(PTT) \n Payment Service Provider \n PSP \n \n \n ÖHVPS \n Ödeme Hizmetleri Veri Paylaşım Servisleri \n Kanunun 12’nci maddesinin birinci fıkrasının (f) veya (g) bentlerinde yer alan ödeme hizmetlerinde kullanılan veri paylaşım servisleri \n \n \n \n \n PÖS \n Perakende Ödeme Sistemi \n TCMB tarafından işletilen, işlemlerin Türk Lirası üzerinden gerçekleştiği Müşteriler Arası Türk Lirası Aktarım Sistemi \n \n \n \n \n TR-Karekod \n TR-Karekod İlke ve Kuralları \n Ulusal karekod (TR Karekod) ilke ve kurallarının belirlendiği belge \n \n \n \n \n YÖS \n Yetkili Ödeme Hizmeti Sağlayıcısı \n Ödeme emri başlatma hizmeti ve/veya hesap bilgisi hizmeti sunan tüzel kişi \n Third Party Payment Service Providers \n TPP \n \n \n \n"},{title:"4. Rıza Durumları",frontmatter:{},regularPath:"/v2.0.0/contents/riza-durumlari.html",relativePath:"v2.0.0/contents/riza-durumlari.md",key:"v-64fc905e",path:"/v2.0.0/contents/riza-durumlari.html",headers:[{level:2,title:"4.1.\tHesap Bilgisi Hizmeti Rıza durum değişiklikleri",slug:"_4-1-hesap-bilgisi-hizmeti-rıza-durum-degisiklikleri"},{level:2,title:"4.2.\tÖdeme Bilgisi Hizmeti Rıza Durum Değişiklikleri",slug:"_4-2-odeme-bilgisi-hizmeti-rıza-durum-degisiklikleri"}],content:" 4. Rıza Durumları \n ÖHK, Ödeme Emri Başlatma Hizmetine ya da Hesap Bilgisi Hizmetine müşteri rızasının tesisi ile başlar. ÖHK’nın YÖS uygulaması üzerinden yaptığı işlemler neticesinde rıza durumları değişebilir.\nRıza’nın alabileceği durum kodları şu şekilde belirlenmiştir. \n B: Yetki Bekleniyor  – İlk rıza talebinde \n Y: Yetkilendirildi  – Başarılı GKD sonrası yetKod üretildiğinde \n K: Yetki Kullanıldı  – Erişim Belirteci alındığında \n E: Yetki ödeme emrine dönüştü  – ÖBHS için \n S: Yetki Sonlandırıldı \n    HBHS için : Erişimin Geçerli Olduğu Son Tarih geldiğinde \n    ÖBHS için : Yenileme belirteci Son Tarihi geldiğinde \n I :Yetki İptal \nRıza iptal durumu ise gerek raporlama gerekse müşteri deneyimi perspektifinden doğru   bilgilendirmeler yapılabilmesi açısından aşağıdaki gibi detay kodları ile zenginleştirilmiştir: \n \n Rıza İptal Detay Kodu: \n \n \n \n ‘01’ :\tYeni Rıza Talebi ile İptal \n ‘02’ :\tKullanıcı İsteği ile HHS üzerinden İptal \n ‘03’ :\tKullanıcı İsteği ile YÖS üzerinden İptal \n ‘04’ :\tSüre Aşımı : Yetki Bekleniyor \n ‘05’ :\tSüre Aşımı : Yetkilendirildi \n ‘06’ :\tSüre Aşımı : Yetki Ödemeye Dönüşmedi \n ‘07’ :\tGKD iptali : Aynı rıza no ile mükerrer çağrımı \n ‘08’ :\tGKD iptali : Rızano ile kimlik bilgileri uyuşmaması \n ‘09’ :\tGKD iptali : Uygun ürünü bulunmuyor \n ‘10’ :\tGKD iptali : HHS Açık Bankacılık kanalı işleme kapalı \n ’11’ :\tGKD iptali : Hesap Yetki Sorunu \n ‘12’ :\tGKD iptali : ÖHK HHS kontrollerini aşamadı \n ‘13’ :\tGKD iptali : ÖHK isteği ile GKD’den vazgeçildi \n ‘14’ :\tGKD iptali : Fraud Şüphesi \n ‘15’ :\tHesap Rıza Güncelleme Talebi ile İptal \n ‘99’ :\tGKD iptali : Diğer \n \n \n 4.1 ve 4.2 bölümlerinde detaylandırılan rıza durum değişikliklerinde rıza iptal detay kodları kullanılmıştır. \n Örneğin B⇨ I/01 denildiğinde “Yetki Bekleniyor” rıza durumundan “Yetki İptal” rıza durumuna Rıza İptal Detay Kodu da ‘01’ yani ‘Yeni Rıza Talebi ile İptal’ olarak güncellenmelidir ifade edilmiştir. \n ÖHK verdiği rıza sırasında seçtiği hesaplarından/kartlarından biri kapatılırsa, diğer hesaplara/kartlara ait bilgileri görmeye devam eder. Ancak ÖHK’nın hesabına/kartına ait bilgilerinin YÖS'e iletilmesini istemediği durumda, rızasını tamamen iptal ederek yeni hesap/kart listesi ile yeni rıza vermesi gerekmektedir. Yani hesap/kart kapanması nedeniyle rıza geçerliliğini yitirmez. ÖHK'nın proaktif olarak bu hesabı/kartı rızadan çıkarması durumunda rıza iptali olur. \n Rıza iptal edilmediği ve geçerli olduğu sürece kapalı hesaplar/kartlar için diğer çevrimiçi kanallarda uygulanan yöntem izlenmelidir. Diğer çevrimiçi kanallarda kapalı hesaplara/kartlara ilişkin bilgi dönülmüyor ise ÖHVPS'den de dönüş yapılmaz. ÖHK’nın rıza onayı verdiği açık hesaplarının/kartlarının tümü HHS tarafında kapatıldığı durumda, yine aynı şekilde HHS çevrimiçi kanallarında koyduğu kurallara göre bu hesaplarının/kartlarının YÖS uygulamasında gösterilmesine karar verir. \n Hesap/kart kapama ve ticari kullanıcıların hesaplar/kartlar üzerindeki yetki değişiklikleri HHS'nin iç sistemleri tarafından yapılan kontrollerle yönetilir. Buradaki değişiklikler ile HHS sistemsel olarak rıza iptali gerçekleştiremez. ÖHK izni ve onayı dahilinde rıza iptal gerçekleştirilmesi gerekmektedir. \n HHS'ler sunmuş oldukları Rıza İptal ekranını (sadece Hesap Bilgisi Rızası için), hangi ortamlardan GKD yapılmasına izin veriliyorsa (web/mobil) aynı ortamdan ÖHK'ya sunmalıdır.  Örneğin bir HHS bireysel müşterileri için web ve mobil, kurumsal müşteriler için web üzerinden GKD imkanı sunuyor ise, minimumda bireysel müşteriler için web ve mobil ortamlarından, kurumsal müşteriler için web ortamından Rıza İptal ekranı aracılığı ile rıza iptaline izin vermelidir. Bunun dışında çağrı merkezi ya da şube gibi ortamlardan sunacağı Rıza İptal imkanı HHS inisiyatifindedir. Bahsi geçen zorunluluk Ödeme Emri Rıza İptal ekranı için geçerli değildir. \n Benzer şekilde YÖS'ler hangi ortamlardan (web/mobil) hizmet veriyorsa, aynı ortam üzerinden Rıza İptal ekranını sunmalıdır. \n 4.1.\tHesap Bilgisi Hizmeti Rıza durum değişiklikleri \n Kural : Bir ÖHK'nın, bir YÖS için, bir HHS'de aktif tek bir rızası olabilir.\nBir ÖHK hem kişisel olarak hem de bir kurumun kullanıcısı olabilir. Bu durumda kurum ve kişisel rıza aynı anda mevcut olabilmelidir. Rıza nesneleri, HHS tarafından uygun şekilde yönetilmelidir. \n \n \n Hesap Bilgisi Rızası isteği HHS’ye iletilir. \na.\tHHS ÖHK'ya ait içeride rıza var mı kontrol eder. Eğer yoksa  Yetki Bekleniyor - B  rıza durumu ile yeni rıza oluşturur. \nb.\tEğer içeride rıza varsa ; \n \n Yeni hesap bilgisi rızası talebi başlatılmışsa (oncekiRizaNo alanının hiç gönderilmediği durum):  \ni. Rıza durumu Yetki Bekleniyor - B ise; \n        HHS, sistemde Yetki Bekleniyor - B rıza durumuna sahip kayıt olduğu için, öncelikle eski kaydı Yetki İptal - I durumuna getirir.  Rıza İptal Detay Kodu “Yeni Rıza Talebi ile iptal” olmalıdır.  B ⇨ I / 01  Sonrasında,  Yetki Bekleniyor - B  rıza durumu ile yeni rıza oluşturur. \n \n      ii. Rıza durumu Yetkilendirildi - Y veya Yetki Kullanıldı - K ise; \n    ÖHK'nın halihazırda verilmiş bir rızası vardır. HHS, önce mevcut rızanın iptalinin yapılması gerektiğine dair   TR.OHVPS.Business.ConsentAlreadyExists  hatasını döner. YÖS, HHS ya da YÖS uygulaması üzerinden bu rızanın iptal edilmesi gerektiğine dair ÖHK'ya bilgilendirme yapar. \n      iii.\tRıza durumu Yetki Sonlandırıldı - S  ise Yetki Bekleniyor - B durumunda yeni rıza no oluşturur. \n      iv.\tRıza durumu Yetki İptal - I ise  Yetki Bekleniyor - B  durumunda yeni rıza no oluşturur. \n \n \n Başlatılan rıza isteği güncelleme akışı ile başlatılması durumunda oncekiRizaNo değeri rıza isteğinde bulunan ÖHK’ya ait olmalıdır. ÖHK’ya ait olmaması durumunda  TR.OHVPS.Business.CustomerNotFound  hatası dönülür. Aynı ÖHK olması durumunda ; \n i. Önceki Rıza durumu B: Yetki Bekleniyor , Y: Yetkilendirildi ya da I :Yetki İptal  ise;  TR.OHVPS.Business.ConsentStatusNotforUpdate  hatası verilecektir. \n ii. Yetki Kullanıldı - K ise; hesap rızası başarılı gerçekleştiriliyor olup Yetki Bekleniyor - B durumunda yeni bir rıza oluşturulur. Önceki hesap bilgisi rızası durumunda bir güncelleme yapılmaz. \n iii. Yetki Sonlandırıldı - S ise; Rıza Güncelleme Zamanı kontrol edilir. \n •\tSonlandırıldı statüsüne geçmesiyle birlikte rıza güncelleme zamanı üzerinden 30 gün geçmiş ise  TR.OHVPS.Business.ConsentStatusNotforUpdate  hatası verilir. \n•\t30 gün geçmemiş ise; hesap rızası başarılı gerçekleştiriliyor olup Yetki Bekleniyor - B durumunda yeni bir rıza oluşturulur. Önceki hesap bilgisi rızası durumunda bir güncelleme yapılmaz. \n \n \n \n \n GKD başarılı bir şekilde tamamlandığında Rıza durumu Yetki Bekleniyor’dan Yetkilendirildi’ye güncellenir.  B ⇨ Y \n \n \n GKD'nin gerçekleşmediği durumlardan HHS haberdar olmayabilir. \n ÖHK GKD yapmadan ayrılmış olabilir. (ÖR: Tarayıcıyı kapatmış olabilir) Rıza Yetki Bekleniyor - B rıza durumunda kalır.  5 dakika içerisinde sistem tarafından Yetki Bekleniyor - B rıza durumundaki kayıtlar Yetki İptal  : Yetki Bekleniyor Süre Aşımı olarak güncellenir.   B ⇨ I / 04  Bkz. 9. Madde. \n \n \n GKD'nin gerçekleşmediği durumlardan HHS haberdardır. HHS yonlendirme adresinin query parametrelerine  rizaIptDtyKod  değerini ekleyerek bu durumu YÖS’e bildirmek zorundadır. \n \n \n Rıza durumunun  “Yetkilendirildi\" , “Yetki Kullanıldı” olduğu durum.  Yetki Bekleniyor ⇨ Yetki İptal   B ⇨  I / 07 \n \n \n Rızano ile kimlik bilgileri uyuşmazlığı.  Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 08 \n \n \n ÖHK'nın HHS'de ilgili ürününün olmadığı durum (hesap/kart) Yetki Bekleniyor ⇨ Yetki İptal   B ⇨ I / 09 \n \n \n Açık bankacılık kanalınız işleme kapalıdır.Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 10 \n \n \n Kullanıcının HHS'deki hesaplarında/kartlarında yeterli yetkisinin olmama durumu  Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 11 \n \n \n HHS’nin ÖHK için yaptığı kontrollerin başarısız olduğu durum Yetki Bekleniyor ⇨ Yetki İptal   B ⇨ I / 12 \n \n \n ÖHK isteği ile GKD’den vazgeçildiği durum Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 13 \n \n \n Fraud Şüphesi Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 14 \n \n \n Diğer Yetki Bekleniyor ⇨  Yetki İptal   B ⇨  I / 99 \n \n \n \n \n \n \n Erişim Belirteci API \n a. Erişim Belirteci'nin yetkilendirme kodu ile çağrımı yapıldığında; \n      i. Rıza durumu Yetki İptal - I ya da Yetki Sonlandırıldı - S ise   TR.OHVPS.Resource.ConsentRevoked  hatası dönülmelidir. \n     ii. Rıza durumu Yetki Bekleniyor - B ya da Yetki Kullanıldı - K  ise  TR.OHVPS.Resource.ConsentMismatch  hatası dönülmelidir. \n     iii. Rıza durumu Yetkilendirildi - Y olduğunda erişim belirteci tahsis edilir.\nErişim belirteci alındığında rıza durumu K: Yetki Kullanıldı yapılır.  Y ⇨K \n •  Hesap Rızası Güncelleme akışı ile hesap bilgi rızası güncelleniyor ise yeni hesap bilgisi rızası K durumuna güncellendiğinde önceki rıza no durumu I – 15 (Hesap Rıza Güncelleme ile İptal) ile iptale çekilir. \n b. Yenileme belirteci karşılığı erişim belirteci alınması sırasında; yenileme belirteci kontrolü ve sonrasında rıza kontrolü yapılmalıdır. \n      i. Öncelikle Yenileme Belirteci Geçerlik Süresi kontrolü yapılmalıdır. Geçerli bir Yenileme Belirteci olmadığı görülür ise  TR.OHVPS.Connection.InvalidToken  hatası dönülmelidir. \n     ii. Rıza durumu Yetki İptal - I  ya da Yetki Sonlandırıldı - S ise  TR.OHVPS.Resource.ConsentRevoked  hatası dönülmelidir. \n     iii. Rıza durumu Yetki Bekleniyor - B ya da Yetkilendirildi - Y  ise  TR.OHVPS.Resource.ConsentMismatch  hatası dönülmelidir. \n     iv. Rıza durumu Yetki Kullanıldı - K olduğunda, yenileme belirteci karşılığı erişim belirteci tahsis edilir. \n \n \n Sorgulama: HBHS, rıza alma akışına başlamadan önce, daha önce oluşturulmuş bir hesap bilgisi-rizasi kaynağının durumunu, isteğe bağlı olarak alabilir. Rıza numarası ile sorgulama yapılır. \n \n \n Hesap Bilgisi Rızasının İptali: HBHS üzerinden ya da HHS üzerinden yapılan rıza iptallerinde Rıza durumu  Yetki İptal - I olarak güncellenir. Rıza numarası ile iptal sağlanır. \n a. HHS üzerinden rıza iptali yapmış olabilir.  Rıza durumu sorgulanır. \n Rıza numarası Yetki Bekleniyor - B ve Yetkilendirildi - Y ve Yetki Kullanıldı - K durumlarında ise Yetki İptal durumuna getirilir. Rıza gnclzmn timestamp ile güncellenir.\nHHS, Rıza iptalinde aynı zamanda erişim belirtecini de invalid hale getirmelidir. \n B ⇨ I / 02 \n Y ⇨ I / 02 \n K ⇨ I / 02 \n b.\tYÖS üzerinden yapılacak iptal işleminde yine Y ve B ve K rıza durumlarında ise iptal edilebilir. \n B ⇨ I / 03 \n Y ⇨ I / 03 \n K ⇨ I / 03 \n Rıza durumu Yetki Sonlandırıldı - S  ise iptal gerçekleşmez. “Rıza durumunuz iptal etmeye uygun değildir.” hatası ÖHK'ya yansıtılır.  TR.OHVPS.Resource.ConsentRevoked \n \n \n ÖHK’nın verdiği rıza süresi dolmuş olabilir.\nErişimin Geçerli Olduğu Son Tarih geldiğinde Rıza durumu Yetki Kullanıldı’dan Yetki Sonlandırıldı durumuna çekilmelidir.   K ⇨ S \n \n \n Hesaplar, Bakiye ve İşlemler servislerinde erişim belirteci kontrolü ve sonrasında rıza kontrolü yapılmalıdır.\nGeçerli bir erişim belirteci yok ise  TR.OHVPS.Connection.InvalidToken  hatası dönülmelidir. \n YÖS'ün; Rıza İptal - I ya da Yetki Sonlandırıldı - S rıza durumlarında Hesaplar, Bakiye ve İşlemler servislerini çağırmaması beklenir. HHS'nin bu rıza durumları ile yapılmış çağrılar olduğunda  TR.OHVPS.Resource.ConsentRevoked  hatasını dönmesi gereklidir. \n Rıza durumu Yetki Kullanıldı - K dışında ise  TR.OHVPS.Resource.ConsentMismatch  hatası verilmelidir. \n Rıza durumu Yetki Kullanıldı - K ise servis akışlarına devam edilir. \n Rıza sorgulama API'sinde ilgili rıza kaydı bulunamaz veya sorgulayan kurumun yetkisi yoksa (örn : YÖS’ün farklı bir YÖS’e ait rıza noyu sorgulaması) \n TR.OHVPS.Resource.NotFound hatası  verilmelidir. \n \n \n HHS/YÖS tarafında rıza bilgileri belirli aralıklarla sistem kullanıcısı tarafından taranır:\n5 dakikadan uzun süredir “Yetki Bekleniyor” durumunda kalan kayıtların durumları güncellenir.\nYetki Bekleniyor  ⇨ Rıza İptal  / Süre Aşımı : Yetki Bekleniyor  B ⇨ I / 04 \n 5 dakikadan uzun süredir “Yetkilendirildi” durumunda kalan kayıtlar güncellenir.\nYetkilendirildi     ⇨ Rıza İptal / Süre Aşımı: Yetkilendirildi  B ⇨ I / 05 \nYukarıda bahsedilen, YÖS Süre Aşımı nedeniyle rıza iptal durum güncellemelerini yapmadan önce HHS’yi sorgulayarak rıza durumunu öğrenmeli ve süre aşımı dışında bir kodu varsa aynı kodla kendi sistemini güncellemelidir. \nErişimin Geçerli Olduğu Son Tarih geldiğinde rıza durumu Yetki Kullanıldı’dan Yetki Sonlandırıldı’ya güncellenir.  K ⇨ S \n 4.2.\tÖdeme Bilgisi Hizmeti Rıza Durum Değişiklikleri \n Kural : Bir ÖHK'nın bir YÖS için bir HHS'de istediği kadar rızası olabilir. \n Kurum ve kişisel rıza aynı anda mevcut olabilmelidir. Rıza nesneleri, HHS tarafından uygun şekilde yönetilmelidir. \n \n \n Ödeme Emri Rızası isteği HHS’ye iletilir. İçeride rıza olup olmamasına bakılmaksızın  Yetki Bekleniyor - B  rıza durumu ile yeni rıza no oluşturur. \n \n \n GKD başarılı bir şekilde tamamlandığında rıza durumu Yetki Bekleniyor’dan Yetkilendirildi’ye güncellenir.   B ⇨ Y \n \n \n GKD'nin gerçekleşmediği durumlardan HHS haberdar olmayabilir. \n ÖHK GKD yapmadan ayrılmış olabilir. (ÖR: Browserı kapatmış olabilir)\nRıza durumu Yetki Bekleniyor'dur. 5 dakika içerisinde sistem tarafından Yetki Bekleniyor - B durumundaki kayıtlar Rıza İptal : Yetki Bekleniyor Süre Aşımı olarak güncellenir. Bkz. 8. Madde. \n \n \n GKD'nin gerçekleşmediği durumlardan HHS haberdardır. HHS yonlendirme adresinin query parametrelerine rizaIptDtyKod değerini ekleyerek bu durumu YÖS’e bildirmek zorundadır. \n \n \n Rıza durumunun  “Yetkilendirildi\" , “Yetki Kullanıldı” olduğu durum.  Yetki Bekleniyor ⇨ Yetki İptal   B ⇨  I / 07 \n \n \n Rızano ile kimlik bilgileri uyuşmazlığı.  Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 08 \n \n \n ÖHK'nın HHS'de ilgili ürününün olmadığı durum (hesap/kart) Yetki Bekleniyor ⇨ Yetki İptal   B ⇨ I / 09 \n \n \n Açık bankacılık kanalınız işleme kapalıdır.Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 10 \n \n \n Kullanıcının HHS'deki hesaplarında yeterli yetkisinin olmama durumu  Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 11 \n \n \n HHS’nin ÖHK için yaptığı kontrollerin başarısız olduğu durum Yetki Bekleniyor ⇨ Yetki İptal   B ⇨ I / 12 \n \n \n ÖHK isteği ile GKD’den vazgeçildiği durum Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 13 \n \n \n Fraud Şüphesi Yetki Bekleniyor ⇨ Yetki İptal  B ⇨ I / 14 \n \n \n Diğer Yetki Bekleniyor ⇨  Yetki İptal   B ⇨  I / 99 \n \n \n \n \n \n \n GKD muafiyeti olduğunda YÖS HHS’den arka planda onay alır. Bu onay sırasında rıza durumu  Yetkilendirildi  yapılır.  B ⇨ Y \n \n \n Erişim Belirteci API \na. Erişim Belirteci'nin yetkilendirme kodu ile çağrımı yapıldığında; \n      i. Rıza durumu Yetki İptal - I  ya da Yetki Sonlandırıldı - S ise   TR.OHVPS.Resource.ConsentRevoked  hatası dönülmelidir. \n     ii. Rıza durumu Yetki Bekleniyor - B , Yetki Kullanıldı - K  ya da Yetki ödeme emrine dönüştü - E  ise  TR.OHVPS.Resource.ConsentMismatch  hatası dönülmelidir. \n     iii. Rıza durumu Yetkilendirildi - Y olduğunda erişim belirteci tahsis edilir.\nErişim belirteci alındığında rıza durumu K: Yetki Kullanıldı yapılır.  Y ⇨K \n b. Yenileme belirteci karşılığı erişim belirteci alınması sırasında; yenileme belirteci kontrolü ve sonrasında rıza kontrolü yapılmalıdır. \n      i. Öncelikle Yenileme Belirteci Geçerlik Süresi kontrolü yapılmalıdır. Geçerli bir Yenileme Belirteci olmadığı görülür ise  TR.OHVPS.Connection.InvalidToken  hatası dönülmelidir. \n     ii. Rıza durumu Yetki İptal - I  ya da Yetki Sonlandırıldı - S ise  TR.OHVPS.Resource.ConsentRevoked  hatası dönülmelidir. \n     iii. Rıza durumu Yetki Bekleniyor - B ya da Yetkilendirildi - Y  ise  TR.OHVPS.Resource.ConsentMismatch  hatası dönülmelidir. \n     iv. Rıza durumu Yetki Kullanıldı - K veya Yetki Ödeme Emrine Dönüştü – E olduğunda, yenileme belirteci karşılığı erişim belirteci tahsis edilir. \n \n \n Ödeme Başlatma API önce erişim belirteci ve sonrasında rıza kontolü yapılarak gerçekleştirilmelidir \n \n Öncelikle Erişim Belirteci kontrolü yapılmalıdır. Geçerli bir Erişim Belirteci olmadığı görülür ise  TR.OHVPS.Connection.InvalidToken  hatası dönülmelidir. \n Rıza durumu Yetki İptal - I  ya da Yetki Sonlandırıldı - S ise  TR.OHVPS.Resource.ConsentRevoked  hatası dönülmelidir. \n Rıza durumu Yetki Bekleniyor - B , Yetkilendirildi - Y, Yetki Ödeme Emrine Dönüştü - E  ise  TR.OHVPS.Resource.ConsentMismatch  hatası dönülmelidir. \n Rıza durumu Yetki Kullanıldı - K olduğunda ödeme emri gerçekleştirilir.  Rıza durumu Yetki Kullanıldı - K'dan Yetki Ödeme Emrine Dönüştü – E yapılmalıdır.   K ⇨E \n \n \n \n Sorgulama: GKD işleminin başarıyla tamamlanıp Ödeme Emri Rızasının yetkilendirilmesi esnasında, gönderen hesap seçiminin HHS ekranında yapıldığı durumlarda, ödeme emri isteğinde gönderen hesap bilgileri alanının zorunlu olması nedeniyle, ödemeEmriRizasi nesnesi sorgulanarak gönderen hesap bilgileri (hesap numarası ve/veya hesap referansı) alınmalıdır.\nRıza sorgulama, Ödeme Emri Sorgulama API'lerinde ilgili rıza kaydı bulunamaz veya sorgulayan kurumun yetkisi yoksa (örn : YÖS’ün farklı bir YÖS’e ait rıza noyu sorgulaması) \n TR.OHVPS.Resource.NotFound  hatası verilmelidir. \n \n \n Ödeme Emri Rızasının İptali bulunmamaktadır. \n \n \n HHS/YÖS tarafında rıza bilgileri belirli aralıklarla sistem kullanıcısı tarafından taranır:\n5 dakikadan uzun süredir Yetki Bekleniyor'da kalan kayıtların durumları güncellenir.\nYetki Bekleniyor ⇨ Rıza İptal / Süre Aşımı : Yetki Bekleniyor  B ⇨ I / 04 \n 5 dakikadan uzun süredir Yetkilendirildi'de kalan kayıtlar durumları güncellenir.\nYetkilendirildi     ⇨ Rıza İptal / Süre Aşımı : Yetkilendirildi  B ⇨ I / 05 \n 5 dakikadan uzun süredir Yetki kullanıldı'da kalan kayıtlar durumları güncellenir.\nYetki kullanıldı ⇨ Rıza İptal / Süre Aşımı : Yetki Ödemeye Dönüşmedi  B ⇨ I / 06 \n Yenileme belirteci Son Tarih geldiğinde rıza durumu Yetki ödeme emrine dönüştü’den Yetki Sonlandırıldı'ya güncellenir. \n E ⇨ S \n \n \n GKD muafiyeti sadece ödeme başlatma servislerinde bulunmaktadır. \n \n \n"},{title:"3. Temel Prensipler",frontmatter:{},regularPath:"/v2.0.0/contents/temel-prensipler.html",relativePath:"v2.0.0/contents/temel-prensipler.md",key:"v-9f53f9d6",path:"/v2.0.0/contents/temel-prensipler.html",headers:[{level:2,title:"3.1 Genel",slug:"_3-1-genel"},{level:2,title:"3.2.\tİstem (Çağrı) ve Oturum",slug:"_3-2-istem-cagrı-ve-oturum"},{level:2,title:"3.3.\tRESTful API",slug:"_3-3-restful-api"},{level:2,title:"3.4.\tSürüm Yönetimi",slug:"_3-4-surum-yonetimi"},{level:2,title:"3.5.\tKaynak URI Yol Yapısı",slug:"_3-5-kaynak-uri-yol-yapısı"},{level:2,title:"3.6.\tKarakter Kodlama",slug:"_3-6-karakter-kodlama"},{level:2,title:"3.7.\tVeri Formatı",slug:"_3-7-veri-formatı"},{level:2,title:"3.8.\tİstemci Sertifika Yönetimi",slug:"_3-8-istemci-sertifika-yonetimi"},{level:2,title:"3.9.\tYetkilendirme Türleri",slug:"_3-9-yetkilendirme-turleri"},{level:2,title:"3.10. İstek/Cevap Mesajlarında Kullanılan Nesne Yapıları",slug:"_3-10-istek-cevap-mesajlarında-kullanılan-nesne-yapıları"},{level:2,title:"3.11. Sayfalandırma ve Filtreleme",slug:"_3-11-sayfalandırma-ve-filtreleme"},{level:2,title:"3.12. Mesaj İmzalama",slug:"_3-12-mesaj-imzalama"},{level:2,title:"3.13. Durum Kodu",slug:"_3-13-durum-kodu"},{level:2,title:"3.14. Gereksinimlerinin Sınıflandırılması",slug:"_3-14-gereksinimlerinin-sınıflandırılması"},{level:2,title:"3.15. İstek Başlığı",slug:"_3-15-istek-baslıgı"},{level:2,title:"3.16. Yanıt Başlığı",slug:"_3-16-yanıt-baslıgı"},{level:2,title:"3.17. Idempotency Kuralları",slug:"_3-17-idempotency-kuralları"},{level:2,title:"3.18. HTTP Durum Kodları",slug:"_3-18-http-durum-kodları"},{level:2,title:"3.19. Maskeleme Kuralları",slug:"_3-19-maskeleme-kuralları"},{level:2,title:"3.20. Fonksiyonel Olmayan Gereksinimler",slug:"_3-20-fonksiyonel-olmayan-gereksinimler"},{level:2,title:"3.21. Otomatik Sorgular",slug:"_3-21-otomatik-sorgular"}],content:' 3. Temel Prensipler  \n Bu bölümde Ödeme Hizmetleri Veri Paylaşım Servisleri (Hesap Bilgisi Hizmeti, Ödeme Emri Başlatma Hizmeti) için tanımlanan temel prensipler açıklanmaktadır. \n 3.1 Genel \n \n \n HHS’ler Yönetmeliğin 59. maddesinin beşinci fıkrası ve Ödeme ve Elektronik Para Kuruluşlarının Bilgi Sistemleri ile Ödeme Hizmeti Sağlayıcılarının Ödeme Hizmetleri Alanındaki Veri Paylaşım Servislerine İlişkin Tebliğin (Tebliğ) 23. maddesinin birinci fıkrası uyarınca, ödeme hizmetleri veri paylaşım servislerini GEÇİT aracılığıyla HBHS ve ÖBHS’ye sunmakla yükümlüdür. \n \n \n Tebliğin 23. maddesinin ikinci fıkrası uyarınca ödeme emri başlatma hizmetinde açık iletişim servisinin tarafları ÖBHS ile HHS’dir. \n \n \n Tebliğin 23. maddesinin üçüncü fıkrası uyarınca hesap bilgisi hizmetinde açık iletişim servisinin tarafları HBHS ile HHS’dir. \n \n \n Yönetmeliğin 60. maddesinin birinci fıkrası uyarınca müşteri, ödeme emri başlatma hizmetini  ödeme hesabının çevrim içi olarak erişilebilir olduğu durumlarda , kullanmayı tercih edebilir. \n \n \n Yönetmeliğin 61. maddesinin birinci fıkrası uyarınca müşteri, hesap bilgisi hizmetini  ödeme hesabının çevrim içi olarak erişilebilir olduğu durumlarda , kullanmayı tercih edebilir. \n \n \n Tebliğin 25. maddesi uyarınca HHS ve YÖS (ÖBHS ve HBHS) arasında bağlantı uçtan uca güvenli bir şekilde sağlanır. Bu amaçla iletim katmanında TLS (asgari 1.2 sürümü) ile şifreli iletişim sağlanır. \n \n \n Tebliğin 23. maddesinin dördüncü fıkrası uyarınca HHS tarafından sunulan ödeme hizmetleri veri paylaşım servislerini kullanan yetkilendirilmiş ödeme hizmeti sağlayıcılarının TCMB tarafından ilgili ödeme hizmeti için yetkilendirilmiş olduğu kontrol edilir. \n \n \n Tebliğin 25. maddesinin beşinci fıkrası uyarınca zaman damgası, 15/1/2004 tarihli 5070 sayılı Elektronik İmza Kanunu kapsamında tanımlanan zaman damgasına dayanır. \n \n \n API alan isimleri Türkçe olarak tanımlanmıştır. Ancak API başlığı (header) alanındaki alan isimleri özelinde, API Geçitleri tarafından otomatik olarak tanınabilmesi gözetilerek, İngilizce isimlendirme tercih edilmiştir. \n \n \n ÖHK halihazırda ödeme hesaplarına, çevrim içi (mobil bankacılık, internet bankacılığı vb.) erişebilir durumda ise, HHS\'nin varsa Açık Bankacılık kanal veya yetki tanımını varsayılan değeri AÇIK olacak şekilde sunması gerekmektedir. HHS’nin, Bireysel/Kurumsal/Ticari müşteri ayrımı yapmaksızın tüm müşterileri için, çevrim içi kanallarda hesap hareketlerine erişim ve ödeme yapabilme yetkisi bulunması durumunda, yine aynı şekilde Açık Bankacılık kanal veya yetki tanımını da varsayılan değeri AÇIK olacak şekilde sunması gerekmektedir. HHS Açık Bankacılık hizmetini kanal/yetki tanımı ile yönetmesi durumunda hizmeti verdiği ilgili kanallar(web,mobil) üzerinden müşterisine Açma/Kapama olanağı şeklinde sunması gerekmektedir. \n \n \n 5411 Sayılı Kanun kapsamındaki bankalar, HHS API içerisinde Aktif durumda listelenmemişken, YÖS API içerisinde listelenemezler. \n 3.2.\tİstem (Çağrı) ve Oturum \n \n \n Her istek tekil istek numarası ve ÖHK’lı işlemler için zaman damgası (PSU-Timestamp) içerir. Birden fazla istek içeren işlem YÖS tarafından belirlenen çağrıya özgü talep kimliği (istek numarası: X-Request-ID) ve rıza sürecine özgü talep kimliği (işlem grup numarası: X-Group-ID) değerleri kullanılmalıdır. Aynı rıza no’ya ait tüm isteklerde aynı X-Group-ID bilgisi değeri gönderilmelidir. \n \n \n Oturum takibi ise PSU-Session-ID ile yapılır. Oturum numarası (PSU-Session-ID) ÖHK’lı işlemler için zaman damgası (PSU-Timestamp) ile birlikte ilgili tüm işlem verilerini içerecek şekilde kayıt altına alınır. \n \n \n Örneğin, bir ödeme emri başlatma işlemi birden fazla istekten oluşur. Her istek yukarıda belirtildiği gibi biricik istek numarası ve ÖHK’lı işlemler için zaman damgası (PSU-Timestamp) içerir. Ancak işlemin oturum bütünlüğü PSU-Session-ID ile sağlanır. \n \n \n Taraflar açtıkları oturumu işlem bütünlüğünü sağlayacak süre içerisinde açık tutar ve işlem biter bitmez kapatır. \n 3.3.\tRESTful API \n API’ler, dünya ölçeğinde yaygın bir şekilde kullanılan Temsili Durum Transferi (Representational State Transfer, REST) mimari tarzı ve JavaScript Nesne Notasyonu (JavaScript Object Notation, JSON) veri formatlarına uygun olarak geliştirilir. En üst seviye Veri Tanımlama Dili (Data Description Language) ve en iyi uygulama örnekleri için  ^JSON Şeması  temel alınır. \n İstek ve yanıt mesajlarında, isteğe bağlı veya koşullu bir alan, değer içermiyorsa, bu alan JSON payloadunda yer almamalıdır. \n Örnek kod bloğu. \n "rzBlg":{\n         "rizaNo":"aa9bd7e7-0ccd-4edc-9639-5a358dbf2335",\n         "olusZmn":"2022-11-28T12:00:21+03:00",\n         "gnclZmn":null,    --\x3e hatalı\n         "rizaDrm":"K",\n         "rizaIptDtyKod":"" --\x3e hatalı \n      },\n \n Örnek kod bloğu: \n \n         "alc":{\n            "hspNo": "TR800800004162387689546019",\n            "unv": "AHMET YILMAZ", \n            "kolas":{}  --\x3e nesne gönderimi hatalı\n         },\n 3.4.\tSürüm Yönetimi \n API sonraki aşamalarda doğabilecek gereksinimleri ve daha karmaşık kullanım durumlarını karşılamak için sürümler halinde geliştirilir ve bu durum tasarım sırasında göz önünde bulundurulur. \n API v1.0.2 sürümünde ; \n \n Kapsamdaki ödeme hesapları : Vadesiz TL, yabancı para hesapları (gerçek ve tüzel kişilere ait ödeme hesapları), Kredili Mevduat Hesabı \n Tekil ödeme (Virman/Havale/FAST/Müşterilerarası TL Aktarım Sistemi)\n \n Virman ve havale işlemleri kapsamında yabancı para transferi yapılabilir. \n \n \n Hesap bilgisi hizmetleri\n \n Temel veya ayrıntılı hesap bilgisi \n Bakiye \n Gerçekleşen işlemler için Hesap hareketleri \n \n \n Karekodlu ödemelerdeki 01, 02 ve 03 akış türleri\nyer almaktadır. \n \n API v1.1.0 sürümünde ; \n \n API v1.0.2 sürümüne ek Olay Bildirim ve Ayrık GKD özellikleri eklenmiştir. Süreçlerin daha iyi işlemesi için çeşitli güncellemeler yapılmıştır. \n \n API v2.0 sürümünde ileri tarihli ödeme ve düzenli ödeme talimatı bölümleri ve ilişkili olarak deney alanları eklenmiştir. \n Her sürüm değişikliğinde bir önceki sürüm belirli bir süre desteklenecektir. Diğer bir ifadeyle, sadece belirli bir süre için mevcut ve bir önceki sürüm aynı anda erişilebilir olacaktır. \n 3.5.\tKaynak URI Yol Yapısı \n YÖS’lerin başlattığı çağrılarda URI yolu aşağıdaki yapıyı takip eder: \n [hhs-yol-ön-eki]/ohvps/ [kaynak-grubu]/ [sürüm]/ [kaynak]/[kaynak-no]/[alt-kaynak] \n Bu, aşağıdaki unsurlardan oluşur: \n \n [hhs-yol-ön-eki] \nİsteğe bağlı, HHS\'ye özgü yol ön ekini ifade eder. \nGEÇİT üzerinden yapılan çağrılarda BKM tarafından belirlenen sistem adı ve yol ön eki kullanılır. \n ohvps \nSabit metin “ohvps” (Ödeme Hizmetleri Veri Paylaşım Servisleri kısaltması) \n [kaynak-grubu] \nKaynak grubu, API’ye erişmek için kullanılan ödeme hizmetine (HBH, ÖBH) göre erişim adresi (end point) grubunu tanımlar (“hbh” veya “obh”). \n [sürüm] \nAPI sürümünü ifade eder (“/s[ana-sürüm].[alt-sürüm]/”). \n [kaynak]/[kaynak-no] \nKaynak detaylarını ifade eder. \n [alt-kaynak] \nAlt kaynak detaylarını ifade eder. \n \n HHS, tüm kaynakları için aynı katılımcı yolu ön ekini ve sistem adını kullanmalıdır. \n BKM API’lerine erişmek isteyen uygulamaların yetkilerine göre aşağıdaki API’lere abone olmaları gerekmektedir: \n OBH: \n https://gecit-api.bkmtest.com.tr/ohvps/obh/s2.0/odeme-emri-rizasi \n https://gecit-api.bkmtest.com.tr/ohvps/obh/s2.0/odeme-emri \nHBH: \n https://gecit-api.bkmtest.com.tr/ohvps/hbh/s2.0/hesap-bilgisi-rizasi \n https://gecit-api.bkmtest.com.tr/ohvps/hbh/s2.0/hesaplar \n https://gecit-api.bkmtest.com.tr/ohvps/hbh/s2.0/hesaplar/1234/islemler \n https://gecit-api.bkmtest.com.tr/ohvps/hbh/s2.0/hesaplar/1234/bakiye \nGKD \n https://gecit-api.bkmtest.com.tr/ohvps/gkd/s2.0/erisim-belirteci \nHHS – YÖS API \n https://gecit-api.bkmtest.com.tr/hhs-api/s2.0/hhs \n https://gecit-api.bkmtest.com.tr/hhs-api/s2.0/hhs/1234 \n https://gecit-api.bkmtest.com.tr/yos-api/s2.0/yos \n https://gecit-api.bkmtest.com.tr/yos-api/s2.0/yos/1234 \n HHS’lerin sağlayacakları API’lerdeki URI çevrimi örnekleri aşağıdaki gibidir. \n \n https://xbank.com.tr/api-portal/ohvps/obh/s2.0/odeme-emri \n https://gecit-api.bkmtest.com.tr/ohvps/obh/s2.0/odeme-emri  (BKM API) \n https://xbank.com.tr/api-portal/ohvps/hbh/s2.0/hesap-bilgisi-rizasi \n https://gecit-api.bkmtest.com.tr/ohvps/hbh/s2.0/hesap-bilgisi-rizasi  (BKM API) \n https://xbank.com.tr/api-portal/ohvps/hbh/s2.0/hesaplar \n https://gecit-api.bkmtest.com.tr/ohvps/hbh/s2.0/hesaplar   (BKM API) \n https://xbank.com.tr/api-portal/ohvps/hbh/s2.0/hesaplar/1234 \n https://gecit-api.bkmtest.com.tr/ohvps/hbh/s2.0/hesaplar/1234  (BKM API) \n \n GEÇİT üzerinden yapılan çağrılarda, istek başlığında bulunan “x-aspsp-code” (isteğin iletildiği Hesap Hizmeti Sağlayıcısının kodu) değerine göre HHS API’de standart olarak tanımlanmış olan “basePath” bilgisine servis uzantısı eklenerek HHS’ye yönlendirme yapılır. \n Örneğin, istek başlığında  xbank ’ın kodu varsa, YÖS tarafından yapılan \n https://gecit-api.bkmtest.com.tr/ohvps/hbh/s2.0/hesap-bilgisi-rizasi \nçağrısı GEÇİT tarafından karşılanarak \n https://xbank.com.tr/api-portal/ohvps/hbh/s2.0/hesap-bilgisi-rizasi \nadresine yönlendirilir. \n Bu örnekte,  https://xbank.com.tr/api-portal  basePath bilgisi HHS tarafından HHS API’ye girilen değerdir. \n ÖNEMLİ :  URI Query parametreleri GET ile iletilirken değerlerde url-encode yapılmalıdır. Örnek bir API isteği; \nGET /ohvps/hbh/s2.0/hesaplar/xxx/islemler?hesapIslemBslTrh=2023-02-07T16:42:38%2B03:00&hesapIslemBtsTrh=2023-02-07T17:09:18%2B03:00&srlmKrtr=islGrckZaman&srlmYon=Y&syfKytSayi=10&syfNo=1 \n Burada \'+\' karakterinin boşluk olarak algılanmaması için %2B değeri ile iletilmiştir. \n 3.6.\tKarakter Kodlama \n API istekleri ve yanıtlarının  Başlık  parametrelerinde ISO-8859-1 standartında yer alan karakter kümesi kullanılmalıdır.  3.15. İstek Başlığı  bölümünde detaylandırılmıştır. \n API istekleri ve yanıtlarında  Gövde  parametrelerinde UTF-8 karakter kodlaması kullanılır. Bu, JSON için varsayılan karakter kodlamasıdır. \n Ancak, bir HHS\'nin kendi uygulamaları ve ödeme başlattığı ödeme sistemi (Havale vb.) bazı UTF-8 karakterlerini kabul etmeyebilir. HHS, UTF-8 kodlaması içeren bir mesajı işleyemez ve reddederse, HTTP 400 (Hatalı İstek) durum kodu ile yanıt vermelidir. \n ÖHVPS kapsamında iletilen değerler içerisinde işlenemeyecek karakterler var ise  "TR.OHVPS.Business.InvalidCharacter"  hatası verilir. \n Gövde parametrelerinde desteklenen UTF-8 karakter kümesi aşağıda listelenmiştir. \n \n \n \n Karakter \n UTF 8   Hex. \n Karakter \n UTF 8   Hex. \n Karakter \n UTF 8   Hex. \n Karakter \n UTF 8   Hex. \n \n \n \n \n \n 20 \n = \n 3d \n X \n 58 \n r \n 72 \n \n \n ! \n 21 \n ? \n 3f \n Y \n 59 \n s \n 73 \n\n 23 \n @ \n 40 \n Z \n 5a \n t \n 74 \n \n \n % \n 25 \n A \n 41 \n [ \n 5b \n u \n 75 \n \n \n & \n 26 \n B \n 42 \n \\ \n 5c \n v \n 76 \n \n \n \' \n 27 \n C \n 43 \n ] \n 5d \n w \n 77 \n \n \n ( \n 28 \n D \n 44 \n ^ \n 5e \n x \n 78 \n \n \n ) \n 29 \n E \n 45 \n _ \n 5f \n y \n 79 \n \n \n * \n 2a \n F \n 46 \n a \n 61 \n z \n 7a \n \n \n + \n 2b \n G \n 47 \n b \n 62 \n { \n 7b \n \n \n , \n 2c \n H \n 48 \n c \n 63 \n } \n 7d \n \n \n - \n 2d \n I \n 49 \n d \n 64 \n Ç \n c3 87 \n \n \n . \n 2e \n J \n 4a \n e \n 65 \n Ö \n c3 96 \n \n \n / \n 2f \n K \n 4b \n f \n 66 \n Ü \n c3 9c \n \n \n 0 \n 30 \n L \n 4c \n g \n 67 \n ç \n c3 a7 \n \n \n 1 \n 31 \n M \n 4d \n h \n 68 \n ö \n c3 b6 \n \n \n 2 \n 32 \n N \n 4e \n i \n 69 \n ü \n c3 bc \n \n \n 3 \n 33 \n O \n 4f \n j \n 6a \n Ğ \n c4 9e \n \n \n 4 \n 34 \n P \n 50 \n k \n 6b \n ğ \n c4 9f \n \n \n 5 \n 35 \n Q \n 51 \n l \n 6c \n İ \n c4 b0 \n \n \n 6 \n 36 \n R \n 52 \n m \n 6d \n ı \n c4 b1 \n \n \n 7 \n 37 \n S \n 53 \n n \n 6e \n Ş \n c5 9e \n \n \n 8 \n 38 \n T \n 54 \n o \n 6f \n ş \n c5 9f \n \n \n 9 \n 39 \n U \n 55 \n p \n 70 \n \n \n \n \n : \n 3a \n V \n 56 \n q \n 71 \n \n \n \n \n ; \n 3b \n W \n 57 \n \n \n \n \n \n \n \n Ancak  Erişim belirteci, Yenileme belirteci ve Authorization  parametreleri daha dar bir karakter kümesi ile doldurulmalıdır. \n Bearer HTTP Authorization Şeması RFC 6750\'de tanımlanmıştır.  https://www.rfc-editor.org/rfc/rfc6750#section-2.1  bölümünde izin verilen karakterlerin gönderilmesi beklenmektedir. Buradaki standartın her 3 parametre için de uygulanmasına karar verilmiştir. \n RFC 6750 içerisinde bearer token formatı şu şekildedir : 1*( ALPHA / DIGIT / "-" / "." / "_" / "~" / "+" / "/" ) *"=" \nAugmented BNF for Syntax Specifications (ABNF) ile ifade edilen bu formatta token en az 1 adet alfanumerik karakter veya özel karakter ("-", "." , "_" , "~" , "+" , "/")  içermeli ve 0 ya da daha çok sayıda "=" karakteri ile bitmelidir. \n ALPHA = A-Z / a-z aralığındaki harflerdir. \nDIGIT = 0-9 aralığındaki rakamlardır. \n 3.7.\tVeri Formatı \n \n Açık bankacılık kapsamındaki zaman damgası, ISO 8601 standartına uygun olarak yerel saat bilgisini ve timezone bilgisini de içerecek şekilde " yyyy-MM-dd’T’HH:mm:ssXXX " formattaki haliyle hazırlanmalıdır. \n \n Örnek:  "timestamp": "2021-05-30T20:34:15+03:00" \nyyyy : 4 hane yıl \nMM : Başa ‘0’ eklenmiş, toplam 2 hane ay \ndd    : Başa ‘0’ eklenmiş, toplam 2 hane gün \nHH    : Başa ‘0’ eklenmiş, toplam 2 hane saat (0-23 arası değer alabilir.) \nmm : Başa ‘0’ eklenmiş, toplam 2 hane dakika \nss    : Başa ‘0’ eklenmiş, toplam 2 hane saniye \nXXX : ISO 8601 Time zone \n \n \n Zaman damgası hesaplamalarında, yeni günün başlangıç saatinin 00:00:00 olduğu kabul edilmiştir. \n \n \n JWT veri paketlerinde kullanılan zaman damgaları, 1 Ocak 1970 Saat 00:00:00 (UTC) anından itibaren geçen saniye sayısı değerini (Unix Time) kullanmalıdır. \n \n \n Bir HHS, tarihi yanlış biçimlendirilmiş bir istek aldığında, 400 (Hatalı İstek) durum kodu ve ilgili hata kodu ile yanıt vermelidir. \n \n \n ISO 4217 Standartında para birimleri ve kaç basamak ondalık değer içerebilecekleri belirlenmiştir. \n https://www.iso.org/iso-4217-currency-codes.html   adresinden ücretsiz olarak listeye erişilebilir.  \nAPI Standartlarında da para birimleri  ISO 4217’de tanımlanmış olan 3 harfli kodlarla iletilir.   Tüm tutar alanları ISO 4217\'de tanımlanmış para birimlerinin ondalık basamak değerleri de göz önünde bulundurularak iletilmelidir. Tutar alanları artı ya da eksi değer alabileceği için API deseninde tanımlanmış regular expressionlar dikkate alınmalıdır. \nÖrneğin; Bakiye API\'sindeki "Kredili Mevduat Hesabı Bakiyesi" alanı "-100.25" ve "Para Birimi" alanı "TRY" olarak iletildiğinde 25 değerinin kuruş olduğu anlaşılmalıdır. \nÖdeme Emri Rızası API\'sinde yer alan "İşlem Tutarı" alanı "104.75" TRY olarak iletildiğinde "75" değerinin kuruş olduğu anlaşılmalıdır. \n"12000" Japon Yeni için, ISO 4217’de JPY para biriminin ondalık kısmı olmadığından "İşlem Tutarı" alanında "12000" ve "Para Birimi" alanında "JPY" değeri  iletilmelidir. \n \n \n Altın para birimi özelinde ISO 4217’ye uygun olarak "XAU" cinsinde ve 2 basamak ondalık rakam içerecek şekilde iletilmelidir. Örneğin içerisinde "13,50 gr" altın olan hesap için bakiye "13.50", para birimi "XAU" olarak gönderilmelidir. \n \n \n Diğer madenlerde ondalık basamak ISO 4217 standartında tanımlandığı gibi olmalıdır. \n \n \n Sıralı veri tipleri büyük küçük harfe duyarlı olmalıdır. \n 3.8.\tİstemci Sertifika Yönetimi \n ÖHVPS kapsamında YÖS ve HHS’lerin güvenli bir şekilde tanımlanması amacıyla elektronik sertifikalar kullanılır. \n ÖHVPS kapsamında tarafların güvenli bir şekilde tanımlaması, uçtan uca güvenli iletişim, mesaj şifreleme ve mesaj imzalama işlevleri 15/1/2004 tarihli ve 5070 sayılı Elektronik İmza Kanunu’nda açıklanan elektronik sertifikalar kullanılarak sağlanır. Elektronik sertifikada Türkiye Cumhuriyet Merkez Bankası tarafından verilen kuruluş kodu ve kuruluşun türüne dair bilgiler bulunur. \n GEÇİT üzerinden yapılan erişimlerde YÖS ve HHS’lere önceden dağıtılmış olan istemci sertifikaları kullanılarak tarafların (sunucu) kimliklerinin doğrulanması sağlanacaktır. İstemci sertifikaları hem test hem de üretim ortamında kullanılacaktır. Sertifikaların işlevselliği ve geçerliliği sertifikasyon sürecinde de sınanacaktır. Söz konusu sertifikaların dağıtım prosedürleri ve kullanımlara yönelik açıklamalar EK-3’te yer verilmiştir. \n 3.9.\tYetkilendirme Türleri \n GEÇİT üzerinden yapılan çağrılarda iki temel yetkilendirme türü kullanılır: \n 1.\tİstemci Kimlik Bilgileri:  Müşteri onayının gerekmediği, sadece YÖS’ün tanımlanıp doğrulandığı API çağrılarında kullanılır. YÖS’ün yetkilendirilmiş olduğu ve faaliyet izninin yaptığı hizmet çağrısına uygun olduğu kontrol edilir.  Bu amaçla, YÖS’lere clientId ve clientSecret tahsis edilecektir. YÖS’ler ilgili clientId ve clientSecret ile sadece yetkilendirilmiş oldukları servislere erişebileceklerdir. YÖS’ler kendilerine BKM tarafından sunulacak API’yi, kendi clientID ve clientSecret değerleri ile sorgulayarak “İstemci Kimlik Bilgileri” belirtecini (access token) elde edeceklerdir.\nHHS’ler de GEÇİT üzerindeki YÖS API’sini sorgulama maksadı ile GEÇİT\'e geldiklerinde, kendilerine atanmış olan clientID ve clientSecret bilgileri ile yetki kontrolleri yapılır.\nHHS ve YÖS’ler ; ilettikleri client id ve secret değerleri kullanılarak oluşturulacak bearer authentication metodu ile servislerini sunacaklardır. \n 2.\tYetkilendirme Kodu:  YÖS’ün doğrulanmasının yanısıra müşterinin GKD ile doğrulanması gereken API çağrılarında kullanılır. Müşteri doğrulanarak yetkilendirme kodu oluşturulması HHS’nin yetkilendirme arayüzüne yönlendirilir. GKD’nin başarıyla tamamlanması sonrasında yetkilendirme kodu YÖS’e dönülür. YÖS daha sonra HHS’nin  erişim belirteci  (access token) erişim adresini (EK-3: POST /erisim-belirteci) çağırmak suretiyle yetkilendirme kodunu bir erişim belirteci (access token) ile değiştirerek ilgili kaynakları kullanabilir. \n Ödeme emri başlatma ve hesap bilgisi hizmetlerinde hangi yetkilendirme türlerinin kullanılacağı bilgisi, ilgili başlıklardaki erişim adresleri (endpoints) tablolarında yer almaktadır. \n erisim-belirteci  erisim noktasından elde edilen  erisimBelirteci  ilişkilendirildiği nesne veya işlem için gönderilen POST isteği başlığında  x-access-token  alanında iletilir.\nBelirli bir süre için tanımlanan erişim belirteci (access token) değerinin yenileme belirteci (refresh token) ile yenilenmesi gerekir. \n Erişim adreslerinde kullanılan yetkilendirme türü ilgili erişim adresi tablolarında belirtilmiştir. \n 3.10. İstek/Cevap Mesajlarında Kullanılan Nesne Yapıları \n İstek ve Cevap mesajlarında kullanılacak olan nesneler tüm elemanlarını kapsayacak şekilde Ek-1 de listelenmiştir. Tüm listelenen elemanlar açısından (Uç nokta mesaj yapılarının belirtildiği tablolarda belirtildiği üzere) alanın Zorunlu (z) veya İsteğe Bağlı (İ) olma durumlarına göre bazı alanlar gönderilebilir veya gönderilmeyebilir. \n 3.11. Sayfalandırma ve Filtreleme \n Sayfalandırma \n Çağrıya dönülen kaynak nesnesi içerisindeki kayıtlar bir sayfalandırma yapısı ile çağrılacak şekilde istek oluşturulur. \n Oluşturulacak isteğin içerisinde parametreler ile filtreleme, sayfa başına gösterilecek kayıt sayısı ve hangi sayfanın önyüzde gösterileceği bilgileri erişim noktasına iletilir ve ilgili kayıtlar cevap olarak alınır. \n Filtreleme \n HHS, birden çok kayıt dönülmesi gereken GET çağrılarında sınırlı filtreleme desteği sağlamalıdır. Filtre parametreleri her zaman kaynak nesnesinin belirli alanlarına özgüdür ve nesne için tanımlanan kurallara uymalıdır. \n 3.12. Mesaj İmzalama \n Elektronik imzalar, ÖHVPS API’de gerçekleştirilen işlemlerin ve taşınan verilerin bütünlük ve inkâr edilemezliğini destekler. İmzaların kaynak bazında hangi istek ve yanıtlara uygulandığı belirlidir. \n API yalnızca TLS\'ye dayanırsa, dijital kayıtları ve inkâr edilemezlik kanıtlarını tutmak zor olur. Bu nedenle, TLS\'ye dayanmayan bir inkâr edilemezlik çözümü olarak API isteğinin HTTP başlığında bir JWS kullanılarak sağlanabilir. \n HTTP isteğinin gövdesinin hash fonksiyonu (SHA256) ile özeti alınacaktır. Elde edilen özet, asimetrik anahtarları destekleyen bir algoritma kullanılarak imzalanacak ve JWS elde edilecektir. İsteğin kendinize geldiği durumda body üzerinde hiç bir değişikliğe tabi tutmadan (serialize/deserialize, minify, trim, vb yapmadan) doğrulama yapmanız gerekmektedir. Aynı şekilde isteğin kendinizden çıktığı aşamada da response body üzerinde hiç bir değişikliğe tabi tutmadan (serialize/deserialize, minify, trim, vb yapmadan) mesaj imzalama yapılmalıdır. \n Bir istek, YÖS\'nin özel anahtarı ile imzalanacak ve bu isteğe karşılık gelen yanıt, HHS\'nin özel anahtarı tarafından imzalanacaktır. \n Tüm API istekleri ve yanıtları imzalanmaz. Mesaj imzalamanın zorunlu olup olmadığı, desteklenip desteklenmediği her API özelinde belirlenir. \n Anahtar Deposu \n HHS\'ler ve YÖS\'ler tarafından güvenilen bir Güven Otoritesi (Trust Anchor), taraflar için bir genel anahtar deposu sağlamaktan sorumludur. \n Güven Otoritesi, taraflardan herhangi birisinin oluşturduğu bir anahtar çiftinin açık bölümünü saklayan merkezi bir dizin (BKM tarafından tutulan merkezi kayıt sistemi vb.) olacaktır. \n Mesajları doğrulamak için tarafların genel anahtarlarının paylaşılması için BKM bir servis sağlayacaktır. HHS API olarak adlandırılımış olan bu servis ile HHS ve YÖS listelerine ulaşılabildiği gibi doğrulama işlemi için ihtiyaç duyulacak olan genel anahtarlara da bu servis üzerinden erişilebilinecektir. \n İlgili Mesaj şifreleme için genel akış, Ek-5 bölümünde detaylarıyla paylaşılmaktadır. \n 3.13. Durum Kodu \n API’ler, iki farklı amaca hizmet eden iki durum kodu kullanır: \n \n HTTP Durum Kodu, API çağrısının (kaynaktaki HTTP işlemi) sonucunu yansıtır. \n Bazı kaynak payload’larındaki Durum alanı, kaynakların durumunu yansıtır. \n 3.14. Gereksinimlerinin Sınıflandırılması \n Erişim adreslerinin ve alanların kullanımı Zorunlu(Z), İsteğe Bağlı(İ) veya Koşullu(K) olabilir. Kullanımlara ilişkin durumlar ve kullanımın (K) koşullu olduğu duruma ilişkin açıklamalar ilgili tablolarda belirtilmiştir. \n ÖHVPS API\'lerinin (HBH,ÖBH,GKD) istek ve yanıtta kullanılacak başlık isimleri, ilgili RFC dokümanlarında ve aşağıdaki tabloda yer aldığı şekilde kullanılacaktır.  Uygulamaya özelleşmiş başlıklar "X-" ile başlayacaktır. Başlık isimlerinde yer alacak kısaltmalar (örn. PSU, ASPSP gibi) tamamı büyük harfle yazılacak şekilde tanımlanacaktır. Başlık isimleri büyük – küçük harfe duyarlı olmamalıdır. Örneğin x-request-id ya da X-Request-ID olarak gönderilmiş olan bir istek başlığı değişkeni, sunucu tarafında hata vermeyecek şekilde işlenebilmelidir. \n 3.15. İstek Başlığı \n \n "Başlık isimleri" yorumlanırken küçük büyük harfe duyarlı olmamalıdır. Örneğin "x-ReQuEsT-Id" geçerli bir başlık ismidir. \n "Başlık değerleri" yorumlanırken ise küçük büyük harf duyarlılığı olmalıdır. Örneğin "xyz123" ile "XYZ123" değerleri farklıdır. \n Başlık değerlerinde ISO-8859-1 standartında yer alan karakter kümesi kullanılmalıdır. Örneğin "PSU-Device-Data" değerinde "İOS12" yazmak, büyük "İ" harfinin ISO-8859-1 içerisinde yer almamasından dolayı, hataya yol açacaktır. \n İstek başlığında aşağıdaki tabloda belirtilen alanlar dışında gönderim yapılmamalıdır. \n İstek başlığında boş değer içeren bir başlık ismiyle gönderim yapılmamalıdır. Örnek; "PSU-Initiated":"" \n İstek ve Yanıt başlığında yer alan alanların; POST GET DELETE methodlarında, OBH,HBH,GKD,OAS,ODS API\'leri bazında Zorunlu/Koşullu/İsteğe Bağlı kullanım durumları aşağıdaki tabloda listelenmiştir. \n \n Tablo 2: İstek Başlığında Yer Alan Veriler \n \n \n \n Başlık İsimleri \n Format \n Notlar \n POST \n GET \n DELETE \n POST \n GET \n DELETE \n \n \n \n \n \n \n \n OBH HBH GKD \n OBH HBH GKD \n OBH HBH GKD \n OAS ODS \n OAS ODS \n OAS ODS \n \n \n X-Request-ID \n AN1..36 \n İsteği başlatan YÖS tarafından belirlenen çağrıya özgü talep kimliği. İstek numarası.   Örnek: Ödeme emri başlatma iş akışının her adımda farklı “x-request-id” değeri kullanılır.   Çağrıların aynı yanıtı dönmesinin beklendiği durumlarda (idempotent işlemlerde) aynı değer ile çağrı yapılır. \n Z \n Z \n Z \n Z \n Z \n Z \n \n \n X-Group-ID \n AN1..36 \n İsteği başlatan YÖS tarafından belirlenen işlem akışına özgü talep kimliği. İşlem grup numarası.  Aynı rıza no’ya ait tüm isteklerde aynı x-group-id bilgisi değeri gönderilmelidir. Örnek: Ödeme emri başlatma/hesap bilgisi iş akışının her adımında aynı “x-group-id” değeri kullanılır. \n Z \n Z \n Z \n - \n - \n - \n \n \n Content-Type \n AN1..20 \n Standart HTTP Başlığı; Talepte sağlanan payload’ın biçimini temsil eder. Bu değerin application/json olarak gönderilmesi gerekmektedir. Hata durumlarında application/problem+json da iletilebilir.  (Başka bir değere ayarlanırsa, HHS, 415 Desteklenmeyen Ortam Türü (Unsupported Media Type) ile yanıt vermelidir) \n Z \n - \n - \n Z \n - \n - \n \n \n X-ASPSP-Code \n AN4 \n Hesap Hizmeti Sağlayıcısının (HHS) kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n Z \n Z \n Z \n Z \n Z \n Z \n \n \n X-TPP-Code \n AN4 \n Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur \n Z \n Z \n Z \n Z \n Z \n Z \n \n \n PSU-Auth-Date \n ISODateTime \n ÖHK’nın YÖS üzerinde en son oturum açtığı saat. [RFC7231] Örneğin:  auth-date: Tue, 11 Sep 2012 19:43:31 GMT \n İ \n İ \n İ \n - \n - \n - \n \n \n PSU-IP-Address \n AN7..15 \n ÖHK YÖS üzerinde oturum açmışsa, işlemi başlattığı cihazın IP adresi. \n İ \n İ \n İ \n - \n - \n - \n \n \n PSU-IP-Port \n AN1..5 \n ÖHK YÖS üzerinde oturum açmışsa, işlemi başlattığı cihazın Port adresi. \n İ \n İ \n İ \n - \n - \n - \n \n \n PSU-GEO-Location \n AN1..36 \n ÖHK’nın işlemi başlattığı cihazın konum bilgisi. RFC2426 standartına uygun olarak paylaşılmalıdır. Örneğin  GEO:"<enlem >, <boylam>GEO:52.506931,13.144558 \n İ \n İ \n İ \n - \n - \n - \n \n \n PSU-User-Agent \n AN 1.. 255 \n ÖHK’nın işlemi başlattığı cihazın sağladığı user-agent bilgisi. (Tarayıcı, versiyon, işletim sistemi bilgileri) \n İ \n İ \n İ \n - \n - \n - \n \n \n PSU-Timestamp \n ISODateTime \n ÖHK’nın işlemi başlattığı cihazın tarih saat içeren zaman bilgisi. \n İ \n İ \n İ \n - \n - \n - \n \n \n PSU-Device-ID \n AN5..40 \n ÖHK işlemi mobil uygulama aracılığıyla başlattıysa, kullanılan mobil uygulama ilk yüklendiğinde oluşturulan tekil cihaz veya uygulama belirteci. ÖHK cihazının UUID değeri kullanılabilir. \n İ \n İ \n İ \n - \n - \n - \n \n \n PSU-Device-Data \n AN1..1024 \n ÖHK’nın işlemi başlattığı mobil cihaza ait veriler.  Örnek alanlar:   - Platform - (Android, iOS, Windows 10 Mobile)  - Device Model   - OS Name   - OS Version - Locale - Time zone \n İ \n İ \n İ \n - \n - \n - \n \n \n PSU-Initiated \n AN1 \n İşlemin ÖHK tarafından başlatılması durumunda E , sistem tarafından başlatıldığı durumda H değerini, olay bildirimine istinaden yapılacak isteklerde O değerini alması beklenir. İşlemler servisinde yapılacak sistemsel sorgulardaki işlem limitlerini kontrol amacıyla kullanılır. O değerinin gönderilebileceği API\'ler  Asıl Verinin Elde Edileceği API  olarak ilgili sayfada yer alan Olay Tipleri ve Kaynak Tipleri İlişkisi tablosunda yer almaktadır. Asıl verinin elde edileceği API\'ler özelinde O gönderimi yapılabilir. O olarak yapılan her isteğe HHS\'nin yanıt vermesi gereklidir. Otomatik sorgularda uygulanan üst limitler, O gönderimi durumunda geçerli değildir. \n Z \n Z \n Z \n - \n - \n - \n \n \n PSU-Fraud-Check \n AN1..4096 \n YÖS\'lerin çeşitli güvenlik kontrollerini gerçekleştirerek, önemli görülen aşağıdaki bilgileri HHS\'ler ile paylaşmaları gerekmektedir. Bu bilgiler ışığında müşterinin profili oluşturulmasına katkı sağlanacaktır.   ÖHK’lı işlemlerde (PSU-Initiated = E gönderildiği durumlarda) gönderilmesi zorunludur.  Sistemsel yapılan API çağrımlarımda, Olay Bildirim Servis Çağrımlarında ve HHS-YÖS API çağrımlarında gönderilmesine gerek bulunmamaktadır.  Paylaşılacak bilgiler şu şekildedir.   FirstLoginFlag  : ÖHK\'nın, müşterilik ömründe ilgili YÖS sistemine (mobil ya da web uygulaması) ilk login olma süresini ifade eden değer. ÖHK\'nın ilk yaptığı HBH ya da ÖBH işlemi değil, YÖS sisteminde kendini aktifleştirme tarih aralığı bilgisidir.   YÖS, kullanıcının ilk login bilgisini tutarak sonraki işlemlerinde bu bilgiyi belirlenen format ile HHS\'ye aktaracaktır. Örneğin; YÖS\'ün 7 aydır müşterisi olan bir kullanıcı için bu alan "5" olarak YÖS tarafından beslenecektir. Burada amaç; ilgili kullanıcının YÖS\'ün eski bir müşterisi mi, yoksa yeni bir müşterisi mi olup olmadığını anlamaktır.   Gönderilmesi Zorunlu alandır. TR.OHVPS.DataCode.ZmnAralik sıralı veri tipinin alabileceği değerleri alabilir.   DeviceFirstLoginFlag  : ÖHK\'nın, müşterilik ömründe işlem anında kullandığı cihazla YÖS uygulamasına (web ya da uygulama tabanlı) ilk login olma süresini ifade eden değer. ÖHK cihaz değişikliği yaparsa FirstLoginFlag değeri sabit kalmalı  ancak DeviceFirstLoginFlag değeri değişmelidir.  FirstloginFlag değeri ile ÖHK’nın YÖS uygulamasına ilk login tarih bilgisi ile ilgili bilgi verilirken, DeviceFirstLoginFlag ile de ÖHK’nın YÖS uygulamasına farklı bir cihaz aracılığı ile ilk login tarihinin bilgisi verilmektedir.  Örneğin; ÖHK 7 aydır YÖS\'ün müşterisi olabilir, böyle bir durumda FirstLoginFlag değeri "5" olacaktır. Ancak son işlemini daha önce hiç kullanmadığı bir cihazdan yapmıştır. Yeni cihazdaki login süre aralığı 0-2 saat aralığında  olduğu için DeviceFirstLoginFlag değeri "1" olacaktır.FirstLoginFlag değeri yine "5" olarak kalmaya devam edecektir.Bu bilgi ile YÖS, ilgili HHS\'ye ilk kez geliyor olsa bile; HHS, müşterinin YÖS\'ü uzun süredir kullandığını ama yeni bir cihazla işlemlerine devam ettiğini anlayabilecektir. Bir ÖHK, farklı cihazlar veya platformlar üzerinden YÖS ile etkileşime girebilir.  Kullanıcı ve YÖS arasında bir oturum başlatılmış ise YÖS’ün tutarlı ve kalıcı bir kimlik (device id) ataması beklenmektedir.  Device ID: Web sitesi veya mobil uygulama kullanıcıları için üretilen, tarayıcı ya da mobil uygulama tabanlı benzersiz (tekil) tanımlayıcı değer. Mobil uygulamalar için ÖHK’nın ilk defa ilgili cihaza aktivasyon yaptığı tarih bilgisi alınmalıdır.   Device ID bilgileri YÖS uygulama ortamı (web ya da uygulama tabanlı) ve ÖHK cihazı bazında tutulmalıdır. YÖS’ten başlatılan işlem hangi uygulama ortamına ait ise ilgili ortamala ilişkili tutulan Device ID’nin ilk login tarihine bakılarak güncel flag değeri hesaplanmalıdır.  Gönderilmesi Zorunlu alandır. TR.OHVPS.DataCode.ZmnAralik sıralı veri tipinin alabileceği değerleri alabilir.   LastPasswordChangeFlag  : ÖHK\'nın, YÖS (cihaz bağımsız)  uygulamasına login olduğu şifre bilgisinin en son değiştirildiği süreyi ifade eden değer. Müşterinin en son ne zaman şifre değişikliği yaptığını anlamak için kullanılan alandır. Yeni müşteri ve hiç şifre değişikliği yapmamış olabilir, böyle bir durumda ilgili alan "0" olarak beslenecektir.   Gönderilmesi Zorunlu alandır. TR.OHVPS.DataCode.ZmnAralik sıralı veri tipinin alabileceği değerleri alabilir.   BlacklistFlag  : ÖHK\'nın herhangi bir sebeple YÖS\'ün sakıncalı müşteriler listesinde bulunup bulunmadığını ifade eden değer.   Burada amaç herhangi bir sebeple YÖS tarafında yasaklı olarak kayıtlı olan ÖHK bilgisinin, dolandırıcılığı önceden tespit etmek amaçlı HHS\'ye aktarılması olarak açıklanabilir. Örneğin, YÖS tarafından tespit edilen dolandırıcı kullancılara ait device id bilgisi, bu kara listede tutulur daha sonra aynı cihazla başka bir ÖHK işlem yapacak olsa bile bu alanda ilgili bilgi "1" değeri ile HHS\'ye aktarılır. HHS\'de olmayıp YÖS tarafında olan bu örnekteki sakıncalı müşteri/cihaz bilgisinin, dolaylı yoldan HHS\'ye aktarılması amaçlanmaktadır.  Gönderilmesi Opsiyonel alandır. TR.OHVPS.DataCode.VarYok sıralı veri tipinin alabileceği değerleri alabilir.   MalwareFlag  : YÖS uygulamasının çalıştığı cihaz üzerindeki son 21 güne ait zararlı yazılım tespit bilgisini ifade eden değer. Örneğin ÖHK\'nın cihazında zararlı yazılım olduğu ayın 1\'inde YÖS tarafından tespit edildi. Zararlı yazılım tespitinden 2 saat sonra YÖS üzerinden login olan ÖHK\'nın durumu,  "1" olarak iletilecektir. Bir gün sonra ayın 2\'sinde, yeni bir zararlı yazılım tespiti yok ancak mevcut zararlı yazılım aktifse alan "2" değeri ile iletilecektir. Süreler artarak 21 güne kadar TR.OHVPS.DataCode.ZmnAralik değerlerine göre iletilecektir.Son 21 gün içinde yeni bir tespit yoksa ayın 22\'sinden itibaren ilgili alan  "0" değeri ile beslenecektir. Not: Zararlı yazılım, bankacılık işlemlerinin yapıldığı uygulamalara girişte kullanılan bilgilerin (şifre, kullanıcı kodu gibi) ele geçirilmesi amacıyla kullanılan bir uygulama ya da kod parçacığı olabilir. Bu amaçlar dışında kullanılan (bankacılığa yönelik bir zararlı yazılım olmayan) yazılım tespitleri iletilmemelidir. YÖS kanallarına her bir loginde, kullanılan cihazda bir zararlı yazılım var mı yok mu kontrolü yapılmalıdır.   Gönderilmesi Opsiyonel alandır. TR.OHVPS.DataCode.ZmnAralik sıralı veri tipinin alabileceği değerleri alabilir.   AnomalyFlag  : Diğer şüpheli durumların varlığını ifade eden değer. Gönderilmesi Opsiyonel alandır. TR.OHVPS.DataCode.VarYok sıralı veri tipinin alabileceği değerleri alabilir.   UnsafeAccountFlag : HHS tarafından aktarılan bilgi ile son 21 gün içinde ÖHK\'nın dolandırıcılık mağduru olması durumunu ifade eden değer. Örneğin; HHS 1, ayın 1\'inde süphe veya sahtekarlık nedeniyle bir ödeme işlemine izin vermediği durumda, bu bilgiyi rıza iptal detay kodu ile YÖS\'e aktarmış olur. Bu bilgiyi tutan YÖS, ilgili müşterinin 15 dakika sonra HHS 2\'de yaptığı işlem için ilgili alanı "1" değeri ile besler. Böylece HHS 2, ÖHK\'nın farklı bir HHS\'de son 15 dakika içinde şüpheli veya sahte bir işlemi olduğunu anlayabilecektir. Ayın 22\'sinde yeni bir tespit/kayıt yoksa bu alan YÖS tarafından "0" olarak beslenecektir. Gönderilmesi Opsiyonel alandır.TR.OHVPS.DataCode.ZmnAralik sıralı veri tipinin alabileceği değerleri alabilir.     Flaglar JWT claims içine key value şeklinde eklenerek gönderilecektir. EK-5: Mesaj İmzalama Akışı\'nda belirtilen yöntemle imzalanarak oluşturulan JWT PSU-Fraud-Check alanına konularak YÖS\'ler tarafından HHS\'ye iletilmelidir. \n K \n K \n Z \n - \n - \n - \n \n \n PSU-Session-ID \n AN1..100 \n İsteği başlatan YÖS tarafından belirlenen oturuma özgü talep kimliği. ÖHK\'nın YÖS uygulaması üzerinden kimlik doğrulama mekanizması ile bilgi sistemlerine dâhil olmalarından işlemlerini tamamlayıp sistemden ayrılmalarına kadar geçecek tüm süreci kapsayacak şekilde aynı değeri almalıdır. Tek seferlik ödeme gibi ÖHK’nın tanınmadan başlatıldığı işlemlerde bu değer boş olarak iletilmelidir. \n İ \n İ \n İ \n - \n - \n - \n \n \n Authorization \n AN1..4096 \n Katılımcı ile GEÇİT arasındaki otorizasyon için kullanılan token bilgisidir.  Yekilendirme türlerinden İstemci Kimlik Bilgileri’ni adresler.    Bölüm 3.6 Karakter Kodlama  bölümünde açıklanan karakter formatında gönderilmesi beklenmektedir. \n Z \n Z \n Z \n Z \n Z \n Z \n \n \n X-Access-Token \n AN1..4096 \n ÖHK’nın GKD sürecinde doğrulanması sonrasında kullanılan erişim simgesi. Yetkilendirme türlerinden Yetkilendirme Kodu (GKD)’nu adresler.  Bölüm 3.6 Karakter Kodlama  bölümünde açıklanan karakter formatında gönderilmesi beklenmektedir. \n İ \n İ \n İ \n - \n - \n - \n \n \n X-JWS-Signature \n AN1..4096 \n Payload gövdesinin ayrılmış bir JWS imzasını içeren üstbilgi.  Bu başlığın ne zaman belirtilmesi gerektiği hususu ilgili endpoint için belirtilmiştir.  Mesaj imzalama kullanılan API ve methoda göre gönderimi zorunludur. \n K \n K \n K \n K \n - \n - \n 3.16. Yanıt Başlığı \n \n "Başlık isimleri" yorumlanırken küçük büyük harfe duyarlı olmamalıdır. Örneğin "x-ReQuEsT-Id" geçerli bir başlık ismidir. \n "Başlık değerleri" yorumlanırken ise küçük büyük harf duyarlılığı olmalıdır. Örneğin "xyz123" ile "XYZ123" değerleri farklıdır. \n Başlık değerlerinde ISO-8859-1 standartında yer alan karakter kümesi kullanılmalıdır. Örneğin "Link" değerinde "İOS12" yazmak, büyük "İ" harfinin ISO-8859-1 içerisinde yer almamasından dolayı, hataya yol açacaktır. \n Yanıt başlığında aşağıdaki tabloda belirtilen alanlar dışında gönderim yapılmamalıdır. \n Yanıt başlığında boş değer içeren bir başlık ismiyle gönderim yapılmamalıdır. Örnek; "PSU-Initiated":"" \n \n Tablo 3: Yanıt Başlığında Yer Alan Veriler \n \n \n \n Başlık İsimleri \n Format \n Notlar \n Kullanım Durumu  OBH HBH GKD \n Kullanım Durumu  OAS ODS \n \n \n \n \n X-Request-ID \n AN1..36 \n YÖS tarafından belirlenen çağrıya özgü talep kimliği. İstek numarası    İlgili istek başlığındaki bilgi geri dönülür. \n Z \n Z \n \n \n X-Group-ID \n AN1..36 \n İsteği başlatan YÖS tarafından belirlenen işlem akışına özgü talep kimliği. İşlem grup numarası. İlgili istek başlığındaki bu değer geri dönülür. \n Z \n - \n \n \n X-ASPSP-Code \n AN4 \n Hesap Hizmeti Sağlayıcısının (HHS) kodudur. (Nezdinde ÖH bulunduran kuruluş kodu. Örneğin, Banka, Elektronik Para Kuruluşu ve Ödeme Kuruluşu) \n Z \n Z \n \n \n X-TPP-Code \n AN4 \n Yetkili Ödeme Hizmeti Sağlayıcısı (YÖS) kodudur \n Z \n Z \n \n \n Content-Type \n AN1..20 \n Standart HTTP Başlığı; Talepte sağlanan payload’ın biçimini temsil eder:  application/json \n Z \n Z \n \n \n X-JWS-Signature \n AN1..4096 \n JWS imzasını içeren üstbilgi. Bu başlığın hangi yanıtlar için kullanılması gerektiği ilgili endpoint için belirtilmiştir.  Hata durumlarında, yanıt gövdesi değeri dönülüyor ise imzalanmalı ve imza bilgisi x-jws-signature alanında iletilmelidir.  Ancak uygulama katmanı tarafından yakalanamayan dolayısı ile imzalanamayan hata durumlarında x-jws-signature alanı HHS\'ler tarafından boş gönderilebilir.  Hatalı yanıt alındığı durumlarda ise X-JWS-Signature başlık değeri dolu ise doğrulama yapılmalıdır. (4**, 5**) \n K \n K \n \n \n X-RateLimit-Limit \n N 1..18 \n İstek kısıtı uygulanan servislerde en fazla kaç adet istek yapılabileceğini gösterir. Kısıt uygulanan servislerde bu başlığın dönmesi zorunludur. \n K \n - \n \n \n X-RateLimit-Remaining \n N 1..18 \n İstek kısıtı uygulanan servislerde kaç adet istek hakkı kaldığını gösterir. Kısıt uygulanan servislerde bu başlığın dönmesi zorunludur. \n K \n - \n \n \n X-RateLimit-Reset \n AN 1..255 \n İstek kısıtı uygulanan servislerde çağrım hakkı bittikten sonra yeniden denemeden önce beklemesi gereken süreyi (saniye cinsinden) gösterir. HTTP 429 durum kodu (Too Many Requests) ile dönülen yanıtların başlığında dönülmesi zorunludur.  YÖS olarak yaptığınız sistemsel sorgularda; HTTP 429 durum kodu (Too Many Requests) ile dönülen yanıt aldığınızda tekrar sorgu yapmadan önce “X-RateLimit-Reset” yanıt başlığını kontrol ederek, bu başlıktaki süre kadar bekledikten sonra yeniden sorgulama yapılması gerekmektedir. \n K \n - \n \n \n x-total-count \n N 1..18 \n Hesaplar, İşlemler, Bakiye, İletilemeyen Olaylar servislerinde sayfalama kullanıldığı durumda, sorgu sonucu dönecek toplam kayıt sayısı bilgisi, bu alanda HHS isteğine bağlı olarak gönderilebilir.   Kayıt sayısı 0 olduğu durumda gönderimi zorunludur. \n K \n K \n \n \n Link \n 1..4096 \n “Link” alanının  Hesap Bilgisi Hizmeti için Erişim Adresleri    tablosundaki parametre  = Sayfalama olan API’lerde ve İletilemeyen Olaylar API\'sinde gönderim yapılması zorunludur.  Sayfalama yapısı kullanıldığında gelen yanıtta birden fazla sayfa var ise; önceki, sonraki, ilk, son sayfalara gitmek için gerekli referanslar link headerında aşağıdaki örnekteki gibi doldurulabilir.  x-total-count alanının gönderimi kayıt sayısı 0 olduğu durum dışında isteğe bağlı olduğu için; Link içerisindeki son sayfa bilgisi  (last) isteğe bağlı hale getirilmiştir. “Önceki”( prev) ve “Sonraki” (next) adımlarının uygun olan her durumda yer alması zorunludur. İlk sayfada “Önceki” seçeneği olmamalı, son sayfada ise “Sonraki” seçeneği olmamalıdır.    </ohvps/hbh/s2.0/hesaplar/hspref/islemler?hesapIslemBslTrh=2022-01-01T00:00:00+03:00&hesapIslemBtsTrh=2023-12-12T23:59:59+03:00&srlmKrtr=islGrckZaman&srlmYon=Y&syfNo=6&syfKytSayi=100>; rel="next",  </ohvps/hbh/s2.0/hesaplar/hspref/islemler?hesapIslemBslTrh=2022-01-01T00:00:00+03:00&hesapIslemBtsTrh=2023-12-12T23:59:59+03:00&srlmKrtr=islGrckZaman&srlmYon=Y&syfNo=4&syfKytSayi=100>; rel="prev",  </ohvps/hbh/s2.0/hesaplar/hspref/islemler?hesapIslemBslTrh=2022-01-01T00:00:00+03:00&hesapIslemBtsTrh=2023-12-12T23:59:59+03:00&srlmKrtr=islGrckZaman&srlmYon=Y&syfNo=14&syfKytSayi=100>; rel="last",  </ohvps/hbh/s2.0/hesaplar/hspref/islemler?hesapIslemBslTrh=2022-01-01T00:00:00+03:00&hesapIslemBtsTrh=2023-12-12T23:59:59+03:00&srlmKrtr=islGrckZaman&srlmYon=Y&syfNo=0&syfKytSayi=100>; rel="first"    Hiç hesap hareketinin olmadığı durumda dönen yanıt başlığınızın şu şekilde olması beklenmektedir.  Response body: [] Response header: Link: </ohvps/hbh/s2.0/hesaplar?srlmKrtr=hspRef&srlmYon=A&syfNo=1&syfKytSayi=100>; rel="last",</ohvps/hbh/s2.0/hesaplar?srlmKrtr=hspRef&srlmYon=A&syfNo=1&syfKytSayi=100>; rel="first"  x-total-count alanı da 0 olarak iletilmelidir. \n K \n K \n 3.17. Idempotency Kuralları \n YÖS’ün aşağıdaki durumlarda aynı istek numarası (x-request-id) ve aynı veri gövdesiyle çağrıyı tekrarlaması; HHS’nin de bu durumlarda aynı yanıtı dönmesi gereklidir. \n \n HHS’nin yanıtı kesinti/arıza nedeniyle YÖS’e ulaşmaz ve zaman aşımı söz konusu olması, \n ÖHK, YÖS uygulaması üzerinden çift tıklama ile mükerrer defa HHS API’lerini çağırılması,\n(API kontrollerinden önce YÖS uygulamasının, çift tıklama kontrolü yapması önerilmektedir.) \n YÖS, yanıt almasına rağmen işleyemeden kaybedilmesi, \n \n durumlarında HHS aşağıdaki kuralları işletir: \n \n HHS gelen istek numarasını ve veri gövdesini birleştirerek checksum değeri üretir. \nchesksum değeri x-request-id|request.body ‘nin hash algoritmalarından (CRC32,MD5 vb)  geçirilerek üretilebilir. \n HHS bu checksum değeri ile YÖS’e dönmüş olduğu yanıtı 5 dk boyunca saklar.  Saklama yöntemi olarak veri tabanı veya önbellek araçları kullanılabilir. \n YÖS aynı istek numarası ve aynı veri gövdesi ile yeni bir çağrı yaptığında, aynı checksum değeri üretileceği için 5dk boyunca bu değere karşılık gelen yanıtı döner. \n 5 dk sonrasında istek numarası veya veri gövdesi değişmemiş olsa dahi bu HHS tarafından yeni istek olarak kabul edilir. \n \n Aşağıdaki Public Post işlemleri için bu kural setinin işletilmesi gerekmektedir: \n 1- Ödeme emri rızası oluşturma \n2- Erişim belirteci oluşturma \n3- Ödeme emri \n4- Hesap bilgisi rızası oluşturma \n5- İleri Tarihli Ödeme Emri Rızası oluşturma \n6- İleri Tarihli Ödeme Emri \n7- Düzenli Tekrarlı Ödeme Emri Rızası oluşturma \n8- Düzenli Tekrarlı Ödeme Emri \n 3.18. HTTP Durum Kodları \n RFC 2616\'da belirlenmiş olan durum kodları (status code) gönderilen isteğin durumunu YÖS’a standart bir şekilde ifade eder. Eğer bir hata varsa hatayı, gönderilen istek başarılı bir şekilde işlem gördüyse ona ilişkin durumu aktarır. Durum kodları genel olarak 5 kategoridedir. \n \n 1xx Bilgi \n 2xx Başarılı \n 3xx Yönlendirme \n 4xx İstemci Hatası \n 5xx Sunucu Hatası \n \n errorCode Alanında Kullanılabilecek Sıralı Hata Tipleri : \n \n TR.OHVPS.Resource \n \n ⇨\tInvalidFormat \n ⇨\tConsentMismatch \n ⇨\tNotFound \n ⇨\tInvalidSignature \n ⇨\tMissingSignature \n ⇨\tMethodNotAllowed \n ⇨\tNotAcceptable \n ⇨\tUnsupportedMediaType \n ⇨\tConsentRevoked \n \n \n \n TR.OHVPS.Business \n \n ⇨\tInvalidContent \n ⇨\tInvalidAccount \n \n \n \n TR.OHVPS.Connection \n \n ⇨\tInvalidCertificate \n ⇨\tExceededRate \n ⇨\tInvalidTPP \n ⇨\tInvalidASPSP \n ⇨\tInvalidToken \n ⇨\tInvalidTPPRole \n \n \n \n TR.OHVPS.Server \n \n ⇨\tInternalError \n ⇨\tServiceUnavailable \n \n \n TR.OHVPS.Resource.InvalidFormat hatası alındığı durumda; fieldErrors nesnesi içerisinde verilecek hata kodları : \n \n TR.OHVPS.Field \n \n ⇨\tMissing \n ⇨\tInvalid \n \n \n Veri Tipi Örneği: \n { \n     "path" :   "/ohvps/obh/s2.0/odeme-emri-rizasi" , \n     "id" :   "d8bd4e5f-f094-48a6-aee1-3a800e2709d9" , \n     "timestamp" :   "2022-12-22T10:33:15+03:00" , \n     "httpCode" :   400 , \n     "httpMessage" :   "Bad Request" , \n     "moreInformation" :   "Validation error" , \n     "moreInformationTr" :   "Şema kontrolleri başarısız" , \n     "fieldErrors" :   [ \n         { \n             "objectName" :   "odemeEmriRizasiIstegi" , \n             "field" :   "odmBsltm.islTtr.prBrm" , \n             "messageTr" :   "boş değer olamaz" , \n             "message" :   "must not be null" , \n             "code" :   "TR.OHVPS.Field.Missing" \n         } , \n         { \n             "objectName" :   "odemeEmriRizasiIstegi" , \n             "field" :   "odmBsltm.kmlk.kmlkVrs" , \n             "messageTr" :   "boyut \'1\' ile \'30\' arasında olmalı" , \n             "message" :   "size must be between 1 and 30" , \n             "code" :   "TR.OHVPS.Field.Invalid" \n         } \n     ] , \n     "errorCode" :   "TR.OHVPS.Resource.InvalidFormat" \n }  \n \n Tablo 4: HTTP Durum Kodları \n \n \n \n HTTP Durum \n İstek Sonucu ve Açıklamalar \n POST \n GET \n DELETE \n \n \n \n \n 200 OK \n İstek Başarıyla Tamamlandı. Kaynak güncellemek için yapılan (örneğin, GET) ve başarıyla tamamlanan isteklerinde kullanılır. \n H \n E \n H \n \n \n 201 Created \n İstek Başarılı Oldu. Kaynak yaratma isteği (örneğin, POST /ödeme-emri-rizasi) başarıyla sonuçlandı. \n E \n H \n H \n \n \n 204 No Content \n Silme işlemi başarıyla tamamlandı. Kaynak silme isteği (örneğin,  DELETE /hesap-rizasi/{RizaNo} ) başarıyla sonuçlandı. \n H \n H \n E \n \n \n 400 Bad Request \n İstekte bozuk, eksik veya uyumlu olmayan JSON gövdesi, URL parametreleri veya başlık alanları var.  İstekle başlatılan işlem yapısal bozukluk, eksik veya tutarsız veri veya HHS tarafındaki kontrollerin hatalı sonuçlanması nedeniyle hata ile sonuçlanır ve hataya ilişkin veriler hata nesnesi içerisinde dönülür. \n E \n E \n E \n \n \n 401 Unauthorized \n Yetkilendirme başlığı eksik, hatalı veya geçersiz olduğundan istek yetkilendirilmediğinde ve erişim reddedildiğinde http 401 kodu dönülmelidir. \n E \n E \n E \n \n \n 403 Forbidden \n Erişim belirtecinin veya rızanın kapsamı uyuşmuyor. YÖS bir hesaba/işlem kaynağına erişmeye çalışır ve YÖS, istenen kaynağa erişmek için geçerli izinlere sahip bir rızası yoktur.  Örneğin; hesap bilgisi rızası bakiye izni almamıştır ancak /bakiyeler adresinden istekte bulunmuştur. \n \n \n \n \n \n 404 Not Found \n **HHS geçerli bir API erişim adresini sağlamıyorsa, o URL\'ye gelen istekler için 404 (Bulunamadı) ile yanıt vermelidir.**YÖS, uygulama esaslarında tanımlanmayan bir kaynak için bir URL\'ye erişmeye çalışırsa (örneğin, GET /yurtdisi-odeme), HHS, 404 (Bulunamadı) ile yanıt vermeyi seçebilir. \n E \n E \n E \n \n \n 405 Method Not Allowed \n YÖS, desteklenmeyen bir yöntemle kaynağa erişmeye çalıştı. \n E \n E \n E \n \n \n 406 Not Acceptable \n İstek, geçersiz bir karakter kümesi içeriyor. \n E \n E \n E \n \n \n 415 Unsupported Media Type \n İstek gövdesi hedef kaynakta bu yöntem tarafından desteklenmeyen bir biçimde oluşturulduğu için işlem reddedildi \n E \n H \n H \n \n \n 429 Too Many Requests \n Belirli bir süre içinde çok fazla talepte bulunulduğu için işlem reddedildi.  HHS’ler adil kullanım politikalarını aşan talepleri kısıtlayabilir. \n E \n E \n E \n \n \n 500 Internal Server Error \n API sunucu / servis katmanında sorun oluştu. İşlem başarısız.  5XX hata durumlarında yanıt gövde değeri olmadığı için mesaj imzalama yapılamaz ve x-jws-signature alanı boş olarak iletilir.  Bu durumda x-jws-signature kontrolü yapılmamalıdır. \n E \n E \n E \n \n \n 503 Service Unavailable \n Hizmet sürümü kullanımdan kaldırıldı.  Bir API\'nin kullanımdan kaldırıldığı ve artık bir HHS tarafından operasyonel olarak desteklenmediği durumlarda, URI yolu hala etkin olabilir ve API isteklerini kabul edebilir.  Bu durumda, YÖS\'ün API sürümünün çevrimdışı olduğunun farkında olması için 503 Hizmet Kullanılamıyor dönmesi önerilir. \n E \n E \n E \n \n \n \n İş kuralları nezdinde ilgili hata kodları özelleştirilmiş olup HHS tarafından verilecek olan hata kodları ÖHVPS API İlke ve Kuralları dokümanında ilgili alanlarda paylaşılmıştır. Bu çalışmaya ek olarak, HHS\'lerin YÖS\'lere; YÖS\'lerin de ÖHK\'lara iletecekleri hata mesaj içeriklerinde standartlaşmaya gidilmiştir. Bu çalışmaya Türkiye\'nin İletişim Platformu altında yer alan ÖHVPS > Dokümanlar alanından ulaşabilirsiniz. HHS\'lerin ve YÖS\'lerin ilgili dokümanı referans alarak mesaj içeriklerini, kurumların kendi müşteri iletişim dili kapsamında düzenleyerek ÖHK\'lara gösterebilir olması beklenmektedir. \n Hata Örnekleri: \n 400 Bad Request \n TR.OHVPS.Resource.InvalidFormat  hatası şema validasyonu, alan uzunluk ve varlık kontrollerinin başarısız olduğu durumda verilmelidir. \n \n { \n     "path" :   "/ohvps/obh/s2.0/odeme-emri-rizasi" , \n     "id" :   "7f115b9c-d7c2-4a2a-bc45-5a9891c79072" , \n     "timestamp" :   "2022-12-22T10:47:57+03:00" , \n     "httpCode" :   400 , \n     "httpMessage" :   "Bad Request" , \n     "moreInformation" :   "Validation error" , \n     "moreInformationTr" :   "Şema kontrolleri başarısız" , \n     "fieldErrors" :   [ \n         { \n             "objectName" :   "odemeEmriRizasiIstegi" , \n             "field" :   "odmBsltm.alc.unv" , \n             "messageTr" :   "boyut \'3\' ile \'140\' arasında olmalı" , \n             "message" :   "size must be between 3 and 140" , \n             "code" :   "TR.OHVPS.Field.Invalid" \n         } , \n         { \n             "objectName" :   "odemeEmriRizasiIstegi" , \n             "field" :   "odmBsltm.islTtr.ttr" , \n             "messageTr" :   "boş değer olamaz" , \n             "message" :   "must not be null" , \n             "code" :   "TR.OHVPS.Field.Missing" \n         } \n     ] , \n     "errorCode" :   "TR.OHVPS.Resource.InvalidFormat" \n }  \n\n \n Zorunlu header alanlarından biri ya da birkaçı eksik olarak gönderilirse aşağıdaki gibi bir hata dönüşü gerçekleşebilir. \n HHS uygulaması tarafından dönülebilecek hata örnekleri: \n \n { \n     "path" :   "/ohvps/obh/s2.0/odeme-emri-rizasi" , \n     "id" :   "2005515d-f0e6-4a07-a439-0ef3b0f56011" , \n     "timestamp" :   "2022-12-22T10:39:26+03:00" , \n     "httpCode" :   400 , \n     "httpMessage" :   "Bad Request" , \n     "moreInformation" :   "Validation error" , \n     "moreInformationTr" :   "Şema kontrolleri başarısız" , \n     "errorCode" :   "TR.OHVPS.Resource.InvalidFormat" , \n     "fieldErrors" :   [ \n         {          \n             "field" :   "X-Request-ID" , \n             "messageTr" :   "X-Request-ID değeri boş olamaz." , \n             "message" :   "X-Request-ID cannot be null." , \n             "code" :   "TR.OHVPS.Field.Invalid" \n         } \n     ] \n }  \n\n \n Business hata örneği - 1: \n { \n     "path" :   "/ohvps/obh/s2.0/odeme-emri-rizasi" , \n     "id" :   "677cfd9d-77c1-4ea3-8bdf-74a6e9887177" , \n     "timestamp" :   "2022-12-22T11:05:59+03:00" , \n     "httpCode" :   400 , \n     "httpMessage" :   "Bad Request" , \n     "moreInformation" :   "gonUnvan wrong" , \n     "moreInformationTr" :   "Gönderen Ünvan hatalı" , \n     "errorCode" :   "TR.OHVPS.Business.IncorrectSenderTitle" \n }  \n \n Business hata örneği - 2: \n { \n     "path" :   "/ohvps/obh/s2.0/odeme-emri-rizasi" , \n     "id" :   "5df3b402-3aca-4305-a35b-5af0f3184b40" , \n     "timestamp" :   "2022-12-22T11:06:47+03:00" , \n     "httpCode" :   400 , \n     "httpMessage" :   "Bad Request" , \n     "moreInformation" :   "Sender account is disabled or not found." , \n     "moreInformationTr" :   "Gonderen hesap aktif değil veya bulunamadı." , \n     "errorCode" :   "TR.OHVPS.Business.InvalidAccount" \n }  \n \n GEÇİT\'te yapılan zorunlu header kontrollerinde aşağıdaki hatalar dönebilir: \n \n { \n     "timestamp" :   "2022-12-22T10:40:28+03:00" , \n     "path" :   "/ohvps/obh/s2.0/odeme-emri-rizasi" , \n     "id" :   "d4375748-6fc7-4f7e-94f3-6411cab1d59f" , \n     "moreInformationTr" :   "Geçersiz HHS kodu." , \n     "errorCode" :   "TR.OHVPS.Connection.InvalidASPSP" , \n     "moreInformation" :   "Invalid ASPSP Code" , \n     "httpCode" :   400 , \n     "httpMessage" :   "Bad Request" \n }  \n \n GEÇİT tarafından dönülecek hata örneği: \n \n { \n     "timestamp" :   "2022-12-22T10:40:28+03:00" , \n     "path" :   "/ohvps/obh/s2.0/odeme-emri-rizasi" , \n     "id" :   "d4375748-6fc7-4f7e-94f3-6411cab1d59f" , \n     "moreInformationTr" :   "Geçersiz HHS kodu." , \n     "errorCode" :   "TR.OHVPS.Connection.InvalidTPP" , \n     "moreInformation" :   "Invalid TPP Code" , \n     "httpCode" :   400 , \n     "httpMessage" :   "Bad Request" \n }  \n \n GEÇİT tarafından dönülecek hata örneği: \n \n { \n     "timestamp" :   "2022-12-22T11:14:05+03:00" , \n     "path" :   "/ohvps/hbh/s2.0/hesap-bilgisi-rizasi" , \n     "id" :   "ee1e3ea7-a5e5-468b-bb02-314148f84e6a" , \n     "moreInformationTr" :   "Geçersiz yös rolü. İlgili api çağrısı için yetkisi yok." , \n     "errorCode" :   "TR.OHVPS.Connection.InvalidTPPRole" , \n     "moreInformation" :   "Invalid TPP Role" , \n     "httpCode" :   403 , \n     "httpMessage" :   "Forbidden" \n }  \n\n \n 401 Unauthorized \n YÖS, süresi dolmuş bir erişim belirteci kullandığında, HHS 401 (Yetkisiz) http kodu ile aşağıdaki hata kodunu dönmelidir.  Aşağıdaki nedenlerden herhangi biri nedeniyle bir Erişim Belirtecinin süresi dolduğunda bu durum ortaya çıkabilir: \n \n Rızanın süresi doldu (Son Kullanma Tarihi geçti) \n Erişim Belirtecinin şüpheli kullanımı veya sahtekarlık şüphesi \n Rızada belirlenen gün sayısının aşımı\nBu hata, müşteriden doğru izinlerle yeniden kimlik doğrulaması isteyerek çözülebilir. \n \n \n { \n     "path" :   "/ohvps/gkd/s2.0/erisim-belirteci" , \n     "id" :   "ed3fd667-fc58-40ad-a982-e8937faccd15" , \n     "timestamp" :   "2022-12-22T11:17:33+03:00" , \n     "httpCode" :   401 , \n     "httpMessage" :   "Unauthorized" , \n     "moreInformation" :   "Refresh token expired or not found in database" , \n     "moreInformationTr" :   "Yenileme belirteci zaman aşımına uğramış veya veri tabanında yok" , \n     "errorCode" :   "TR.OHVPS.Connection.InvalidToken" \n }  \n \n\n \n 403 Forbidden \n Örn; YÖS yetkisi olmayan rol(ÖBH/HBH) ile işlem yapmaya çalıştığı durumda 403 hatası alarak işleme devam edemez. \n { \n   "path" :   "/ohvps/hbh/s2.0/bakiye" , \n   "id" :   "3e48ea98-f889-48b9-aa6e-28aabc6cfb14" , \n   "timestamp" :   "2022-12-22T11:20:05+03:00" , \n   "httpCode" :   403 , \n   "httpMessage" :   "Forbidden" , \n   "moreInformation" :   "Forbidden" , \n   "moreInformationTr" :   "Bakiye Bilgileri için ÖHK izni bulunmamaktadır." , \n   "errorCode" :   "TR.OHVPS.Resource.Forbidden" \n }  \n \n 404 Not Found \n Örn; GET /odeme-emri-rizasi/123456 çağrısı durumunda 123456 geçerli bir ödeme kaynağı değilse, HHS, 404 koduyla cevap vermelidir. \n { \n     "path" :   "/ohvps/obh/s2.0/odeme-emri-rizasi/123456" , \n     "id" :   "22f52b2d-d442-4a6a-8f39-d23eba45a34b" , \n     "timestamp" :   "2022-12-22T10:53:53+03:00" , \n     "httpCode" :   404 , \n     "httpMessage" :   "Not Found" , \n     "moreInformation" :   "Resource not found" , \n     "errorCode" :   "TR.OHVPS.Resource.NotFound" , \n     "moreInformationTr" :   "Kaynak bulunamadı" \n }  \n\n \n 405 Method Not Allowed \n { \n     "path" :   "/ohvps/obh/s2.0/odeme-emri-rizasi" , \n     "id" :   "3e5c6b28-7ee4-4469-b541-843fb4a94eec" , \n     "timestamp" :   "2022-12-22T11:35:10+03:00" , \n     "httpCode" :   405 , \n     "httpMessage" :   "Method Not Allowed" , \n     "moreInformation" :   "Method not allowed" , \n     "errorCode" :   "TR.OHVPS.Resource.MethodNotAllowed" , \n     "moreInformationTr" :   "İstek yapılan URL için izin verilmeyen metot" \n }  \n \n 406 Not Acceptable \n { \n     "path" :   "/ohvps/obh/s2.0/odeme-emri-rizasi" , \n     "id" :   "3e5c6b28-7ee4-4469-b541-843fb4a94eec" , \n     "timestamp" :   "2022-12-22T11:35:10+03:00" , \n     "httpCode" :   406 , \n     "httpMessage" :   "Not Acceptable" , \n     "moreInformation" :   "Not Acceptable" , \n     "errorCode" :   "TR.OHVPS.Resource.NotAcceptable" , \n     "moreInformationTr" :   "Kabul edilmedi" \n }  \n \n 415 Unsupported Media Type \n İstek başlığında content-type, JSON dışında bir veri iletilirse bu hata verilebilir. \n \n { \n     "path" :   "/ohvps/obh/s2.0/odeme-emri-rizasi" , \n     "id" :   "63cc94b6-1b51-4648-9671-95e6e2e7e03d" , \n     "timestamp" :   "2022-12-22T11:37:12+03:00" , \n     "httpCode" :   415 , \n     "httpMessage" :   "Unsupported Media Type" , \n     "moreInformation" :   "Content type not supported" , \n     "errorCode" :   "TR.OHVPS.Resource.UnsupportedMediaType" , \n     "moreInformationTr" :   "Desteklenmeyen içerik tipi’" \n }  \n \n 429 Too Many Requests \n { \n   "path" :   "/ohvps/hbh/s2.0/hesaplar/aef6061f-2978-4bb4-980d-b4c634c8055b/islemler" , \n   "id" :   "20473c5f-2f4f-4b2e-8b66-7978aec442f7" , \n   "timestamp" :   "2022-12-22T00:21:07+03:00" , \n   "httpCode" :   429 , \n   "httpMessage" :   "Too Many Requests" , \n   "moreInformation" :   "Exceeded rate" , \n   "moreInformationTr" :   "Erişim sıklığı limiti aşımı" , \n   "errorCode" :   "TR.OHVPS.Connection.ExceededRate" \n }  \n \n 500 Internal Server Error \n { \n   "id" :   "1b90c6dc-0277-4755-8b05-9297ddfab743" , \n   "path" :   "/ohvps/obh/s2.0/odeme-emri-rizasi" , \n   "timestamp" :   "2022-12-22T11:41:34+03:00" , \n   "httpCode" :   500 , \n   "httpMessage" :   "Internal Server Error" , \n   "moreInformation" :   "Unexpected condition was encountered." , \n   "moreInformationTr" :   "Beklenmeyen bir durumla karşılaşıldı." , \n   "errorCode" :   "TR.OHVPS.Server.InternalError" \n }  \n\n \n 503 Service Unavailable \n \n   "timestamp" :   "2022-12-20T23:18:56+03:00" , \n   "path" :   "/ohvps/hbh/s2.0/hesap-bilgisi-rizasi/2a72678ee3d24de2be47887e4903a8c6" , \n   "id" :   "e76315b7-09f4-4295-b6d8-1f7fec632159" , \n   "moreInformationTr" :   "HHS şu anda hizmet veremiyor." , \n   "errorCode" :   "TR.OHVPS.Server.ServiceUnavailable" , \n   "moreInformation" :   "HHS is currently unavailable" , \n   "httpCode" :   503 , \n   "httpMessage" :   "Service Unavailable" \n 3.19. Maskeleme Kuralları \n Maskeli olarak iletilmesi gereken verilerin maskeleme kuralları şu şekildedir: \n \n IBAN verileri Hesap Numarası : İlk 4 ve son 4 karakteri açık, diğer karakterler maskeli olmalıdır. Örnek: TR54******************4812 \n Ad-Soyadı / Ticari Unvan : Her kelimenin ilk 2 karakteri açık, sonraki karakterler yerine 4 adet ‘ ’ karakteri konumlandırılmalıdır.\nÖrneğin: “FATİH SERKAN EREN” ifadesi “FA *** SE**** ER****” şeklinde gösterilmelidir. \n Tabela Unvanı : Her kelimenin ilk 2 karakteri açık, sonraki karakterler yerine 4 adet \' \' karakteri konumlandırılmalıdır. Örneğin “BANKALARARASI KART MERKEZİ ANONİM ŞİRKETİ” ifadesi “BA *** KA**** ME**** AN**** Şİ****” şeklinde gösterilmelidir. \n YÖS’ten girilen alıcı unvan ve IBAN bilgileri ödeme emri rızası ve ödeme emri yanıtında açık dönülür, Kolas akışında ödeme emri rızası yanıtı ve ödeme emri istek ve yanıtında maskeli taşınır. \n 3.20. Fonksiyonel Olmayan Gereksinimler \n \n \n HHS’lerin sunuyor oldukları servisleri en fazla 3000 ms içinde yanıt dönecek şekilde tasarlamalıdır. \n \n \n HHS\'ler mevcut online işlem kanallarından sundukları erişilebilirlik ve performans kriterlerinden daha düşük bir hizmet kalitesi sunmamalıdır. \n \n \n HHS’lerin sunuyor oldukları servislere sistemin güvenlik ve sürekliliğini sağlamak adına rate limit koyma ihtiyaçları olur ise, standartlar ve ihtiyaçlara uygun şekilde bir konfigürasyon yapabilirler.  \n \n \n HHS rate limit tanımı uyguluyor ise; YÖS\'ler arasında ayrım yapmadan, adil ve makul sınırlar dahilinde uygulamalıdır.    \n \n \n YÖS tarafından kullanıcının başlatmadığı otomatik sorgu limitleri  3.21 Otomatik Sorgular  bölümünde detaylandırılmıştır. HHS\'lerin bu servisler için minimumda cevap vermesi gereken sorgu sayıları belirlenmiştir. Bu sayıların üzerinde yapılan servis çağrısına yanıt dönmek HHS inisiyatifindedir. Diğer taraftan kullanıcının başlattığı istekler için uygulanacak limitler, HHS\'nin online işlem kanallarından sunulan sorgu limitlerinden daha az olmamalıdır. \n \n \n HHS\'ler, çağrım limitlerini aşan istekler için HTTP 429 - Too Many Request hatasını dönmelidir. Örnek hata mesajı  3.18 HTTP Durum Kodları  bölümünde bulunmaktadır. Rate Limit özelinde tanımlanmış parametreler olan X-RateLimit-Limit, X-RateLimit-Remaining ve X-RateLimit-Reset alanları da   3.16 Yanıt Başlığı  bölümünde açıklanmıştır. YÖS\'ler de HHS\'nin belirlediği rate limit kurallarına uymakla yükümlüdür. \n 3.21. Otomatik Sorgular \n YÖS uygulaması, ÖHK\'nın başlattığı işlemler neticesinde API çağrımı yapabileceği gibi, sistemsel bir şekilde otomatik API çağrımı da yapabilir. \nHHS, API çağrımının ÖHK\'lı ya da ÖHK\'sız olduğunu istek parametreleri içerisinde yer alan PSU-Initiated parametresi ile anlar. Bu parametre “E” ise ÖHK’lı, “H” ise sistemsel yapılmış bir sorgu anlamına gelmektedir. \n ÖHK YÖS uygulamasına giriş yaptığı andan çıkış yaptığı ana kadar yani ÖHK oturumu boyunca yapılan API çağrımlarında, PSU-Initiated  değerinin "E" olması gerekmektedir.  YÖS uygulamasında ÖHK oturumu boyunca,  ÖHK\'nın bilgilerinden minimumda "bakiye" bilgisinin, uygulama arayüzlerinde güncel değeri ile online sorgularla gösterimi YÖS\'ün insiyatifindedir. \n ÖHK’nın başlattığı sorgular için HHS tarafından belirlenen üst rate limitler dahilinde çağrım yapılabilir. \n YÖS, aşağıdaki API\'leri sistemsel bir şekilde çağırabilir. \nHHS\'lerin bu servisler için minimumda cevap vermesi gereken sorgu sayıları belirlenmiştir. Bu sayıların üzerinde yapılan servis çağrısına yanıt dönmek HHS inisiyatifindedir. \nHHS tarafından izin verilen sorgu sayısının üzerinde yapılan bir sorgu için HTTP 429 durum kodu (Too Many Requests) hatası dönülmelidir. Yanıt gövdesinde tekrar hata nesnesinin oluşturulması HHS inisiyatifindedir.  HHS yanıt headerı alanında iletilecek X-RateLimit-Reset (saniye cinsinden) değeri kadar süre sonunda\nYÖS\'ün tekrar sorgulama yapması beklenmektedir. \n \n \n \n No \n Kaynak \n HTTP işlemi \n Erişim Adresi \n Otomatik Sorgu Sayısı \n \n \n \n \n 1 \n erisim-belirteci \n POST \n /erisim-belirteci \n --- \n \n \n 2 \n odeme-emri-rizasi \n GET \n /odeme-emri-rizasi/{rizaNo} \n Rıza bazında günde 4 \n \n \n 3 \n odeme-emri \n GET \n /odeme-emri/{odemeEmriNo} \n Rıza bazında günde 24 \n \n \n 4 \n ileri-tarihli-odeme-emri-rizasi \n GET \n /ileri-tarihli-odeme-emri-rizasi/{rizaNo} \n Rıza bazında günde 4 \n \n \n 5 \n ileri-tarihli-odeme-emri \n GET \n /ileri-tarihli-odeme-emri/{odemeEmriNo} \n Rıza bazında günde 24 \n \n \n 6 \n ileri-tarihli-odeme-emri-rizasi \n DELETE \n /ileri-tarihli-odeme-emri-rizasi/{rizaNo} \n --- \n \n \n 7 \n duzenli-odeme-emri-rizasi \n GET \n /duzenli-odeme-emri-rizasi/{rizaNo} \n Rıza bazında günde 4 \n \n \n 8 \n duzenli-odeme-emri \n GET \n /duzenli-odeme-emri/{talimatNo} \n Rıza bazında günde 24 \n \n \n 9 \n duzenli-odeme-emri-rizasi \n DELETE \n /duzenli-odeme-emri-rizasi/{rizaNo}} \n --- \n \n \n 10 \n hesap-bilgisi-rizasi \n GET \n /hesap-bilgisi-rizasi/{RizaNo} \n Rıza bazında günde 4 \n \n \n 11 \n duzenli-odeme-talimat-plani \n GET \n /duzenli-odeme-emri/{talimatNo}/odeme-plani \n Rıza bazında günde 24 \n \n \n 12 \n hesap-bilgisi-rizasi \n DELETE \n /hesap-bilgisi-rizasi/{RizaNo} \n --- \n \n \n 13 \n hesaplar \n GET \n /hesaplar \n Bireysel günde 4  Kurumsal günde 4 \n \n \n 14 \n hesaplar \n GET \n /hesaplar/{hspRef} \n Bireysel günde 4 Kurumsal günde 4 \n \n \n 15 \n bakiye \n GET \n /hesaplar/{hspRef}/bakiye \n Bireysel günde 24 Kurumsal ÖHK - günde 24 \n \n \n 16 \n bakiye \n GET \n /bakiye \n Bireysel günde 24 Kurumsal ÖHK - günde 24 \n \n \n 17 \n islemler \n GET \n /hesaplar/{hspRef}/işlemler \n Bireysel günde 4 Kurumsal ÖHK - saatte 12 \n \n \n 18 \n kartlar \n GET \n /kartlar \n Bireysel günde 4  Kurumsal günde 4 \n \n \n 19 \n kartlar \n GET \n /kartlar/{kartRef} \n Bireysel günde 4 Kurumsal günde 4 \n \n \n 20 \n kart-detay \n GET \n /kartlar/{kartRef}/kart-detay \n Bireysel günde 24 Kurumsal ÖHK - günde 24 \n \n \n 21 \n kart-hareketleri \n GET \n /kartlar/{kartRef}/kart-hareketleri \n Bireysel günde 32 Kurumsal ÖHK - günde 32 \n \n \n \n YÖS ve HHS son 24 saat içerisindeki sorgu sayılarını toplayarak elde ettiği sonuçlarla limit kontrolü yapmalıdır (Pencere yöntemi). \n İşlemler servisinin çağrım detaylarına  ^Bölüm 7.8  üzerinden ulaşılabilir. \n Hesap bilgisi rızasının YÖS tarafından otomatik bir şekilde iptal edilmesi durumu  ^Bölüm 9\'da  açıklanmıştır. \n'},{frontmatter:{},regularPath:"/v2.0.0/deneyalani/duzenli-odeme-emri-api.html",relativePath:"v2.0.0/deneyalani/duzenli-odeme-emri-api.md",key:"v-e73a02ea",path:"/v2.0.0/deneyalani/duzenli-odeme-emri-api.html",content:" \n   \n "},{frontmatter:{},regularPath:"/v2.0.0/deneyalani/hesap-bilgisi-api.html",relativePath:"v2.0.0/deneyalani/hesap-bilgisi-api.md",key:"v-7b0a82c6",path:"/v2.0.0/deneyalani/hesap-bilgisi-api.html",content:" \n   \n "},{frontmatter:{},regularPath:"/v2.0.0/deneyalani/genel-bilgiler.html",relativePath:"v2.0.0/deneyalani/genel-bilgiler.md",key:"v-48365a59",path:"/v2.0.0/deneyalani/genel-bilgiler.html",content:" GENEL BiLGİLER: \n ÖHVPS API İlke ve Kuralları dokümanına istinaden geliştirmelerini yapan/yapacak olan katılımcılar geliştirdikleri sürüme ait API’lerin nasıl çalıştıklarını görmek istediklerinde “Deney Alanı” üzerinden gözlem yapabilirler. Bu kapsamda, Deney Alanı katılımcılara tarayıcı üzerinden statik verilerle işlem başlatarak, dönen yanıtı inceleme imkanı sunar. \n Deney Alanı ile sunulan imkanlar şu şekildedir: \n \n Servisler durum bilgisi içermeyecek şekilde (stateless) olarak sunulmaktadır. \n Güçlü Kimlik Doğrulama akışlarında kurum özelinde oluşturulan yetkilendirme kimlik bilgilerine ihtiyaç duyulmamaktadır. \n Yanıt veri kümesi statiktir. Servislere yapılan istekler, her zaman aynı yanıtı dönmektedir. \n Yeni oluşturma, güncelleme, silme işlemleri kaynak veri üzerinde değişiklik yapmamaktadır. \n Deney alanı genelin kullanımına açıktır. Üyelik kaydı olmaksızın Deney Alanı üzerinden API incelemeleri gerçekleştirilebilmektedir. \n API dokümanında yapılacak minor değişiklikler deney alanına yansıtılmayacaktır. \n \n Not: Deney Alanı’nın kapsamı genişletilmiş versiyonu – “BKM ÖHVPS Simülatör” uygulaması hem HHS hem de YÖS katılımcılarının; test uygulamalarını uçtan uca test edebilebileceği bir ortamdır. Simülatör uygulaması üzerinden dinamik veri girişi yaparak, geliştirilen servisler ile zorunlu senaryoların tümünün simülasyonu gerçekleştirilebilir. Simülatör ortamındaki API’ler, üretim ortamının bir kopyası olacak şekilde oluşturulmuştur ve kurumların üretim ortamına hazır hale gelmelerine aracılık eder. Bu uygulama, pürüzsüz bir üretim ortamı geçişi imkanı sağlar ve ÖHVPS BKM Teknik Sertifikasyonu geçmek için koşulması gereken sertifikasyon senaryoları BKM ÖHVPS Simülatör’ü üzerinden sunulmaktadır. BKM Simülatör kullanımı için ayrı bir süreç işletilmekte olup daha fazla detaylı bilgi almak için ohvps@bkm.com.tr adresine taleplerinizi iletmeniz gerekmektedir. \n Ödeme Emri Başlatma API Deney Alanı \n"},{frontmatter:{},regularPath:"/v2.0.0/deneyalani/hhs-yos-api.html",relativePath:"v2.0.0/deneyalani/hhs-yos-api.md",key:"v-d8bdee46",path:"/v2.0.0/deneyalani/hhs-yos-api.html",content:" \n   \n "},{frontmatter:{},regularPath:"/v2.0.0/deneyalani/odeme-emri-api.html",relativePath:"v2.0.0/deneyalani/odeme-emri-api.md",key:"v-35eaf572",path:"/v2.0.0/deneyalani/odeme-emri-api.html",content:" \n   \n "},{frontmatter:{},regularPath:"/v2.0.0/deneyalani/ileri-tarihli-odeme-emri-api.html",relativePath:"v2.0.0/deneyalani/ileri-tarihli-odeme-emri-api.md",key:"v-b537e5f2",path:"/v2.0.0/deneyalani/ileri-tarihli-odeme-emri-api.html",content:" \n   \n "},{frontmatter:{},regularPath:"/v2.0.0/deneyalani/olay-bildirim-api.html",relativePath:"v2.0.0/deneyalani/olay-bildirim-api.md",key:"v-5a2e0d7d",path:"/v2.0.0/deneyalani/olay-bildirim-api.html",content:" \n   \n "},{frontmatter:{},regularPath:"/v2.0.0/deneyalani/test.html",relativePath:"v2.0.0/deneyalani/test.md",key:"v-aa99c1f6",path:"/v2.0.0/deneyalani/test.html",content:" \n   \n "}],themeConfig:{searchMaxSuggestions:20,footer:'\n      &copy; <a href="https://github.com/Renovamen" target="_blank">Renovamen</a> 2018-2021\n      <br>\n      Powered by <a href="https://vuepress.vuejs.org" target="_blank">VuePress</a> &\n      <a href="https://github.com/Renovamen/vuepress-theme-gungnir" target="_blank">Gungnir</a>\n    ',sidebar:[{title:"SÜRÜM 2.0.0 - Aktif Sürüm",path:"/v2.0.0/contents/tanim-ve-kisitlamalar",children:[{title:"1. Tanımlar ve Kısıtlamalar",path:"/v2.0.0/contents/tanim-ve-kisitlamalar"},{title:"2. Kapsam ve Dayanak",path:"/v2.0.0/contents/kapsam-ve-dayanak"},{title:"3. Temel Prensipler",path:"/v2.0.0/contents/temel-prensipler"},{title:"4. Rıza Durumları",path:"/v2.0.0/contents/riza-durumlari"},{title:"5. Güçlü Kimlik Doğrulama",path:"/v2.0.0/contents/gkd"},{title:"6. Ödeme Emri Başlatma Hizmeti",path:"/v2.0.0/contents/odeme-emri-baslatma-hizmeti"},{title:"7. İleri Tarihli Ödeme Emri Başlatma Hizmeti",path:"/v2.0.0/contents/ileri-tarihli-odeme-emri-hizmeti"},{title:"8. Düzenli Ödeme Emri Başlatma Hizmeti",path:"/v2.0.0/contents/duzenli-odeme-emri-hizmeti"},{title:"9. Hesap Bilgisi Hizmeti",path:"/v2.0.0/contents/hesap-bilgisi-hizmeti"},{title:"10. HHS ve YÖS API",path:"/v2.0.0/contents/hhs-yos-api"},{title:"11. Güçlü Kimlik Doğrulama API",path:"/v2.0.0/contents/erisim-belirteci"},{title:"12. Olay Bildirim",path:"/v2.0.0/contents/olay-bildirim"},{title:"13. Ekler",path:"/v2.0.0/contents/ekler"},{title:"14. Deney Alanı",path:"/v2.0.0/deneyalani/genel-bilgiler",children:[{title:"1. Ödeme Emri Başlatma API",path:"/v2.0.0/deneyalani/odeme-emri-api"},{title:"2. İleri Tarihli Ödeme Emri Başlatma API",path:"/v2.0.0/deneyalani/ileri-tarihli-odeme-emri-api"},{title:"3. Düzenli Ödeme Emri Başlatma API",path:"/v2.0.0/deneyalani/duzenli-odeme-emri-api"},{title:"4. Hesap Bilgisi API",path:"/v2.0.0/deneyalani/hesap-bilgisi-api"},{title:"5. HHS - YÖS API",path:"/v2.0.0/deneyalani/hhs-yos-api"},{title:"6. Olay Bildirim",path:"/v2.0.0/deneyalani/olay-bildirim-api"}]}]},{title:"Dijital Cüzdanlardan TR Karekod ile Ödeme",path:"/dijital-cuzdan"},{title:"Sürüm Yönetimi",path:"/surum-yonetimi"},{title:"SÜRÜM 1.0.1",path:"/v1.0.1/contents/tanim-ve-kisitlamalar",children:[{title:"1. Tanımlar ve Kısıtlamalar",path:"/v1.0.1/contents/tanim-ve-kisitlamalar"},{title:"2. Kapsam ve Dayanak",path:"/v1.0.1/contents/kapsam-ve-dayanak"},{title:"3. Temel Prensipler",path:"/v1.0.1/contents/temel-prensipler"},{title:"4. Rıza Durumları",path:"/v1.0.1/contents/riza-durumlari"},{title:"5. Güçlü Kimlik Doğrulama",path:"/v1.0.1/contents/gkd"},{title:"6. Ödeme Emri Başlatma Hizmeti",path:"/v1.0.1/contents/odeme-emri-baslatma-hizmeti"},{title:"7. Hesap Bilgisi Hizmeti",path:"/v1.0.1/contents/hesap-bilgisi-hizmeti"},{title:"8. HHS ve YÖS API",path:"/v1.0.1/contents/hhs-yos-api"},{title:"9. Erişim Belirteci API",path:"/v1.0.1/contents/erisim-belirteci"},{title:"10. Ekler",path:"/v1.0.1/contents/ekler"}]},{title:"SÜRÜM 1.0.2",path:"/v1.0.2/contents/tanim-ve-kisitlamalar",children:[{title:"1. Tanımlar ve Kısıtlamalar",path:"/v1.0.2/contents/tanim-ve-kisitlamalar"},{title:"2. Kapsam ve Dayanak",path:"/v1.0.2/contents/kapsam-ve-dayanak"},{title:"3. Temel Prensipler",path:"/v1.0.2/contents/temel-prensipler"},{title:"4. Rıza Durumları",path:"/v1.0.2/contents/riza-durumlari"},{title:"5. Güçlü Kimlik Doğrulama",path:"/v1.0.2/contents/gkd"},{title:"6. Ödeme Emri Başlatma Hizmeti",path:"/v1.0.2/contents/odeme-emri-baslatma-hizmeti"},{title:"7. Hesap Bilgisi Hizmeti",path:"/v1.0.2/contents/hesap-bilgisi-hizmeti"},{title:"8. HHS ve YÖS API",path:"/v1.0.2/contents/hhs-yos-api"},{title:"9. Erişim Belirteci API",path:"/v1.0.2/contents/erisim-belirteci"},{title:"10. Ekler",path:"/v1.0.2/contents/ekler"}]},{title:"SÜRÜM 1.1.0",path:"/v1.1.0/contents/tanim-ve-kisitlamalar",children:[{title:"1. Tanımlar ve Kısıtlamalar",path:"/v1.1.0/contents/tanim-ve-kisitlamalar"},{title:"2. Kapsam ve Dayanak",path:"/v1.1.0/contents/kapsam-ve-dayanak"},{title:"3. Temel Prensipler",path:"/v1.1.0/contents/temel-prensipler"},{title:"4. Rıza Durumları",path:"/v1.1.0/contents/riza-durumlari"},{title:"5. Güçlü Kimlik Doğrulama",path:"/v1.1.0/contents/gkd"},{title:"6. Ödeme Emri Başlatma Hizmeti",path:"/v1.1.0/contents/odeme-emri-baslatma-hizmeti"},{title:"7. Hesap Bilgisi Hizmeti",path:"/v1.1.0/contents/hesap-bilgisi-hizmeti"},{title:"8. HHS ve YÖS API",path:"/v1.1.0/contents/hhs-yos-api"},{title:"9. Güçlü Kimlik Doğrulama API",path:"/v1.1.0/contents/erisim-belirteci"},{title:"10. Olay Bildirim",path:"/v1.1.0/contents/olay-bildirim"},{title:"11. Ekler",path:"/v1.1.0/contents/ekler"},{title:"12. Deney Alanı",path:"/v1.1.0/deneyalani/genel-bilgiler",children:[{title:"1. Ödeme Emri Başlatma API",path:"/v1.1.0/deneyalani/odeme-emri-api"},{title:"2. Hesap Bilgisi API",path:"/v1.1.0/deneyalani/hesap-bilgisi-api"},{title:"3. HHS - YÖS API",path:"/v1.1.0/deneyalani/hhs-yos-api"},{title:"4. Olay Bildirim",path:"/v1.1.0/deneyalani/olay-bildirim-api"}]}]},{title:"ÖHVPS Sıkça Sorulan Sorular",path:"/sorulan-sorular"},{title:"ÖHVPS Uyum Tarihleri",path:"/uyum-tarihleri"}],logo:"/assets/TCMB_logo.svg.png"}};i(268);a.default.component("BodyBox",()=>Promise.all([i.e(0),i.e(1),i.e(2),i.e(6),i.e(38)]).then(i.bind(null,744))),a.default.component("DeleteBox",()=>Promise.all([i.e(0),i.e(48)]).then(i.bind(null,745))),a.default.component("DuzenliOdemeEmriAPIv20",()=>Promise.all([i.e(0),i.e(1),i.e(2),i.e(3),i.e(19)]).then(i.bind(null,732))),a.default.component("GetBox",()=>Promise.all([i.e(0),i.e(49)]).then(i.bind(null,746))),a.default.component("Gkd",()=>Promise.all([i.e(0),i.e(42)]).then(i.bind(null,747))),a.default.component("HesapBilgisiV11",()=>Promise.all([i.e(0),i.e(1),i.e(2),i.e(3),i.e(17)]).then(i.bind(null,733))),a.default.component("HesapBilgisiV20",()=>Promise.all([i.e(0),i.e(1),i.e(2),i.e(3),i.e(20)]).then(i.bind(null,734))),a.default.component("HhsYosAPIV11",()=>Promise.all([i.e(0),i.e(1),i.e(2),i.e(3),i.e(15)]).then(i.bind(null,735))),a.default.component("KeyValueGrid",()=>Promise.all([i.e(1),i.e(2),i.e(3),i.e(6),i.e(39)]).then(i.bind(null,748))),a.default.component("OdemeEmriAPIv11",()=>Promise.all([i.e(0),i.e(1),i.e(2),i.e(3),i.e(18)]).then(i.bind(null,736))),a.default.component("OlayDinlemeAPIV11",()=>Promise.all([i.e(0),i.e(1),i.e(2),i.e(3),i.e(16)]).then(i.bind(null,737))),a.default.component("PostBox",()=>Promise.all([i.e(0),i.e(50)]).then(i.bind(null,749))),a.default.component("ProcessButton",()=>Promise.all([i.e(1),i.e(58)]).then(i.bind(null,750))),a.default.component("ProcessTitle",()=>Promise.all([i.e(0),i.e(51)]).then(i.bind(null,751))),a.default.component("PutBox",()=>Promise.all([i.e(0),i.e(52)]).then(i.bind(null,752))),a.default.component("Request",()=>i.e(68).then(i.bind(null,385))),a.default.component("Response",()=>Promise.all([i.e(1),i.e(2),i.e(3),i.e(59)]).then(i.bind(null,753))),a.default.component("RizaOnay",()=>Promise.all([i.e(0),i.e(53)]).then(i.bind(null,754))),a.default.component("RizaOnayHesapBilgisi",()=>Promise.all([i.e(0),i.e(54)]).then(i.bind(null,755))),a.default.component("TitleBox",()=>Promise.all([i.e(0),i.e(55)]).then(i.bind(null,756))),a.default.component("ileriTarihliOdemeEmriAPIv20",()=>Promise.all([i.e(0),i.e(1),i.e(2),i.e(3),i.e(21)]).then(i.bind(null,738))),a.default.component("Badge",()=>Promise.all([i.e(0),i.e(9)]).then(i.bind(null,757))),a.default.component("CodeBlock",()=>Promise.all([i.e(0),i.e(10)]).then(i.bind(null,740))),a.default.component("CodeGroup",()=>Promise.all([i.e(0),i.e(11)]).then(i.bind(null,741)));i(269);var In=[({Vue:e,options:n,router:i,siteData:a})=>{a.pages=a.pages.reverse().map(e=>(e.regularPath.includes("content")?e.title=`${e.title} -> ${e.regularPath.split("/")[1]}`:e.title=""+e.title,e))},{},({Vue:e})=>{e.mixin({computed:{$dataBlock(){return this.$options.__data__block__}}})},{},{}],En=[];class Zn extends class{constructor(){this.store=new a.default({data:{state:{}}})}$get(e){return this.store.state[e]}$set(e,n){a.default.set(this.store.state,e,n)}$emit(...e){this.store.$emit(...e)}$on(...e){this.store.$on(...e)}}{}Object.assign(Zn.prototype,{getPageAsyncComponent:mn,getLayoutAsyncComponent:un,getAsyncComponent:on,getVueComponent:kn});var Gn={install(e){const n=new Zn;e.$vuepress=n,e.prototype.$vuepress=n}};function Cn(e,n){const i=n.toLowerCase();return e.options.routes.some(e=>e.path.toLowerCase()===i)}var Vn={props:{pageKey:String,slotKey:{type:String,default:"default"}},render(e){const n=this.pageKey||this.$parent.$page.key;return bn("pageKey",n),a.default.component(n)||a.default.component(n,mn(n)),a.default.component(n)?e(n):e("")}},Mn={functional:!0,props:{slotKey:String,required:!0},render:(e,{props:n,slots:i})=>e("div",{class:["content__"+n.slotKey]},i()[n.slotKey])},_n={computed:{openInNewWindowTitle(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},Fn=(i(270),i(271),Object(Pn.a)(_n,(function(){var e=this._self._c;return e("span",[e("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[e("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),e("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),e("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports),xn={functional:!0,render(e,{parent:n,children:i}){if(n._isMounted)return i;n.$once("hook:mounted",()=>{n.$forceUpdate()})}};a.default.config.productionTip=!1,a.default.use(we),a.default.use(Gn),a.default.mixin(function(e,n,i=a.default){!function(e){e.locales&&Object.keys(e.locales).forEach(n=>{e.locales[n].path=n});Object.freeze(e)}(n),i.$vuepress.$set("siteData",n);const r=new(e(i.$vuepress.$get("siteData"))),l=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(r)),t={};return Object.keys(l).reduce((e,n)=>(n.startsWith("$")&&(e[n]=l[n].get),e),t),{computed:t}}(e=>class{setPage(e){this.__page=e}get $site(){return e}get $themeConfig(){return this.$site.themeConfig}get $frontmatter(){return this.$page.frontmatter}get $localeConfig(){const{locales:e={}}=this.$site;let n,i;for(const a in e)"/"===a?i=e[a]:0===this.$page.path.indexOf(a)&&(n=e[a]);return n||i||{}}get $siteTitle(){return this.$localeConfig.title||this.$site.title||""}get $canonicalUrl(){const{canonicalUrl:e}=this.$page.frontmatter;return"string"==typeof e&&e}get $title(){const e=this.$page,{metaTitle:n}=this.$page.frontmatter;if("string"==typeof n)return n;const i=this.$siteTitle,a=e.frontmatter.home?null:e.frontmatter.title||e.title;return i?a?a+" | "+i:i:a||"VuePress"}get $description(){const e=function(e){if(e){const n=e.filter(e=>"description"===e.name)[0];if(n)return n.content}}(this.$page.frontmatter.meta);return e||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}get $lang(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}get $localePath(){return this.$localeConfig.path||"/"}get $themeLocaleConfig(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}get $page(){return this.__page?this.__page:function(e,n){for(let i=0;i<e.length;i++){const a=e[i];if(a.path.toLowerCase()===n.toLowerCase())return a}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}},Dn)),a.default.component("Content",Vn),a.default.component("ContentSlotsDistributor",Mn),a.default.component("OutboundLink",Fn),a.default.component("ClientOnly",xn),a.default.component("Layout",un("Layout")),a.default.component("NotFound",un("NotFound")),a.default.prototype.$withBase=function(e){const n=this.$site.base;return"/"===e.charAt(0)?n+e.slice(1):e},window.__VUEPRESS__={version:"1.9.10",hash:"8375857"},async function(e){const n="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:Dn.routerBase||Dn.base,i=new we({base:n,mode:"history",fallback:!1,routes:On,scrollBehavior:(e,n,i)=>i||(e.hash?!a.default.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(e.hash)}:{x:0,y:0})});!function(e){e.beforeEach((n,i,a)=>{if(Cn(e,n.path))a();else if(/(\/|\.html)$/.test(n.path))if(/\/$/.test(n.path)){const i=n.path.replace(/\/$/,"")+".html";Cn(e,i)?a(i):a()}else a();else{const i=n.path+"/",r=n.path+".html";Cn(e,r)?a(r):Cn(e,i)?a(i):a()}})}(i);const r={};try{await Promise.all(In.filter(e=>"function"==typeof e).map(n=>n({Vue:a.default,options:r,router:i,siteData:Dn,isServer:e})))}catch(e){console.error(e)}return{app:new a.default(Object.assign(r,{router:i,render:e=>e("div",{attrs:{id:"app"}},[e("RouterView",{ref:"layout"}),e("div",{class:"global-ui"},En.map(n=>e(n)))])})),router:i}}(!1).then(({app:e,router:n})=>{n.onReady(()=>{e.$mount("#app")})})}]);